{
.appVersion = "1357";
DisplayStrings = (
abcdefghijklmnopqrstuvwxyz,
ABCDEFGHIJKLMNOPQRSTUVWXYZ,
"OÔ",
"/horncomb.case/Ohorn",
"/gravecomb.case/Udieresisgrave",
"È",
"/Sacute/Scaron/Scedilla/Scircumflex/Scommaaccent/Germandbls/Schwa T/Tbar/Tcaron/Tcedilla/commaaccentcomb/Tcommaaccent",
"B/idotbelow/space n/acircumflexacute c/space khó/space ch/idotbelow u/space l/abreveacute m/space luôn/space/circumflexcomb/circumflexcomb_acutecomb/acircumflexacute y.",
"EÉ/Ebreve/Ecaron Ê/Ecircumflexacute/Ecircumflexdotbelow/Ecircumflexgrave/Ecircumflexhookabove/Ecircumflextilde/Edblgrave Ë/Edotaccent/Edotbelow È/Ehookabove/Einvertedbreve/Emacron/Eogonek/Etilde",
"AÁ/Abreve/Abreveacute/Abrevedotbelow/Abrevegrave/Abrevehookabove/Abrevetilde/Acaron Â/Acircumflexacute/Acircumflexdotbelow/Acircumflexgrave/Acircumflexhookabove/Acircumflextilde/Adblgrave Ä/Adotbelow À/Ahookabove/Ainvertedbreve/Amacron/Aogonek Å/Aringacute Ã",
"aá/abreve/abreveacute/abrevedotbelow/abrevegrave/abrevehookabove/abrevetilde/acaron â/acircumflexacute/acircumflexdotbelow/acircumflexgrave/acircumflexhookabove/acircumflextilde/adblgrave ä/adotbelow à/ahookabove/ainvertedbreve/amacron/aogonek å/aringacute ãæ/aeacute",
"e/ecaron",
"eé/ebreve/ecaron ê/ecircumflexacute/ecircumflexdotbelow/ecircumflexgrave/ecircumflexhookabove/ecircumflextilde/edblgrave ë/edotaccent/edotbelow è/ehookabove/einvertedbreve/emacron/eogonek/etilde",
"oó/obreve ô/ocircumflexacute/ocircumflexdotbelow/ocircumflexgrave/ocircumflexhookabove/ocircumflextilde/odblgrave ö/dieresiscomb/odieresismacron/dotaccentcomb/odotaccentmacron/odotbelow ò/ohookabove/ohorn/ohornacute/ohorndotbelow/ohorngrave/ohornhookabove/ohorntilde/ohungarumlaut/oinvertedbreve/omacron/oogonek ø/oslashacute õ/otildemacron",
"oó/obreve ô/ocircumflexacute/ocircumflexdotbelow/ocircumflexgrave/ocircumflexhookabove/ocircumflextilde/odblgrave ö/odieresismacron/odotaccentmacron/odotbelow ò/ohookabove/ohorn/ohornacute/ohorndotbelow/ohorngrave/ohornhookabove/ohorntilde/ohungarumlaut/oinvertedbreve/omacron/oogonek ø/oslashacute õ/otildemacron",
"cç",
"r/rcommaaccent",
"/tildecomb.case Õ",
"/Uring",
"/quotesinglbase",
"/fraction",
"/divisionslash",
"­",
"/quotedblbase"
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex I Iacute Ibreve Icaron Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nj Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udblgrave Udieresis Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent";
name = Uppercase;
}
);
copyright = "Copyright 2009-2021 The Puppies Play Project Authors (https://github.com/googlefonts/puppies-play)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = panose;
value = (
2,
0,
5,
3,
6,
0,
0,
2,
0,
3
);
},
{
name = "Disable Subroutines";
value = 1;
},
{
name = glyphOrder;
value = (
.notdef,
CR,
.null,
space,
nbspace
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
}
);
}
);
date = "2021-09-30 03:23:23 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
familyName = "Puppies Play";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn AZE;\012languagesystem latn CRT;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012feature case;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [brevebelowcomb cedillacomb commaaccent dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb tildecomb tildecomb_dotaccentcomb tildecomb_macroncomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb commaturnedabovecomb horncomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];\012	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case tildecomb_dotaccentcomb.case tildecomb_macroncomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case commaturnedabovecomb.case horncomb.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];\012	sub @Markscomb @Markscomb' by @MarkscombCase;\012	sub @Uppercase @Markscomb' by @MarkscombCase;\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	sub @Markscomb' @MarkscombCase by @MarkscombCase;\012	sub @MarkscombCase @Markscomb' by @MarkscombCase;\012} ccmp_Other_2;\012\012lookup ccmp_Other_3 {\012	lookupflag 0;\012	sub tildecomb dotaccentcomb by tildecomb_dotaccentcomb;\012	sub tildecomb.case dotaccentcomb.case by tildecomb_dotaccentcomb.case;\012	sub tildecomb macroncomb by tildecomb_macroncomb;\012	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;\012} ccmp_Other_3;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb.case hookabovecomb.case by brevecomb_hookabovecomb.case;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb.case hookabovecomb.case by circumflexcomb_hookabovecomb.case;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language AZE;\012	sub i by idotaccent;\012	language CRT;\012	sub i by idotaccent;\012	language KAZ;\012	sub i by idotaccent;\012	language TAT;\012	sub i by idotaccent;\012	language TRK;\012	sub i by idotaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language ROM;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012\012lookup locl_latn_2 {\012	script latn;\012	language CAT;\012	sub l periodcentered' l by periodcentered.loclCAT;\012	sub L periodcentered' L by periodcentered.loclCAT.case;\012} locl_latn_2;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "sub periodcentered.loclCAT by periodcentered.loclCAT.case;\012sub dieresiscomb by dieresiscomb.case;\012sub dotaccentcomb by dotaccentcomb.case;\012sub gravecomb by gravecomb.case;\012sub acutecomb by acutecomb.case;\012sub hungarumlautcomb by hungarumlautcomb.case;\012sub caroncomb.alt by caroncomb.alt.case;\012sub circumflexcomb by circumflexcomb.case;\012sub caroncomb by caroncomb.case;\012sub brevecomb by brevecomb.case;\012sub ringcomb by ringcomb.case;\012sub tildecomb by tildecomb.case;\012sub tildecomb_dotaccentcomb by tildecomb_dotaccentcomb.case;\012sub tildecomb_macroncomb by tildecomb_macroncomb.case;\012sub macroncomb by macroncomb.case;\012sub hookabovecomb by hookabovecomb.case;\012sub dblgravecomb by dblgravecomb.case;\012sub breveinvertedcomb by breveinvertedcomb.case;\012sub commaturnedabovecomb by commaturnedabovecomb.case;\012sub horncomb by horncomb.case;\012sub brevecomb_acutecomb by brevecomb_acutecomb.case;\012sub brevecomb_gravecomb by brevecomb_gravecomb.case;\012sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;\012sub brevecomb_tildecomb by brevecomb_tildecomb.case;\012sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;\012sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;\012sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;\012sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;\012";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub t h by t_h;\012";
name = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
alignmentZones = (
"{530, 10}",
"{470, 10}",
"{260, 10}",
"{0, -10}",
"{-180, -10}"
);
ascender = 470;
capHeight = 530;
customParameters = (
{
name = typoAscender;
value = 800;
},
{
name = typoDescender;
value = -300;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 800;
},
{
name = hheaDescender;
value = -300;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 850;
},
{
name = winDescent;
value = 300;
},
{
name = strikeoutPosition;
value = 250;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0123 2 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0123 220 198 154 110 52 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0124 158 129 100 72 52 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 367 300 234 167 87 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 262 198 154 110 87 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 5 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
15,
21,
25,
35,
32,
28,
-148,
9,
268,
15,
534,
4,
556,
19
);
}
);
descender = -180;
guideLines = (
{
locked = 1;
position = "{78, -199}";
},
{
locked = 1;
position = "{-99, -60}";
},
{
name = "lc bottom";
position = "{-199, 300}";
},
{
locked = 1;
position = "{78, 763}";
}
);
horizontalStems = (
20
);
id = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
GSOffsetHorizontal = 1;
GSOffsetVertical = 2;
};
verticalStems = (
35,
51
);
weightValue = 400;
widthValue = 5;
xHeight = 260;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"49 0 LINE",
"436 0 LINE",
"444 9 LINE",
"444 573 LINE",
"436 582 LINE",
"49 582 LINE",
"40 573 LINE",
"40 9 LINE"
);
},
{
closed = 1;
nodes = (
"56 566 LINE",
"430 566 LINE",
"430 16 LINE",
"56 16 LINE"
);
},
{
closed = 1;
nodes = (
"87 45 LINE",
"397 45 LINE",
"397 533 LINE",
"87 533 LINE"
);
},
{
closed = 1;
nodes = (
"136 139 LINE",
"219 292 LINE",
"136 443 LINE",
"153 476 LINE",
"236 324 LINE",
"321 476 LINE",
"340 443 LINE",
"254 290 LINE",
"340 139 LINE",
"321 107 LINE",
"236 257 LINE",
"153 107 LINE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"436 0 LINE",
"444 9 LINE",
"444 573 LINE",
"436 582 LINE",
"49 582 LINE",
"40 573 LINE",
"40 9 LINE",
"49 0 LINE"
);
},
{
closed = 1;
nodes = (
"136 139 LINE",
"219 292 LINE",
"136 443 LINE",
"153 476 LINE",
"236 324 LINE",
"321 476 LINE",
"340 443 LINE",
"254 290 LINE",
"340 139 LINE",
"321 107 LINE",
"236 257 LINE",
"153 107 LINE"
);
},
{
closed = 1;
nodes = (
"56 566 LINE",
"430 566 LINE",
"430 16 LINE",
"56 16 LINE"
);
},
{
closed = 1;
nodes = (
"397 45 LINE",
"397 533 LINE",
"87 533 LINE",
"87 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 144 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 4 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 4 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012133 4 37 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 49 165 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 89 165 89 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01295 75 146 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012182 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01245 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012138 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012144 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012155 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012123 2 166 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 2 178 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01295 16 142 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012136 64 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 484;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
note = CR;
},
{
glyphname = .null;
lastChange = "2021-09-30 03:27:04 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 0;
}
);
note = NULL;
},
{
glyphname = space;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
note = space;
unicode = 0020;
},
{
glyphname = A;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{554, 0}";
},
{
name = ogonek;
position = "{807, -106}";
},
{
name = top;
position = "{660, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"856 -122 OFFCURVE",
"886 -114 OFFCURVE",
"903 -85 CURVE",
"908 -79 OFFCURVE",
"904 -75 OFFCURVE",
"899 -75 CURVE SMOOTH",
"897 -75 OFFCURVE",
"894 -77 OFFCURVE",
"892 -79 CURVE SMOOTH",
"878 -97 OFFCURVE",
"862 -106 OFFCURVE",
"843 -106 CURVE SMOOTH",
"807 -106 OFFCURVE",
"781 -74 OFFCURVE",
"761 -29 CURVE SMOOTH",
"750 -6 OFFCURVE",
"741 19 OFFCURVE",
"734 47 CURVE SMOOTH",
"719 102 OFFCURVE",
"711 157 OFFCURVE",
"705 204 CURVE SMOOTH",
"698 259 LINE",
"719 254 OFFCURVE",
"735 248 OFFCURVE",
"746 240 CURVE SMOOTH",
"748 239 OFFCURVE",
"750 238 OFFCURVE",
"753 238 CURVE SMOOTH",
"756 238 OFFCURVE",
"758 239 OFFCURVE",
"758 241 CURVE",
"755 246 LINE",
"740 255 OFFCURVE",
"720 264 OFFCURVE",
"697 271 CURVE",
"687 392 OFFCURVE",
"681 476 OFFCURVE",
"679 521 CURVE SMOOTH",
"679 530 OFFCURVE",
"668 535 OFFCURVE",
"657 535 CURVE SMOOTH",
"647 535 OFFCURVE",
"636 531 OFFCURVE",
"636 522 CURVE SMOOTH",
"636 521 OFFCURVE",
"636 521 OFFCURVE",
"636 520 CURVE SMOOTH",
"639 502 LINE",
"595 437 OFFCURVE",
"554 353 OFFCURVE",
"523 280 CURVE",
"480 273 OFFCURVE",
"447 261 OFFCURVE",
"423 242 CURVE SMOOTH",
"395 221 OFFCURVE",
"378 187 OFFCURVE",
"378 155 CURVE SMOOTH",
"378 129 OFFCURVE",
"390 103 OFFCURVE",
"414 85 CURVE",
"362 22 OFFCURVE",
"295 -16 OFFCURVE",
"225 -16 CURVE SMOOTH",
"189 -16 OFFCURVE",
"153 -6 OFFCURVE",
"117 15 CURVE SMOOTH",
"61 49 OFFCURVE",
"33 105 OFFCURVE",
"33 162 CURVE SMOOTH",
"33 168 OFFCURVE",
"33 173 OFFCURVE",
"34 179 CURVE SMOOTH",
"38 240 OFFCURVE",
"75 291 OFFCURVE",
"135 291 CURVE SMOOTH",
"175 291 OFFCURVE",
"211 260 OFFCURVE",
"211 209 CURVE SMOOTH",
"210 172 OFFCURVE",
"190 148 OFFCURVE",
"163 148 CURVE SMOOTH",
"158 148 OFFCURVE",
"154 151 OFFCURVE",
"147 151 CURVE SMOOTH",
"144 151 OFFCURVE",
"142 147 OFFCURVE",
"142 144 CURVE SMOOTH",
"142 141 OFFCURVE",
"143 138 OFFCURVE",
"146 137 CURVE SMOOTH",
"151 136 OFFCURVE",
"156 135 OFFCURVE",
"162 135 CURVE SMOOTH",
"198 135 OFFCURVE",
"230 167 OFFCURVE",
"230 212 CURVE SMOOTH",
"230 272 OFFCURVE",
"179 308 OFFCURVE",
"125 305 CURVE SMOOTH",
"48 298 OFFCURVE",
"-2 223 OFFCURVE",
"-2 144 CURVE SMOOTH",
"-2 106 OFFCURVE",
"9 70 OFFCURVE",
"35 38 CURVE SMOOTH",
"50 17 OFFCURVE",
"71 1 OFFCURVE",
"98 -12 CURVE SMOOTH",
"134 -30 OFFCURVE",
"171 -38 OFFCURVE",
"208 -38 CURVE SMOOTH",
"292 -38 OFFCURVE",
"373 5 OFFCURVE",
"430 77 CURVE",
"443 71 OFFCURVE",
"461 68 OFFCURVE",
"478 68 CURVE SMOOTH",
"504 68 OFFCURVE",
"529 75 OFFCURVE",
"541 93 CURVE SMOOTH",
"545 99 OFFCURVE",
"541 102 OFFCURVE",
"538 102 CURVE SMOOTH",
"537 102 OFFCURVE",
"536 102 OFFCURVE",
"535 101 CURVE SMOOTH",
"526 88 OFFCURVE",
"512 83 OFFCURVE",
"497 83 CURVE SMOOTH",
"480 83 OFFCURVE",
"462 90 OFFCURVE",
"446 97 CURVE",
"474 138 OFFCURVE",
"502 189 OFFCURVE",
"533 257 CURVE",
"563 263 OFFCURVE",
"592 267 OFFCURVE",
"622 267 CURVE SMOOTH",
"634 267 OFFCURVE",
"646 266 OFFCURVE",
"659 265 CURVE",
"663 232 OFFCURVE",
"669 177 OFFCURVE",
"680 120 CURVE SMOOTH",
"685 91 OFFCURVE",
"692 63 OFFCURVE",
"701 34 CURVE SMOOTH",
"717 -24 OFFCURVE",
"742 -72 OFFCURVE",
"775 -101 CURVE SMOOTH",
"791 -115 OFFCURVE",
"809 -122 OFFCURVE",
"830 -122 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"417 123 OFFCURVE",
"410 140 OFFCURVE",
"410 158 CURVE SMOOTH",
"410 179 OFFCURVE",
"421 201 OFFCURVE",
"440 217 CURVE SMOOTH",
"456 230 OFFCURVE",
"479 240 OFFCURVE",
"510 251 CURVE",
"481 188 OFFCURVE",
"458 145 OFFCURVE",
"431 108 CURVE"
);
},
{
closed = 1;
nodes = (
"632 283 OFFCURVE",
"610 285 OFFCURVE",
"587 285 CURVE SMOOTH",
"573 285 OFFCURVE",
"560 284 OFFCURVE",
"545 283 CURVE",
"589 383 OFFCURVE",
"617 440 OFFCURVE",
"640 471 CURVE",
"645 391 OFFCURVE",
"650 332 OFFCURVE",
"657 280 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"856 -122 OFFCURVE",
"886 -114 OFFCURVE",
"903 -85 CURVE",
"908 -79 OFFCURVE",
"904 -75 OFFCURVE",
"899 -75 CURVE SMOOTH",
"897 -75 OFFCURVE",
"894 -77 OFFCURVE",
"892 -79 CURVE SMOOTH",
"878 -97 OFFCURVE",
"862 -106 OFFCURVE",
"843 -106 CURVE SMOOTH",
"807 -106 OFFCURVE",
"781 -74 OFFCURVE",
"761 -29 CURVE SMOOTH",
"750 -6 OFFCURVE",
"741 19 OFFCURVE",
"734 47 CURVE SMOOTH",
"719 102 OFFCURVE",
"711 157 OFFCURVE",
"705 204 CURVE SMOOTH",
"698 259 LINE",
"719 254 OFFCURVE",
"735 248 OFFCURVE",
"746 240 CURVE SMOOTH",
"748 239 OFFCURVE",
"750 238 OFFCURVE",
"753 238 CURVE SMOOTH",
"756 238 OFFCURVE",
"758 239 OFFCURVE",
"758 241 CURVE",
"755 246 LINE",
"740 255 OFFCURVE",
"720 264 OFFCURVE",
"697 271 CURVE",
"687 392 OFFCURVE",
"681 476 OFFCURVE",
"679 521 CURVE SMOOTH",
"679 530 OFFCURVE",
"668 535 OFFCURVE",
"657 535 CURVE SMOOTH",
"647 535 OFFCURVE",
"636 531 OFFCURVE",
"636 522 CURVE SMOOTH",
"636 520 LINE",
"639 502 LINE",
"595 437 OFFCURVE",
"554 353 OFFCURVE",
"523 280 CURVE",
"480 273 OFFCURVE",
"447 261 OFFCURVE",
"423 242 CURVE SMOOTH",
"395 221 OFFCURVE",
"378 187 OFFCURVE",
"378 155 CURVE SMOOTH",
"378 129 OFFCURVE",
"390 103 OFFCURVE",
"414 85 CURVE",
"362 22 OFFCURVE",
"295 -16 OFFCURVE",
"225 -16 CURVE SMOOTH",
"189 -16 OFFCURVE",
"153 -6 OFFCURVE",
"117 15 CURVE SMOOTH",
"61 49 OFFCURVE",
"33 105 OFFCURVE",
"33 162 CURVE SMOOTH",
"33 168 OFFCURVE",
"33 173 OFFCURVE",
"34 179 CURVE SMOOTH",
"38 240 OFFCURVE",
"75 291 OFFCURVE",
"135 291 CURVE SMOOTH",
"175 291 OFFCURVE",
"211 260 OFFCURVE",
"211 209 CURVE SMOOTH",
"210 172 OFFCURVE",
"190 148 OFFCURVE",
"163 148 CURVE SMOOTH",
"158 148 OFFCURVE",
"154 151 OFFCURVE",
"147 151 CURVE SMOOTH",
"144 151 OFFCURVE",
"142 147 OFFCURVE",
"142 144 CURVE SMOOTH",
"142 141 OFFCURVE",
"143 138 OFFCURVE",
"146 137 CURVE SMOOTH",
"151 136 OFFCURVE",
"156 135 OFFCURVE",
"162 135 CURVE SMOOTH",
"198 135 OFFCURVE",
"230 167 OFFCURVE",
"230 212 CURVE SMOOTH",
"230 272 OFFCURVE",
"179 308 OFFCURVE",
"125 305 CURVE SMOOTH",
"48 298 OFFCURVE",
"-2 223 OFFCURVE",
"-2 144 CURVE SMOOTH",
"-2 106 OFFCURVE",
"9 70 OFFCURVE",
"35 38 CURVE SMOOTH",
"50 17 OFFCURVE",
"71 1 OFFCURVE",
"98 -12 CURVE SMOOTH",
"134 -30 OFFCURVE",
"171 -38 OFFCURVE",
"208 -38 CURVE SMOOTH",
"292 -38 OFFCURVE",
"373 5 OFFCURVE",
"430 77 CURVE",
"443 71 OFFCURVE",
"461 68 OFFCURVE",
"478 68 CURVE SMOOTH",
"504 68 OFFCURVE",
"529 75 OFFCURVE",
"541 93 CURVE SMOOTH",
"545 99 OFFCURVE",
"541 102 OFFCURVE",
"538 102 CURVE SMOOTH",
"537 102 OFFCURVE",
"536 102 OFFCURVE",
"535 101 CURVE SMOOTH",
"526 88 OFFCURVE",
"512 83 OFFCURVE",
"497 83 CURVE SMOOTH",
"480 83 OFFCURVE",
"462 90 OFFCURVE",
"446 97 CURVE",
"474 138 OFFCURVE",
"502 189 OFFCURVE",
"533 257 CURVE",
"563 263 OFFCURVE",
"592 267 OFFCURVE",
"622 267 CURVE SMOOTH",
"634 267 OFFCURVE",
"646 266 OFFCURVE",
"659 265 CURVE",
"663 232 OFFCURVE",
"669 177 OFFCURVE",
"680 120 CURVE SMOOTH",
"685 91 OFFCURVE",
"692 63 OFFCURVE",
"701 34 CURVE SMOOTH",
"717 -24 OFFCURVE",
"742 -72 OFFCURVE",
"775 -101 CURVE SMOOTH",
"791 -115 OFFCURVE",
"809 -122 OFFCURVE",
"830 -122 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"417 123 OFFCURVE",
"410 140 OFFCURVE",
"410 158 CURVE SMOOTH",
"410 179 OFFCURVE",
"421 201 OFFCURVE",
"440 217 CURVE SMOOTH",
"456 230 OFFCURVE",
"479 240 OFFCURVE",
"510 251 CURVE",
"481 188 OFFCURVE",
"458 145 OFFCURVE",
"431 108 CURVE"
);
},
{
closed = 1;
nodes = (
"632 283 OFFCURVE",
"610 285 OFFCURVE",
"587 285 CURVE SMOOTH",
"573 285 OFFCURVE",
"560 284 OFFCURVE",
"545 283 CURVE",
"589 383 OFFCURVE",
"617 440 OFFCURVE",
"640 471 CURVE",
"645 391 OFFCURVE",
"650 332 OFFCURVE",
"657 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 4 92 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012117 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = A;
unicode = 0041;
},
{
glyphname = Aacute;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = acutecomb;
}
);
};
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 628, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012114 4 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012117 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Abreve;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = brevecomb;
}
);
};
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
}
);
};
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
}
);
};
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 533, 0}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
}
);
};
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
}
);
};
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
}
);
};
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 570, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EB4;
},
{
glyphname = Acaron;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = caroncomb;
}
);
};
components = (
{
name = A;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 578, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 01CD;
},
{
glyphname = Acircumflex;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012114 4 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012117 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 533, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 576, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EAA;
},
{
glyphname = Adblgrave;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 549, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 0200;
},
{
glyphname = Adieresis;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 596, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012148 4 142 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012138 4 132 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 138 170 138 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 153 138 169 138 185 138 201 138 217 138 233 138 249 138 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 153 138 169 138 185 138 201 138 217 138 233 138 249 138 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012102 132 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012114 57 132 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 148 170 148 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 148 25 148 41 148 57 148 73 148 89 148 105 148 121 148 137 148 153 148 169 148 185 148 201 148 217 148 233 148 249 148 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 148 25 148 41 148 57 148 73 148 89 148 105 148 121 148 137 148 153 148 169 148 185 148 201 148 217 148 233 148 249 148 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 148 25 148 41 148 57 148 73 148 89 148 105 148 121 148 137 148 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012117 142 148 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 132 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 132 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 2 136 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012136 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012150 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Adotbelow;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 533, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EA0;
},
{
glyphname = Agrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = gravecomb;
}
);
};
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 572, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012114 4 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012117 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Ahookabove;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 619, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 575, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 0202;
},
{
glyphname = Amacron;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = macroncomb;
}
);
};
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 569, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = A;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 728, -111}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 0104;
},
{
glyphname = Aring;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = ringcomb;
}
);
};
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 615, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 4 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012149 3 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012141 3 155 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01295 3 106 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 0 170 0 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0123 106 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 106 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0129 106 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 95 22 95 38 95 54 95 70 95 86 95 102 95 118 95 134 95 150 95 166 95 182 95 198 95 214 95 230 95 246 95 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 95 22 95 38 95 54 95 70 95 86 95 102 95 118 95 134 95 150 95 166 95 182 95 198 95 214 95 230 95 246 95 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 95 22 95 38 95 54 95 70 95 86 95 102 95 118 95 134 95 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 95 165 95 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 141 170 141 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 141 25 141 41 141 57 141 73 141 89 141 105 141 121 141 137 141 153 141 169 141 185 141 201 141 217 141 233 141 249 141 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 141 25 141 41 141 57 141 73 141 89 141 105 141 121 141 137 141 153 141 169 141 185 141 201 141 217 141 233 141 249 141 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 141 25 141 41 141 57 141 73 141 89 141 105 141 121 141 137 141 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 149 170 149 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 149 25 149 41 149 57 149 73 149 89 149 105 149 121 149 137 149 153 149 169 149 185 149 201 149 217 149 233 149 249 149 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 149 25 149 41 149 57 149 73 149 89 149 105 149 121 149 137 149 153 149 169 149 185 149 201 149 217 149 233 149 249 149 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 149 25 149 41 149 57 149 73 149 89 149 105 149 121 149 137 149 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01244 1 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 1 100 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 1 109 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = ringcomb;
},
{
name = acutecomb;
}
);
};
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 615, 270}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 646, 415}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 802;
}
);
unicode = 01FA;
},
{
glyphname = Atilde;
lastChange = "2021-10-08 06:46:17 +0000";
layers = (
{
background = {
components = (
{
name = A;
},
{
name = tildecomb;
}
);
};
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 573, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012114 4 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 3 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012117 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 57 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 51 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 802;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = AE;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{547, 0}";
},
{
name = top;
position = "{746, 555}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"731 -29 OFFCURVE",
"737 -23 OFFCURVE",
"737 -16 CURVE SMOOTH",
"737 -12 OFFCURVE",
"735 -8 OFFCURVE",
"732 -6 CURVE SMOOTH",
"725.333 -1.333 OFFCURVE",
"720 7.333 OFFCURVE",
"716 20 CURVE",
"742 20 LINE SMOOTH",
"777.303 20 OFFCURVE",
"841.761 12.259 OFFCURVE",
"882.5 9 CURVE SMOOTH",
"907.5 7 OFFCURVE",
"931.833 6.5 OFFCURVE",
"955.5 7.5 CURVE SMOOTH",
"1027 11 OFFCURVE",
"1078 41 OFFCURVE",
"1078 119 CURVE SMOOTH",
"1078 183 OFFCURVE",
"1034 208 OFFCURVE",
"986 208 CURVE SMOOTH",
"935.333 208 OFFCURVE",
"919.667 186.667 OFFCURVE",
"909 144 CURVE SMOOTH",
"908 138 OFFCURVE",
"912 135 OFFCURVE",
"916 135 CURVE SMOOTH",
"920 135 OFFCURVE",
"923 137 OFFCURVE",
"924 141 CURVE SMOOTH",
"932 174.333 OFFCURVE",
"939 185 OFFCURVE",
"983 185 CURVE SMOOTH",
"1027 185 OFFCURVE",
"1062 169.667 OFFCURVE",
"1062 123 CURVE SMOOTH",
"1062 56 OFFCURVE",
"1012 34 OFFCURVE",
"944 34 CURVE SMOOTH",
"894 34 OFFCURVE",
"836 41 OFFCURVE",
"780.5 47.5 CURVE SMOOTH",
"754.167 50.5 OFFCURVE",
"729.667 52 OFFCURVE",
"707 52 CURVE",
"696.333 109.333 OFFCURVE",
"689.667 197.667 OFFCURVE",
"687 287 CURVE",
"699 287 OFFCURVE",
"712 286 OFFCURVE",
"726 286 CURVE SMOOTH",
"813 286 OFFCURVE",
"923 296 OFFCURVE",
"944 347 CURVE SMOOTH",
"947 354 OFFCURVE",
"942 359 OFFCURVE",
"937 359 CURVE SMOOTH",
"934 359 OFFCURVE",
"931 357 OFFCURVE",
"930 353 CURVE",
"912 312 OFFCURVE",
"818 304 OFFCURVE",
"737 304 CURVE SMOOTH",
"719 304 OFFCURVE",
"702 305 OFFCURVE",
"687 305 CURVE",
"685.667 341.667 OFFCURVE",
"685 377 OFFCURVE",
"685 411 CURVE SMOOTH",
"685 445 OFFCURVE",
"685.333 474.667 OFFCURVE",
"686 500 CURVE",
"740 506 OFFCURVE",
"780 509 OFFCURVE",
"824 509 CURVE SMOOTH",
"844 509 OFFCURVE",
"865 509 OFFCURVE",
"888 507 CURVE SMOOTH",
"945.333 504.333 OFFCURVE",
"968.333 483.333 OFFCURVE",
"967 438 CURVE SMOOTH",
"967 428.097 OFFCURVE",
"990 452.195 OFFCURVE",
"990 464 CURVE",
"987.333 482.667 OFFCURVE",
"984 503 OFFCURVE",
"976 515 CURVE SMOOTH",
"963.74 533.389 OFFCURVE",
"900.365 539 OFFCURVE",
"854 539 CURVE SMOOTH",
"818.578 539 OFFCURVE",
"720.917 534.663 OFFCURVE",
"686 533 CURVE",
"687 553 LINE SMOOTH",
"687 561 OFFCURVE",
"675 565 OFFCURVE",
"663 565 CURVE SMOOTH",
"649 565 OFFCURVE",
"635 560 OFFCURVE",
"636 550 CURVE SMOOTH",
"639 532 LINE",
"594.879 466.979 OFFCURVE",
"553.509 382.751 OFFCURVE",
"523 310 CURVE",
"480.333 303.333 OFFCURVE",
"447 290.667 OFFCURVE",
"423 272 CURVE SMOOTH",
"394 251 OFFCURVE",
"378 218 OFFCURVE",
"378 185 CURVE SMOOTH",
"378 159 OFFCURVE",
"389 133 OFFCURVE",
"414 115 CURVE",
"362 53 OFFCURVE",
"295 14 OFFCURVE",
"225 14 CURVE SMOOTH",
"189 14 OFFCURVE",
"153 24 OFFCURVE",
"117 45 CURVE SMOOTH",
"60 79 OFFCURVE",
"33 136 OFFCURVE",
"33 194 CURVE SMOOTH",
"33 260 OFFCURVE",
"70 321 OFFCURVE",
"134 321 CURVE SMOOTH",
"175 321 OFFCURVE",
"211 290 OFFCURVE",
"211 239 CURVE SMOOTH",
"210 202 OFFCURVE",
"190 178 OFFCURVE",
"163 178 CURVE SMOOTH",
"158 178 OFFCURVE",
"154 181 OFFCURVE",
"147 181 CURVE SMOOTH",
"144 181 OFFCURVE",
"142 177 OFFCURVE",
"142 174 CURVE SMOOTH",
"142 171 OFFCURVE",
"143 168 OFFCURVE",
"146 167 CURVE SMOOTH",
"151 166 OFFCURVE",
"156 165 OFFCURVE",
"162 165 CURVE SMOOTH",
"198 165 OFFCURVE",
"230 197 OFFCURVE",
"230 241 CURVE SMOOTH",
"230 302 OFFCURVE",
"178 338 OFFCURVE",
"125 335 CURVE SMOOTH",
"48 328 OFFCURVE",
"-2 253 OFFCURVE",
"-2 175 CURVE SMOOTH",
"-2 137 OFFCURVE",
"9 100 OFFCURVE",
"34.5 67.5 CURVE SMOOTH",
"50.167 47.167 OFFCURVE",
"71.333 30.667 OFFCURVE",
"98 18 CURVE SMOOTH",
"134 0 OFFCURVE",
"171 -8 OFFCURVE",
"208 -8 CURVE SMOOTH",
"292 -8 OFFCURVE",
"373 36 OFFCURVE",
"430 107 CURVE",
"443 101 OFFCURVE",
"461 98 OFFCURVE",
"478 98 CURVE SMOOTH",
"504 98 OFFCURVE",
"529 105 OFFCURVE",
"541 123 CURVE SMOOTH",
"545 130 OFFCURVE",
"542 132 OFFCURVE",
"538 132 CURVE SMOOTH",
"537 132 OFFCURVE",
"536 132 OFFCURVE",
"535 131 CURVE SMOOTH",
"525 118 OFFCURVE",
"512 113 OFFCURVE",
"497 113 CURVE SMOOTH",
"480 113 OFFCURVE",
"461 119 OFFCURVE",
"446 127 CURVE",
"474 168.333 OFFCURVE",
"502.333 219 OFFCURVE",
"533 287 CURVE",
"544 289 LINE",
"554 291 LINE SMOOTH",
"561.333 291.667 OFFCURVE",
"569.167 292 OFFCURVE",
"577.5 292 CURVE SMOOTH",
"601 292 LINE",
"615.5 291 LINE",
"648 288 LINE",
"650.562 223.951 OFFCURVE",
"656.25 116.655 OFFCURVE",
"676 50 CURVE",
"660 48.667 OFFCURVE",
"645.667 45.333 OFFCURVE",
"635 40 CURVE SMOOTH",
"624 35 OFFCURVE",
"619 25 OFFCURVE",
"619 17 CURVE SMOOTH",
"619 10 OFFCURVE",
"623 5 OFFCURVE",
"630 5 CURVE SMOOTH",
"632 5 OFFCURVE",
"635 6 OFFCURVE",
"638 7 CURVE SMOOTH",
"652.667 13.667 OFFCURVE",
"669.667 16.333 OFFCURVE",
"687 19 CURVE",
"697 -2.333 OFFCURVE",
"708.333 -16.333 OFFCURVE",
"721 -23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"417 153 OFFCURVE",
"411 170 OFFCURVE",
"411 188 CURVE SMOOTH",
"411 209 OFFCURVE",
"421 231 OFFCURVE",
"440 247 CURVE SMOOTH",
"456 260.333 OFFCURVE",
"479.333 270.333 OFFCURVE",
"510 281 CURVE",
"480.667 218.333 OFFCURVE",
"457.667 175.333 OFFCURVE",
"431 138 CURVE"
);
},
{
closed = 1;
nodes = (
"623 313 OFFCURVE",
"605 315 OFFCURVE",
"585 315 CURVE SMOOTH",
"573 315 OFFCURVE",
"560 315 OFFCURVE",
"545 313 CURVE",
"589 413 OFFCURVE",
"620 470.333 OFFCURVE",
"644 501 CURVE",
"644 447 LINE SMOOTH",
"644 393 OFFCURVE",
"645 350 OFFCURVE",
"647 310 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"731 -29 OFFCURVE",
"737 -23 OFFCURVE",
"737 -16 CURVE SMOOTH",
"737 -12 OFFCURVE",
"735 -8 OFFCURVE",
"732 -6 CURVE SMOOTH",
"725 -1 OFFCURVE",
"720 7 OFFCURVE",
"716 20 CURVE",
"742 20 LINE SMOOTH",
"777 20 OFFCURVE",
"842 12 OFFCURVE",
"883 9 CURVE SMOOTH",
"898 8 OFFCURVE",
"912 7 OFFCURVE",
"926 7 CURVE SMOOTH",
"936 7 OFFCURVE",
"946 8 OFFCURVE",
"956 8 CURVE SMOOTH",
"1027 11 OFFCURVE",
"1078 41 OFFCURVE",
"1078 119 CURVE SMOOTH",
"1078 183 OFFCURVE",
"1034 208 OFFCURVE",
"986 208 CURVE SMOOTH",
"935 208 OFFCURVE",
"920 187 OFFCURVE",
"909 144 CURVE SMOOTH",
"908 138 OFFCURVE",
"912 135 OFFCURVE",
"916 135 CURVE SMOOTH",
"920 135 OFFCURVE",
"923 137 OFFCURVE",
"924 141 CURVE SMOOTH",
"932 174 OFFCURVE",
"939 185 OFFCURVE",
"983 185 CURVE SMOOTH",
"1027 185 OFFCURVE",
"1062 170 OFFCURVE",
"1062 123 CURVE SMOOTH",
"1062 56 OFFCURVE",
"1012 34 OFFCURVE",
"944 34 CURVE SMOOTH",
"894 34 OFFCURVE",
"836 41 OFFCURVE",
"781 48 CURVE SMOOTH",
"754 51 OFFCURVE",
"730 52 OFFCURVE",
"707 52 CURVE",
"696 109 OFFCURVE",
"690 198 OFFCURVE",
"687 287 CURVE",
"699 287 OFFCURVE",
"712 286 OFFCURVE",
"726 286 CURVE SMOOTH",
"813 286 OFFCURVE",
"923 296 OFFCURVE",
"944 347 CURVE SMOOTH",
"947 354 OFFCURVE",
"942 359 OFFCURVE",
"937 359 CURVE SMOOTH",
"934 359 OFFCURVE",
"931 357 OFFCURVE",
"930 353 CURVE",
"912 312 OFFCURVE",
"818 304 OFFCURVE",
"737 304 CURVE SMOOTH",
"719 304 OFFCURVE",
"702 305 OFFCURVE",
"687 305 CURVE",
"686 342 OFFCURVE",
"685 377 OFFCURVE",
"685 411 CURVE SMOOTH",
"685 445 OFFCURVE",
"685 475 OFFCURVE",
"686 500 CURVE",
"740 506 OFFCURVE",
"780 509 OFFCURVE",
"824 509 CURVE SMOOTH",
"844 509 OFFCURVE",
"865 509 OFFCURVE",
"888 507 CURVE SMOOTH",
"945 504 OFFCURVE",
"968 483 OFFCURVE",
"967 438 CURVE SMOOTH",
"967 428 OFFCURVE",
"990 452 OFFCURVE",
"990 464 CURVE",
"987 483 OFFCURVE",
"984 503 OFFCURVE",
"976 515 CURVE SMOOTH",
"964 533 OFFCURVE",
"900 539 OFFCURVE",
"854 539 CURVE SMOOTH",
"819 539 OFFCURVE",
"721 535 OFFCURVE",
"686 533 CURVE",
"687 553 LINE SMOOTH",
"687 561 OFFCURVE",
"675 565 OFFCURVE",
"663 565 CURVE SMOOTH",
"649 565 OFFCURVE",
"634 560 OFFCURVE",
"636 550 CURVE SMOOTH",
"639 532 LINE",
"595 467 OFFCURVE",
"554 383 OFFCURVE",
"523 310 CURVE",
"480 303 OFFCURVE",
"447 291 OFFCURVE",
"423 272 CURVE SMOOTH",
"394 251 OFFCURVE",
"378 218 OFFCURVE",
"378 185 CURVE SMOOTH",
"378 159 OFFCURVE",
"389 133 OFFCURVE",
"414 115 CURVE",
"362 53 OFFCURVE",
"295 14 OFFCURVE",
"225 14 CURVE SMOOTH",
"189 14 OFFCURVE",
"153 24 OFFCURVE",
"117 45 CURVE SMOOTH",
"60 79 OFFCURVE",
"33 136 OFFCURVE",
"33 194 CURVE SMOOTH",
"33 260 OFFCURVE",
"70 321 OFFCURVE",
"134 321 CURVE SMOOTH",
"175 321 OFFCURVE",
"211 290 OFFCURVE",
"211 239 CURVE SMOOTH",
"210 202 OFFCURVE",
"190 178 OFFCURVE",
"163 178 CURVE SMOOTH",
"158 178 OFFCURVE",
"154 181 OFFCURVE",
"147 181 CURVE SMOOTH",
"144 181 OFFCURVE",
"142 177 OFFCURVE",
"142 174 CURVE SMOOTH",
"142 171 OFFCURVE",
"143 168 OFFCURVE",
"146 167 CURVE SMOOTH",
"151 166 OFFCURVE",
"156 165 OFFCURVE",
"162 165 CURVE SMOOTH",
"198 165 OFFCURVE",
"230 197 OFFCURVE",
"230 241 CURVE SMOOTH",
"230 302 OFFCURVE",
"178 338 OFFCURVE",
"125 335 CURVE SMOOTH",
"48 328 OFFCURVE",
"-2 253 OFFCURVE",
"-2 175 CURVE SMOOTH",
"-2 137 OFFCURVE",
"9 100 OFFCURVE",
"35 68 CURVE SMOOTH",
"50 47 OFFCURVE",
"71 31 OFFCURVE",
"98 18 CURVE SMOOTH",
"134 0 OFFCURVE",
"171 -8 OFFCURVE",
"208 -8 CURVE SMOOTH",
"292 -8 OFFCURVE",
"373 36 OFFCURVE",
"430 107 CURVE",
"443 101 OFFCURVE",
"461 98 OFFCURVE",
"478 98 CURVE SMOOTH",
"504 98 OFFCURVE",
"529 105 OFFCURVE",
"541 123 CURVE SMOOTH",
"545 130 OFFCURVE",
"542 132 OFFCURVE",
"538 132 CURVE SMOOTH",
"537 132 OFFCURVE",
"536 132 OFFCURVE",
"535 131 CURVE SMOOTH",
"525 118 OFFCURVE",
"512 113 OFFCURVE",
"497 113 CURVE SMOOTH",
"480 113 OFFCURVE",
"461 119 OFFCURVE",
"446 127 CURVE",
"474 168 OFFCURVE",
"502 219 OFFCURVE",
"533 287 CURVE",
"544 289 LINE",
"554 291 LINE SMOOTH",
"561 292 OFFCURVE",
"569 292 OFFCURVE",
"578 292 CURVE SMOOTH",
"601 292 LINE",
"616 291 LINE",
"648 288 LINE",
"651 224 OFFCURVE",
"656 117 OFFCURVE",
"676 50 CURVE",
"660 49 OFFCURVE",
"646 45 OFFCURVE",
"635 40 CURVE SMOOTH",
"624 35 OFFCURVE",
"619 25 OFFCURVE",
"619 17 CURVE SMOOTH",
"619 10 OFFCURVE",
"623 5 OFFCURVE",
"630 5 CURVE SMOOTH",
"632 5 OFFCURVE",
"635 6 OFFCURVE",
"638 7 CURVE SMOOTH",
"653 14 OFFCURVE",
"670 16 OFFCURVE",
"687 19 CURVE",
"697 -2 OFFCURVE",
"708 -16 OFFCURVE",
"721 -23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"417 153 OFFCURVE",
"411 170 OFFCURVE",
"411 188 CURVE SMOOTH",
"411 209 OFFCURVE",
"421 231 OFFCURVE",
"440 247 CURVE SMOOTH",
"456 260 OFFCURVE",
"479 270 OFFCURVE",
"510 281 CURVE",
"481 218 OFFCURVE",
"458 175 OFFCURVE",
"431 138 CURVE"
);
},
{
closed = 1;
nodes = (
"623 313 OFFCURVE",
"605 315 OFFCURVE",
"585 315 CURVE SMOOTH",
"573 315 OFFCURVE",
"560 315 OFFCURVE",
"545 313 CURVE",
"589 413 OFFCURVE",
"620 470 OFFCURVE",
"644 501 CURVE",
"644 447 LINE SMOOTH",
"644 393 OFFCURVE",
"645 350 OFFCURVE",
"647 310 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012128 3 123 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 139 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 3 179 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 3 79 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 0 170 0 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 79 179 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0129 79 179 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 68 165 68 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 128 170 128 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 153 128 169 128 185 128 201 128 217 128 233 128 249 128 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 153 128 169 128 185 128 201 128 217 128 233 128 249 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012139 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 162 170 162 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 162 25 162 41 162 57 162 73 162 89 162 105 162 121 162 137 162 153 162 169 162 185 162 201 162 217 162 233 162 249 162 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 162 25 162 41 162 57 162 73 162 89 162 105 162 121 162 137 162 153 162 169 162 185 162 201 162 217 162 233 162 249 162 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 162 25 162 41 162 57 162 73 162 89 162 105 162 121 162 137 162 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012187 79 179 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012179 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012203 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 2 189 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01276 1 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012165 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012165 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\012176 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1093;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2021-10-08 06:46:19 +0000";
layers = (
{
background = {
components = (
{
name = AE;
},
{
name = acutecomb;
}
);
};
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 714, 295}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 1093;
}
);
unicode = 01FC;
},
{
glyphname = B;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"179 -79 OFFCURVE",
"193 -89 OFFCURVE",
"203 -89 CURVE SMOOTH",
"211 -89 OFFCURVE",
"216 -83 OFFCURVE",
"216 -74 CURVE SMOOTH",
"216 -68 OFFCURVE",
"214 -61 OFFCURVE",
"210 -54 CURVE SMOOTH",
"203 -42 OFFCURVE",
"199 -34 OFFCURVE",
"196 -23 CURVE",
"319 -12 OFFCURVE",
"464 68 OFFCURVE",
"464 201 CURVE SMOOTH",
"464 268 OFFCURVE",
"422 318 OFFCURVE",
"358 334 CURVE",
"391 363 OFFCURVE",
"404 390 OFFCURVE",
"404 419 CURVE SMOOTH",
"404 482 OFFCURVE",
"345 513 OFFCURVE",
"300 523 CURVE",
"307 532 OFFCURVE",
"314 541 OFFCURVE",
"322 549 CURVE SMOOTH",
"352 583 OFFCURVE",
"387 607 OFFCURVE",
"428 607 CURVE SMOOTH",
"454 607 OFFCURVE",
"463 592 OFFCURVE",
"463 578 CURVE SMOOTH",
"463 575 OFFCURVE",
"463 572 OFFCURVE",
"462 569 CURVE SMOOTH",
"460 560 OFFCURVE",
"456 554 OFFCURVE",
"450 549 CURVE SMOOTH",
"446 546 OFFCURVE",
"444 543 OFFCURVE",
"444 541 CURVE SMOOTH",
"444 539 OFFCURVE",
"447 537 OFFCURVE",
"450 537 CURVE SMOOTH",
"451 537 OFFCURVE",
"452 537 OFFCURVE",
"454 538 CURVE SMOOTH",
"460 541 OFFCURVE",
"466 547 OFFCURVE",
"472 558 CURVE SMOOTH",
"476 565 OFFCURVE",
"478 573 OFFCURVE",
"478 581 CURVE SMOOTH",
"478 602 OFFCURVE",
"463 623 OFFCURVE",
"427 623 CURVE SMOOTH",
"363 623 OFFCURVE",
"310 578 OFFCURVE",
"273 529 CURVE",
"258 532 OFFCURVE",
"242 533 OFFCURVE",
"226 533 CURVE SMOOTH",
"121 533 OFFCURVE",
"18 475 OFFCURVE",
"18 366 CURVE SMOOTH",
"18 344 OFFCURVE",
"23 324 OFFCURVE",
"34 307 CURVE SMOOTH",
"46 289 OFFCURVE",
"61 279 OFFCURVE",
"82 279 CURVE SMOOTH",
"85 279 OFFCURVE",
"87 280 OFFCURVE",
"88 282 CURVE",
"67 299 OFFCURVE",
"54 313 OFFCURVE",
"50 323 CURVE SMOOTH",
"46 336 OFFCURVE",
"44 349 OFFCURVE",
"44 362 CURVE SMOOTH",
"44 454 OFFCURVE",
"145 510 OFFCURVE",
"235 510 CURVE SMOOTH",
"243 510 OFFCURVE",
"250 510 OFFCURVE",
"258 509 CURVE",
"242 496 OFFCURVE",
"198 434 OFFCURVE",
"178 398 CURVE SMOOTH",
"151 351 OFFCURVE",
"133 301 OFFCURVE",
"123 249 CURVE",
"90 239 OFFCURVE",
"63 222 OFFCURVE",
"43 198 CURVE SMOOTH",
"23 174 OFFCURVE",
"13 147 OFFCURVE",
"13 116 CURVE SMOOTH",
"13 22 OFFCURVE",
"67 -13 OFFCURVE",
"148 -19 CURVE",
"157 -38 LINE",
"166 -55 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 13 OFFCURVE",
"51 49 OFFCURVE",
"51 110 CURVE SMOOTH",
"51 154 OFFCURVE",
"76 203 OFFCURVE",
"120 213 CURVE",
"118 199 OFFCURVE",
"117 180 OFFCURVE",
"117 159 CURVE SMOOTH",
"117 106 OFFCURVE",
"124 39 OFFCURVE",
"141 1 CURVE"
);
},
{
closed = 1;
nodes = (
"168 28 OFFCURVE",
"153 112 OFFCURVE",
"153 177 CURVE SMOOTH",
"153 192 OFFCURVE",
"154 206 OFFCURVE",
"156 218 CURVE",
"163 219 OFFCURVE",
"171 220 OFFCURVE",
"179 220 CURVE SMOOTH",
"224 220 OFFCURVE",
"276 199 OFFCURVE",
"276 154 CURVE SMOOTH",
"276 119 OFFCURVE",
"255 104 OFFCURVE",
"226 93 CURVE SMOOTH",
"223 92 OFFCURVE",
"221 89 OFFCURVE",
"221 86 CURVE SMOOTH",
"221 83 OFFCURVE",
"223 81 OFFCURVE",
"227 81 CURVE SMOOTH",
"228 81 OFFCURVE",
"229 82 OFFCURVE",
"230 82 CURVE SMOOTH",
"262 90 OFFCURVE",
"294 119 OFFCURVE",
"294 154 CURVE SMOOTH",
"294 222 OFFCURVE",
"227 249 OFFCURVE",
"162 252 CURVE",
"169 287 OFFCURVE",
"183 326 OFFCURVE",
"203 371 CURVE SMOOTH",
"224 416 OFFCURVE",
"253 464 OFFCURVE",
"288 501 CURVE",
"341 489 OFFCURVE",
"365 448 OFFCURVE",
"365 409 CURVE SMOOTH",
"365 378 OFFCURVE",
"350 348 OFFCURVE",
"323 335 CURVE",
"305 337 OFFCURVE",
"292 338 OFFCURVE",
"285 338 CURVE SMOOTH",
"254 341 OFFCURVE",
"237 323 OFFCURVE",
"237 309 CURVE SMOOTH",
"237 300 OFFCURVE",
"244 293 OFFCURVE",
"257 293 CURVE SMOOTH",
"277 293 OFFCURVE",
"301 299 OFFCURVE",
"327 311 CURVE SMOOTH",
"330 312 OFFCURVE",
"333 312 OFFCURVE",
"336 312 CURVE SMOOTH",
"344 312 LINE SMOOTH",
"396 312 OFFCURVE",
"418 261 OFFCURVE",
"418 212 CURVE SMOOTH",
"418 82 OFFCURVE",
"311 -3 OFFCURVE",
"183 -3 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"211 -89 OFFCURVE",
"216 -83 OFFCURVE",
"216 -74 CURVE SMOOTH",
"216 -68 OFFCURVE",
"214 -61 OFFCURVE",
"210 -54 CURVE SMOOTH",
"203 -42 OFFCURVE",
"199 -34 OFFCURVE",
"196 -23 CURVE",
"319 -12 OFFCURVE",
"464 68 OFFCURVE",
"464 201 CURVE SMOOTH",
"464 268 OFFCURVE",
"422 318 OFFCURVE",
"358 334 CURVE",
"391 363 OFFCURVE",
"404 390 OFFCURVE",
"404 419 CURVE SMOOTH",
"404 482 OFFCURVE",
"345 513 OFFCURVE",
"300 523 CURVE",
"307 532 OFFCURVE",
"314 541 OFFCURVE",
"322 549 CURVE SMOOTH",
"352 583 OFFCURVE",
"387 607 OFFCURVE",
"428 607 CURVE SMOOTH",
"454 607 OFFCURVE",
"463 592 OFFCURVE",
"463 578 CURVE SMOOTH",
"463 575 OFFCURVE",
"463 572 OFFCURVE",
"462 569 CURVE SMOOTH",
"460 560 OFFCURVE",
"456 554 OFFCURVE",
"450 549 CURVE SMOOTH",
"446 546 OFFCURVE",
"444 543 OFFCURVE",
"444 541 CURVE SMOOTH",
"444 539 OFFCURVE",
"447 537 OFFCURVE",
"450 537 CURVE SMOOTH",
"451 537 OFFCURVE",
"452 537 OFFCURVE",
"454 538 CURVE SMOOTH",
"460 541 OFFCURVE",
"466 547 OFFCURVE",
"472 558 CURVE SMOOTH",
"476 565 OFFCURVE",
"478 573 OFFCURVE",
"478 581 CURVE SMOOTH",
"478 602 OFFCURVE",
"463 623 OFFCURVE",
"427 623 CURVE SMOOTH",
"363 623 OFFCURVE",
"310 578 OFFCURVE",
"273 529 CURVE",
"258 532 OFFCURVE",
"242 533 OFFCURVE",
"226 533 CURVE SMOOTH",
"121 533 OFFCURVE",
"18 475 OFFCURVE",
"18 366 CURVE SMOOTH",
"18 344 OFFCURVE",
"23 324 OFFCURVE",
"34 307 CURVE SMOOTH",
"46 289 OFFCURVE",
"61 279 OFFCURVE",
"82 279 CURVE SMOOTH",
"85 279 OFFCURVE",
"87 280 OFFCURVE",
"88 282 CURVE",
"67 299 OFFCURVE",
"54 313 OFFCURVE",
"50 323 CURVE SMOOTH",
"46 336 OFFCURVE",
"44 349 OFFCURVE",
"44 362 CURVE SMOOTH",
"44 454 OFFCURVE",
"145 510 OFFCURVE",
"235 510 CURVE SMOOTH",
"243 510 OFFCURVE",
"250 510 OFFCURVE",
"258 509 CURVE",
"242 496 OFFCURVE",
"198 434 OFFCURVE",
"178 398 CURVE SMOOTH",
"151 351 OFFCURVE",
"133 301 OFFCURVE",
"123 249 CURVE",
"90 239 OFFCURVE",
"63 222 OFFCURVE",
"43 198 CURVE SMOOTH",
"23 174 OFFCURVE",
"13 147 OFFCURVE",
"13 116 CURVE SMOOTH",
"13 22 OFFCURVE",
"67 -13 OFFCURVE",
"148 -19 CURVE",
"157 -38 LINE",
"166 -55 LINE SMOOTH",
"179 -79 OFFCURVE",
"193 -89 OFFCURVE",
"203 -89 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 13 OFFCURVE",
"51 49 OFFCURVE",
"51 110 CURVE SMOOTH",
"51 154 OFFCURVE",
"76 203 OFFCURVE",
"120 213 CURVE",
"118 199 OFFCURVE",
"117 180 OFFCURVE",
"117 159 CURVE SMOOTH",
"117 106 OFFCURVE",
"124 39 OFFCURVE",
"141 1 CURVE"
);
},
{
closed = 1;
nodes = (
"168 28 OFFCURVE",
"153 112 OFFCURVE",
"153 177 CURVE SMOOTH",
"153 192 OFFCURVE",
"154 206 OFFCURVE",
"156 218 CURVE",
"163 219 OFFCURVE",
"171 220 OFFCURVE",
"179 220 CURVE SMOOTH",
"224 220 OFFCURVE",
"276 199 OFFCURVE",
"276 154 CURVE SMOOTH",
"276 119 OFFCURVE",
"255 104 OFFCURVE",
"226 93 CURVE SMOOTH",
"223 92 OFFCURVE",
"221 89 OFFCURVE",
"221 86 CURVE SMOOTH",
"221 83 OFFCURVE",
"223 81 OFFCURVE",
"227 81 CURVE SMOOTH",
"228 81 OFFCURVE",
"229 82 OFFCURVE",
"230 82 CURVE SMOOTH",
"262 90 OFFCURVE",
"294 119 OFFCURVE",
"294 154 CURVE SMOOTH",
"294 222 OFFCURVE",
"227 249 OFFCURVE",
"162 252 CURVE",
"169 287 OFFCURVE",
"183 326 OFFCURVE",
"203 371 CURVE SMOOTH",
"224 416 OFFCURVE",
"253 464 OFFCURVE",
"288 501 CURVE",
"341 489 OFFCURVE",
"365 448 OFFCURVE",
"365 409 CURVE SMOOTH",
"365 378 OFFCURVE",
"350 348 OFFCURVE",
"323 335 CURVE",
"305 337 OFFCURVE",
"292 338 OFFCURVE",
"285 338 CURVE SMOOTH",
"254 341 OFFCURVE",
"237 323 OFFCURVE",
"237 309 CURVE SMOOTH",
"237 300 OFFCURVE",
"244 293 OFFCURVE",
"257 293 CURVE SMOOTH",
"277 293 OFFCURVE",
"301 299 OFFCURVE",
"327 311 CURVE SMOOTH",
"330 312 OFFCURVE",
"333 312 OFFCURVE",
"336 312 CURVE SMOOTH",
"344 312 LINE SMOOTH",
"396 312 OFFCURVE",
"418 261 OFFCURVE",
"418 212 CURVE SMOOTH",
"418 82 OFFCURVE",
"311 -3 OFFCURVE",
"183 -3 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01250 3 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012129 3 120 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012134 4 149 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 50 165 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01259 48 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 102 134 118 134 134 134 150 134 166 134 182 134 198 134 214 134 230 134 246 134 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 102 134 118 134 134 134 150 134 166 134 182 134 198 134 214 134 230 134 246 134 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 102 134 118 134 134 134 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 134 165 134 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012134 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 129 170 129 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 129 25 129 41 129 57 129 73 129 89 129 105 129 121 129 137 129 153 129 169 129 185 129 201 129 217 129 233 129 249 129 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 129 25 129 41 129 57 129 73 129 89 129 105 129 121 129 137 129 153 129 169 129 185 129 201 129 217 129 233 129 249 129 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 129 25 129 41 129 57 129 73 129 89 129 105 129 121 129 137 129 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012144 149 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01282 1 10 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{238, -32}";
},
{
name = top;
position = "{389, 504}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"344 -32 OFFCURVE",
"462 19 OFFCURVE",
"470 108 CURVE SMOOTH",
"471 125 OFFCURVE",
"468 140 OFFCURVE",
"460 155 CURVE SMOOTH",
"456 162 OFFCURVE",
"444 157 OFFCURVE",
"444 151 CURVE SMOOTH",
"444 150 OFFCURVE",
"445 149 OFFCURVE",
"445 148 CURVE",
"451 135 OFFCURVE",
"454 123 OFFCURVE",
"453 110 CURVE SMOOTH",
"445 28 OFFCURVE",
"335 -14 OFFCURVE",
"258 -14 CURVE SMOOTH",
"137 -14 OFFCURVE",
"71 71 OFFCURVE",
"71 184 CURVE SMOOTH",
"71 269 OFFCURVE",
"95 339 OFFCURVE",
"141 394 CURVE",
"189 361 OFFCURVE",
"259 340 OFFCURVE",
"322 340 CURVE SMOOTH",
"415 340 OFFCURVE",
"463 385 OFFCURVE",
"463 429 CURVE SMOOTH",
"463 469 OFFCURVE",
"420 507 OFFCURVE",
"336 507 CURVE SMOOTH",
"255 507 OFFCURVE",
"186 478 OFFCURVE",
"131 434 CURVE",
"105 465 OFFCURVE",
"93 504 OFFCURVE",
"93 540 CURVE SMOOTH",
"93 594 OFFCURVE",
"121 644 OFFCURVE",
"174 655 CURVE SMOOTH",
"180 656 OFFCURVE",
"186 657 OFFCURVE",
"191 657 CURVE SMOOTH",
"227 657 OFFCURVE",
"258 633 OFFCURVE",
"265 591 CURVE SMOOTH",
"270 551 OFFCURVE",
"248 523 OFFCURVE",
"213 526 CURVE SMOOTH",
"208 527 OFFCURVE",
"206 523 OFFCURVE",
"206 519 CURVE SMOOTH",
"206 516 OFFCURVE",
"207 513 OFFCURVE",
"211 513 CURVE SMOOTH",
"253 510 OFFCURVE",
"284 542 OFFCURVE",
"284 586 CURVE SMOOTH",
"284 640 OFFCURVE",
"239 669 OFFCURVE",
"191 669 CURVE SMOOTH",
"184 669 OFFCURVE",
"176 669 OFFCURVE",
"168 667 CURVE SMOOTH",
"101 652 OFFCURVE",
"64 594 OFFCURVE",
"64 532 CURVE SMOOTH",
"64 492 OFFCURVE",
"79 450 OFFCURVE",
"112 417 CURVE",
"50 358 OFFCURVE",
"17 278 OFFCURVE",
"17 198 CURVE SMOOTH",
"17 55 OFFCURVE",
"115 -43 OFFCURVE",
"260 -35 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"268 354 OFFCURVE",
"203 374 OFFCURVE",
"156 410 CURVE",
"200 454 OFFCURVE",
"256 478 OFFCURVE",
"328 478 CURVE SMOOTH",
"399 478 OFFCURVE",
"433 450 OFFCURVE",
"433 418 CURVE SMOOTH",
"433 387 OFFCURVE",
"396 354 OFFCURVE",
"324 354 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"344 -32 OFFCURVE",
"462 19 OFFCURVE",
"470 108 CURVE SMOOTH",
"471 125 OFFCURVE",
"468 140 OFFCURVE",
"460 155 CURVE SMOOTH",
"456 162 OFFCURVE",
"444 157 OFFCURVE",
"444 151 CURVE SMOOTH",
"444 150 OFFCURVE",
"445 149 OFFCURVE",
"445 148 CURVE",
"451 135 OFFCURVE",
"454 123 OFFCURVE",
"453 110 CURVE SMOOTH",
"445 28 OFFCURVE",
"335 -14 OFFCURVE",
"258 -14 CURVE SMOOTH",
"137 -14 OFFCURVE",
"71 71 OFFCURVE",
"71 184 CURVE SMOOTH",
"71 269 OFFCURVE",
"95 339 OFFCURVE",
"141 394 CURVE",
"189 361 OFFCURVE",
"259 340 OFFCURVE",
"322 340 CURVE SMOOTH",
"415 340 OFFCURVE",
"463 385 OFFCURVE",
"463 429 CURVE SMOOTH",
"463 469 OFFCURVE",
"420 507 OFFCURVE",
"336 507 CURVE SMOOTH",
"255 507 OFFCURVE",
"186 478 OFFCURVE",
"131 434 CURVE",
"105 465 OFFCURVE",
"93 504 OFFCURVE",
"93 540 CURVE SMOOTH",
"93 594 OFFCURVE",
"121 644 OFFCURVE",
"174 655 CURVE SMOOTH",
"180 656 OFFCURVE",
"186 657 OFFCURVE",
"191 657 CURVE SMOOTH",
"227 657 OFFCURVE",
"258 633 OFFCURVE",
"265 591 CURVE SMOOTH",
"270 551 OFFCURVE",
"248 523 OFFCURVE",
"213 526 CURVE SMOOTH",
"208 527 OFFCURVE",
"206 523 OFFCURVE",
"206 519 CURVE SMOOTH",
"206 516 OFFCURVE",
"207 513 OFFCURVE",
"211 513 CURVE SMOOTH",
"253 510 OFFCURVE",
"284 542 OFFCURVE",
"284 586 CURVE SMOOTH",
"284 640 OFFCURVE",
"239 669 OFFCURVE",
"191 669 CURVE SMOOTH",
"184 669 OFFCURVE",
"176 669 OFFCURVE",
"168 667 CURVE SMOOTH",
"101 652 OFFCURVE",
"64 594 OFFCURVE",
"64 532 CURVE SMOOTH",
"64 492 OFFCURVE",
"79 450 OFFCURVE",
"112 417 CURVE",
"50 358 OFFCURVE",
"17 278 OFFCURVE",
"17 198 CURVE SMOOTH",
"17 55 OFFCURVE",
"115 -43 OFFCURVE",
"260 -35 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"268 354 OFFCURVE",
"203 374 OFFCURVE",
"156 410 CURVE",
"200 454 OFFCURVE",
"256 478 OFFCURVE",
"328 478 CURVE SMOOTH",
"399 478 OFFCURVE",
"433 450 OFFCURVE",
"433 418 CURVE SMOOTH",
"433 387 OFFCURVE",
"396 354 OFFCURVE",
"324 354 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01234 3 23 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01262 2 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 476;
}
);
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
lastChange = "2021-10-08 06:17:42 +0000";
layers = (
{
background = {
components = (
{
name = C;
},
{
name = acutecomb;
}
);
};
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 357, 244}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 476;
}
);
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2021-10-08 06:17:54 +0000";
layers = (
{
background = {
components = (
{
name = C;
},
{
name = caroncomb;
}
);
};
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 307, 244}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 476;
}
);
unicode = 010C;
},
{
glyphname = Ccedilla;
lastChange = "2021-10-08 06:17:54 +0000";
layers = (
{
background = {
components = (
{
name = C;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 171, -32}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012126 3 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 3 63 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 150 126 166 126 182 126 198 126 214 126 230 126 246 126 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 126 22 126 38 126 54 126 70 126 86 126 102 126 118 126 134 126 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 126 165 126 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01211 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 41 126 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 74 170 74 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 74 25 74 41 74 57 74 73 74 89 74 105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 74 25 74 41 74 57 74 73 74 89 74 105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 74 25 74 41 74 57 74 73 74 89 74 105 74 121 74 137 74 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01268 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01287 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01213 1 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 1 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 2 122 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 1 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 476;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
lastChange = "2021-10-08 06:17:54 +0000";
layers = (
{
background = {
components = (
{
name = C;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 305, 244}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 476;
}
);
unicode = 0108;
},
{
glyphname = Cdotaccent;
lastChange = "2021-10-08 06:17:54 +0000";
layers = (
{
background = {
components = (
{
name = C;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 368, 244}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 476;
}
);
unicode = 010A;
},
{
glyphname = D;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{272, 0}";
},
{
name = center;
position = "{145, 162}";
},
{
name = top;
position = "{582, 487}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"212 -85 OFFCURVE",
"219 -81 OFFCURVE",
"219 -73 CURVE SMOOTH",
"219 -72 OFFCURVE",
"216 -65 OFFCURVE",
"210 -54 CURVE SMOOTH",
"203 -42 OFFCURVE",
"198 -29 OFFCURVE",
"195 -20 CURVE",
"307 -10 OFFCURVE",
"393 24 OFFCURVE",
"454 82 CURVE SMOOTH",
"509 133 OFFCURVE",
"537 195 OFFCURVE",
"537 266 CURVE SMOOTH",
"537 324 OFFCURVE",
"518 375 OFFCURVE",
"481 419 CURVE SMOOTH",
"439 469 OFFCURVE",
"379 504 OFFCURVE",
"300 523 CURVE",
"307 532 OFFCURVE",
"314 541 OFFCURVE",
"322 549 CURVE SMOOTH",
"352 583 OFFCURVE",
"387 607 OFFCURVE",
"428 607 CURVE SMOOTH",
"454 607 OFFCURVE",
"463 592 OFFCURVE",
"463 578 CURVE SMOOTH",
"463 575 OFFCURVE",
"463 572 OFFCURVE",
"462 569 CURVE SMOOTH",
"460 560 OFFCURVE",
"456 554 OFFCURVE",
"450 549 CURVE SMOOTH",
"446 546 OFFCURVE",
"444 543 OFFCURVE",
"444 541 CURVE SMOOTH",
"444 539 OFFCURVE",
"447 537 OFFCURVE",
"450 537 CURVE SMOOTH",
"451 537 OFFCURVE",
"452 537 OFFCURVE",
"454 538 CURVE SMOOTH",
"460 541 OFFCURVE",
"466 547 OFFCURVE",
"472 558 CURVE SMOOTH",
"476 565 OFFCURVE",
"478 573 OFFCURVE",
"478 581 CURVE SMOOTH",
"478 602 OFFCURVE",
"463 623 OFFCURVE",
"427 623 CURVE SMOOTH",
"363 623 OFFCURVE",
"310 578 OFFCURVE",
"273 529 CURVE",
"258 532 OFFCURVE",
"242 533 OFFCURVE",
"226 533 CURVE SMOOTH",
"121 533 OFFCURVE",
"18 475 OFFCURVE",
"18 366 CURVE SMOOTH",
"18 344 OFFCURVE",
"23 324 OFFCURVE",
"34 307 CURVE SMOOTH",
"46 289 OFFCURVE",
"61 279 OFFCURVE",
"82 279 CURVE SMOOTH",
"85 279 OFFCURVE",
"87 280 OFFCURVE",
"88 282 CURVE",
"67 299 OFFCURVE",
"54 313 OFFCURVE",
"50 323 CURVE SMOOTH",
"46 336 OFFCURVE",
"44 349 OFFCURVE",
"44 362 CURVE SMOOTH",
"44 454 OFFCURVE",
"145 510 OFFCURVE",
"235 510 CURVE SMOOTH",
"243 510 OFFCURVE",
"250 510 OFFCURVE",
"258 509 CURVE",
"242 496 OFFCURVE",
"198 434 OFFCURVE",
"178 398 CURVE SMOOTH",
"151 351 OFFCURVE",
"133 301 OFFCURVE",
"123 249 CURVE",
"90 239 OFFCURVE",
"63 222 OFFCURVE",
"43 198 CURVE SMOOTH",
"23 174 OFFCURVE",
"13 147 OFFCURVE",
"13 116 CURVE SMOOTH",
"13 49 OFFCURVE",
"44 8 OFFCURVE",
"106 -8 CURVE SMOOTH",
"127 -14 LINE",
"148 -19 LINE",
"157 -38 LINE",
"166 -55 LINE SMOOTH",
"174 -70 OFFCURVE",
"181 -79 OFFCURVE",
"188 -82 CURVE SMOOTH",
"191 -84 OFFCURVE",
"194 -85 OFFCURVE",
"199 -85 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 13 OFFCURVE",
"51 49 OFFCURVE",
"51 110 CURVE SMOOTH",
"51 154 OFFCURVE",
"76 203 OFFCURVE",
"120 213 CURVE",
"118 199 OFFCURVE",
"117 180 OFFCURVE",
"117 159 CURVE SMOOTH",
"117 106 OFFCURVE",
"124 39 OFFCURVE",
"141 1 CURVE"
);
},
{
closed = 1;
nodes = (
"168 36 OFFCURVE",
"160 122 OFFCURVE",
"160 180 CURVE SMOOTH",
"160 195 OFFCURVE",
"161 208 OFFCURVE",
"162 218 CURVE",
"169 219 OFFCURVE",
"177 220 OFFCURVE",
"185 220 CURVE SMOOTH",
"228 220 OFFCURVE",
"276 199 OFFCURVE",
"276 154 CURVE SMOOTH",
"276 119 OFFCURVE",
"255 104 OFFCURVE",
"226 93 CURVE SMOOTH",
"223 92 OFFCURVE",
"221 89 OFFCURVE",
"221 86 CURVE SMOOTH",
"221 83 OFFCURVE",
"223 81 OFFCURVE",
"227 81 CURVE SMOOTH",
"228 81 OFFCURVE",
"229 82 OFFCURVE",
"230 82 CURVE SMOOTH",
"262 90 OFFCURVE",
"294 119 OFFCURVE",
"294 154 CURVE SMOOTH",
"294 222 OFFCURVE",
"233 249 OFFCURVE",
"168 252 CURVE",
"176 287 OFFCURVE",
"189 326 OFFCURVE",
"210 371 CURVE SMOOTH",
"230 416 OFFCURVE",
"253 464 OFFCURVE",
"288 501 CURVE",
"349 497 OFFCURVE",
"398 472 OFFCURVE",
"434 425 CURVE SMOOTH",
"467 383 OFFCURVE",
"484 332 OFFCURVE",
"484 271 CURVE SMOOTH",
"484 198 OFFCURVE",
"460 136 OFFCURVE",
"412 86 CURVE SMOOTH",
"358 29 OFFCURVE",
"283 0 OFFCURVE",
"186 0 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"212 -85 OFFCURVE",
"219 -81 OFFCURVE",
"219 -73 CURVE SMOOTH",
"219 -72 OFFCURVE",
"216 -65 OFFCURVE",
"210 -54 CURVE SMOOTH",
"203 -42 OFFCURVE",
"198 -29 OFFCURVE",
"195 -20 CURVE",
"307 -10 OFFCURVE",
"393 24 OFFCURVE",
"454 82 CURVE SMOOTH",
"509 133 OFFCURVE",
"537 195 OFFCURVE",
"537 266 CURVE SMOOTH",
"537 324 OFFCURVE",
"518 375 OFFCURVE",
"481 419 CURVE SMOOTH",
"439 469 OFFCURVE",
"379 504 OFFCURVE",
"300 523 CURVE",
"307 532 OFFCURVE",
"314 541 OFFCURVE",
"322 549 CURVE SMOOTH",
"352 583 OFFCURVE",
"387 607 OFFCURVE",
"428 607 CURVE SMOOTH",
"454 607 OFFCURVE",
"463 592 OFFCURVE",
"463 578 CURVE SMOOTH",
"463 575 OFFCURVE",
"463 572 OFFCURVE",
"462 569 CURVE SMOOTH",
"460 560 OFFCURVE",
"456 554 OFFCURVE",
"450 549 CURVE SMOOTH",
"446 546 OFFCURVE",
"444 543 OFFCURVE",
"444 541 CURVE SMOOTH",
"444 539 OFFCURVE",
"447 537 OFFCURVE",
"450 537 CURVE SMOOTH",
"451 537 OFFCURVE",
"452 537 OFFCURVE",
"454 538 CURVE SMOOTH",
"460 541 OFFCURVE",
"466 547 OFFCURVE",
"472 558 CURVE SMOOTH",
"476 565 OFFCURVE",
"478 573 OFFCURVE",
"478 581 CURVE SMOOTH",
"478 602 OFFCURVE",
"463 623 OFFCURVE",
"427 623 CURVE SMOOTH",
"363 623 OFFCURVE",
"310 578 OFFCURVE",
"273 529 CURVE",
"258 532 OFFCURVE",
"242 533 OFFCURVE",
"226 533 CURVE SMOOTH",
"121 533 OFFCURVE",
"18 475 OFFCURVE",
"18 366 CURVE SMOOTH",
"18 344 OFFCURVE",
"23 324 OFFCURVE",
"34 307 CURVE SMOOTH",
"46 289 OFFCURVE",
"61 279 OFFCURVE",
"82 279 CURVE SMOOTH",
"85 279 OFFCURVE",
"87 280 OFFCURVE",
"88 282 CURVE",
"67 299 OFFCURVE",
"54 313 OFFCURVE",
"50 323 CURVE SMOOTH",
"46 336 OFFCURVE",
"44 349 OFFCURVE",
"44 362 CURVE SMOOTH",
"44 454 OFFCURVE",
"145 510 OFFCURVE",
"235 510 CURVE SMOOTH",
"243 510 OFFCURVE",
"250 510 OFFCURVE",
"258 509 CURVE",
"242 496 OFFCURVE",
"198 434 OFFCURVE",
"178 398 CURVE SMOOTH",
"151 351 OFFCURVE",
"133 301 OFFCURVE",
"123 249 CURVE",
"90 239 OFFCURVE",
"63 222 OFFCURVE",
"43 198 CURVE SMOOTH",
"23 174 OFFCURVE",
"13 147 OFFCURVE",
"13 116 CURVE SMOOTH",
"13 49 OFFCURVE",
"44 10 OFFCURVE",
"106 -8 CURVE SMOOTH",
"127 -14 LINE",
"148 -19 LINE",
"157 -38 LINE",
"166 -55 LINE SMOOTH",
"174 -70 OFFCURVE",
"181 -79 OFFCURVE",
"188 -82 CURVE SMOOTH",
"191 -84 OFFCURVE",
"194 -85 OFFCURVE",
"199 -85 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 13 OFFCURVE",
"51 49 OFFCURVE",
"51 110 CURVE SMOOTH",
"51 154 OFFCURVE",
"76 203 OFFCURVE",
"120 213 CURVE",
"118 199 OFFCURVE",
"117 180 OFFCURVE",
"117 159 CURVE SMOOTH",
"117 106 OFFCURVE",
"124 39 OFFCURVE",
"141 1 CURVE"
);
},
{
closed = 1;
nodes = (
"168 36 OFFCURVE",
"160 122 OFFCURVE",
"160 180 CURVE SMOOTH",
"160 195 OFFCURVE",
"161 208 OFFCURVE",
"162 218 CURVE",
"169 219 OFFCURVE",
"177 220 OFFCURVE",
"185 220 CURVE SMOOTH",
"228 220 OFFCURVE",
"276 199 OFFCURVE",
"276 154 CURVE SMOOTH",
"276 119 OFFCURVE",
"255 104 OFFCURVE",
"226 93 CURVE SMOOTH",
"223 92 OFFCURVE",
"221 89 OFFCURVE",
"221 86 CURVE SMOOTH",
"221 83 OFFCURVE",
"223 81 OFFCURVE",
"227 81 CURVE SMOOTH",
"228 81 OFFCURVE",
"229 82 OFFCURVE",
"230 82 CURVE SMOOTH",
"262 90 OFFCURVE",
"294 119 OFFCURVE",
"294 154 CURVE SMOOTH",
"294 222 OFFCURVE",
"233 249 OFFCURVE",
"168 252 CURVE",
"176 287 OFFCURVE",
"189 326 OFFCURVE",
"210 371 CURVE SMOOTH",
"230 416 OFFCURVE",
"253 464 OFFCURVE",
"288 501 CURVE",
"349 497 OFFCURVE",
"398 472 OFFCURVE",
"434 425 CURVE SMOOTH",
"467 383 OFFCURVE",
"484 332 OFFCURVE",
"484 271 CURVE SMOOTH",
"484 198 OFFCURVE",
"460 136 OFFCURVE",
"412 86 CURVE SMOOTH",
"358 29 OFFCURVE",
"283 0 OFFCURVE",
"186 0 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 3 49 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012106 3 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012111 4 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01234 23 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01278 23 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 82 170 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 106 170 106 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 111 22 111 38 111 54 111 70 111 86 111 102 111 118 111 134 111 150 111 166 111 182 111 198 111 214 111 230 111 246 111 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 111 22 111 38 111 54 111 70 111 86 111 102 111 118 111 134 111 150 111 166 111 182 111 198 111 214 111 230 111 246 111 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 111 22 111 38 111 54 111 70 111 86 111 102 111 118 111 134 111 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 111 165 111 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012120 125 111 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0129 1 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 1 72 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = D;
unicode = 0044;
},
{
glyphname = DZcaron;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 489, 0}";
}
);
};
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 543, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 1018;
}
);
unicode = 01C4;
},
{
glyphname = Eth;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = D;
},
{
name = hyphen;
transform = "{1.31609, 0, 0, 1, -47, -12}";
}
);
};
components = (
{
name = D;
},
{
name = hyphen;
transform = "{1.31609, 0, 0, 1, -47, -12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 543;
}
);
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2021-10-08 06:18:23 +0000";
layers = (
{
background = {
components = (
{
name = D;
},
{
name = caroncomb;
}
);
};
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 500, 227}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 543;
}
);
unicode = 010E;
},
{
glyphname = Dcroat;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = Eth;
}
);
};
components = (
{
name = Eth;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 543;
}
);
unicode = 0110;
},
{
glyphname = Dzcaron;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = D;
},
{
name = zcaron;
}
);
};
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 543, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 805;
}
);
unicode = 01C5;
},
{
glyphname = E;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{217, -60}";
},
{
name = ogonek;
position = "{387, -25}";
},
{
name = top;
position = "{414, 518}";
},
{
name = topleft;
position = "{20, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"320 -64 OFFCURVE",
"385 -35 OFFCURVE",
"426 3 CURVE SMOOTH",
"447 22 OFFCURVE",
"462 44 OFFCURVE",
"471 68 CURVE SMOOTH",
"477 85 OFFCURVE",
"480 102 OFFCURVE",
"480 117 CURVE SMOOTH",
"480 169 OFFCURVE",
"447 211 OFFCURVE",
"385 211 CURVE SMOOTH",
"334 211 OFFCURVE",
"274 177 OFFCURVE",
"274 119 CURVE SMOOTH",
"274 91 OFFCURVE",
"295 73 OFFCURVE",
"324 73 CURVE SMOOTH",
"329 73 OFFCURVE",
"334 74 OFFCURVE",
"339 75 CURVE SMOOTH",
"342 76 OFFCURVE",
"345 79 OFFCURVE",
"345 82 CURVE SMOOTH",
"345 83 OFFCURVE",
"344 85 OFFCURVE",
"341 85 CURVE SMOOTH",
"338 85 LINE SMOOTH",
"334 84 OFFCURVE",
"330 84 OFFCURVE",
"326 84 CURVE SMOOTH",
"305 84 OFFCURVE",
"291 97 OFFCURVE",
"291 118 CURVE SMOOTH",
"291 123 OFFCURVE",
"292 128 OFFCURVE",
"293 133 CURVE SMOOTH",
"302 174 OFFCURVE",
"341 200 OFFCURVE",
"379 200 CURVE SMOOTH",
"430 200 OFFCURVE",
"456 168 OFFCURVE",
"456 124 CURVE SMOOTH",
"456 108 OFFCURVE",
"452 91 OFFCURVE",
"445 73 CURVE SMOOTH",
"428 30 OFFCURVE",
"390 -7 OFFCURVE",
"330 -31 CURVE SMOOTH",
"302 -41 OFFCURVE",
"271 -46 OFFCURVE",
"234 -46 CURVE SMOOTH",
"160 -46 OFFCURVE",
"112 -22 OFFCURVE",
"86 16 CURVE SMOOTH",
"73 33 OFFCURVE",
"66 53 OFFCURVE",
"63 75 CURVE SMOOTH",
"62 83 OFFCURVE",
"61 91 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 156 OFFCURVE",
"90 218 OFFCURVE",
"140 253 CURVE",
"157 242 OFFCURVE",
"199 231 OFFCURVE",
"234 231 CURVE SMOOTH",
"281 231 OFFCURVE",
"311 251 OFFCURVE",
"314 273 CURVE SMOOTH",
"315 291 OFFCURVE",
"292 310 OFFCURVE",
"250 310 CURVE SMOOTH",
"218 310 OFFCURVE",
"184 301 OFFCURVE",
"150 279 CURVE",
"146 290 OFFCURVE",
"143 302 OFFCURVE",
"143 315 CURVE SMOOTH",
"143 323 OFFCURVE",
"144 331 OFFCURVE",
"146 339 CURVE SMOOTH",
"152 365 OFFCURVE",
"163 389 OFFCURVE",
"180 411 CURVE",
"227 380 OFFCURVE",
"293 359 OFFCURVE",
"352 359 CURVE SMOOTH",
"434 359 OFFCURVE",
"473 398 OFFCURVE",
"473 438 CURVE SMOOTH",
"473 478 OFFCURVE",
"433 518 OFFCURVE",
"354 518 CURVE SMOOTH",
"289 518 OFFCURVE",
"218 495 OFFCURVE",
"167 451 CURVE",
"140 484 OFFCURVE",
"126 526 OFFCURVE",
"126 564 CURVE SMOOTH",
"126 617 OFFCURVE",
"153 662 OFFCURVE",
"209 662 CURVE SMOOTH",
"242 662 OFFCURVE",
"272 640 OFFCURVE",
"280 599 CURVE SMOOTH",
"281 593 OFFCURVE",
"282 588 OFFCURVE",
"282 583 CURVE SMOOTH",
"282 554 OFFCURVE",
"264 534 OFFCURVE",
"237 537 CURVE SMOOTH",
"233 538 OFFCURVE",
"231 536 OFFCURVE",
"231 532 CURVE SMOOTH",
"231 528 OFFCURVE",
"233 526 OFFCURVE",
"236 525 CURVE",
"271 521 OFFCURVE",
"299 549 OFFCURVE",
"299 588 CURVE SMOOTH",
"299 592 OFFCURVE",
"299 597 OFFCURVE",
"298 601 CURVE SMOOTH",
"290 649 OFFCURVE",
"250 675 OFFCURVE",
"209 675 CURVE SMOOTH",
"201 675 OFFCURVE",
"194 674 OFFCURVE",
"186 672 CURVE SMOOTH",
"129 658 OFFCURVE",
"100 609 OFFCURVE",
"100 554 CURVE SMOOTH",
"100 513 OFFCURVE",
"116 470 OFFCURVE",
"150 435 CURVE",
"127 412 OFFCURVE",
"111 383 OFFCURVE",
"104 350 CURVE SMOOTH",
"102 343 OFFCURVE",
"102 336 OFFCURVE",
"102 329 CURVE SMOOTH",
"102 301 OFFCURVE",
"113 275 OFFCURVE",
"127 265 CURVE",
"67 233 OFFCURVE",
"29 187 OFFCURVE",
"14 139 CURVE SMOOTH",
"10 124 OFFCURVE",
"8 110 OFFCURVE",
"8 95 CURVE SMOOTH",
"8 34 OFFCURVE",
"42 -15 OFFCURVE",
"112 -45 CURVE SMOOTH",
"144 -58 OFFCURVE",
"184 -64 OFFCURVE",
"230 -64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 246 OFFCURVE",
"169 254 OFFCURVE",
"156 269 CURVE",
"177 286 OFFCURVE",
"213 296 OFFCURVE",
"239 296 CURVE SMOOTH",
"268 296 OFFCURVE",
"284 286 OFFCURVE",
"284 274 CURVE SMOOTH",
"284 266 OFFCURVE",
"280 259 OFFCURVE",
"268 253 CURVE SMOOTH",
"258 248 OFFCURVE",
"244 245 OFFCURVE",
"225 245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 372 OFFCURVE",
"238 391 OFFCURVE",
"193 426 CURVE",
"233 467 OFFCURVE",
"289 491 OFFCURVE",
"348 491 CURVE SMOOTH",
"415 491 OFFCURVE",
"447 462 OFFCURVE",
"447 431 CURVE SMOOTH",
"447 402 OFFCURVE",
"416 372 OFFCURVE",
"353 372 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"320 -64 OFFCURVE",
"385 -35 OFFCURVE",
"426 3 CURVE SMOOTH",
"447 22 OFFCURVE",
"462 44 OFFCURVE",
"471 68 CURVE SMOOTH",
"477 85 OFFCURVE",
"480 102 OFFCURVE",
"480 117 CURVE SMOOTH",
"480 169 OFFCURVE",
"447 211 OFFCURVE",
"385 211 CURVE SMOOTH",
"334 211 OFFCURVE",
"274 177 OFFCURVE",
"274 119 CURVE SMOOTH",
"274 91 OFFCURVE",
"295 73 OFFCURVE",
"324 73 CURVE SMOOTH",
"329 73 OFFCURVE",
"334 74 OFFCURVE",
"339 75 CURVE SMOOTH",
"342 76 OFFCURVE",
"345 79 OFFCURVE",
"345 82 CURVE SMOOTH",
"345 83 OFFCURVE",
"344 85 OFFCURVE",
"341 85 CURVE SMOOTH",
"338 85 LINE SMOOTH",
"334 85 OFFCURVE",
"330 84 OFFCURVE",
"326 84 CURVE SMOOTH",
"305 84 OFFCURVE",
"291 97 OFFCURVE",
"291 118 CURVE SMOOTH",
"291 123 OFFCURVE",
"292 128 OFFCURVE",
"293 133 CURVE SMOOTH",
"302 174 OFFCURVE",
"341 200 OFFCURVE",
"379 200 CURVE SMOOTH",
"430 200 OFFCURVE",
"456 168 OFFCURVE",
"456 124 CURVE SMOOTH",
"456 108 OFFCURVE",
"452 91 OFFCURVE",
"445 73 CURVE SMOOTH",
"428 30 OFFCURVE",
"390 -7 OFFCURVE",
"330 -31 CURVE SMOOTH",
"302 -41 OFFCURVE",
"271 -46 OFFCURVE",
"234 -46 CURVE SMOOTH",
"160 -46 OFFCURVE",
"112 -22 OFFCURVE",
"86 16 CURVE SMOOTH",
"73 33 OFFCURVE",
"66 53 OFFCURVE",
"63 75 CURVE SMOOTH",
"62 83 OFFCURVE",
"61 91 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 156 OFFCURVE",
"90 218 OFFCURVE",
"140 253 CURVE",
"157 242 OFFCURVE",
"199 231 OFFCURVE",
"234 231 CURVE SMOOTH",
"281 231 OFFCURVE",
"311 251 OFFCURVE",
"314 273 CURVE SMOOTH",
"315 291 OFFCURVE",
"292 310 OFFCURVE",
"250 310 CURVE SMOOTH",
"218 310 OFFCURVE",
"184 301 OFFCURVE",
"150 279 CURVE",
"146 290 OFFCURVE",
"143 302 OFFCURVE",
"143 315 CURVE SMOOTH",
"143 323 OFFCURVE",
"144 331 OFFCURVE",
"146 339 CURVE SMOOTH",
"152 365 OFFCURVE",
"163 389 OFFCURVE",
"180 411 CURVE",
"227 380 OFFCURVE",
"293 359 OFFCURVE",
"352 359 CURVE SMOOTH",
"434 359 OFFCURVE",
"473 398 OFFCURVE",
"473 438 CURVE SMOOTH",
"473 478 OFFCURVE",
"439 518 OFFCURVE",
"354 518 CURVE SMOOTH",
"289 518 OFFCURVE",
"218 495 OFFCURVE",
"167 451 CURVE",
"140 484 OFFCURVE",
"126 526 OFFCURVE",
"126 564 CURVE SMOOTH",
"126 617 OFFCURVE",
"153 662 OFFCURVE",
"209 662 CURVE SMOOTH",
"242 662 OFFCURVE",
"272 640 OFFCURVE",
"280 599 CURVE SMOOTH",
"281 593 OFFCURVE",
"282 588 OFFCURVE",
"282 583 CURVE SMOOTH",
"282 554 OFFCURVE",
"264 534 OFFCURVE",
"237 537 CURVE SMOOTH",
"233 538 OFFCURVE",
"231 536 OFFCURVE",
"231 532 CURVE SMOOTH",
"231 528 OFFCURVE",
"233 526 OFFCURVE",
"236 525 CURVE",
"271 521 OFFCURVE",
"299 549 OFFCURVE",
"299 588 CURVE SMOOTH",
"299 592 OFFCURVE",
"299 597 OFFCURVE",
"298 601 CURVE SMOOTH",
"290 649 OFFCURVE",
"250 675 OFFCURVE",
"209 675 CURVE SMOOTH",
"201 675 OFFCURVE",
"194 674 OFFCURVE",
"186 672 CURVE SMOOTH",
"129 658 OFFCURVE",
"100 609 OFFCURVE",
"100 554 CURVE SMOOTH",
"100 513 OFFCURVE",
"116 470 OFFCURVE",
"150 435 CURVE",
"127 412 OFFCURVE",
"111 383 OFFCURVE",
"104 350 CURVE SMOOTH",
"102 343 OFFCURVE",
"102 336 OFFCURVE",
"102 329 CURVE SMOOTH",
"102 301 OFFCURVE",
"113 275 OFFCURVE",
"127 265 CURVE",
"67 233 OFFCURVE",
"29 187 OFFCURVE",
"14 139 CURVE SMOOTH",
"10 124 OFFCURVE",
"8 110 OFFCURVE",
"8 95 CURVE SMOOTH",
"8 34 OFFCURVE",
"42 -15 OFFCURVE",
"112 -45 CURVE SMOOTH",
"144 -58 OFFCURVE",
"184 -64 OFFCURVE",
"230 -64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 246 OFFCURVE",
"169 254 OFFCURVE",
"156 269 CURVE",
"177 286 OFFCURVE",
"213 296 OFFCURVE",
"239 296 CURVE SMOOTH",
"268 296 OFFCURVE",
"284 286 OFFCURVE",
"284 274 CURVE SMOOTH",
"284 266 OFFCURVE",
"280 259 OFFCURVE",
"268 253 CURVE SMOOTH",
"258 248 OFFCURVE",
"244 245 OFFCURVE",
"225 245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 372 OFFCURVE",
"238 391 OFFCURVE",
"193 426 CURVE",
"233 467 OFFCURVE",
"289 491 OFFCURVE",
"348 491 CURVE SMOOTH",
"415 491 OFFCURVE",
"447 462 OFFCURVE",
"447 431 CURVE SMOOTH",
"447 402 OFFCURVE",
"416 372 OFFCURVE",
"353 372 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012102 3 91 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 102 170 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 1 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 121 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = E;
unicode = 0045;
},
{
glyphname = Eacute;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = acutecomb;
}
);
};
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 382, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012102 3 91 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 102 170 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 1 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 121 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = brevecomb;
}
);
};
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 324, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0114;
},
{
glyphname = Ecaron;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = caroncomb;
}
);
};
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 332, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 011A;
},
{
glyphname = Ecircumflex;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012102 3 91 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 102 170 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 1 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 196, -60}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2021-10-08 06:20:47 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 330, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EC4;
},
{
glyphname = Edblgrave;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 303, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0204;
},
{
glyphname = Edieresis;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 350, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012146 4 140 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012136 4 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 3 91 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 102 170 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 136 170 136 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 136 25 136 41 136 57 136 73 136 89 136 105 136 121 136 137 136 153 136 169 136 185 136 201 136 217 136 233 136 249 136 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 136 25 136 41 136 57 136 73 136 89 136 105 136 121 136 137 136 153 136 169 136 185 136 201 136 217 136 233 136 249 136 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 136 25 136 41 136 57 136 73 136 89 136 105 136 121 136 137 136 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 146 170 146 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 146 25 146 41 146 57 146 73 146 89 146 105 146 121 146 137 146 153 146 169 146 185 146 201 146 217 146 233 146 249 146 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 146 25 146 41 146 57 146 73 146 89 146 105 146 121 146 137 146 153 146 169 146 185 146 201 146 217 146 233 146 249 146 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 146 25 146 41 146 57 146 73 146 89 146 105 146 121 146 137 146 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 1 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 393, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2021-10-08 06:20:09 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 196, -60}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EB8;
},
{
glyphname = Egrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = gravecomb;
}
);
};
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 326, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012102 3 91 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 102 170 102 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 1 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Ehookabove;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 373, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 329, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0206;
},
{
glyphname = Emacron;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = macroncomb;
}
);
};
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 323, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0112;
},
{
glyphname = Eogonek;
lastChange = "2021-10-08 06:20:09 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = E;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 308, -30}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2021-10-08 06:20:49 +0000";
layers = (
{
background = {
components = (
{
name = E;
},
{
name = tildecomb;
}
);
};
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 327, 258}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 483;
}
);
unicode = 1EBC;
},
{
glyphname = F;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"268 -42 OFFCURVE",
"328 -17 OFFCURVE",
"375 35 CURVE SMOOTH",
"399 62 OFFCURVE",
"416 97 OFFCURVE",
"426 140 CURVE SMOOTH",
"431 160 OFFCURVE",
"435 183 OFFCURVE",
"436 208 CURVE SMOOTH",
"440 278 LINE",
"461 281 OFFCURVE",
"486 289 OFFCURVE",
"501 296 CURVE",
"505 297 OFFCURVE",
"507 300 OFFCURVE",
"507 301 CURVE SMOOTH",
"507 303 OFFCURVE",
"505 305 OFFCURVE",
"502 305 CURVE SMOOTH",
"501 305 OFFCURVE",
"499 305 OFFCURVE",
"498 304 CURVE",
"491 301 OFFCURVE",
"466 297 OFFCURVE",
"441 297 CURVE",
"444 349 OFFCURVE",
"448 392 OFFCURVE",
"454 425 CURVE",
"479 427 OFFCURVE",
"501 432 OFFCURVE",
"520 440 CURVE SMOOTH",
"558 455 OFFCURVE",
"574 482 OFFCURVE",
"574 507 CURVE SMOOTH",
"574 534 OFFCURVE",
"553 559 OFFCURVE",
"520 559 CURVE SMOOTH",
"473 559 OFFCURVE",
"449 500 OFFCURVE",
"438 458 CURVE",
"399 457 OFFCURVE",
"362 462 OFFCURVE",
"323 467 CURVE",
"332 487 OFFCURVE",
"338 507 OFFCURVE",
"338 525 CURVE SMOOTH",
"338 561 OFFCURVE",
"315 578 OFFCURVE",
"291 578 CURVE SMOOTH",
"282 578 OFFCURVE",
"274 576 OFFCURVE",
"266 572 CURVE SMOOTH",
"262 570 OFFCURVE",
"261 567 OFFCURVE",
"261 564 CURVE SMOOTH",
"261 562 OFFCURVE",
"262 560 OFFCURVE",
"265 560 CURVE SMOOTH",
"266 560 OFFCURVE",
"267 560 OFFCURVE",
"269 561 CURVE SMOOTH",
"274 564 OFFCURVE",
"279 565 OFFCURVE",
"285 565 CURVE SMOOTH",
"301 565 OFFCURVE",
"316 553 OFFCURVE",
"316 526 CURVE SMOOTH",
"316 507 OFFCURVE",
"309 489 OFFCURVE",
"301 470 CURVE",
"264 477 OFFCURVE",
"227 481 OFFCURVE",
"190 481 CURVE SMOOTH",
"106 481 OFFCURVE",
"64 441 OFFCURVE",
"67 404 CURVE SMOOTH",
"67 370 OFFCURVE",
"101 348 OFFCURVE",
"147 348 CURVE SMOOTH",
"161 348 OFFCURVE",
"176 350 OFFCURVE",
"191 354 CURVE SMOOTH",
"234 367 OFFCURVE",
"280 399 OFFCURVE",
"309 442 CURVE",
"349 435 OFFCURVE",
"390 428 OFFCURVE",
"431 425 CURVE",
"423 389 OFFCURVE",
"418 350 OFFCURVE",
"411 299 CURVE",
"370 303 OFFCURVE",
"342 306 OFFCURVE",
"323 309 CURVE SMOOTH",
"312 310 OFFCURVE",
"296 311 OFFCURVE",
"296 296 CURVE SMOOTH",
"296 276 OFFCURVE",
"315 261 OFFCURVE",
"340 261 CURVE SMOOTH",
"351 261 OFFCURVE",
"390 267 OFFCURVE",
"408 270 CURVE",
"404 230 OFFCURVE",
"399 180 OFFCURVE",
"386 137 CURVE SMOOTH",
"362 60 OFFCURVE",
"319 12 OFFCURVE",
"271 -12 CURVE SMOOTH",
"249 -22 OFFCURVE",
"227 -27 OFFCURVE",
"204 -27 CURVE SMOOTH",
"152 -27 OFFCURVE",
"106 -3 OFFCURVE",
"80 46 CURVE SMOOTH",
"67 68 OFFCURVE",
"61 96 OFFCURVE",
"61 129 CURVE SMOOTH",
"61 201 OFFCURVE",
"98 263 OFFCURVE",
"174 270 CURVE SMOOTH",
"224 274 OFFCURVE",
"262 235 OFFCURVE",
"262 196 CURVE SMOOTH",
"262 182 OFFCURVE",
"257 167 OFFCURVE",
"245 155 CURVE SMOOTH",
"240 150 OFFCURVE",
"243 144 OFFCURVE",
"247 144 CURVE SMOOTH",
"249 144 OFFCURVE",
"251 145 OFFCURVE",
"253 147 CURVE SMOOTH",
"270 167 OFFCURVE",
"278 188 OFFCURVE",
"278 208 CURVE SMOOTH",
"278 257 OFFCURVE",
"235 300 OFFCURVE",
"175 300 CURVE SMOOTH",
"80 300 OFFCURVE",
"15 221 OFFCURVE",
"15 128 CURVE SMOOTH",
"15 59 OFFCURVE",
"55 8 OFFCURVE",
"108 -19 CURVE SMOOTH",
"138 -34 OFFCURVE",
"169 -42 OFFCURVE",
"205 -42 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171 364 OFFCURVE",
"157 363 OFFCURVE",
"145 363 CURVE SMOOTH",
"105 363 OFFCURVE",
"85 383 OFFCURVE",
"85 405 CURVE SMOOTH",
"86 432 OFFCURVE",
"114 459 OFFCURVE",
"177 459 CURVE SMOOTH",
"214 459 OFFCURVE",
"251 453 OFFCURVE",
"288 446 CURVE",
"263 409 OFFCURVE",
"226 381 OFFCURVE",
"187 369 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"470 490 OFFCURVE",
"479 510 OFFCURVE",
"489 520 CURVE SMOOTH",
"499 531 OFFCURVE",
"511 536 OFFCURVE",
"520 536 CURVE SMOOTH",
"532 536 OFFCURVE",
"541 528 OFFCURVE",
"541 514 CURVE SMOOTH",
"541 503 OFFCURVE",
"533 488 OFFCURVE",
"518 477 CURVE SMOOTH",
"507 469 OFFCURVE",
"488 463 OFFCURVE",
"461 459 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"268 -42 OFFCURVE",
"328 -17 OFFCURVE",
"375 35 CURVE SMOOTH",
"399 62 OFFCURVE",
"416 97 OFFCURVE",
"426 140 CURVE SMOOTH",
"431 160 OFFCURVE",
"435 183 OFFCURVE",
"436 208 CURVE SMOOTH",
"440 278 LINE",
"461 281 OFFCURVE",
"486 289 OFFCURVE",
"501 296 CURVE",
"505 297 OFFCURVE",
"507 300 OFFCURVE",
"507 301 CURVE SMOOTH",
"507 303 OFFCURVE",
"505 305 OFFCURVE",
"502 305 CURVE SMOOTH",
"501 305 OFFCURVE",
"499 305 OFFCURVE",
"498 304 CURVE",
"491 301 OFFCURVE",
"466 297 OFFCURVE",
"441 297 CURVE",
"444 349 OFFCURVE",
"448 392 OFFCURVE",
"454 425 CURVE",
"479 427 OFFCURVE",
"501 432 OFFCURVE",
"520 440 CURVE SMOOTH",
"558 455 OFFCURVE",
"574 482 OFFCURVE",
"574 507 CURVE SMOOTH",
"574 534 OFFCURVE",
"553 559 OFFCURVE",
"520 559 CURVE SMOOTH",
"473 559 OFFCURVE",
"449 500 OFFCURVE",
"438 458 CURVE",
"399 457 OFFCURVE",
"362 462 OFFCURVE",
"323 467 CURVE",
"332 487 OFFCURVE",
"338 507 OFFCURVE",
"338 525 CURVE SMOOTH",
"338 561 OFFCURVE",
"315 578 OFFCURVE",
"291 578 CURVE SMOOTH",
"282 578 OFFCURVE",
"274 576 OFFCURVE",
"266 572 CURVE SMOOTH",
"262 570 OFFCURVE",
"261 567 OFFCURVE",
"261 564 CURVE SMOOTH",
"261 562 OFFCURVE",
"262 560 OFFCURVE",
"265 560 CURVE SMOOTH",
"266 560 OFFCURVE",
"267 560 OFFCURVE",
"269 561 CURVE SMOOTH",
"274 564 OFFCURVE",
"279 565 OFFCURVE",
"285 565 CURVE SMOOTH",
"301 565 OFFCURVE",
"316 553 OFFCURVE",
"316 526 CURVE SMOOTH",
"316 507 OFFCURVE",
"309 489 OFFCURVE",
"301 470 CURVE",
"264 477 OFFCURVE",
"227 481 OFFCURVE",
"190 481 CURVE SMOOTH",
"106 481 OFFCURVE",
"64 441 OFFCURVE",
"67 404 CURVE SMOOTH",
"67 370 OFFCURVE",
"101 348 OFFCURVE",
"147 348 CURVE SMOOTH",
"161 348 OFFCURVE",
"176 350 OFFCURVE",
"191 354 CURVE SMOOTH",
"234 367 OFFCURVE",
"280 399 OFFCURVE",
"309 442 CURVE",
"349 435 OFFCURVE",
"390 428 OFFCURVE",
"431 425 CURVE",
"423 389 OFFCURVE",
"418 350 OFFCURVE",
"411 299 CURVE",
"370 303 OFFCURVE",
"342 306 OFFCURVE",
"323 309 CURVE SMOOTH",
"312 310 OFFCURVE",
"296 311 OFFCURVE",
"296 296 CURVE SMOOTH",
"296 276 OFFCURVE",
"315 261 OFFCURVE",
"340 261 CURVE SMOOTH",
"351 261 OFFCURVE",
"390 267 OFFCURVE",
"408 270 CURVE",
"404 230 OFFCURVE",
"399 180 OFFCURVE",
"386 137 CURVE SMOOTH",
"362 60 OFFCURVE",
"319 12 OFFCURVE",
"271 -12 CURVE SMOOTH",
"249 -22 OFFCURVE",
"227 -27 OFFCURVE",
"204 -27 CURVE SMOOTH",
"152 -27 OFFCURVE",
"106 -3 OFFCURVE",
"80 46 CURVE SMOOTH",
"67 68 OFFCURVE",
"61 96 OFFCURVE",
"61 129 CURVE SMOOTH",
"61 201 OFFCURVE",
"98 263 OFFCURVE",
"174 270 CURVE SMOOTH",
"224 274 OFFCURVE",
"262 235 OFFCURVE",
"262 196 CURVE SMOOTH",
"262 182 OFFCURVE",
"257 167 OFFCURVE",
"245 155 CURVE SMOOTH",
"240 150 OFFCURVE",
"243 144 OFFCURVE",
"247 144 CURVE SMOOTH",
"249 144 OFFCURVE",
"251 145 OFFCURVE",
"253 147 CURVE SMOOTH",
"270 167 OFFCURVE",
"278 188 OFFCURVE",
"278 208 CURVE SMOOTH",
"278 257 OFFCURVE",
"235 300 OFFCURVE",
"175 300 CURVE SMOOTH",
"80 300 OFFCURVE",
"15 221 OFFCURVE",
"15 128 CURVE SMOOTH",
"15 59 OFFCURVE",
"55 8 OFFCURVE",
"108 -19 CURVE SMOOTH",
"138 -34 OFFCURVE",
"169 -42 OFFCURVE",
"205 -42 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 363 OFFCURVE",
"85 383 OFFCURVE",
"85 405 CURVE SMOOTH",
"86 432 OFFCURVE",
"114 459 OFFCURVE",
"177 459 CURVE SMOOTH",
"214 459 OFFCURVE",
"251 453 OFFCURVE",
"288 446 CURVE",
"263 409 OFFCURVE",
"226 381 OFFCURVE",
"187 369 CURVE SMOOTH",
"171 364 OFFCURVE",
"157 363 OFFCURVE",
"145 363 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"470 490 OFFCURVE",
"479 510 OFFCURVE",
"489 520 CURVE SMOOTH",
"499 531 OFFCURVE",
"511 536 OFFCURVE",
"520 536 CURVE SMOOTH",
"532 536 OFFCURVE",
"541 528 OFFCURVE",
"541 514 CURVE SMOOTH",
"541 503 OFFCURVE",
"533 488 OFFCURVE",
"518 477 CURVE SMOOTH",
"507 469 OFFCURVE",
"488 463 OFFCURVE",
"461 459 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01288 3 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012132 3 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01223 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 88 170 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 101 88 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012126 23 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 132 22 132 38 132 54 132 70 132 86 132 102 132 118 132 134 132 150 132 166 132 182 132 198 132 214 132 230 132 246 132 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 132 22 132 38 132 54 132 70 132 86 132 102 132 118 132 134 132 150 132 166 132 182 132 198 132 214 132 230 132 246 132 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 132 22 132 38 132 54 132 70 132 86 132 102 132 118 132 134 132 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 132 165 132 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01283 2 129 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 2 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012103 129 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 502;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{257, -13}";
},
{
name = top;
position = "{279, 527}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"412 14 OFFCURVE",
"489 95 OFFCURVE",
"489 176 CURVE SMOOTH",
"489 222 OFFCURVE",
"470 252 OFFCURVE",
"446 270 CURVE",
"461 271 OFFCURVE",
"473 273 OFFCURVE",
"485 276 CURVE SMOOTH",
"513 283 OFFCURVE",
"550 297 OFFCURVE",
"550 334 CURVE SMOOTH",
"550 356 OFFCURVE",
"528 378 OFFCURVE",
"506 375 CURVE",
"501 373 OFFCURVE",
"499 370 OFFCURVE",
"499 367 CURVE SMOOTH",
"499 365 OFFCURVE",
"500 363 OFFCURVE",
"504 363 CURVE SMOOTH",
"505 363 LINE SMOOTH",
"520 366 OFFCURVE",
"531 348 OFFCURVE",
"528 337 CURVE SMOOTH",
"520 299 OFFCURVE",
"470 292 OFFCURVE",
"419 288 CURVE SMOOTH",
"366 284 OFFCURVE",
"293 278 OFFCURVE",
"248 254 CURVE SMOOTH",
"200 227 OFFCURVE",
"178 188 OFFCURVE",
"178 154 CURVE SMOOTH",
"178 115 OFFCURVE",
"207 83 OFFCURVE",
"259 83 CURVE SMOOTH",
"293 83 OFFCURVE",
"323 94 OFFCURVE",
"333 113 CURVE",
"335 115 OFFCURVE",
"334 121 OFFCURVE",
"330 121 CURVE SMOOTH",
"329 121 OFFCURVE",
"328 120 OFFCURVE",
"326 119 CURVE",
"312 108 OFFCURVE",
"294 103 OFFCURVE",
"277 103 CURVE SMOOTH",
"230 103 OFFCURVE",
"214 137 OFFCURVE",
"214 165 CURVE SMOOTH",
"214 221 OFFCURVE",
"284 249 OFFCURVE",
"336 258 CURVE SMOOTH",
"346 260 OFFCURVE",
"356 260 OFFCURVE",
"366 260 CURVE SMOOTH",
"418 260 OFFCURVE",
"466 237 OFFCURVE",
"466 178 CURVE SMOOTH",
"466 103 OFFCURVE",
"398 30 OFFCURVE",
"318 12 CURVE SMOOTH",
"303 9 OFFCURVE",
"289 7 OFFCURVE",
"276 7 CURVE SMOOTH",
"180 7 OFFCURVE",
"117 85 OFFCURVE",
"95 184 CURVE SMOOTH",
"90 206 OFFCURVE",
"88 230 OFFCURVE",
"88 254 CURVE SMOOTH",
"88 364 OFFCURVE",
"137 480 OFFCURVE",
"243 504 CURVE SMOOTH",
"252 506 OFFCURVE",
"261 507 OFFCURVE",
"270 507 CURVE SMOOTH",
"319 507 OFFCURVE",
"364 478 OFFCURVE",
"375 427 CURVE SMOOTH",
"376 422 OFFCURVE",
"376 418 OFFCURVE",
"376 414 CURVE SMOOTH",
"376 381 OFFCURVE",
"351 360 OFFCURVE",
"332 360 CURVE SMOOTH",
"322 360 OFFCURVE",
"313 366 OFFCURVE",
"311 380 CURVE",
"312 388 LINE SMOOTH",
"312 390 OFFCURVE",
"312 392 OFFCURVE",
"311 394 CURVE",
"310 402 OFFCURVE",
"305 403 OFFCURVE",
"302 396 CURVE SMOOTH",
"300 391 OFFCURVE",
"298 386 OFFCURVE",
"298 381 CURVE SMOOTH",
"298 361 OFFCURVE",
"316 343 OFFCURVE",
"339 343 CURVE SMOOTH",
"375 343 OFFCURVE",
"408 373 OFFCURVE",
"408 416 CURVE SMOOTH",
"408 421 OFFCURVE",
"408 426 OFFCURVE",
"407 431 CURVE SMOOTH",
"396 496 OFFCURVE",
"340 527 OFFCURVE",
"279 527 CURVE SMOOTH",
"266 527 OFFCURVE",
"252 525 OFFCURVE",
"238 522 CURVE SMOOTH",
"109 496 OFFCURVE",
"37 373 OFFCURVE",
"37 246 CURVE SMOOTH",
"37 221 OFFCURVE",
"40 197 OFFCURVE",
"45 173 CURVE SMOOTH",
"69 62 OFFCURVE",
"149 -16 OFFCURVE",
"260 -16 CURVE SMOOTH",
"281 -16 OFFCURVE",
"303 -14 OFFCURVE",
"325 -8 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"281 -16 OFFCURVE",
"303 -14 OFFCURVE",
"325 -8 CURVE SMOOTH",
"412 14 OFFCURVE",
"489 95 OFFCURVE",
"489 176 CURVE SMOOTH",
"489 222 OFFCURVE",
"470 252 OFFCURVE",
"446 270 CURVE",
"461 271 OFFCURVE",
"473 273 OFFCURVE",
"485 276 CURVE SMOOTH",
"513 283 OFFCURVE",
"550 297 OFFCURVE",
"550 334 CURVE SMOOTH",
"550 356 OFFCURVE",
"528 378 OFFCURVE",
"506 375 CURVE",
"501 373 OFFCURVE",
"499 370 OFFCURVE",
"499 367 CURVE SMOOTH",
"499 365 OFFCURVE",
"500 363 OFFCURVE",
"504 363 CURVE SMOOTH",
"505 363 LINE SMOOTH",
"520 363 OFFCURVE",
"531 348 OFFCURVE",
"528 337 CURVE SMOOTH",
"520 299 OFFCURVE",
"470 292 OFFCURVE",
"419 288 CURVE SMOOTH",
"366 284 OFFCURVE",
"293 278 OFFCURVE",
"248 254 CURVE SMOOTH",
"200 227 OFFCURVE",
"178 188 OFFCURVE",
"178 154 CURVE SMOOTH",
"178 115 OFFCURVE",
"207 83 OFFCURVE",
"259 83 CURVE SMOOTH",
"293 83 OFFCURVE",
"323 94 OFFCURVE",
"333 113 CURVE",
"335 115 OFFCURVE",
"334 121 OFFCURVE",
"330 121 CURVE SMOOTH",
"329 121 OFFCURVE",
"328 120 OFFCURVE",
"326 119 CURVE",
"312 108 OFFCURVE",
"294 103 OFFCURVE",
"277 103 CURVE SMOOTH",
"230 103 OFFCURVE",
"214 137 OFFCURVE",
"214 165 CURVE SMOOTH",
"214 221 OFFCURVE",
"284 249 OFFCURVE",
"336 258 CURVE SMOOTH",
"346 260 OFFCURVE",
"356 260 OFFCURVE",
"366 260 CURVE SMOOTH",
"418 260 OFFCURVE",
"466 237 OFFCURVE",
"466 178 CURVE SMOOTH",
"466 103 OFFCURVE",
"398 30 OFFCURVE",
"318 12 CURVE SMOOTH",
"303 9 OFFCURVE",
"289 7 OFFCURVE",
"276 7 CURVE SMOOTH",
"180 7 OFFCURVE",
"117 85 OFFCURVE",
"95 184 CURVE SMOOTH",
"90 206 OFFCURVE",
"88 230 OFFCURVE",
"88 254 CURVE SMOOTH",
"88 364 OFFCURVE",
"137 480 OFFCURVE",
"243 504 CURVE SMOOTH",
"252 506 OFFCURVE",
"261 507 OFFCURVE",
"270 507 CURVE SMOOTH",
"319 507 OFFCURVE",
"364 478 OFFCURVE",
"375 427 CURVE SMOOTH",
"376 422 OFFCURVE",
"376 418 OFFCURVE",
"376 414 CURVE SMOOTH",
"376 381 OFFCURVE",
"351 360 OFFCURVE",
"332 360 CURVE SMOOTH",
"322 360 OFFCURVE",
"313 366 OFFCURVE",
"311 380 CURVE",
"312 388 LINE SMOOTH",
"312 390 OFFCURVE",
"312 392 OFFCURVE",
"311 394 CURVE",
"310 402 OFFCURVE",
"305 403 OFFCURVE",
"302 396 CURVE SMOOTH",
"300 391 OFFCURVE",
"298 386 OFFCURVE",
"298 381 CURVE SMOOTH",
"298 361 OFFCURVE",
"316 343 OFFCURVE",
"339 343 CURVE SMOOTH",
"375 343 OFFCURVE",
"408 373 OFFCURVE",
"408 416 CURVE SMOOTH",
"408 421 OFFCURVE",
"408 426 OFFCURVE",
"407 431 CURVE SMOOTH",
"396 496 OFFCURVE",
"340 527 OFFCURVE",
"279 527 CURVE SMOOTH",
"266 527 OFFCURVE",
"252 525 OFFCURVE",
"238 522 CURVE SMOOTH",
"109 496 OFFCURVE",
"37 373 OFFCURVE",
"37 246 CURVE SMOOTH",
"37 105 OFFCURVE",
"120 -16 OFFCURVE",
"260 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012113 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 70 170 70 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 50 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01229 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01283 2 92 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
lastChange = "2021-10-08 06:21:04 +0000";
layers = (
{
background = {
components = (
{
name = G;
},
{
name = brevecomb;
}
);
};
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 189, 267}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 513;
}
);
unicode = 011E;
},
{
glyphname = Gcaron;
lastChange = "2021-10-08 06:21:04 +0000";
layers = (
{
background = {
components = (
{
name = G;
},
{
name = caroncomb;
}
);
};
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 197, 267}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 513;
}
);
unicode = 01E6;
},
{
glyphname = Gcircumflex;
lastChange = "2021-10-08 06:21:04 +0000";
layers = (
{
background = {
components = (
{
name = G;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 195, 267}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 513;
}
);
unicode = 011C;
},
{
glyphname = Gcommaaccent;
lastChange = "2021-10-08 06:21:04 +0000";
layers = (
{
background = {
components = (
{
name = G;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 221, -13}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 513;
}
);
unicode = 0122;
},
{
glyphname = Gdotaccent;
lastChange = "2021-10-08 06:21:04 +0000";
layers = (
{
background = {
components = (
{
name = G;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 258, 267}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 513;
}
);
unicode = 0120;
},
{
glyphname = H;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{339, 0}";
},
{
name = center;
position = "{339, 265}";
},
{
name = top;
position = "{511, 530}";
},
{
name = topleft;
position = "{20, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"730 -105 OFFCURVE",
"735 -99 OFFCURVE",
"739 -92 CURVE",
"744 -87 OFFCURVE",
"742 -81 OFFCURVE",
"738 -81 CURVE SMOOTH",
"736 -81 OFFCURVE",
"734 -82 OFFCURVE",
"731 -85 CURVE SMOOTH",
"727 -90 OFFCURVE",
"722 -94 OFFCURVE",
"717 -98 CURVE SMOOTH",
"705 -106 OFFCURVE",
"694 -109 OFFCURVE",
"683 -109 CURVE SMOOTH",
"667 -109 OFFCURVE",
"653 -102 OFFCURVE",
"643 -92 CURVE SMOOTH",
"617 -66 OFFCURVE",
"607 -15 OFFCURVE",
"607 49 CURVE SMOOTH",
"607 60 OFFCURVE",
"607 73 OFFCURVE",
"608 85 CURVE SMOOTH",
"609 125 OFFCURVE",
"614 167 OFFCURVE",
"621 212 CURVE SMOOTH",
"635 301 OFFCURVE",
"652 386 OFFCURVE",
"669 454 CURVE SMOOTH",
"688 534 LINE SMOOTH",
"691 544 OFFCURVE",
"671 554 OFFCURVE",
"655 554 CURVE SMOOTH",
"646 554 OFFCURVE",
"638 551 OFFCURVE",
"636 543 CURVE SMOOTH",
"609 434 OFFCURVE",
"591 339 OFFCURVE",
"581 256 CURVE",
"530 279 OFFCURVE",
"477 288 OFFCURVE",
"423 288 CURVE SMOOTH",
"414 288 OFFCURVE",
"405 287 OFFCURVE",
"396 287 CURVE",
"402 317 OFFCURVE",
"404 344 OFFCURVE",
"404 369 CURVE SMOOTH",
"404 440 OFFCURVE",
"384 493 OFFCURVE",
"354 528 CURVE SMOOTH",
"332 551 OFFCURVE",
"308 567 OFFCURVE",
"279 576 CURVE SMOOTH",
"262 581 OFFCURVE",
"245 583 OFFCURVE",
"228 583 CURVE SMOOTH",
"189 583 OFFCURVE",
"150 570 OFFCURVE",
"117 543 CURVE SMOOTH",
"94 524 OFFCURVE",
"77 498 OFFCURVE",
"67 467 CURVE SMOOTH",
"61 449 OFFCURVE",
"58 430 OFFCURVE",
"58 412 CURVE SMOOTH",
"58 339 OFFCURVE",
"103 272 OFFCURVE",
"174 272 CURVE SMOOTH",
"213 272 OFFCURVE",
"240 288 OFFCURVE",
"252 319 CURVE SMOOTH",
"254 324 OFFCURVE",
"251 327 OFFCURVE",
"248 327 CURVE SMOOTH",
"246 327 OFFCURVE",
"243 326 OFFCURVE",
"242 322 CURVE SMOOTH",
"235 299 OFFCURVE",
"209 284 OFFCURVE",
"181 284 CURVE SMOOTH",
"118 284 OFFCURVE",
"81 344 OFFCURVE",
"81 405 CURVE SMOOTH",
"81 428 OFFCURVE",
"87 452 OFFCURVE",
"98 472 CURVE SMOOTH",
"128 525 OFFCURVE",
"175 548 OFFCURVE",
"224 548 CURVE SMOOTH",
"245 548 OFFCURVE",
"267 542 OFFCURVE",
"287 532 CURVE SMOOTH",
"331 509 OFFCURVE",
"365 464 OFFCURVE",
"379 399 CURVE SMOOTH",
"382 383 OFFCURVE",
"383 366 OFFCURVE",
"383 348 CURVE SMOOTH",
"383 329 OFFCURVE",
"382 308 OFFCURVE",
"378 286 CURVE",
"328 281 OFFCURVE",
"289 269 OFFCURVE",
"260 252 CURVE SMOOTH",
"227 231 OFFCURVE",
"205 194 OFFCURVE",
"205 159 CURVE SMOOTH",
"205 138 OFFCURVE",
"213 118 OFFCURVE",
"230 101 CURVE SMOOTH",
"243 88 OFFCURVE",
"262 80 OFFCURVE",
"289 75 CURVE",
"248 23 OFFCURVE",
"193 -26 OFFCURVE",
"126 -26 CURVE SMOOTH",
"85 -26 OFFCURVE",
"33 6 OFFCURVE",
"33 47 CURVE SMOOTH",
"33 76 OFFCURVE",
"52 94 OFFCURVE",
"69 94 CURVE SMOOTH",
"80 94 OFFCURVE",
"89 87 OFFCURVE",
"92 71 CURVE",
"94 66 OFFCURVE",
"97 63 OFFCURVE",
"99 63 CURVE SMOOTH",
"101 63 OFFCURVE",
"103 65 OFFCURVE",
"103 68 CURVE SMOOTH",
"102 72 LINE SMOOTH",
"98 95 OFFCURVE",
"84 105 OFFCURVE",
"68 105 CURVE SMOOTH",
"42 105 OFFCURVE",
"12 79 OFFCURVE",
"12 39 CURVE SMOOTH",
"12 -14 OFFCURVE",
"68 -43 OFFCURVE",
"119 -43 CURVE SMOOTH",
"198 -43 OFFCURVE",
"261 11 OFFCURVE",
"308 75 CURVE",
"340 76 OFFCURVE",
"361 91 OFFCURVE",
"369 106 CURVE",
"372 109 OFFCURVE",
"370 117 OFFCURVE",
"363 110 CURVE SMOOTH",
"352 101 OFFCURVE",
"341 95 OFFCURVE",
"318 90 CURVE",
"353 145 OFFCURVE",
"375 201 OFFCURVE",
"390 264 CURVE",
"410 267 OFFCURVE",
"430 268 OFFCURVE",
"450 268 CURVE SMOOTH",
"493 268 OFFCURVE",
"537 261 OFFCURVE",
"580 247 CURVE",
"576 212 OFFCURVE",
"571 161 OFFCURVE",
"571 109 CURVE SMOOTH",
"571 24 OFFCURVE",
"583 -65 OFFCURVE",
"626 -104 CURVE SMOOTH",
"641 -117 OFFCURVE",
"660 -125 OFFCURVE",
"679 -125 CURVE SMOOTH",
"695 -125 OFFCURVE",
"710 -120 OFFCURVE",
"725 -108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 94 OFFCURVE",
"235 119 OFFCURVE",
"235 149 CURVE SMOOTH",
"235 191 OFFCURVE",
"279 243 OFFCURVE",
"373 261 CURVE",
"358 201 OFFCURVE",
"335 141 OFFCURVE",
"299 90 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"695 -125 OFFCURVE",
"710 -120 OFFCURVE",
"725 -108 CURVE SMOOTH",
"730 -105 OFFCURVE",
"735 -99 OFFCURVE",
"739 -92 CURVE",
"744 -87 OFFCURVE",
"742 -81 OFFCURVE",
"738 -81 CURVE SMOOTH",
"736 -81 OFFCURVE",
"734 -82 OFFCURVE",
"731 -85 CURVE SMOOTH",
"727 -90 OFFCURVE",
"722 -94 OFFCURVE",
"717 -98 CURVE SMOOTH",
"705 -106 OFFCURVE",
"694 -109 OFFCURVE",
"683 -109 CURVE SMOOTH",
"667 -109 OFFCURVE",
"653 -102 OFFCURVE",
"643 -92 CURVE SMOOTH",
"617 -66 OFFCURVE",
"607 -15 OFFCURVE",
"607 49 CURVE SMOOTH",
"607 60 OFFCURVE",
"607 73 OFFCURVE",
"608 85 CURVE SMOOTH",
"609 125 OFFCURVE",
"614 167 OFFCURVE",
"621 212 CURVE SMOOTH",
"635 301 OFFCURVE",
"653 386 OFFCURVE",
"669 454 CURVE SMOOTH",
"688 534 LINE SMOOTH",
"690 544 OFFCURVE",
"671 554 OFFCURVE",
"655 554 CURVE SMOOTH",
"646 554 OFFCURVE",
"638 551 OFFCURVE",
"636 543 CURVE SMOOTH",
"609 434 OFFCURVE",
"591 339 OFFCURVE",
"581 256 CURVE",
"530 279 OFFCURVE",
"477 288 OFFCURVE",
"423 288 CURVE SMOOTH",
"414 288 OFFCURVE",
"405 287 OFFCURVE",
"396 287 CURVE",
"402 317 OFFCURVE",
"404 344 OFFCURVE",
"404 369 CURVE SMOOTH",
"404 440 OFFCURVE",
"384 493 OFFCURVE",
"354 528 CURVE SMOOTH",
"332 551 OFFCURVE",
"308 567 OFFCURVE",
"279 576 CURVE SMOOTH",
"262 581 OFFCURVE",
"245 583 OFFCURVE",
"228 583 CURVE SMOOTH",
"189 583 OFFCURVE",
"150 570 OFFCURVE",
"117 543 CURVE SMOOTH",
"94 524 OFFCURVE",
"77 498 OFFCURVE",
"67 467 CURVE SMOOTH",
"61 449 OFFCURVE",
"58 430 OFFCURVE",
"58 412 CURVE SMOOTH",
"58 339 OFFCURVE",
"103 272 OFFCURVE",
"174 272 CURVE SMOOTH",
"213 272 OFFCURVE",
"240 288 OFFCURVE",
"252 319 CURVE SMOOTH",
"254 324 OFFCURVE",
"251 327 OFFCURVE",
"248 327 CURVE SMOOTH",
"246 327 OFFCURVE",
"243 326 OFFCURVE",
"242 322 CURVE SMOOTH",
"235 299 OFFCURVE",
"209 284 OFFCURVE",
"181 284 CURVE SMOOTH",
"118 284 OFFCURVE",
"81 344 OFFCURVE",
"81 405 CURVE SMOOTH",
"81 428 OFFCURVE",
"87 452 OFFCURVE",
"98 472 CURVE SMOOTH",
"128 525 OFFCURVE",
"175 548 OFFCURVE",
"224 548 CURVE SMOOTH",
"245 548 OFFCURVE",
"267 542 OFFCURVE",
"287 532 CURVE SMOOTH",
"331 509 OFFCURVE",
"365 464 OFFCURVE",
"379 399 CURVE SMOOTH",
"382 383 OFFCURVE",
"383 366 OFFCURVE",
"383 348 CURVE SMOOTH",
"383 329 OFFCURVE",
"382 308 OFFCURVE",
"378 286 CURVE",
"328 281 OFFCURVE",
"289 269 OFFCURVE",
"260 252 CURVE SMOOTH",
"227 231 OFFCURVE",
"205 194 OFFCURVE",
"205 159 CURVE SMOOTH",
"205 138 OFFCURVE",
"213 118 OFFCURVE",
"230 101 CURVE SMOOTH",
"243 88 OFFCURVE",
"262 80 OFFCURVE",
"289 75 CURVE",
"248 23 OFFCURVE",
"193 -26 OFFCURVE",
"126 -26 CURVE SMOOTH",
"85 -26 OFFCURVE",
"33 6 OFFCURVE",
"33 47 CURVE SMOOTH",
"33 76 OFFCURVE",
"52 94 OFFCURVE",
"69 94 CURVE SMOOTH",
"80 94 OFFCURVE",
"89 87 OFFCURVE",
"92 71 CURVE",
"94 66 OFFCURVE",
"97 63 OFFCURVE",
"99 63 CURVE SMOOTH",
"101 63 OFFCURVE",
"104 65 OFFCURVE",
"103 68 CURVE SMOOTH",
"102 72 LINE SMOOTH",
"96 95 OFFCURVE",
"84 105 OFFCURVE",
"68 105 CURVE SMOOTH",
"42 105 OFFCURVE",
"12 79 OFFCURVE",
"12 39 CURVE SMOOTH",
"12 -14 OFFCURVE",
"68 -43 OFFCURVE",
"119 -43 CURVE SMOOTH",
"198 -43 OFFCURVE",
"261 11 OFFCURVE",
"308 75 CURVE",
"340 76 OFFCURVE",
"361 91 OFFCURVE",
"369 106 CURVE",
"372 109 OFFCURVE",
"370 117 OFFCURVE",
"363 110 CURVE SMOOTH",
"352 101 OFFCURVE",
"341 95 OFFCURVE",
"318 90 CURVE",
"353 145 OFFCURVE",
"375 201 OFFCURVE",
"390 264 CURVE",
"410 267 OFFCURVE",
"430 268 OFFCURVE",
"450 268 CURVE SMOOTH",
"493 268 OFFCURVE",
"537 261 OFFCURVE",
"580 247 CURVE",
"576 212 OFFCURVE",
"571 161 OFFCURVE",
"571 109 CURVE SMOOTH",
"571 24 OFFCURVE",
"583 -65 OFFCURVE",
"626 -104 CURVE SMOOTH",
"641 -117 OFFCURVE",
"660 -125 OFFCURVE",
"679 -125 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 94 OFFCURVE",
"235 119 OFFCURVE",
"235 149 CURVE SMOOTH",
"235 191 OFFCURVE",
"279 243 OFFCURVE",
"373 261 CURVE",
"358 201 OFFCURVE",
"335 141 OFFCURVE",
"299 90 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01248 3 35 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 48 165 48 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 678;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = H;
},
{
name = emdash;
transform = "{0.8621, 0, 0, 1, 215, 269}";
}
);
};
components = (
{
name = H;
},
{
name = emdash;
transform = "{0.8621, 0, 0, 1, 215, 269}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 678;
}
);
unicode = 0126;
},
{
glyphname = Hcircumflex;
lastChange = "2021-10-08 06:21:11 +0000";
layers = (
{
background = {
components = (
{
name = H;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 427, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 678;
}
);
unicode = 0124;
},
{
glyphname = I;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{162, -78}";
},
{
name = ogonek;
position = "{200, -71}";
},
{
name = top;
position = "{304, 475}";
},
{
name = topleft;
position = "{20, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"176 -84 OFFCURVE",
"198 -78 OFFCURVE",
"220 -65 CURVE SMOOTH",
"294 -23 OFFCURVE",
"331 58 OFFCURVE",
"331 179 CURVE SMOOTH",
"331 206 OFFCURVE",
"329 244 OFFCURVE",
"325 294 CURVE SMOOTH",
"320 345 OFFCURVE",
"318 379 OFFCURVE",
"318 399 CURVE SMOOTH",
"318 425 OFFCURVE",
"320 446 OFFCURVE",
"325 462 CURVE SMOOTH",
"328 474 OFFCURVE",
"307 474 OFFCURVE",
"303 474 CURVE SMOOTH",
"294 475 OFFCURVE",
"285 476 OFFCURVE",
"275 476 CURVE SMOOTH",
"258 476 OFFCURVE",
"238 474 OFFCURVE",
"217 471 CURVE SMOOTH",
"190 466 OFFCURVE",
"170 455 OFFCURVE",
"156 439 CURVE SMOOTH",
"139 420 OFFCURVE",
"131 398 OFFCURVE",
"131 372 CURVE SMOOTH",
"131 348 OFFCURVE",
"138 328 OFFCURVE",
"153 313 CURVE SMOOTH",
"167 298 OFFCURVE",
"184 290 OFFCURVE",
"204 290 CURVE SMOOTH",
"226 290 OFFCURVE",
"242 299 OFFCURVE",
"252 317 CURVE",
"252 318 LINE SMOOTH",
"252 322 OFFCURVE",
"252 324 OFFCURVE",
"251 325 CURVE SMOOTH",
"250 326 OFFCURVE",
"250 326 OFFCURVE",
"249 326 CURVE",
"247 325 LINE",
"236 310 OFFCURVE",
"222 302 OFFCURVE",
"205 302 CURVE SMOOTH",
"191 302 OFFCURVE",
"179 308 OFFCURVE",
"169 319 CURVE SMOOTH",
"159 332 OFFCURVE",
"154 348 OFFCURVE",
"154 368 CURVE SMOOTH",
"154 378 LINE SMOOTH",
"156 396 OFFCURVE",
"163 412 OFFCURVE",
"174 426 CURVE SMOOTH",
"186 441 OFFCURVE",
"199 451 OFFCURVE",
"213 457 CURVE SMOOTH",
"228 464 OFFCURVE",
"251 467 OFFCURVE",
"281 467 CURVE",
"274 448 OFFCURVE",
"273 430 OFFCURVE",
"273 409 CURVE SMOOTH",
"273 384 OFFCURVE",
"278 339 OFFCURVE",
"288 275 CURVE SMOOTH",
"298 211 OFFCURVE",
"303 163 OFFCURVE",
"303 131 CURVE SMOOTH",
"303 44 OFFCURVE",
"273 -16 OFFCURVE",
"214 -49 CURVE SMOOTH",
"200 -57 OFFCURVE",
"184 -61 OFFCURVE",
"167 -61 CURVE SMOOTH",
"128 -61 OFFCURVE",
"97 -47 OFFCURVE",
"73 -18 CURVE SMOOTH",
"53 5 OFFCURVE",
"43 31 OFFCURVE",
"43 62 CURVE SMOOTH",
"43 103 OFFCURVE",
"62 135 OFFCURVE",
"100 158 CURVE SMOOTH",
"106 161 OFFCURVE",
"109 164 OFFCURVE",
"109 167 CURVE SMOOTH",
"109 168 OFFCURVE",
"107 169 OFFCURVE",
"104 169 CURVE SMOOTH",
"100 169 OFFCURVE",
"97 168 OFFCURVE",
"95 167 CURVE SMOOTH",
"49 141 OFFCURVE",
"26 101 OFFCURVE",
"26 47 CURVE SMOOTH",
"26 20 OFFCURVE",
"33 -4 OFFCURVE",
"47 -26 CURVE SMOOTH",
"72 -65 OFFCURVE",
"107 -84 OFFCURVE",
"153 -84 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"176 -84 OFFCURVE",
"198 -78 OFFCURVE",
"220 -65 CURVE SMOOTH",
"294 -23 OFFCURVE",
"331 58 OFFCURVE",
"331 179 CURVE SMOOTH",
"331 206 OFFCURVE",
"329 244 OFFCURVE",
"325 294 CURVE SMOOTH",
"320 345 OFFCURVE",
"318 379 OFFCURVE",
"318 399 CURVE SMOOTH",
"318 425 OFFCURVE",
"320 446 OFFCURVE",
"325 462 CURVE SMOOTH",
"328 474 OFFCURVE",
"307 474 OFFCURVE",
"303 474 CURVE SMOOTH",
"294 475 OFFCURVE",
"285 476 OFFCURVE",
"275 476 CURVE SMOOTH",
"258 476 OFFCURVE",
"238 474 OFFCURVE",
"217 471 CURVE SMOOTH",
"190 466 OFFCURVE",
"170 455 OFFCURVE",
"156 439 CURVE SMOOTH",
"139 420 OFFCURVE",
"131 398 OFFCURVE",
"131 372 CURVE SMOOTH",
"131 348 OFFCURVE",
"138 328 OFFCURVE",
"153 313 CURVE SMOOTH",
"167 298 OFFCURVE",
"184 290 OFFCURVE",
"204 290 CURVE SMOOTH",
"226 290 OFFCURVE",
"242 299 OFFCURVE",
"252 317 CURVE",
"252 318 LINE SMOOTH",
"252 322 OFFCURVE",
"252 324 OFFCURVE",
"251 325 CURVE SMOOTH",
"250 326 OFFCURVE",
"250 326 OFFCURVE",
"249 326 CURVE",
"247 325 LINE",
"236 310 OFFCURVE",
"222 302 OFFCURVE",
"205 302 CURVE SMOOTH",
"191 302 OFFCURVE",
"179 308 OFFCURVE",
"169 319 CURVE SMOOTH",
"159 332 OFFCURVE",
"154 348 OFFCURVE",
"154 368 CURVE SMOOTH",
"154 378 LINE SMOOTH",
"154 396 OFFCURVE",
"163 412 OFFCURVE",
"174 426 CURVE SMOOTH",
"186 441 OFFCURVE",
"199 451 OFFCURVE",
"213 457 CURVE SMOOTH",
"228 464 OFFCURVE",
"251 467 OFFCURVE",
"281 467 CURVE",
"274 448 OFFCURVE",
"273 430 OFFCURVE",
"273 409 CURVE SMOOTH",
"273 384 OFFCURVE",
"278 339 OFFCURVE",
"288 275 CURVE SMOOTH",
"298 211 OFFCURVE",
"303 163 OFFCURVE",
"303 131 CURVE SMOOTH",
"303 44 OFFCURVE",
"273 -16 OFFCURVE",
"214 -49 CURVE SMOOTH",
"200 -57 OFFCURVE",
"184 -61 OFFCURVE",
"167 -61 CURVE SMOOTH",
"128 -61 OFFCURVE",
"97 -47 OFFCURVE",
"73 -18 CURVE SMOOTH",
"53 5 OFFCURVE",
"43 31 OFFCURVE",
"43 62 CURVE SMOOTH",
"43 103 OFFCURVE",
"62 135 OFFCURVE",
"100 158 CURVE SMOOTH",
"106 161 OFFCURVE",
"109 164 OFFCURVE",
"109 167 CURVE SMOOTH",
"109 168 OFFCURVE",
"107 169 OFFCURVE",
"104 169 CURVE SMOOTH",
"100 169 OFFCURVE",
"97 168 OFFCURVE",
"95 167 CURVE SMOOTH",
"49 141 OFFCURVE",
"26 101 OFFCURVE",
"26 47 CURVE SMOOTH",
"26 20 OFFCURVE",
"33 -4 OFFCURVE",
"47 -26 CURVE SMOOTH",
"72 -65 OFFCURVE",
"107 -84 OFFCURVE",
"153 -84 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 3 8 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 18 165 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 26 170 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01233 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 56 165 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01252 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 1 54 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = I;
unicode = 0049;
},
{
glyphname = Iacute;
lastChange = "2021-10-08 06:34:42 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = acutecomb;
}
);
};
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 272, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 3 8 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 18 165 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 26 170 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01233 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 56 165 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01252 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 1 54 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
lastChange = "2021-10-08 06:34:42 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = brevecomb;
}
);
};
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 214, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 012C;
},
{
glyphname = Icaron;
lastChange = "2021-10-08 06:34:42 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = caroncomb;
}
);
};
components = (
{
name = I;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 222, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 01CF;
},
{
glyphname = Icircumflex;
lastChange = "2021-10-08 06:34:42 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 220, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 3 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 18 165 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 64 170 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 56 165 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01252 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 1 54 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idblgrave;
lastChange = "2021-10-08 06:34:42 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 193, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 0208;
},
{
glyphname = Idieresis;
lastChange = "2021-10-08 06:34:32 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 240, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 4 84 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 3 8 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 18 165 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 26 170 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01233 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 56 165 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01252 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 90 170 90 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 2 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 1 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
lastChange = "2021-10-08 06:34:35 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 283, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 0130;
},
{
glyphname = Idotbelow;
lastChange = "2021-10-08 06:21:34 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 141, -78}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 1ECA;
},
{
glyphname = Igrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = gravecomb;
}
);
};
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 216, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 3 8 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 18 165 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 26 170 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01233 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 56 165 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01252 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 1 54 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 353;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Ihookabove;
lastChange = "2021-10-08 06:34:36 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 263, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
lastChange = "2021-10-08 06:34:36 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 219, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 020A;
},
{
glyphname = Imacron;
lastChange = "2021-10-08 06:34:37 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = macroncomb;
}
);
};
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 213, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2021-10-08 06:21:34 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = I;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 121, -76}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2021-10-08 06:34:38 +0000";
layers = (
{
background = {
components = (
{
name = I;
},
{
name = tildecomb;
}
);
};
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 217, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 353;
}
);
unicode = 0128;
},
{
glyphname = J;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{182, 0}";
},
{
name = top;
position = "{265, 502}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"169 -133 OFFCURVE",
"195 -125 OFFCURVE",
"220 -110 CURVE SMOOTH",
"291 -65 OFFCURVE",
"326 15 OFFCURVE",
"326 131 CURVE SMOOTH",
"326 172 OFFCURVE",
"321 228 OFFCURVE",
"311 300 CURVE SMOOTH",
"301 373 OFFCURVE",
"296 421 OFFCURVE",
"296 446 CURVE SMOOTH",
"296 460 OFFCURVE",
"297 474 OFFCURVE",
"299 488 CURVE",
"341 487 OFFCURVE",
"371 480 OFFCURVE",
"390 468 CURVE SMOOTH",
"391 467 OFFCURVE",
"393 466 OFFCURVE",
"396 466 CURVE SMOOTH",
"399 466 OFFCURVE",
"400 467 OFFCURVE",
"400 468 CURVE SMOOTH",
"400 469 OFFCURVE",
"399 470 OFFCURVE",
"397 472 CURVE",
"365 492 OFFCURVE",
"321 502 OFFCURVE",
"265 502 CURVE SMOOTH",
"216 502 OFFCURVE",
"174 493 OFFCURVE",
"140 475 CURVE SMOOTH",
"100 453 OFFCURVE",
"81 422 OFFCURVE",
"81 382 CURVE SMOOTH",
"81 357 OFFCURVE",
"90 337 OFFCURVE",
"107 323 CURVE SMOOTH",
"123 310 OFFCURVE",
"143 304 OFFCURVE",
"166 304 CURVE SMOOTH",
"197 304 OFFCURVE",
"218 312 OFFCURVE",
"227 329 CURVE",
"228 330 OFFCURVE",
"228 332 OFFCURVE",
"227 335 CURVE",
"227 338 OFFCURVE",
"227 339 OFFCURVE",
"226 339 CURVE SMOOTH",
"223 338 LINE",
"209 324 OFFCURVE",
"191 317 OFFCURVE",
"169 317 CURVE SMOOTH",
"152 317 OFFCURVE",
"138 322 OFFCURVE",
"127 333 CURVE SMOOTH",
"115 344 OFFCURVE",
"109 360 OFFCURVE",
"109 381 CURVE SMOOTH",
"109 409 OFFCURVE",
"123 433 OFFCURVE",
"154 452 CURVE SMOOTH",
"179 468 OFFCURVE",
"210 478 OFFCURVE",
"253 485 CURVE",
"251 471 OFFCURVE",
"250 459 OFFCURVE",
"250 448 CURVE SMOOTH",
"250 420 OFFCURVE",
"258 365 OFFCURVE",
"275 282 CURVE SMOOTH",
"292 201 OFFCURVE",
"300 138 OFFCURVE",
"300 94 CURVE SMOOTH",
"300 5 OFFCURVE",
"271 -57 OFFCURVE",
"212 -93 CURVE SMOOTH",
"195 -102 OFFCURVE",
"177 -107 OFFCURVE",
"157 -107 CURVE SMOOTH",
"117 -107 OFFCURVE",
"84 -93 OFFCURVE",
"58 -64 CURVE SMOOTH",
"34 -39 OFFCURVE",
"22 -10 OFFCURVE",
"22 25 CURVE SMOOTH",
"22 68 OFFCURVE",
"42 102 OFFCURVE",
"81 127 CURVE SMOOTH",
"93 135 OFFCURVE",
"107 139 OFFCURVE",
"122 139 CURVE SMOOTH",
"137 139 OFFCURVE",
"150 135 OFFCURVE",
"162 127 CURVE SMOOTH",
"173 119 OFFCURVE",
"181 108 OFFCURVE",
"184 94 CURVE SMOOTH",
"185 88 OFFCURVE",
"187 85 OFFCURVE",
"192 85 CURVE SMOOTH",
"193 85 OFFCURVE",
"194 86 OFFCURVE",
"194 88 CURVE SMOOTH",
"194 90 LINE",
"190 107 OFFCURVE",
"181 122 OFFCURVE",
"166 134 CURVE SMOOTH",
"151 145 OFFCURVE",
"135 150 OFFCURVE",
"116 150 CURVE SMOOTH",
"101 150 OFFCURVE",
"87 146 OFFCURVE",
"74 138 CURVE SMOOTH",
"27 109 OFFCURVE",
"4 66 OFFCURVE",
"4 10 CURVE SMOOTH",
"4 -20 OFFCURVE",
"12 -48 OFFCURVE",
"29 -74 CURVE SMOOTH",
"55 -113 OFFCURVE",
"93 -133 OFFCURVE",
"142 -133 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"169 -133 OFFCURVE",
"195 -125 OFFCURVE",
"220 -110 CURVE SMOOTH",
"291 -65 OFFCURVE",
"326 15 OFFCURVE",
"326 131 CURVE SMOOTH",
"326 172 OFFCURVE",
"321 228 OFFCURVE",
"311 300 CURVE SMOOTH",
"301 373 OFFCURVE",
"296 421 OFFCURVE",
"296 446 CURVE SMOOTH",
"296 460 OFFCURVE",
"297 474 OFFCURVE",
"299 488 CURVE",
"341 487 OFFCURVE",
"371 480 OFFCURVE",
"390 468 CURVE SMOOTH",
"391 467 OFFCURVE",
"393 466 OFFCURVE",
"396 466 CURVE SMOOTH",
"399 466 OFFCURVE",
"400 467 OFFCURVE",
"400 468 CURVE SMOOTH",
"400 469 OFFCURVE",
"399 470 OFFCURVE",
"397 472 CURVE",
"365 492 OFFCURVE",
"321 502 OFFCURVE",
"265 502 CURVE SMOOTH",
"216 502 OFFCURVE",
"174 493 OFFCURVE",
"140 475 CURVE SMOOTH",
"100 453 OFFCURVE",
"81 422 OFFCURVE",
"81 382 CURVE SMOOTH",
"81 357 OFFCURVE",
"90 337 OFFCURVE",
"107 323 CURVE SMOOTH",
"123 310 OFFCURVE",
"143 304 OFFCURVE",
"166 304 CURVE SMOOTH",
"197 304 OFFCURVE",
"218 312 OFFCURVE",
"227 329 CURVE",
"228 330 OFFCURVE",
"228 332 OFFCURVE",
"227 335 CURVE",
"227 338 OFFCURVE",
"227 339 OFFCURVE",
"226 339 CURVE SMOOTH",
"223 338 LINE",
"209 324 OFFCURVE",
"191 317 OFFCURVE",
"169 317 CURVE SMOOTH",
"152 317 OFFCURVE",
"138 322 OFFCURVE",
"127 333 CURVE SMOOTH",
"115 344 OFFCURVE",
"109 360 OFFCURVE",
"109 381 CURVE SMOOTH",
"109 409 OFFCURVE",
"123 433 OFFCURVE",
"154 452 CURVE SMOOTH",
"179 468 OFFCURVE",
"210 478 OFFCURVE",
"253 485 CURVE",
"251 471 OFFCURVE",
"250 459 OFFCURVE",
"250 448 CURVE SMOOTH",
"250 420 OFFCURVE",
"258 365 OFFCURVE",
"275 282 CURVE SMOOTH",
"292 201 OFFCURVE",
"300 138 OFFCURVE",
"300 94 CURVE SMOOTH",
"300 5 OFFCURVE",
"271 -57 OFFCURVE",
"212 -93 CURVE SMOOTH",
"195 -102 OFFCURVE",
"177 -107 OFFCURVE",
"157 -107 CURVE SMOOTH",
"117 -107 OFFCURVE",
"84 -93 OFFCURVE",
"58 -64 CURVE SMOOTH",
"34 -39 OFFCURVE",
"22 -10 OFFCURVE",
"22 25 CURVE SMOOTH",
"22 68 OFFCURVE",
"42 102 OFFCURVE",
"81 127 CURVE SMOOTH",
"93 135 OFFCURVE",
"107 139 OFFCURVE",
"122 139 CURVE SMOOTH",
"137 139 OFFCURVE",
"150 135 OFFCURVE",
"162 127 CURVE SMOOTH",
"173 119 OFFCURVE",
"181 108 OFFCURVE",
"184 94 CURVE SMOOTH",
"185 88 OFFCURVE",
"187 85 OFFCURVE",
"192 85 CURVE SMOOTH",
"193 85 OFFCURVE",
"194 86 OFFCURVE",
"194 88 CURVE SMOOTH",
"194 90 LINE",
"190 107 OFFCURVE",
"181 122 OFFCURVE",
"166 134 CURVE SMOOTH",
"151 145 OFFCURVE",
"135 150 OFFCURVE",
"116 150 CURVE SMOOTH",
"101 150 OFFCURVE",
"87 146 OFFCURVE",
"74 138 CURVE SMOOTH",
"27 109 OFFCURVE",
"4 66 OFFCURVE",
"4 10 CURVE SMOOTH",
"4 -20 OFFCURVE",
"12 -48 OFFCURVE",
"29 -74 CURVE SMOOTH",
"55 -113 OFFCURVE",
"93 -133 OFFCURVE",
"142 -133 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01261 3 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 3 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 3 20 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 49 170 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 41 165 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01254 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 61 165 61 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01273 20 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01245 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1 37 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 363;
}
);
note = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
lastChange = "2021-10-08 06:21:41 +0000";
layers = (
{
background = {
components = (
{
name = J;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 181, 242}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 363;
}
);
unicode = 0134;
},
{
glyphname = K;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{397, -60}";
},
{
name = top;
position = "{445, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"741 -148 OFFCURVE",
"759 -141 OFFCURVE",
"778 -128 CURVE SMOOTH",
"798 -113 OFFCURVE",
"809 -96 OFFCURVE",
"811 -79 CURVE SMOOTH",
"811 -77 LINE SMOOTH",
"811 -72 OFFCURVE",
"809 -70 OFFCURVE",
"804 -70 CURVE SMOOTH",
"799 -70 OFFCURVE",
"797 -72 OFFCURVE",
"796 -76 CURVE SMOOTH",
"794 -91 OFFCURVE",
"785 -104 OFFCURVE",
"769 -116 CURVE SMOOTH",
"754 -127 OFFCURVE",
"739 -133 OFFCURVE",
"724 -133 CURVE SMOOTH",
"699 -133 OFFCURVE",
"670 -115 OFFCURVE",
"637 -78 CURVE SMOOTH",
"613 -51 OFFCURVE",
"586 -15 OFFCURVE",
"557 34 CURVE SMOOTH",
"547 49 OFFCURVE",
"537 65 OFFCURVE",
"528 81 CURVE SMOOTH",
"500 128 LINE SMOOTH",
"477 165 OFFCURVE",
"457 192 OFFCURVE",
"440 209 CURVE SMOOTH",
"419 230 OFFCURVE",
"397 242 OFFCURVE",
"368 249 CURVE",
"397 270 OFFCURVE",
"423 300 OFFCURVE",
"454 341 CURVE SMOOTH",
"502 407 LINE",
"525 437 LINE SMOOTH",
"554 470 OFFCURVE",
"582 487 OFFCURVE",
"609 487 CURVE SMOOTH",
"631 487 OFFCURVE",
"649 480 OFFCURVE",
"661 466 CURVE SMOOTH",
"673 453 OFFCURVE",
"679 436 OFFCURVE",
"679 415 CURVE SMOOTH",
"679 392 OFFCURVE",
"672 373 OFFCURVE",
"657 356 CURVE SMOOTH",
"641 338 OFFCURVE",
"619 330 OFFCURVE",
"592 331 CURVE SMOOTH",
"589 331 OFFCURVE",
"587 331 OFFCURVE",
"587 330 CURVE",
"586 328 LINE",
"586 325 OFFCURVE",
"589 323 OFFCURVE",
"594 323 CURVE SMOOTH",
"629 321 OFFCURVE",
"658 331 OFFCURVE",
"679 353 CURVE SMOOTH",
"698 374 OFFCURVE",
"708 398 OFFCURVE",
"708 425 CURVE SMOOTH",
"708 451 OFFCURVE",
"699 473 OFFCURVE",
"682 490 CURVE SMOOTH",
"664 507 OFFCURVE",
"640 516 OFFCURVE",
"610 516 CURVE SMOOTH",
"577 516 OFFCURVE",
"546 501 OFFCURVE",
"516 467 CURVE SMOOTH",
"501 452 OFFCURVE",
"479 418 OFFCURVE",
"446 367 CURVE SMOOTH",
"417 322 OFFCURVE",
"393 291 OFFCURVE",
"366 268 CURVE",
"369 305 OFFCURVE",
"371 339 OFFCURVE",
"371 376 CURVE SMOOTH",
"371 385 OFFCURVE",
"371 395 OFFCURVE",
"370 405 CURVE SMOOTH",
"370 442 LINE SMOOTH",
"369 455 OFFCURVE",
"369 467 OFFCURVE",
"369 476 CURVE SMOOTH",
"369 522 LINE",
"370 525 OFFCURVE",
"369 528 OFFCURVE",
"366 531 CURVE",
"362 533 OFFCURVE",
"356 534 OFFCURVE",
"347 534 CURVE SMOOTH",
"331 534 OFFCURVE",
"325 530 OFFCURVE",
"324 523 CURVE SMOOTH",
"323 511 OFFCURVE",
"322 497 OFFCURVE",
"322 480 CURVE SMOOTH",
"322 463 OFFCURVE",
"323 431 OFFCURVE",
"326 384 CURVE SMOOTH",
"329 337 OFFCURVE",
"331 300 OFFCURVE",
"331 273 CURVE SMOOTH",
"331 261 LINE",
"330 247 LINE",
"310 244 OFFCURVE",
"291 238 OFFCURVE",
"270 227 CURVE",
"267 226 OFFCURVE",
"265 224 OFFCURVE",
"265 220 CURVE SMOOTH",
"265 215 OFFCURVE",
"267 213 OFFCURVE",
"272 213 CURVE SMOOTH",
"275 213 LINE",
"292 220 OFFCURVE",
"310 223 OFFCURVE",
"329 221 CURVE",
"321 100 OFFCURVE",
"280 16 OFFCURVE",
"206 -29 CURVE SMOOTH",
"190 -39 OFFCURVE",
"172 -44 OFFCURVE",
"151 -44 CURVE SMOOTH",
"112 -44 OFFCURVE",
"78 -30 OFFCURVE",
"51 -1 CURVE SMOOTH",
"28 26 OFFCURVE",
"16 56 OFFCURVE",
"16 89 CURVE SMOOTH",
"16 132 OFFCURVE",
"36 166 OFFCURVE",
"75 190 CURVE SMOOTH",
"87 198 OFFCURVE",
"100 202 OFFCURVE",
"115 202 CURVE SMOOTH",
"130 202 OFFCURVE",
"144 198 OFFCURVE",
"155 190 CURVE SMOOTH",
"168 181 OFFCURVE",
"175 170 OFFCURVE",
"177 157 CURVE",
"179 152 OFFCURVE",
"182 149 OFFCURVE",
"186 149 CURVE SMOOTH",
"187 149 OFFCURVE",
"188 150 OFFCURVE",
"188 151 CURVE SMOOTH",
"188 152 OFFCURVE",
"188 153 OFFCURVE",
"187 153 CURVE",
"184 170 OFFCURVE",
"175 185 OFFCURVE",
"160 197 CURVE SMOOTH",
"145 208 OFFCURVE",
"129 213 OFFCURVE",
"110 213 CURVE SMOOTH",
"95 213 OFFCURVE",
"81 209 OFFCURVE",
"68 201 CURVE SMOOTH",
"21 172 OFFCURVE",
"-2 130 OFFCURVE",
"-2 74 CURVE SMOOTH",
"-2 41 OFFCURVE",
"6 13 OFFCURVE",
"23 -10 CURVE SMOOTH",
"49 -49 OFFCURVE",
"87 -69 OFFCURVE",
"136 -69 CURVE SMOOTH",
"163 -69 OFFCURVE",
"188 -61 OFFCURVE",
"213 -46 CURVE SMOOTH",
"290 2 OFFCURVE",
"339 86 OFFCURVE",
"360 215 CURVE",
"397 200 OFFCURVE",
"427 173 OFFCURVE",
"450 132 CURVE SMOOTH",
"552 -55 OFFCURVE",
"643 -148 OFFCURVE",
"724 -148 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"741 -148 OFFCURVE",
"759 -141 OFFCURVE",
"778 -128 CURVE SMOOTH",
"798 -113 OFFCURVE",
"811 -96 OFFCURVE",
"811 -79 CURVE SMOOTH",
"811 -77 LINE SMOOTH",
"811 -72 OFFCURVE",
"809 -70 OFFCURVE",
"804 -70 CURVE SMOOTH",
"799 -70 OFFCURVE",
"797 -72 OFFCURVE",
"796 -76 CURVE SMOOTH",
"794 -91 OFFCURVE",
"785 -104 OFFCURVE",
"769 -116 CURVE SMOOTH",
"754 -127 OFFCURVE",
"739 -133 OFFCURVE",
"724 -133 CURVE SMOOTH",
"699 -133 OFFCURVE",
"670 -115 OFFCURVE",
"637 -78 CURVE SMOOTH",
"613 -51 OFFCURVE",
"586 -15 OFFCURVE",
"557 34 CURVE SMOOTH",
"547 49 OFFCURVE",
"537 65 OFFCURVE",
"528 81 CURVE SMOOTH",
"500 128 LINE SMOOTH",
"478 165 OFFCURVE",
"457 192 OFFCURVE",
"440 209 CURVE SMOOTH",
"419 230 OFFCURVE",
"397 242 OFFCURVE",
"368 249 CURVE",
"397 270 OFFCURVE",
"424 299 OFFCURVE",
"454 341 CURVE SMOOTH",
"502 407 LINE",
"525 437 LINE SMOOTH",
"552 472 OFFCURVE",
"582 487 OFFCURVE",
"609 487 CURVE SMOOTH",
"631 487 OFFCURVE",
"649 480 OFFCURVE",
"661 466 CURVE SMOOTH",
"673 453 OFFCURVE",
"679 436 OFFCURVE",
"679 415 CURVE SMOOTH",
"679 392 OFFCURVE",
"672 373 OFFCURVE",
"657 356 CURVE SMOOTH",
"641 338 OFFCURVE",
"619 330 OFFCURVE",
"592 331 CURVE SMOOTH",
"589 331 OFFCURVE",
"587 331 OFFCURVE",
"587 330 CURVE",
"586 328 LINE",
"586 325 OFFCURVE",
"589 323 OFFCURVE",
"594 323 CURVE SMOOTH",
"629 321 OFFCURVE",
"658 331 OFFCURVE",
"679 353 CURVE SMOOTH",
"698 374 OFFCURVE",
"708 398 OFFCURVE",
"708 425 CURVE SMOOTH",
"708 451 OFFCURVE",
"699 473 OFFCURVE",
"682 490 CURVE SMOOTH",
"664 507 OFFCURVE",
"640 516 OFFCURVE",
"610 516 CURVE SMOOTH",
"577 516 OFFCURVE",
"546 501 OFFCURVE",
"516 467 CURVE SMOOTH",
"501 452 OFFCURVE",
"479 418 OFFCURVE",
"446 367 CURVE SMOOTH",
"417 322 OFFCURVE",
"393 291 OFFCURVE",
"366 268 CURVE",
"369 305 OFFCURVE",
"371 339 OFFCURVE",
"371 376 CURVE SMOOTH",
"371 385 OFFCURVE",
"370 395 OFFCURVE",
"370 405 CURVE SMOOTH",
"370 442 LINE SMOOTH",
"370 455 OFFCURVE",
"369 467 OFFCURVE",
"369 476 CURVE SMOOTH",
"369 522 LINE",
"370 525 OFFCURVE",
"369 528 OFFCURVE",
"366 531 CURVE",
"362 533 OFFCURVE",
"356 534 OFFCURVE",
"347 534 CURVE SMOOTH",
"331 534 OFFCURVE",
"325 530 OFFCURVE",
"324 523 CURVE SMOOTH",
"323 511 OFFCURVE",
"322 497 OFFCURVE",
"322 480 CURVE SMOOTH",
"322 463 OFFCURVE",
"323 431 OFFCURVE",
"326 384 CURVE SMOOTH",
"329 337 OFFCURVE",
"331 300 OFFCURVE",
"331 273 CURVE SMOOTH",
"331 261 LINE",
"330 247 LINE",
"310 244 OFFCURVE",
"291 238 OFFCURVE",
"270 227 CURVE",
"267 226 OFFCURVE",
"265 224 OFFCURVE",
"265 220 CURVE SMOOTH",
"265 215 OFFCURVE",
"267 213 OFFCURVE",
"272 213 CURVE SMOOTH",
"275 213 LINE",
"292 220 OFFCURVE",
"310 223 OFFCURVE",
"329 221 CURVE",
"321 100 OFFCURVE",
"280 16 OFFCURVE",
"206 -29 CURVE SMOOTH",
"190 -39 OFFCURVE",
"172 -44 OFFCURVE",
"151 -44 CURVE SMOOTH",
"112 -44 OFFCURVE",
"78 -30 OFFCURVE",
"51 -1 CURVE SMOOTH",
"28 26 OFFCURVE",
"16 56 OFFCURVE",
"16 89 CURVE SMOOTH",
"16 132 OFFCURVE",
"36 166 OFFCURVE",
"75 190 CURVE SMOOTH",
"87 198 OFFCURVE",
"100 202 OFFCURVE",
"115 202 CURVE SMOOTH",
"130 202 OFFCURVE",
"144 198 OFFCURVE",
"155 190 CURVE SMOOTH",
"168 181 OFFCURVE",
"175 170 OFFCURVE",
"177 157 CURVE",
"179 152 OFFCURVE",
"182 149 OFFCURVE",
"186 149 CURVE SMOOTH",
"187 149 OFFCURVE",
"188 150 OFFCURVE",
"188 151 CURVE SMOOTH",
"188 152 OFFCURVE",
"188 153 OFFCURVE",
"187 153 CURVE",
"184 170 OFFCURVE",
"175 185 OFFCURVE",
"160 197 CURVE SMOOTH",
"145 208 OFFCURVE",
"129 213 OFFCURVE",
"110 213 CURVE SMOOTH",
"95 213 OFFCURVE",
"81 209 OFFCURVE",
"68 201 CURVE SMOOTH",
"21 172 OFFCURVE",
"-2 130 OFFCURVE",
"-2 74 CURVE SMOOTH",
"-2 41 OFFCURVE",
"6 13 OFFCURVE",
"23 -10 CURVE SMOOTH",
"49 -49 OFFCURVE",
"87 -69 OFFCURVE",
"136 -69 CURVE SMOOTH",
"163 -69 OFFCURVE",
"188 -61 OFFCURVE",
"213 -46 CURVE SMOOTH",
"290 2 OFFCURVE",
"339 86 OFFCURVE",
"360 215 CURVE",
"397 200 OFFCURVE",
"427 173 OFFCURVE",
"450 132 CURVE SMOOTH",
"552 -55 OFFCURVE",
"643 -148 OFFCURVE",
"724 -148 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012110 3 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 3 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 4 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 39 165 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 82 165 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012106 17 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 110 170 110 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012122 60 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01272 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012136 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 2 13 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012106 1 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 1 35 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01293 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 93 24 93 40 93 56 93 72 93 88 93 104 93 120 93 136 93 152 93 168 93 184 93 200 93 216 93 232 93 248 93 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 93 24 93 40 93 56 93 72 93 88 93 104 93 120 93 136 93 152 93 168 93 184 93 200 93 216 93 232 93 248 93 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 93 24 93 40 93 56 93 72 93 88 93 104 93 120 93 136 93 152 93 168 93 184 93 200 93 216 93 232 93 248 93 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\012114 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 617;
}
);
note = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
lastChange = "2021-10-08 06:21:50 +0000";
layers = (
{
background = {
components = (
{
name = K;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 361, -60}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 617;
}
);
unicode = 0136;
},
{
glyphname = L;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{274, 0}";
},
{
name = center;
position = "{274, 265}";
},
{
name = top;
position = "{380, 530}";
},
{
name = topright;
position = "{478, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"422 -39 LINE SMOOTH",
"451 -39 OFFCURVE",
"474 -33 OFFCURVE",
"493 -20 CURVE SMOOTH",
"517 -4 OFFCURVE",
"527 19 OFFCURVE",
"527 48 CURVE SMOOTH",
"527 73 OFFCURVE",
"516 94 OFFCURVE",
"496 110 CURVE SMOOTH",
"477 125 OFFCURVE",
"454 132 OFFCURVE",
"426 132 CURVE SMOOTH",
"402 132 OFFCURVE",
"382 126 OFFCURVE",
"366 114 CURVE SMOOTH",
"363 111 OFFCURVE",
"361 109 OFFCURVE",
"361 106 CURVE SMOOTH",
"361 104 OFFCURVE",
"362 103 OFFCURVE",
"363 103 CURVE",
"368 105 LINE",
"381 115 OFFCURVE",
"396 120 OFFCURVE",
"413 120 CURVE SMOOTH",
"434 120 OFFCURVE",
"453 113 OFFCURVE",
"469 99 CURVE SMOOTH",
"485 85 OFFCURVE",
"493 68 OFFCURVE",
"493 48 CURVE SMOOTH",
"493 24 OFFCURVE",
"485 6 OFFCURVE",
"469 -7 CURVE SMOOTH",
"454 -18 OFFCURVE",
"437 -24 OFFCURVE",
"417 -24 CURVE SMOOTH",
"412 -24 OFFCURVE",
"407 -23 OFFCURVE",
"400 -22 CURVE SMOOTH",
"353 -15 OFFCURVE",
"310 0 OFFCURVE",
"270 29 CURVE SMOOTH",
"254 40 OFFCURVE",
"238 52 OFFCURVE",
"223 64 CURVE SMOOTH",
"174 103 LINE",
"197 144 OFFCURVE",
"218 191 OFFCURVE",
"239 250 CURVE",
"290 257 OFFCURVE",
"335 282 OFFCURVE",
"375 324 CURVE SMOOTH",
"417 369 OFFCURVE",
"438 416 OFFCURVE",
"438 465 CURVE SMOOTH",
"438 492 OFFCURVE",
"431 509 OFFCURVE",
"420 522 CURVE SMOOTH",
"409 534 OFFCURVE",
"395 540 OFFCURVE",
"378 540 CURVE SMOOTH",
"349 540 OFFCURVE",
"324 526 OFFCURVE",
"302 498 CURVE SMOOTH",
"271 457 OFFCURVE",
"241 386 OFFCURVE",
"214 286 CURVE SMOOTH",
"208 265 LINE",
"141 268 OFFCURVE",
"93 294 OFFCURVE",
"63 345 CURVE",
"62 348 OFFCURVE",
"60 349 OFFCURVE",
"57 349 CURVE SMOOTH",
"52 349 OFFCURVE",
"49 347 OFFCURVE",
"49 342 CURVE SMOOTH",
"49 341 OFFCURVE",
"50 339 OFFCURVE",
"51 338 CURVE",
"82 283 OFFCURVE",
"133 254 OFFCURVE",
"204 250 CURVE",
"189 194 OFFCURVE",
"175 151 OFFCURVE",
"159 114 CURVE",
"128 133 OFFCURVE",
"103 145 OFFCURVE",
"76 150 CURVE SMOOTH",
"69 151 OFFCURVE",
"66 152 OFFCURVE",
"59 152 CURVE SMOOTH",
"36 152 OFFCURVE",
"16 142 OFFCURVE",
"-1 123 CURVE SMOOTH",
"-20 102 OFFCURVE",
"-27 78 OFFCURVE",
"-27 50 CURVE SMOOTH",
"-27 6 OFFCURVE",
"-8 -16 OFFCURVE",
"30 -16 CURVE SMOOTH",
"49 -16 OFFCURVE",
"68 -11 OFFCURVE",
"87 0 CURVE SMOOTH",
"108 11 OFFCURVE",
"123 25 OFFCURVE",
"135 41 CURVE SMOOTH",
"155 71 LINE",
"190 48 OFFCURVE",
"221 28 OFFCURVE",
"254 9 CURVE SMOOTH",
"295 -15 OFFCURVE",
"345 -29 OFFCURVE",
"401 -38 CURVE",
"404 -39 OFFCURVE",
"408 -39 OFFCURVE",
"411 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"5 5 OFFCURVE",
"-12 22 OFFCURVE",
"-12 57 CURVE SMOOTH",
"-12 72 OFFCURVE",
"-5 85 OFFCURVE",
"10 94 CURVE SMOOTH",
"23 101 OFFCURVE",
"38 105 OFFCURVE",
"55 105 CURVE SMOOTH",
"63 105 OFFCURVE",
"70 104 OFFCURVE",
"77 103 CURVE",
"99 97 OFFCURVE",
"120 89 OFFCURVE",
"141 78 CURVE",
"136 68 OFFCURVE",
"131 61 OFFCURVE",
"128 56 CURVE SMOOTH",
"117 40 OFFCURVE",
"104 28 OFFCURVE",
"87 19 CURVE SMOOTH",
"70 10 OFFCURVE",
"54 5 OFFCURVE",
"39 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 387 LINE SMOOTH",
"294 414 OFFCURVE",
"310 442 OFFCURVE",
"333 472 CURVE SMOOTH",
"359 505 OFFCURVE",
"380 522 OFFCURVE",
"396 522 CURVE SMOOTH",
"415 522 OFFCURVE",
"423 500 OFFCURVE",
"423 465 CURVE SMOOTH",
"423 421 OFFCURVE",
"404 379 OFFCURVE",
"365 338 CURVE SMOOTH",
"330 301 OFFCURVE",
"290 278 OFFCURVE",
"244 267 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"422 -39 LINE SMOOTH",
"451 -39 OFFCURVE",
"474 -33 OFFCURVE",
"493 -20 CURVE SMOOTH",
"517 -4 OFFCURVE",
"527 19 OFFCURVE",
"527 48 CURVE SMOOTH",
"527 73 OFFCURVE",
"516 94 OFFCURVE",
"496 110 CURVE SMOOTH",
"477 125 OFFCURVE",
"454 132 OFFCURVE",
"426 132 CURVE SMOOTH",
"402 132 OFFCURVE",
"382 126 OFFCURVE",
"366 114 CURVE SMOOTH",
"363 111 OFFCURVE",
"361 109 OFFCURVE",
"361 106 CURVE SMOOTH",
"361 104 OFFCURVE",
"362 103 OFFCURVE",
"363 103 CURVE",
"368 105 LINE",
"381 115 OFFCURVE",
"396 120 OFFCURVE",
"413 120 CURVE SMOOTH",
"434 120 OFFCURVE",
"453 113 OFFCURVE",
"469 99 CURVE SMOOTH",
"485 85 OFFCURVE",
"493 68 OFFCURVE",
"493 48 CURVE SMOOTH",
"493 24 OFFCURVE",
"485 6 OFFCURVE",
"469 -7 CURVE SMOOTH",
"454 -18 OFFCURVE",
"437 -24 OFFCURVE",
"417 -24 CURVE SMOOTH",
"412 -24 OFFCURVE",
"407 -23 OFFCURVE",
"400 -22 CURVE SMOOTH",
"353 -15 OFFCURVE",
"310 0 OFFCURVE",
"270 29 CURVE SMOOTH",
"254 40 OFFCURVE",
"238 52 OFFCURVE",
"223 64 CURVE SMOOTH",
"174 103 LINE",
"197 144 OFFCURVE",
"218 191 OFFCURVE",
"239 250 CURVE",
"290 257 OFFCURVE",
"335 282 OFFCURVE",
"375 324 CURVE SMOOTH",
"417 369 OFFCURVE",
"438 416 OFFCURVE",
"438 465 CURVE SMOOTH",
"438 492 OFFCURVE",
"431 509 OFFCURVE",
"420 522 CURVE SMOOTH",
"409 534 OFFCURVE",
"395 540 OFFCURVE",
"378 540 CURVE SMOOTH",
"349 540 OFFCURVE",
"324 526 OFFCURVE",
"302 498 CURVE SMOOTH",
"271 457 OFFCURVE",
"243 386 OFFCURVE",
"214 286 CURVE SMOOTH",
"208 265 LINE",
"141 268 OFFCURVE",
"93 294 OFFCURVE",
"63 345 CURVE",
"62 348 OFFCURVE",
"60 349 OFFCURVE",
"57 349 CURVE SMOOTH",
"52 349 OFFCURVE",
"49 347 OFFCURVE",
"49 342 CURVE SMOOTH",
"49 341 OFFCURVE",
"50 339 OFFCURVE",
"51 338 CURVE",
"82 283 OFFCURVE",
"133 254 OFFCURVE",
"204 250 CURVE",
"189 194 OFFCURVE",
"175 151 OFFCURVE",
"159 114 CURVE",
"128 133 OFFCURVE",
"103 145 OFFCURVE",
"76 150 CURVE SMOOTH",
"69 151 OFFCURVE",
"66 152 OFFCURVE",
"59 152 CURVE SMOOTH",
"36 152 OFFCURVE",
"16 142 OFFCURVE",
"-1 123 CURVE SMOOTH",
"-20 102 OFFCURVE",
"-27 78 OFFCURVE",
"-27 50 CURVE SMOOTH",
"-27 6 OFFCURVE",
"-8 -16 OFFCURVE",
"30 -16 CURVE SMOOTH",
"49 -16 OFFCURVE",
"68 -11 OFFCURVE",
"87 0 CURVE SMOOTH",
"108 11 OFFCURVE",
"124 24 OFFCURVE",
"135 41 CURVE SMOOTH",
"155 71 LINE",
"190 48 OFFCURVE",
"221 28 OFFCURVE",
"254 9 CURVE SMOOTH",
"295 -15 OFFCURVE",
"345 -29 OFFCURVE",
"401 -38 CURVE",
"404 -39 OFFCURVE",
"408 -39 OFFCURVE",
"411 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"5 5 OFFCURVE",
"-12 22 OFFCURVE",
"-12 57 CURVE SMOOTH",
"-12 72 OFFCURVE",
"-5 85 OFFCURVE",
"10 94 CURVE SMOOTH",
"23 101 OFFCURVE",
"38 105 OFFCURVE",
"55 105 CURVE SMOOTH",
"63 105 OFFCURVE",
"70 104 OFFCURVE",
"77 103 CURVE",
"99 97 OFFCURVE",
"120 89 OFFCURVE",
"141 78 CURVE",
"136 68 OFFCURVE",
"131 61 OFFCURVE",
"128 56 CURVE SMOOTH",
"117 40 OFFCURVE",
"104 28 OFFCURVE",
"87 19 CURVE SMOOTH",
"70 10 OFFCURVE",
"54 5 OFFCURVE",
"39 5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 387 LINE SMOOTH",
"294 414 OFFCURVE",
"310 442 OFFCURVE",
"333 472 CURVE SMOOTH",
"359 505 OFFCURVE",
"380 522 OFFCURVE",
"396 522 CURVE SMOOTH",
"415 522 OFFCURVE",
"423 500 OFFCURVE",
"423 465 CURVE SMOOTH",
"423 421 OFFCURVE",
"404 379 OFFCURVE",
"365 338 CURVE SMOOTH",
"330 301 OFFCURVE",
"290 278 OFFCURVE",
"244 267 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01291 3 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 3 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 73 170 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 91 170 91 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 91 25 91 41 91 57 91 73 91 89 91 105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 91 25 91 41 91 57 91 73 91 89 91 105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 91 25 91 41 91 57 91 73 91 89 91 105 91 121 91 137 91 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012101 21 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 114 22 114 38 114 54 114 70 114 86 114 102 114 118 114 134 114 150 114 166 114 182 114 198 114 214 114 230 114 246 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 114 22 114 38 114 54 114 70 114 86 114 102 114 118 114 134 114 150 114 166 114 182 114 198 114 214 114 230 114 246 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 114 22 114 38 114 54 114 70 114 86 114 102 114 118 114 134 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 114 165 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01249 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01267 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01269 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 1 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01294 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 94 24 94 40 94 56 94 72 94 88 94 104 94 120 94 136 94 152 94 168 94 184 94 200 94 216 94 232 94 248 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 94 24 94 40 94 56 94 72 94 88 94 104 94 120 94 136 94 152 94 168 94 184 94 200 94 216 94 232 94 248 94 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 94 24 94 40 94 56 94 72 94 88 94 104 94 120 94 136 94 152 94 168 94 184 94 200 94 216 94 232 94 248 94 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012101 67 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012116 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 548;
}
);
note = L;
unicode = 004C;
},
{
glyphname = LJ;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 391, 0}";
}
);
};
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 548, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 911;
}
);
unicode = 01C7;
},
{
glyphname = Lacute;
lastChange = "2021-10-08 06:22:05 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = acutecomb;
}
);
};
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 348, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 548;
}
);
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2021-10-08 06:22:09 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = caroncomb.alt;
}
);
};
components = (
{
name = L;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 475, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 548;
}
);
unicode = 013D;
},
{
glyphname = Lcommaaccent;
lastChange = "2021-10-08 06:22:09 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 238, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 548;
}
);
unicode = 013B;
},
{
glyphname = Ldot;
lastChange = "2021-10-08 06:22:13 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = periodcentered;
}
);
};
components = (
{
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 255, -7}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 548;
}
);
unicode = 013F;
},
{
glyphname = Lj;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 549, 0}";
}
);
};
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 548, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 731;
}
);
unicode = 01C8;
},
{
glyphname = Lslash;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = L;
},
{
name = hyphen;
transform = "{1.19317, 0.2494, -0.38768, 0.76759, 89, 38}";
}
);
};
components = (
{
name = L;
},
{
name = hyphen;
transform = "{1.19317, 0.2494, -0.38768, 0.76759, 89, 38}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 548;
}
);
unicode = 0141;
},
{
glyphname = M;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"110 -85 OFFCURVE",
"120 -79 OFFCURVE",
"130 -67 CURVE SMOOTH",
"170 -17 OFFCURVE",
"202 72 OFFCURVE",
"240 127 CURVE SMOOTH",
"253 147 OFFCURVE",
"276 187 OFFCURVE",
"303 234 CURVE SMOOTH",
"316 257 OFFCURVE",
"331 281 OFFCURVE",
"346 305 CURVE SMOOTH",
"375 353 OFFCURVE",
"406 394 OFFCURVE",
"436 419 CURVE SMOOTH",
"450 430 OFFCURVE",
"463 436 OFFCURVE",
"475 436 CURVE SMOOTH",
"504 436 OFFCURVE",
"514 415 OFFCURVE",
"514 385 CURVE SMOOTH",
"514 342 OFFCURVE",
"495 285 OFFCURVE",
"483 254 CURVE SMOOTH",
"436 141 OFFCURVE",
"425 142 OFFCURVE",
"373 32 CURVE",
"373 31 LINE SMOOTH",
"373 20 OFFCURVE",
"409 4 OFFCURVE",
"412 14 CURVE",
"439 80 OFFCURVE",
"484 157 OFFCURVE",
"545 245 CURVE SMOOTH",
"614 345 OFFCURVE",
"664 395 OFFCURVE",
"696 395 CURVE SMOOTH",
"711 395 OFFCURVE",
"714 386 OFFCURVE",
"714 373 CURVE SMOOTH",
"714 360 OFFCURVE",
"706 322 OFFCURVE",
"691 261 CURVE SMOOTH",
"675 194 OFFCURVE",
"668 150 OFFCURVE",
"668 128 CURVE SMOOTH",
"668 56 OFFCURVE",
"696 19 OFFCURVE",
"752 19 CURVE SMOOTH",
"771 19 OFFCURVE",
"790 23 OFFCURVE",
"811 44 CURVE SMOOTH",
"830 63 OFFCURVE",
"843 89 OFFCURVE",
"852 112 CURVE",
"852 117 LINE",
"853 117 LINE",
"853 119 OFFCURVE",
"852 120 OFFCURVE",
"850 120 CURVE SMOOTH",
"847 120 OFFCURVE",
"844 118 OFFCURVE",
"842 114 CURVE SMOOTH",
"816 63 OFFCURVE",
"789 37 OFFCURVE",
"761 37 CURVE SMOOTH",
"729 37 OFFCURVE",
"715 65 OFFCURVE",
"715 116 CURVE SMOOTH",
"715 158 OFFCURVE",
"720 197 OFFCURVE",
"729 234 CURVE SMOOTH",
"738 270 OFFCURVE",
"747 305 OFFCURVE",
"754 340 CURVE SMOOTH",
"756 349 OFFCURVE",
"759 359 OFFCURVE",
"762 369 CURVE SMOOTH",
"766 381 OFFCURVE",
"767 393 OFFCURVE",
"767 404 CURVE SMOOTH",
"767 431 OFFCURVE",
"754 442 OFFCURVE",
"735 442 CURVE SMOOTH",
"721 442 OFFCURVE",
"704 436 OFFCURVE",
"688 426 CURVE SMOOTH",
"626 390 OFFCURVE",
"546 296 OFFCURVE",
"507 237 CURVE",
"522 274 OFFCURVE",
"533 305 OFFCURVE",
"540 332 CURVE SMOOTH",
"544 352 OFFCURVE",
"548 373 OFFCURVE",
"548 393 CURVE SMOOTH",
"548 431 OFFCURVE",
"534 463 OFFCURVE",
"488 463 CURVE SMOOTH",
"451 463 OFFCURVE",
"415 434 OFFCURVE",
"382 393 CURVE SMOOTH",
"365 372 OFFCURVE",
"348 349 OFFCURVE",
"333 324 CURVE SMOOTH",
"302 272 OFFCURVE",
"275 221 OFFCURVE",
"252 178 CURVE SMOOTH",
"241 157 OFFCURVE",
"231 140 OFFCURVE",
"222 127 CURVE",
"254 228 OFFCURVE",
"267 297 OFFCURVE",
"267 353 CURVE SMOOTH",
"267 447 OFFCURVE",
"230 494 OFFCURVE",
"157 494 CURVE SMOOTH",
"122 494 OFFCURVE",
"90 481 OFFCURVE",
"61 455 CURVE SMOOTH",
"29 427 OFFCURVE",
"13 394 OFFCURVE",
"13 357 CURVE SMOOTH",
"13 302 OFFCURVE",
"43 255 OFFCURVE",
"99 255 CURVE SMOOTH",
"104 255 OFFCURVE",
"107 257 OFFCURVE",
"107 259 CURVE SMOOTH",
"107 262 OFFCURVE",
"104 264 OFFCURVE",
"98 264 CURVE SMOOTH",
"54 267 OFFCURVE",
"35 305 OFFCURVE",
"35 345 CURVE SMOOTH",
"35 378 OFFCURVE",
"45 408 OFFCURVE",
"66 435 CURVE SMOOTH",
"90 464 OFFCURVE",
"121 479 OFFCURVE",
"158 479 CURVE SMOOTH",
"213 479 OFFCURVE",
"240 445 OFFCURVE",
"240 377 CURVE SMOOTH",
"240 316 OFFCURVE",
"219 234 OFFCURVE",
"177 132 CURVE SMOOTH",
"142 47 OFFCURVE",
"112 -9 OFFCURVE",
"89 -40 CURVE SMOOTH",
"82 -49 OFFCURVE",
"78 -57 OFFCURVE",
"78 -64 CURVE SMOOTH",
"78 -78 OFFCURVE",
"85 -85 OFFCURVE",
"99 -85 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"110 -85 OFFCURVE",
"120 -79 OFFCURVE",
"130 -67 CURVE SMOOTH",
"170 -17 OFFCURVE",
"202 72 OFFCURVE",
"240 127 CURVE SMOOTH",
"253 147 OFFCURVE",
"276 187 OFFCURVE",
"303 234 CURVE SMOOTH",
"316 257 OFFCURVE",
"331 281 OFFCURVE",
"346 305 CURVE SMOOTH",
"375 353 OFFCURVE",
"406 394 OFFCURVE",
"436 419 CURVE SMOOTH",
"450 430 OFFCURVE",
"463 436 OFFCURVE",
"475 436 CURVE SMOOTH",
"504 436 OFFCURVE",
"514 415 OFFCURVE",
"514 385 CURVE SMOOTH",
"514 342 OFFCURVE",
"495 285 OFFCURVE",
"483 254 CURVE SMOOTH",
"436 141 OFFCURVE",
"425 142 OFFCURVE",
"373 32 CURVE",
"373 31 LINE SMOOTH",
"373 20 OFFCURVE",
"409 4 OFFCURVE",
"412 14 CURVE",
"439 80 OFFCURVE",
"484 157 OFFCURVE",
"545 245 CURVE SMOOTH",
"614 345 OFFCURVE",
"664 395 OFFCURVE",
"696 395 CURVE SMOOTH",
"711 395 OFFCURVE",
"714 386 OFFCURVE",
"714 373 CURVE SMOOTH",
"714 360 OFFCURVE",
"706 322 OFFCURVE",
"691 261 CURVE SMOOTH",
"675 194 OFFCURVE",
"668 150 OFFCURVE",
"668 128 CURVE SMOOTH",
"668 56 OFFCURVE",
"696 19 OFFCURVE",
"752 19 CURVE SMOOTH",
"771 19 OFFCURVE",
"790 23 OFFCURVE",
"811 44 CURVE SMOOTH",
"830 63 OFFCURVE",
"843 89 OFFCURVE",
"852 112 CURVE",
"852 117 LINE",
"853 117 LINE",
"853 119 OFFCURVE",
"852 120 OFFCURVE",
"850 120 CURVE SMOOTH",
"847 120 OFFCURVE",
"844 118 OFFCURVE",
"842 114 CURVE SMOOTH",
"816 63 OFFCURVE",
"789 37 OFFCURVE",
"761 37 CURVE SMOOTH",
"729 37 OFFCURVE",
"715 65 OFFCURVE",
"715 116 CURVE SMOOTH",
"715 158 OFFCURVE",
"720 197 OFFCURVE",
"729 234 CURVE SMOOTH",
"738 270 OFFCURVE",
"747 305 OFFCURVE",
"754 340 CURVE SMOOTH",
"756 349 OFFCURVE",
"759 359 OFFCURVE",
"762 369 CURVE SMOOTH",
"766 381 OFFCURVE",
"767 393 OFFCURVE",
"767 404 CURVE SMOOTH",
"767 431 OFFCURVE",
"754 442 OFFCURVE",
"735 442 CURVE SMOOTH",
"721 442 OFFCURVE",
"704 436 OFFCURVE",
"688 426 CURVE SMOOTH",
"626 390 OFFCURVE",
"546 296 OFFCURVE",
"507 237 CURVE",
"522 274 OFFCURVE",
"533 305 OFFCURVE",
"540 332 CURVE SMOOTH",
"544 352 OFFCURVE",
"548 373 OFFCURVE",
"548 393 CURVE SMOOTH",
"548 431 OFFCURVE",
"534 463 OFFCURVE",
"488 463 CURVE SMOOTH",
"451 463 OFFCURVE",
"415 434 OFFCURVE",
"382 393 CURVE SMOOTH",
"365 372 OFFCURVE",
"348 349 OFFCURVE",
"333 324 CURVE SMOOTH",
"302 272 OFFCURVE",
"275 221 OFFCURVE",
"252 178 CURVE SMOOTH",
"241 157 OFFCURVE",
"231 140 OFFCURVE",
"222 127 CURVE",
"254 228 OFFCURVE",
"267 297 OFFCURVE",
"267 353 CURVE SMOOTH",
"267 447 OFFCURVE",
"230 494 OFFCURVE",
"157 494 CURVE SMOOTH",
"122 494 OFFCURVE",
"90 481 OFFCURVE",
"61 455 CURVE SMOOTH",
"29 427 OFFCURVE",
"13 394 OFFCURVE",
"13 357 CURVE SMOOTH",
"13 302 OFFCURVE",
"43 255 OFFCURVE",
"99 255 CURVE SMOOTH",
"104 255 OFFCURVE",
"107 257 OFFCURVE",
"107 259 CURVE SMOOTH",
"107 262 OFFCURVE",
"104 264 OFFCURVE",
"98 264 CURVE SMOOTH",
"54 267 OFFCURVE",
"35 305 OFFCURVE",
"35 345 CURVE SMOOTH",
"35 378 OFFCURVE",
"45 408 OFFCURVE",
"66 435 CURVE SMOOTH",
"90 464 OFFCURVE",
"121 479 OFFCURVE",
"158 479 CURVE SMOOTH",
"213 479 OFFCURVE",
"240 445 OFFCURVE",
"240 377 CURVE SMOOTH",
"240 316 OFFCURVE",
"219 234 OFFCURVE",
"177 132 CURVE SMOOTH",
"142 47 OFFCURVE",
"112 -9 OFFCURVE",
"89 -40 CURVE SMOOTH",
"82 -49 OFFCURVE",
"78 -57 OFFCURVE",
"78 -64 CURVE SMOOTH",
"78 -78 OFFCURVE",
"85 -85 OFFCURVE",
"99 -85 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01265 3 76 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 3 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 4 13 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 9 170 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 65 22 65 38 65 54 65 70 65 86 65 102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 230 65 246 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 65 22 65 38 65 54 65 70 65 86 65 102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 230 65 246 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 65 22 65 38 65 54 65 70 65 86 65 102 65 118 65 134 65 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 65 165 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 82 165 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01285 76 115 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01299 76 115 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01280 1 61 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 2 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012118 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1 71 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 806;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{450, 0}";
},
{
name = top;
position = "{554, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"210 -66 OFFCURVE",
"258 -34 OFFCURVE",
"294 13 CURVE SMOOTH",
"312 36 OFFCURVE",
"327 63 OFFCURVE",
"340 93 CURVE SMOOTH",
"364 152 OFFCURVE",
"380 215 OFFCURVE",
"388 274 CURVE SMOOTH",
"392 303 OFFCURVE",
"395 329 OFFCURVE",
"396 351 CURVE",
"433 259 OFFCURVE",
"457 202 OFFCURVE",
"476 165 CURVE SMOOTH",
"517 86 OFFCURVE",
"576 -16 OFFCURVE",
"664 -45 CURVE SMOOTH",
"671 -48 OFFCURVE",
"689 -50 OFFCURVE",
"697 -50 CURVE SMOOTH",
"709 -50 OFFCURVE",
"712 -47 OFFCURVE",
"712 -40 CURVE SMOOTH",
"712 -35 OFFCURVE",
"707 -34 OFFCURVE",
"702 -34 CURVE SMOOTH",
"698 -34 LINE SMOOTH",
"689 -35 OFFCURVE",
"679 -33 OFFCURVE",
"669 -28 CURVE SMOOTH",
"649 -17 OFFCURVE",
"626 6 OFFCURVE",
"601 40 CURVE",
"598 95 OFFCURVE",
"597 133 OFFCURVE",
"597 160 CURVE SMOOTH",
"597 340 OFFCURVE",
"636 454 OFFCURVE",
"713 501 CURVE SMOOTH",
"732 513 OFFCURVE",
"752 519 OFFCURVE",
"774 519 CURVE SMOOTH",
"829 519 OFFCURVE",
"874 483 OFFCURVE",
"874 427 CURVE SMOOTH",
"874 408 OFFCURVE",
"866 389 OFFCURVE",
"851 372 CURVE SMOOTH",
"836 355 OFFCURVE",
"813 343 OFFCURVE",
"790 343 CURVE SMOOTH",
"777 343 OFFCURVE",
"767 346 OFFCURVE",
"758 352 CURVE SMOOTH",
"751 357 OFFCURVE",
"748 347 OFFCURVE",
"755 342 CURVE SMOOTH",
"766 333 OFFCURVE",
"779 329 OFFCURVE",
"794 329 CURVE SMOOTH",
"822 329 OFFCURVE",
"852 345 OFFCURVE",
"869 369 CURVE SMOOTH",
"882 388 OFFCURVE",
"889 409 OFFCURVE",
"889 430 CURVE SMOOTH",
"889 505 OFFCURVE",
"834 546 OFFCURVE",
"764 546 CURVE SMOOTH",
"737 546 OFFCURVE",
"711 538 OFFCURVE",
"686 522 CURVE SMOOTH",
"611 475 OFFCURVE",
"574 368 OFFCURVE",
"574 201 CURVE SMOOTH",
"574 165 OFFCURVE",
"576 124 OFFCURVE",
"581 68 CURVE",
"521 159 OFFCURVE",
"471 262 OFFCURVE",
"416 393 CURVE SMOOTH",
"413 400 OFFCURVE",
"409 407 OFFCURVE",
"406 414 CURVE SMOOTH",
"396 435 LINE",
"396 444 OFFCURVE",
"396 454 OFFCURVE",
"395 465 CURVE SMOOTH",
"395 489 LINE SMOOTH",
"395 499 OFFCURVE",
"385 504 OFFCURVE",
"376 504 CURVE SMOOTH",
"367 504 OFFCURVE",
"358 499 OFFCURVE",
"358 488 CURVE",
"321 526 OFFCURVE",
"283 545 OFFCURVE",
"245 545 CURVE SMOOTH",
"181 545 OFFCURVE",
"129 506 OFFCURVE",
"129 439 CURVE SMOOTH",
"129 404 OFFCURVE",
"149 371 OFFCURVE",
"180 338 CURVE",
"183 337 OFFCURVE",
"185 336 OFFCURVE",
"186 336 CURVE SMOOTH",
"191 336 OFFCURVE",
"193 339 OFFCURVE",
"193 344 CURVE SMOOTH",
"193 346 OFFCURVE",
"192 348 OFFCURVE",
"191 349 CURVE SMOOTH",
"162 378 OFFCURVE",
"148 408 OFFCURVE",
"148 439 CURVE SMOOTH",
"148 486 OFFCURVE",
"183 515 OFFCURVE",
"228 515 CURVE SMOOTH",
"277 515 OFFCURVE",
"322 484 OFFCURVE",
"361 422 CURVE",
"362 413 OFFCURVE",
"362 405 OFFCURVE",
"362 398 CURVE SMOOTH",
"362 376 LINE SMOOTH",
"362 336 OFFCURVE",
"358 276 OFFCURVE",
"347 214 CURVE SMOOTH",
"341 183 OFFCURVE",
"333 152 OFFCURVE",
"322 121 CURVE SMOOTH",
"302 60 OFFCURVE",
"271 9 OFFCURVE",
"227 -21 CURVE SMOOTH",
"205 -37 OFFCURVE",
"179 -44 OFFCURVE",
"150 -44 CURVE SMOOTH",
"111 -44 OFFCURVE",
"78 -30 OFFCURVE",
"51 -2 CURVE SMOOTH",
"28 25 OFFCURVE",
"19 48 OFFCURVE",
"19 83 CURVE SMOOTH",
"19 144 OFFCURVE",
"55 195 OFFCURVE",
"115 195 CURVE SMOOTH",
"130 195 OFFCURVE",
"144 191 OFFCURVE",
"155 184 CURVE SMOOTH",
"161 180 OFFCURVE",
"164 183 OFFCURVE",
"164 188 CURVE SMOOTH",
"164 191 OFFCURVE",
"163 194 OFFCURVE",
"160 196 CURVE SMOOTH",
"145 207 OFFCURVE",
"128 213 OFFCURVE",
"110 213 CURVE SMOOTH",
"46 213 OFFCURVE",
"-2 157 OFFCURVE",
"-2 73 CURVE SMOOTH",
"-2 42 OFFCURVE",
"6 14 OFFCURVE",
"23 -11 CURVE SMOOTH",
"47 -49 OFFCURVE",
"106 -66 OFFCURVE",
"149 -66 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"210 -66 OFFCURVE",
"258 -34 OFFCURVE",
"294 13 CURVE SMOOTH",
"312 36 OFFCURVE",
"327 63 OFFCURVE",
"340 93 CURVE SMOOTH",
"364 152 OFFCURVE",
"380 215 OFFCURVE",
"388 274 CURVE SMOOTH",
"392 303 OFFCURVE",
"395 329 OFFCURVE",
"396 351 CURVE",
"433 259 OFFCURVE",
"457 202 OFFCURVE",
"476 165 CURVE SMOOTH",
"517 86 OFFCURVE",
"576 -16 OFFCURVE",
"664 -45 CURVE SMOOTH",
"671 -48 OFFCURVE",
"689 -50 OFFCURVE",
"697 -50 CURVE SMOOTH",
"709 -50 OFFCURVE",
"712 -47 OFFCURVE",
"712 -40 CURVE SMOOTH",
"712 -35 OFFCURVE",
"707 -34 OFFCURVE",
"702 -34 CURVE SMOOTH",
"698 -34 LINE SMOOTH",
"689 -34 OFFCURVE",
"679 -33 OFFCURVE",
"669 -28 CURVE SMOOTH",
"649 -17 OFFCURVE",
"626 6 OFFCURVE",
"601 40 CURVE",
"598 95 OFFCURVE",
"597 133 OFFCURVE",
"597 160 CURVE SMOOTH",
"597 340 OFFCURVE",
"636 454 OFFCURVE",
"713 501 CURVE SMOOTH",
"732 513 OFFCURVE",
"752 519 OFFCURVE",
"774 519 CURVE SMOOTH",
"829 519 OFFCURVE",
"874 483 OFFCURVE",
"874 427 CURVE SMOOTH",
"874 408 OFFCURVE",
"866 389 OFFCURVE",
"851 372 CURVE SMOOTH",
"836 355 OFFCURVE",
"813 343 OFFCURVE",
"790 343 CURVE SMOOTH",
"777 343 OFFCURVE",
"767 346 OFFCURVE",
"758 352 CURVE SMOOTH",
"751 357 OFFCURVE",
"748 347 OFFCURVE",
"755 342 CURVE SMOOTH",
"766 333 OFFCURVE",
"779 329 OFFCURVE",
"794 329 CURVE SMOOTH",
"822 329 OFFCURVE",
"852 345 OFFCURVE",
"869 369 CURVE SMOOTH",
"882 388 OFFCURVE",
"889 409 OFFCURVE",
"889 430 CURVE SMOOTH",
"889 505 OFFCURVE",
"834 546 OFFCURVE",
"764 546 CURVE SMOOTH",
"737 546 OFFCURVE",
"711 538 OFFCURVE",
"686 522 CURVE SMOOTH",
"611 475 OFFCURVE",
"574 368 OFFCURVE",
"574 201 CURVE SMOOTH",
"574 165 OFFCURVE",
"576 124 OFFCURVE",
"581 68 CURVE",
"521 159 OFFCURVE",
"471 262 OFFCURVE",
"416 393 CURVE SMOOTH",
"413 400 OFFCURVE",
"409 407 OFFCURVE",
"406 414 CURVE SMOOTH",
"396 435 LINE",
"396 444 OFFCURVE",
"395 454 OFFCURVE",
"395 465 CURVE SMOOTH",
"395 489 LINE SMOOTH",
"395 499 OFFCURVE",
"385 504 OFFCURVE",
"376 504 CURVE SMOOTH",
"367 504 OFFCURVE",
"358 499 OFFCURVE",
"358 488 CURVE",
"321 526 OFFCURVE",
"283 545 OFFCURVE",
"245 545 CURVE SMOOTH",
"181 545 OFFCURVE",
"129 506 OFFCURVE",
"129 439 CURVE SMOOTH",
"129 404 OFFCURVE",
"149 371 OFFCURVE",
"180 338 CURVE",
"183 337 OFFCURVE",
"185 336 OFFCURVE",
"186 336 CURVE SMOOTH",
"191 336 OFFCURVE",
"193 339 OFFCURVE",
"193 344 CURVE SMOOTH",
"193 346 OFFCURVE",
"192 348 OFFCURVE",
"191 349 CURVE SMOOTH",
"162 378 OFFCURVE",
"148 408 OFFCURVE",
"148 439 CURVE SMOOTH",
"148 486 OFFCURVE",
"183 515 OFFCURVE",
"228 515 CURVE SMOOTH",
"277 515 OFFCURVE",
"322 484 OFFCURVE",
"361 422 CURVE",
"362 413 OFFCURVE",
"362 405 OFFCURVE",
"362 398 CURVE SMOOTH",
"362 376 LINE SMOOTH",
"362 336 OFFCURVE",
"358 276 OFFCURVE",
"347 214 CURVE SMOOTH",
"341 183 OFFCURVE",
"333 152 OFFCURVE",
"322 121 CURVE SMOOTH",
"302 60 OFFCURVE",
"271 9 OFFCURVE",
"227 -21 CURVE SMOOTH",
"205 -37 OFFCURVE",
"179 -44 OFFCURVE",
"150 -44 CURVE SMOOTH",
"111 -44 OFFCURVE",
"78 -30 OFFCURVE",
"51 -2 CURVE SMOOTH",
"28 25 OFFCURVE",
"19 48 OFFCURVE",
"19 83 CURVE SMOOTH",
"19 144 OFFCURVE",
"55 195 OFFCURVE",
"115 195 CURVE SMOOTH",
"130 195 OFFCURVE",
"144 191 OFFCURVE",
"155 184 CURVE SMOOTH",
"161 180 OFFCURVE",
"164 183 OFFCURVE",
"164 188 CURVE SMOOTH",
"164 191 OFFCURVE",
"163 194 OFFCURVE",
"160 196 CURVE SMOOTH",
"145 207 OFFCURVE",
"128 213 OFFCURVE",
"110 213 CURVE SMOOTH",
"46 213 OFFCURVE",
"-2 157 OFFCURVE",
"-2 73 CURVE SMOOTH",
"-2 42 OFFCURVE",
"6 14 OFFCURVE",
"23 -11 CURVE SMOOTH",
"47 -49 OFFCURVE",
"106 -66 OFFCURVE",
"149 -66 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01293 3 104 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 3 135 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 15 170 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01246 60 135 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 73 165 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 93 22 93 38 93 54 93 70 93 86 93 102 93 118 93 134 93 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 93 165 93 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012109 60 135 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012123 60 135 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012135 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012107 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012130 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01229 1 35 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01218 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 674;
}
);
note = N;
unicode = 004E;
},
{
glyphname = NJ;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 729, 0}";
}
);
};
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 674, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 1037;
}
);
unicode = 01CA;
},
{
glyphname = Nacute;
lastChange = "2021-10-08 06:22:23 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = acutecomb;
}
);
};
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 522, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 674;
}
);
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2021-10-08 06:22:26 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = caroncomb;
}
);
};
components = (
{
name = N;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 472, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 674;
}
);
unicode = 0147;
},
{
glyphname = Ncommaaccent;
lastChange = "2021-10-08 06:22:26 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 674;
}
);
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"612 62 OFFCURVE",
"619 408 OFFCURVE",
"611 505 CURVE SMOOTH",
"608 541 OFFCURVE",
"575 539 OFFCURVE",
"577 511 CURVE SMOOTH",
"588 381 OFFCURVE",
"588 198 OFFCURVE",
"581 98 CURVE",
"550 232 OFFCURVE",
"458 311 OFFCURVE",
"408 423 CURVE SMOOTH",
"396 450 OFFCURVE",
"395 494 OFFCURVE",
"395 519 CURVE SMOOTH",
"395 529 OFFCURVE",
"385 534 OFFCURVE",
"375 534 CURVE SMOOTH",
"367 534 OFFCURVE",
"358 529 OFFCURVE",
"358 518 CURVE",
"364 409 OFFCURVE",
"364 341 OFFCURVE",
"347 244 CURVE SMOOTH",
"329 150 OFFCURVE",
"296 56 OFFCURVE",
"227 9 CURVE SMOOTH",
"205 -7 OFFCURVE",
"179 -14 OFFCURVE",
"150 -14 CURVE SMOOTH",
"-4 -14 OFFCURVE",
"-15 166 OFFCURVE",
"131 166 CURVE SMOOTH",
"146 166 OFFCURVE",
"160 162 OFFCURVE",
"171 155 CURVE SMOOTH",
"177 151 OFFCURVE",
"180 154 OFFCURVE",
"180 159 CURVE SMOOTH",
"180 162 OFFCURVE",
"179 165 OFFCURVE",
"176 167 CURVE SMOOTH",
"161 178 OFFCURVE",
"144 184 OFFCURVE",
"126 184 CURVE SMOOTH",
"-42 184 OFFCURVE",
"-35 -36 OFFCURVE",
"149 -36 CURVE SMOOTH",
"210 -36 OFFCURVE",
"258 -4 OFFCURVE",
"294 43 CURVE SMOOTH",
"344 107 OFFCURVE",
"376 213 OFFCURVE",
"388 304 CURVE SMOOTH",
"392 333 OFFCURVE",
"395 359 OFFCURVE",
"396 381 CURVE",
"456 232 OFFCURVE",
"544 150 OFFCURVE",
"573 48 CURVE",
"563 -24 OFFCURVE",
"558 -184 OFFCURVE",
"451 -184 CURVE SMOOTH",
"405 -184 OFFCURVE",
"371 -137 OFFCURVE",
"371 -79 CURVE SMOOTH",
"371 -50 OFFCURVE",
"345 -60 OFFCURVE",
"345 -100 CURVE SMOOTH",
"345 -168 OFFCURVE",
"378 -202 OFFCURVE",
"435 -203 CURVE SMOOTH",
"531 -205 OFFCURVE",
"573 -126 OFFCURVE",
"592 -24 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"532 -203 OFFCURVE",
"573 -125 OFFCURVE",
"592 -24 CURVE SMOOTH",
"607 39 OFFCURVE",
"614 239 OFFCURVE",
"614 381 CURVE SMOOTH",
"614 434 OFFCURVE",
"613 479 OFFCURVE",
"611 505 CURVE SMOOTH",
"609 524 OFFCURVE",
"600 532 OFFCURVE",
"591 532 CURVE SMOOTH",
"584 532 OFFCURVE",
"577 526 OFFCURVE",
"577 514 CURVE SMOOTH",
"577 511 LINE SMOOTH",
"583 439 OFFCURVE",
"586 350 OFFCURVE",
"586 268 CURVE SMOOTH",
"586 203 OFFCURVE",
"584 142 OFFCURVE",
"581 98 CURVE",
"550 232 OFFCURVE",
"458 311 OFFCURVE",
"408 423 CURVE SMOOTH",
"396 450 OFFCURVE",
"395 494 OFFCURVE",
"395 519 CURVE SMOOTH",
"395 529 OFFCURVE",
"385 534 OFFCURVE",
"375 534 CURVE SMOOTH",
"367 534 OFFCURVE",
"358 529 OFFCURVE",
"358 518 CURVE SMOOTH",
"360 477 OFFCURVE",
"362 442 OFFCURVE",
"362 410 CURVE SMOOTH",
"362 354 OFFCURVE",
"358 305 OFFCURVE",
"347 244 CURVE SMOOTH",
"329 150 OFFCURVE",
"296 56 OFFCURVE",
"227 9 CURVE SMOOTH",
"205 -7 OFFCURVE",
"179 -14 OFFCURVE",
"150 -14 CURVE SMOOTH",
"69 -14 OFFCURVE",
"28 36 OFFCURVE",
"28 83 CURVE SMOOTH",
"28 125 OFFCURVE",
"62 166 OFFCURVE",
"131 166 CURVE SMOOTH",
"146 166 OFFCURVE",
"160 162 OFFCURVE",
"171 155 CURVE SMOOTH",
"177 151 OFFCURVE",
"180 154 OFFCURVE",
"180 159 CURVE SMOOTH",
"180 162 OFFCURVE",
"179 165 OFFCURVE",
"176 167 CURVE SMOOTH",
"161 178 OFFCURVE",
"144 184 OFFCURVE",
"126 184 CURVE SMOOTH",
"46 184 OFFCURVE",
"5 134 OFFCURVE",
"5 81 CURVE SMOOTH",
"5 24 OFFCURVE",
"53 -36 OFFCURVE",
"149 -36 CURVE SMOOTH",
"210 -36 OFFCURVE",
"258 -4 OFFCURVE",
"294 43 CURVE SMOOTH",
"344 107 OFFCURVE",
"376 213 OFFCURVE",
"388 304 CURVE SMOOTH",
"392 333 OFFCURVE",
"395 359 OFFCURVE",
"396 381 CURVE",
"456 232 OFFCURVE",
"544 150 OFFCURVE",
"573 48 CURVE",
"563 -24 OFFCURVE",
"558 -184 OFFCURVE",
"451 -184 CURVE SMOOTH",
"405 -184 OFFCURVE",
"371 -137 OFFCURVE",
"371 -79 CURVE SMOOTH",
"371 -68 OFFCURVE",
"367 -62 OFFCURVE",
"362 -62 CURVE SMOOTH",
"355 -62 OFFCURVE",
"345 -76 OFFCURVE",
"345 -100 CURVE SMOOTH",
"345 -170 OFFCURVE",
"380 -203 OFFCURVE",
"439 -203 CURVE SMOOTH"
);
}
);
width = 674;
}
);
unicode = 014A;
},
{
glyphname = Nj;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 710, 0}";
}
);
};
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 674, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 857;
}
);
unicode = 01CB;
},
{
glyphname = Ntilde;
lastChange = "2021-10-08 06:22:26 +0000";
layers = (
{
background = {
components = (
{
name = N;
},
{
name = tildecomb;
}
);
};
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 475, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012100 3 110 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 3 61 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012153 141 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 21 170 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01252 61 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 83 165 83 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 100 165 100 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012116 61 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012141 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 153 234 153 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 153 25 153 41 153 57 153 73 153 89 153 105 153 121 153 137 153 153 153 169 153 185 153 201 153 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012155 2 147 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012159 2 143 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012155 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 674;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{195, -55}";
},
{
name = center;
position = "{259, 265}";
},
{
name = ogonek;
position = "{227, -52}";
},
{
name = top;
position = "{261, 544}";
},
{
name = topleft;
position = "{20, 530}";
},
{
name = topright;
position = "{332, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"303 -59 OFFCURVE",
"368 -32 OFFCURVE",
"421 23 CURVE SMOOTH",
"480 83 OFFCURVE",
"509 164 OFFCURVE",
"509 265 CURVE SMOOTH",
"509 342 OFFCURVE",
"486 409 OFFCURVE",
"439 462 CURVE SMOOTH",
"391 517 OFFCURVE",
"332 544 OFFCURVE",
"261 544 CURVE SMOOTH",
"197 544 OFFCURVE",
"144 521 OFFCURVE",
"102 475 CURVE SMOOTH",
"63 432 OFFCURVE",
"42 380 OFFCURVE",
"39 320 CURVE",
"15 275 OFFCURVE",
"3 224 OFFCURVE",
"3 169 CURVE SMOOTH",
"3 97 OFFCURVE",
"26 40 OFFCURVE",
"71 -1 CURVE SMOOTH",
"112 -40 OFFCURVE",
"164 -59 OFFCURVE",
"227 -59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144 -24 OFFCURVE",
"102 -8 OFFCURVE",
"71 23 CURVE SMOOTH",
"36 58 OFFCURVE",
"18 107 OFFCURVE",
"18 169 CURVE SMOOTH",
"18 205 OFFCURVE",
"24 239 OFFCURVE",
"40 286 CURVE",
"53 201 OFFCURVE",
"91 149 OFFCURVE",
"156 116 CURVE SMOOTH",
"189 99 OFFCURVE",
"223 91 OFFCURVE",
"258 91 CURVE SMOOTH",
"289 91 OFFCURVE",
"317 98 OFFCURVE",
"341 111 CURVE SMOOTH",
"364 124 OFFCURVE",
"381 140 OFFCURVE",
"393 159 CURVE SMOOTH",
"404 177 OFFCURVE",
"409 194 OFFCURVE",
"409 211 CURVE SMOOTH",
"409 229 OFFCURVE",
"404 245 OFFCURVE",
"394 258 CURVE SMOOTH",
"384 271 OFFCURVE",
"371 278 OFFCURVE",
"354 279 CURVE SMOOTH",
"349 279 OFFCURVE",
"346 276 OFFCURVE",
"346 271 CURVE SMOOTH",
"346 266 OFFCURVE",
"348 264 OFFCURVE",
"353 264 CURVE SMOOTH",
"365 263 OFFCURVE",
"374 258 OFFCURVE",
"381 248 CURVE SMOOTH",
"388 239 OFFCURVE",
"391 229 OFFCURVE",
"391 216 CURVE SMOOTH",
"391 196 OFFCURVE",
"384 179 OFFCURVE",
"371 165 CURVE SMOOTH",
"345 135 OFFCURVE",
"308 120 OFFCURVE",
"260 120 CURVE SMOOTH",
"227 120 OFFCURVE",
"196 128 OFFCURVE",
"165 144 CURVE SMOOTH",
"134 160 OFFCURVE",
"110 184 OFFCURVE",
"94 216 CURVE SMOOTH",
"79 245 OFFCURVE",
"71 278 OFFCURVE",
"71 317 CURVE SMOOTH",
"71 329 LINE",
"72 343 LINE",
"98 376 OFFCURVE",
"130 397 OFFCURVE",
"168 407 CURVE SMOOTH",
"171 408 OFFCURVE",
"173 410 OFFCURVE",
"173 414 CURVE SMOOTH",
"173 419 OFFCURVE",
"171 422 OFFCURVE",
"166 422 CURVE",
"164 421 LINE",
"133 414 OFFCURVE",
"108 400 OFFCURVE",
"77 371 CURVE",
"92 424 OFFCURVE",
"111 458 OFFCURVE",
"142 485 CURVE SMOOTH",
"175 514 OFFCURVE",
"215 529 OFFCURVE",
"261 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"376 504 OFFCURVE",
"414 454 CURVE SMOOTH",
"449 406 OFFCURVE",
"466 347 OFFCURVE",
"466 276 CURVE SMOOTH",
"466 186 OFFCURVE",
"436 112 OFFCURVE",
"377 54 CURVE SMOOTH",
"324 2 OFFCURVE",
"263 -24 OFFCURVE",
"195 -24 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"303 -59 OFFCURVE",
"368 -32 OFFCURVE",
"421 23 CURVE SMOOTH",
"480 83 OFFCURVE",
"509 164 OFFCURVE",
"509 265 CURVE SMOOTH",
"509 342 OFFCURVE",
"486 409 OFFCURVE",
"439 462 CURVE SMOOTH",
"391 517 OFFCURVE",
"332 544 OFFCURVE",
"261 544 CURVE SMOOTH",
"197 544 OFFCURVE",
"144 521 OFFCURVE",
"102 475 CURVE SMOOTH",
"63 432 OFFCURVE",
"42 380 OFFCURVE",
"39 320 CURVE",
"15 275 OFFCURVE",
"3 224 OFFCURVE",
"3 169 CURVE SMOOTH",
"3 97 OFFCURVE",
"26 40 OFFCURVE",
"71 -1 CURVE SMOOTH",
"112 -40 OFFCURVE",
"164 -59 OFFCURVE",
"227 -59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144 -24 OFFCURVE",
"102 -8 OFFCURVE",
"71 23 CURVE SMOOTH",
"36 58 OFFCURVE",
"18 107 OFFCURVE",
"18 169 CURVE SMOOTH",
"18 205 OFFCURVE",
"24 239 OFFCURVE",
"40 286 CURVE",
"53 201 OFFCURVE",
"91 149 OFFCURVE",
"156 116 CURVE SMOOTH",
"189 99 OFFCURVE",
"223 91 OFFCURVE",
"258 91 CURVE SMOOTH",
"289 91 OFFCURVE",
"317 98 OFFCURVE",
"341 111 CURVE SMOOTH",
"364 124 OFFCURVE",
"381 140 OFFCURVE",
"393 159 CURVE SMOOTH",
"404 177 OFFCURVE",
"409 194 OFFCURVE",
"409 211 CURVE SMOOTH",
"409 229 OFFCURVE",
"404 245 OFFCURVE",
"394 258 CURVE SMOOTH",
"384 271 OFFCURVE",
"371 278 OFFCURVE",
"354 279 CURVE SMOOTH",
"349 279 OFFCURVE",
"346 276 OFFCURVE",
"346 271 CURVE SMOOTH",
"346 266 OFFCURVE",
"348 264 OFFCURVE",
"353 264 CURVE SMOOTH",
"365 263 OFFCURVE",
"374 258 OFFCURVE",
"381 248 CURVE SMOOTH",
"388 239 OFFCURVE",
"391 229 OFFCURVE",
"391 216 CURVE SMOOTH",
"391 196 OFFCURVE",
"384 179 OFFCURVE",
"371 165 CURVE SMOOTH",
"345 135 OFFCURVE",
"308 120 OFFCURVE",
"260 120 CURVE SMOOTH",
"227 120 OFFCURVE",
"196 128 OFFCURVE",
"165 144 CURVE SMOOTH",
"134 160 OFFCURVE",
"110 184 OFFCURVE",
"94 216 CURVE SMOOTH",
"79 245 OFFCURVE",
"71 278 OFFCURVE",
"71 317 CURVE SMOOTH",
"71 329 LINE",
"72 343 LINE",
"98 376 OFFCURVE",
"130 397 OFFCURVE",
"168 407 CURVE SMOOTH",
"171 408 OFFCURVE",
"173 410 OFFCURVE",
"173 414 CURVE SMOOTH",
"173 419 OFFCURVE",
"171 422 OFFCURVE",
"166 422 CURVE",
"164 421 LINE",
"133 414 OFFCURVE",
"108 400 OFFCURVE",
"77 371 CURVE",
"92 424 OFFCURVE",
"111 458 OFFCURVE",
"142 485 CURVE SMOOTH",
"175 514 OFFCURVE",
"215 529 OFFCURVE",
"261 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"376 504 OFFCURVE",
"414 454 CURVE SMOOTH",
"449 406 OFFCURVE",
"466 347 OFFCURVE",
"466 276 CURVE SMOOTH",
"466 186 OFFCURVE",
"436 112 OFFCURVE",
"377 54 CURVE SMOOTH",
"324 2 OFFCURVE",
"263 -24 OFFCURVE",
"195 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01251 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 51 170 51 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01274 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 77 165 77 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 2 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = O;
unicode = 004F;
},
{
glyphname = Oacute;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = acutecomb;
}
);
};
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 229, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01275 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 78 165 78 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Obreve;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = brevecomb;
}
);
};
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 171, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 014E;
},
{
glyphname = Ocaron;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = caroncomb;
}
);
};
components = (
{
name = O;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 179, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 01D1;
},
{
glyphname = Ocircumflex;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01275 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 78 165 78 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2021-10-08 06:47:26 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 174, -55}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 177, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ED6;
},
{
glyphname = Odblgrave;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 150, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 020C;
},
{
glyphname = Odieresis;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 197, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01296 4 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 4 86 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01275 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 78 165 78 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 92 170 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 96 165 96 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 2 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Odieresismacron;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
};
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 197, 284}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 170, 341}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 022A;
},
{
glyphname = Odotaccentmacron;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dotaccentcomb;
},
{
name = macroncomb;
}
);
};
components = (
{
name = O;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 240, 284}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 170, 345}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 0230;
},
{
glyphname = Odotbelow;
lastChange = "2021-10-08 06:47:37 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 174, -55}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ECC;
},
{
glyphname = Ograve;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = gravecomb;
}
);
};
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 173, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01275 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 78 165 78 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Ohookabove;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 220, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = horncomb;
}
);
};
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 349, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = Ohorn;
},
{
name = acutecomb;
}
);
};
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 229, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2021-10-08 06:47:39 +0000";
layers = (
{
background = {
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 174, -55}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = Ohorn;
},
{
name = gravecomb;
}
);
};
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 173, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 220, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = Ohorn;
},
{
name = tildecomb;
}
);
};
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 174, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2021-10-08 06:30:18 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = hungarumlautcomb;
}
);
};
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 225, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 176, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 020E;
},
{
glyphname = Omacron;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = macroncomb;
}
);
};
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 170, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 014C;
},
{
glyphname = Oogonek;
lastChange = "2021-10-08 06:47:41 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = O;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 148, -57}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 01EA;
},
{
glyphname = Oslash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{259, 0}";
},
{
name = top;
position = "{276, 587}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"301.667 -29 OFFCURVE",
"366.333 -1.667 OFFCURVE",
"421 53 CURVE SMOOTH",
"480 114 OFFCURVE",
"509 194 OFFCURVE",
"509 295 CURVE SMOOTH",
"509 372 OFFCURVE",
"486 438 OFFCURVE",
"439 492 CURVE SMOOTH",
"430 502 LINE",
"456.667 536.667 OFFCURVE",
"478 566.333 OFFCURVE",
"494 589 CURVE SMOOTH",
"494.667 589.667 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598.333 OFFCURVE",
"492.333 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 599.667 OFFCURVE",
"481 597 CURVE SMOOTH",
"465.667 575 OFFCURVE",
"444.667 547 OFFCURVE",
"418 513 CURVE",
"374.667 553.667 OFFCURVE",
"322.333 574 OFFCURVE",
"261 574 CURVE SMOOTH",
"197 574 OFFCURVE",
"144 551 OFFCURVE",
"102 505 CURVE SMOOTH",
"62.667 461.667 OFFCURVE",
"41.667 410 OFFCURVE",
"39 350 CURVE",
"15 304.667 OFFCURVE",
"3 254.333 OFFCURVE",
"3 199 CURVE SMOOTH",
"3 147 OFFCURVE",
"15 103 OFFCURVE",
"39 67 CURVE",
"20.333 40.333 OFFCURVE",
"6.667 17.333 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1.333 -14.667 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25.333 OFFCURVE",
"17.667 -28 OFFCURVE",
"23 -28 CURVE SMOOTH",
"25.667 -28 OFFCURVE",
"27 -27.667 OFFCURVE",
"27 -27 CURVE",
"37 -7 OFFCURVE",
"49 14 OFFCURVE",
"63 36 CURVE",
"71 29 LINE SMOOTH",
"112.333 -9.667 OFFCURVE",
"164.333 -29 OFFCURVE",
"227 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"28 111.667 OFFCURVE",
"18 151 OFFCURVE",
"18 199 CURVE SMOOTH",
"18 235 OFFCURVE",
"24 269.333 OFFCURVE",
"40 316 CURVE",
"50 250.667 OFFCURVE",
"75.667 202.333 OFFCURVE",
"117 171 CURVE",
"89.667 137.667 OFFCURVE",
"66.667 107.667 OFFCURVE",
"48 81 CURVE"
);
},
{
closed = 1;
nodes = (
"144 6 OFFCURVE",
"103.667 21 OFFCURVE",
"73 51 CURVE",
"93 81.667 OFFCURVE",
"117 116 OFFCURVE",
"145 152 CURVE",
"156 146 LINE SMOOTH",
"189.333 129.333 OFFCURVE",
"223.333 121 OFFCURVE",
"258 121 CURVE SMOOTH",
"288.667 121 OFFCURVE",
"316 127.667 OFFCURVE",
"340 141 CURVE SMOOTH",
"363.333 153 OFFCURVE",
"381 169 OFFCURVE",
"393 189 CURVE SMOOTH",
"403 205.667 OFFCURVE",
"408 223 OFFCURVE",
"408 241 CURVE SMOOTH",
"408 259 OFFCURVE",
"403.333 274.667 OFFCURVE",
"394 288 CURVE SMOOTH",
"384 300.667 OFFCURVE",
"370.667 307.667 OFFCURVE",
"354 309 CURVE SMOOTH",
"348.667 309 OFFCURVE",
"346 306.333 OFFCURVE",
"346 301 CURVE SMOOTH",
"346 296.333 OFFCURVE",
"348.333 294 OFFCURVE",
"353 294 CURVE SMOOTH",
"365 292.667 OFFCURVE",
"374.333 287.333 OFFCURVE",
"381 278 CURVE SMOOTH",
"387.667 269.333 OFFCURVE",
"391 258.667 OFFCURVE",
"391 246 CURVE SMOOTH",
"391 227.333 OFFCURVE",
"384.333 210.333 OFFCURVE",
"371 195 CURVE SMOOTH",
"345 165 OFFCURVE",
"307.667 150 OFFCURVE",
"259 150 CURVE SMOOTH",
"227 150 OFFCURVE",
"195.667 158 OFFCURVE",
"165 174 CURVE",
"162 175 LINE",
"168 182 LINE",
"229 256.5 LINE",
"345 397 LINE SMOOTH",
"358.333 412.333 OFFCURVE",
"370.667 427.167 OFFCURVE",
"382 441.5 CURVE SMOOTH",
"415 482 LINE",
"449 436 OFFCURVE",
"466 377.333 OFFCURVE",
"466 306 CURVE SMOOTH",
"466 216 OFFCURVE",
"436.333 142 OFFCURVE",
"377 84 CURVE SMOOTH",
"323.667 32 OFFCURVE",
"262.667 6 OFFCURVE",
"194 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117.667 207.667 OFFCURVE",
"104.667 224.667 OFFCURVE",
"94 246 CURVE SMOOTH",
"78.667 274.667 OFFCURVE",
"71 308.333 OFFCURVE",
"71 347 CURVE SMOOTH",
"71 359 LINE",
"72 373 LINE",
"97.333 405.667 OFFCURVE",
"129 427 OFFCURVE",
"167 437 CURVE SMOOTH",
"171 437.667 OFFCURVE",
"173 440 OFFCURVE",
"173 444 CURVE SMOOTH",
"173 449.333 OFFCURVE",
"170.667 452 OFFCURVE",
"166 452 CURVE",
"164 451 LINE",
"133.333 444.333 OFFCURVE",
"106.667 430.333 OFFCURVE",
"76 401 CURVE",
"90.667 454.333 OFFCURVE",
"111.667 488.333 OFFCURVE",
"141 515 CURVE SMOOTH",
"174.333 544.333 OFFCURVE",
"214.333 559 OFFCURVE",
"261 559 CURVE SMOOTH",
"319.667 559 OFFCURVE",
"367 538 OFFCURVE",
"403 496 CURVE",
"392.333 482.667 OFFCURVE",
"380.833 469 OFFCURVE",
"368.5 455 CURVE SMOOTH",
"329 410 LINE",
"200 267 LINE SMOOTH",
"168.667 232.333 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"135 193 LINE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"302 -29 OFFCURVE",
"366 -2 OFFCURVE",
"421 53 CURVE SMOOTH",
"480 114 OFFCURVE",
"509 194 OFFCURVE",
"509 295 CURVE SMOOTH",
"509 372 OFFCURVE",
"487 439 OFFCURVE",
"439 492 CURVE SMOOTH",
"430 502 LINE",
"457 537 OFFCURVE",
"478 566 OFFCURVE",
"494 589 CURVE SMOOTH",
"495 590 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598 OFFCURVE",
"492 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 600 OFFCURVE",
"481 597 CURVE SMOOTH",
"466 575 OFFCURVE",
"445 547 OFFCURVE",
"418 513 CURVE",
"375 554 OFFCURVE",
"322 574 OFFCURVE",
"261 574 CURVE SMOOTH",
"197 574 OFFCURVE",
"144 551 OFFCURVE",
"102 505 CURVE SMOOTH",
"63 462 OFFCURVE",
"42 410 OFFCURVE",
"39 350 CURVE",
"15 305 OFFCURVE",
"3 254 OFFCURVE",
"3 199 CURVE SMOOTH",
"3 147 OFFCURVE",
"15 103 OFFCURVE",
"39 67 CURVE",
"20 40 OFFCURVE",
"7 17 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1 -15 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25 OFFCURVE",
"18 -28 OFFCURVE",
"23 -28 CURVE SMOOTH",
"26 -28 OFFCURVE",
"27 -28 OFFCURVE",
"27 -27 CURVE",
"37 -7 OFFCURVE",
"49 14 OFFCURVE",
"63 36 CURVE",
"71 29 LINE SMOOTH",
"114 -8 OFFCURVE",
"164 -29 OFFCURVE",
"227 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"28 112 OFFCURVE",
"18 151 OFFCURVE",
"18 199 CURVE SMOOTH",
"18 235 OFFCURVE",
"24 269 OFFCURVE",
"40 316 CURVE",
"50 251 OFFCURVE",
"76 202 OFFCURVE",
"117 171 CURVE",
"90 138 OFFCURVE",
"67 108 OFFCURVE",
"48 81 CURVE"
);
},
{
closed = 1;
nodes = (
"144 6 OFFCURVE",
"104 21 OFFCURVE",
"73 51 CURVE",
"93 82 OFFCURVE",
"117 116 OFFCURVE",
"145 152 CURVE",
"156 146 LINE SMOOTH",
"189 128 OFFCURVE",
"223 121 OFFCURVE",
"258 121 CURVE SMOOTH",
"289 121 OFFCURVE",
"316 128 OFFCURVE",
"340 141 CURVE SMOOTH",
"363 153 OFFCURVE",
"381 169 OFFCURVE",
"393 189 CURVE SMOOTH",
"403 206 OFFCURVE",
"408 223 OFFCURVE",
"408 241 CURVE SMOOTH",
"408 259 OFFCURVE",
"403 275 OFFCURVE",
"394 288 CURVE SMOOTH",
"384 301 OFFCURVE",
"371 308 OFFCURVE",
"354 309 CURVE SMOOTH",
"349 309 OFFCURVE",
"346 306 OFFCURVE",
"346 301 CURVE SMOOTH",
"346 296 OFFCURVE",
"348 294 OFFCURVE",
"353 294 CURVE SMOOTH",
"365 293 OFFCURVE",
"374 287 OFFCURVE",
"381 278 CURVE SMOOTH",
"388 269 OFFCURVE",
"391 259 OFFCURVE",
"391 246 CURVE SMOOTH",
"391 227 OFFCURVE",
"384 210 OFFCURVE",
"371 195 CURVE SMOOTH",
"345 165 OFFCURVE",
"308 150 OFFCURVE",
"259 150 CURVE SMOOTH",
"227 150 OFFCURVE",
"196 158 OFFCURVE",
"165 174 CURVE",
"162 175 LINE",
"168 182 LINE",
"229 257 LINE",
"345 397 LINE SMOOTH",
"358 412 OFFCURVE",
"370 428 OFFCURVE",
"382 442 CURVE SMOOTH",
"415 482 LINE",
"449 436 OFFCURVE",
"466 377 OFFCURVE",
"466 306 CURVE SMOOTH",
"466 216 OFFCURVE",
"436 142 OFFCURVE",
"377 84 CURVE SMOOTH",
"324 32 OFFCURVE",
"263 6 OFFCURVE",
"194 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 208 OFFCURVE",
"105 225 OFFCURVE",
"94 246 CURVE SMOOTH",
"79 275 OFFCURVE",
"71 308 OFFCURVE",
"71 347 CURVE SMOOTH",
"71 359 LINE",
"72 373 LINE",
"97 406 OFFCURVE",
"129 427 OFFCURVE",
"167 437 CURVE SMOOTH",
"171 438 OFFCURVE",
"173 440 OFFCURVE",
"173 444 CURVE SMOOTH",
"173 449 OFFCURVE",
"171 452 OFFCURVE",
"166 452 CURVE",
"164 451 LINE",
"133 444 OFFCURVE",
"107 430 OFFCURVE",
"76 401 CURVE",
"91 454 OFFCURVE",
"112 488 OFFCURVE",
"141 515 CURVE SMOOTH",
"174 544 OFFCURVE",
"214 559 OFFCURVE",
"261 559 CURVE SMOOTH",
"320 559 OFFCURVE",
"367 538 OFFCURVE",
"403 496 CURVE",
"392 483 OFFCURVE",
"381 469 OFFCURVE",
"369 455 CURVE SMOOTH",
"329 410 LINE",
"200 267 LINE SMOOTH",
"169 232 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"135 193 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01241 3 123 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 3 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01288 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01213 123 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 123 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 123 99 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 41 165 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 57 170 57 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 88 170 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012129 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01284 2 103 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 2 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 61 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0128 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 8 24 8 40 8 56 8 72 8 88 8 104 8 120 8 136 8 152 8 168 8 184 8 200 8 216 8 232 8 248 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 8 24 8 40 8 56 8 72 8 88 8 104 8 120 8 136 8 152 8 168 8 184 8 200 8 216 8 232 8 248 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 8 24 8 40 8 56 8 72 8 88 8 104 8 120 8 136 8 152 8 168 8 184 8 200 8 216 8 232 8 248 8 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Oslashacute;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = Oslash;
},
{
name = acutecomb;
}
);
};
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 244, 327}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 01FE;
},
{
glyphname = Otilde;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = tildecomb;
}
);
};
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 174, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01298 86 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01275 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 78 165 78 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012218 98 234 98 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012100 2 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 2 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 22 24 22 40 22 56 22 72 22 88 22 104 22 120 22 136 22 152 22 168 22 184 22 200 22 216 22 232 22 248 22 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = Otildemacron;
lastChange = "2021-10-08 06:29:39 +0000";
layers = (
{
background = {
components = (
{
name = O;
},
{
name = tildecomb_macroncomb;
}
);
};
components = (
{
name = O;
},
{
name = tildecomb_macroncomb.case;
transform = "{1, 0, 0, 1, 182, 284}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 517;
}
);
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"301.667 -29 OFFCURVE",
"366.333 -1.667 OFFCURVE",
"421 53 CURVE SMOOTH",
"426.333 58.333 OFFCURVE",
"431.333 64 OFFCURVE",
"436 70 CURVE SMOOTH",
"450 88 LINE",
"451 79 LINE SMOOTH",
"451 68.333 OFFCURVE",
"452.667 56.333 OFFCURVE",
"456 43 CURVE",
"449 40 LINE SMOOTH",
"438 35 OFFCURVE",
"433 25 OFFCURVE",
"433 17 CURVE SMOOTH",
"433 10 OFFCURVE",
"437 5 OFFCURVE",
"444 5 CURVE SMOOTH",
"446 5 OFFCURVE",
"449 6 OFFCURVE",
"452 7 CURVE SMOOTH",
"459.5 10 LINE",
"468 13 LINE",
"478 -6.333 OFFCURVE",
"489.333 -18.333 OFFCURVE",
"502 -23 CURVE SMOOTH",
"513 -27 OFFCURVE",
"519 -22 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -12 OFFCURVE",
"517 -8 OFFCURVE",
"514 -6 CURVE SMOOTH",
"507.333 -2 OFFCURVE",
"502.667 6 OFFCURVE",
"500 18 CURVE",
"509.333 19.333 OFFCURVE",
"518.667 20 OFFCURVE",
"528 20 CURVE SMOOTH",
"556 20 LINE SMOOTH",
"591.303 20 OFFCURVE",
"655.761 12.259 OFFCURVE",
"696.5 9 CURVE SMOOTH",
"721.5 7 OFFCURVE",
"745.833 6.5 OFFCURVE",
"769.5 7.5 CURVE SMOOTH",
"841 11 OFFCURVE",
"892 41 OFFCURVE",
"892 119 CURVE SMOOTH",
"892 183 OFFCURVE",
"848 208 OFFCURVE",
"800 208 CURVE SMOOTH",
"749.333 208 OFFCURVE",
"733.667 186.667 OFFCURVE",
"723 144 CURVE SMOOTH",
"721 138 OFFCURVE",
"726 134 OFFCURVE",
"731 134 CURVE SMOOTH",
"734 134 OFFCURVE",
"738 136 OFFCURVE",
"739 141 CURVE SMOOTH",
"745.667 175.667 OFFCURVE",
"753 185 OFFCURVE",
"797 185 CURVE SMOOTH",
"841 185 OFFCURVE",
"876 169.667 OFFCURVE",
"876 123 CURVE SMOOTH",
"876 56 OFFCURVE",
"825 34 OFFCURVE",
"757 34 CURVE SMOOTH",
"721 34 OFFCURVE",
"621 45 OFFCURVE",
"567.5 50 CURVE SMOOTH",
"552 52 OFFCURVE",
"537 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"512 52 OFFCURVE",
"502 52 OFFCURVE",
"493 51 CURVE",
"487 89 OFFCURVE",
"485 142 OFFCURVE",
"485 199 CURVE SMOOTH",
"485 227 OFFCURVE",
"485 257 OFFCURVE",
"486 287 CURVE",
"501 286 OFFCURVE",
"519 286 OFFCURVE",
"537 286 CURVE SMOOTH",
"625 286 OFFCURVE",
"739 298 OFFCURVE",
"758 347 CURVE SMOOTH",
"761 354 OFFCURVE",
"756 359 OFFCURVE",
"751 359 CURVE SMOOTH",
"748 359 OFFCURVE",
"745 357 OFFCURVE",
"744 353 CURVE",
"727 311 OFFCURVE",
"633 304 OFFCURVE",
"549 304 CURVE SMOOTH",
"527 304 OFFCURVE",
"506 304 OFFCURVE",
"487 305 CURVE",
"489.667 379.667 OFFCURVE",
"493.333 449.667 OFFCURVE",
"496 499 CURVE",
"546 506 OFFCURVE",
"591 509 OFFCURVE",
"637 509 CURVE SMOOTH",
"658 509 OFFCURVE",
"680 509 OFFCURVE",
"702 507 CURVE SMOOTH",
"759.333 504.333 OFFCURVE",
"782.333 483.333 OFFCURVE",
"781 438 CURVE SMOOTH",
"781 428.097 OFFCURVE",
"804 452.195 OFFCURVE",
"804 464 CURVE",
"801.333 482.667 OFFCURVE",
"798 503 OFFCURVE",
"790 515 CURVE SMOOTH",
"778 534 OFFCURVE",
"725 539 OFFCURVE",
"664 539 CURVE SMOOTH",
"607 539 OFFCURVE",
"543 534 OFFCURVE",
"499 533 CURVE",
"500 553 LINE SMOOTH",
"501 561 OFFCURVE",
"490 565 OFFCURVE",
"478 565 CURVE SMOOTH",
"464 565 OFFCURVE",
"449 560 OFFCURVE",
"449 550 CURVE SMOOTH",
"449.5 545 LINE",
"450 539 LINE SMOOTH",
"450 536.333 OFFCURVE",
"450.333 534 OFFCURVE",
"451 532 CURVE",
"449.5 509 LINE",
"448 481 LINE",
"439 492 LINE SMOOTH",
"391 546.667 OFFCURVE",
"331.667 574 OFFCURVE",
"261 574 CURVE SMOOTH",
"197 574 OFFCURVE",
"144 551 OFFCURVE",
"102 505 CURVE SMOOTH",
"62.667 461.667 OFFCURVE",
"41.667 410 OFFCURVE",
"39 350 CURVE",
"15 304.667 OFFCURVE",
"3 254.333 OFFCURVE",
"3 199 CURVE SMOOTH",
"3 127 OFFCURVE",
"25.667 70.333 OFFCURVE",
"71 29 CURVE SMOOTH",
"112.333 -9.667 OFFCURVE",
"164.333 -29 OFFCURVE",
"227 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143.333 6 OFFCURVE",
"102.333 21.667 OFFCURVE",
"71 53 CURVE SMOOTH",
"35.667 87.667 OFFCURVE",
"18 136.333 OFFCURVE",
"18 199 CURVE SMOOTH",
"18 235 OFFCURVE",
"24 269.333 OFFCURVE",
"40 316 CURVE",
"52 230.667 OFFCURVE",
"89.333 179.333 OFFCURVE",
"156 146 CURVE SMOOTH",
"189.333 129.333 OFFCURVE",
"223.333 121 OFFCURVE",
"258 121 CURVE SMOOTH",
"288.667 121 OFFCURVE",
"316 127.667 OFFCURVE",
"340 141 CURVE SMOOTH",
"363.333 153 OFFCURVE",
"381 169 OFFCURVE",
"393 189 CURVE SMOOTH",
"403 205.667 OFFCURVE",
"408 223 OFFCURVE",
"408 241 CURVE SMOOTH",
"408 259 OFFCURVE",
"403.333 274.667 OFFCURVE",
"394 288 CURVE SMOOTH",
"384 300.667 OFFCURVE",
"370.667 307.667 OFFCURVE",
"354 309 CURVE SMOOTH",
"348.667 309 OFFCURVE",
"346 306.333 OFFCURVE",
"346 301 CURVE SMOOTH",
"346 296.333 OFFCURVE",
"348.333 294 OFFCURVE",
"353 294 CURVE SMOOTH",
"365 292.667 OFFCURVE",
"374.333 287.333 OFFCURVE",
"381 278 CURVE SMOOTH",
"387.667 269.333 OFFCURVE",
"391 258.667 OFFCURVE",
"391 246 CURVE SMOOTH",
"391 227.333 OFFCURVE",
"384.333 210.333 OFFCURVE",
"371 195 CURVE SMOOTH",
"345 165 OFFCURVE",
"307.667 150 OFFCURVE",
"259 150 CURVE SMOOTH",
"227 150 OFFCURVE",
"195.667 158 OFFCURVE",
"165 174 CURVE SMOOTH",
"133.667 190 OFFCURVE",
"110 214 OFFCURVE",
"94 246 CURVE SMOOTH",
"78.667 274.667 OFFCURVE",
"71 308.333 OFFCURVE",
"71 347 CURVE SMOOTH",
"71 359 LINE",
"72 373 LINE",
"97.333 405.667 OFFCURVE",
"129 427 OFFCURVE",
"167 437 CURVE SMOOTH",
"171 437.667 OFFCURVE",
"173 440 OFFCURVE",
"173 444 CURVE SMOOTH",
"173 449.333 OFFCURVE",
"170.667 452 OFFCURVE",
"166 452 CURVE",
"164 451 LINE",
"133.333 444.333 OFFCURVE",
"106.667 430.333 OFFCURVE",
"76 401 CURVE",
"90.667 454.333 OFFCURVE",
"111.667 488.333 OFFCURVE",
"141 515 CURVE SMOOTH",
"174.333 544.333 OFFCURVE",
"214.333 559 OFFCURVE",
"261 559 CURVE SMOOTH",
"325 559 OFFCURVE",
"375.667 534 OFFCURVE",
"413 484 CURVE SMOOTH",
"427 466 OFFCURVE",
"438 446 OFFCURVE",
"446 424 CURVE",
"445.333 406.667 OFFCURVE",
"445 388.167 OFFCURVE",
"445 368.5 CURVE SMOOTH",
"445 307 LINE",
"415 307 LINE SMOOTH",
"409 307 OFFCURVE",
"406 304 OFFCURVE",
"406 300 CURVE SMOOTH",
"406 296 OFFCURVE",
"409 292 OFFCURVE",
"415 292 CURVE SMOOTH",
"445 289 LINE",
"445 258.333 OFFCURVE",
"445.667 225.667 OFFCURVE",
"447 191 CURVE",
"431.667 149.667 OFFCURVE",
"408.333 114 OFFCURVE",
"377 84 CURVE SMOOTH",
"323.667 32 OFFCURVE",
"262.667 6 OFFCURVE",
"194 6 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"302 -29 OFFCURVE",
"366 -2 OFFCURVE",
"421 53 CURVE SMOOTH",
"426 58 OFFCURVE",
"431 64 OFFCURVE",
"436 70 CURVE SMOOTH",
"450 88 LINE",
"451 79 LINE SMOOTH",
"451 68 OFFCURVE",
"453 56 OFFCURVE",
"456 43 CURVE",
"449 40 LINE SMOOTH",
"438 35 OFFCURVE",
"433 25 OFFCURVE",
"433 17 CURVE SMOOTH",
"433 10 OFFCURVE",
"437 5 OFFCURVE",
"444 5 CURVE SMOOTH",
"446 5 OFFCURVE",
"449 6 OFFCURVE",
"452 7 CURVE SMOOTH",
"468 13 LINE",
"478 -6 OFFCURVE",
"489 -18 OFFCURVE",
"502 -23 CURVE SMOOTH",
"513 -27 OFFCURVE",
"519 -22 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -12 OFFCURVE",
"517 -8 OFFCURVE",
"514 -6 CURVE SMOOTH",
"507 -2 OFFCURVE",
"503 6 OFFCURVE",
"500 18 CURVE",
"509 19 OFFCURVE",
"519 20 OFFCURVE",
"528 20 CURVE SMOOTH",
"556 20 LINE SMOOTH",
"591 20 OFFCURVE",
"656 12 OFFCURVE",
"697 9 CURVE SMOOTH",
"712 8 OFFCURVE",
"726 7 OFFCURVE",
"740 7 CURVE SMOOTH",
"750 7 OFFCURVE",
"760 8 OFFCURVE",
"770 8 CURVE SMOOTH",
"841 11 OFFCURVE",
"892 41 OFFCURVE",
"892 119 CURVE SMOOTH",
"892 183 OFFCURVE",
"848 208 OFFCURVE",
"800 208 CURVE SMOOTH",
"749 208 OFFCURVE",
"734 187 OFFCURVE",
"723 144 CURVE SMOOTH",
"721 138 OFFCURVE",
"726 134 OFFCURVE",
"731 134 CURVE SMOOTH",
"734 134 OFFCURVE",
"738 136 OFFCURVE",
"739 141 CURVE SMOOTH",
"746 176 OFFCURVE",
"753 185 OFFCURVE",
"797 185 CURVE SMOOTH",
"841 185 OFFCURVE",
"876 170 OFFCURVE",
"876 123 CURVE SMOOTH",
"876 56 OFFCURVE",
"825 34 OFFCURVE",
"757 34 CURVE SMOOTH",
"721 34 OFFCURVE",
"621 45 OFFCURVE",
"568 50 CURVE SMOOTH",
"552 52 OFFCURVE",
"537 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"512 52 OFFCURVE",
"502 52 OFFCURVE",
"493 51 CURVE",
"487 89 OFFCURVE",
"485 142 OFFCURVE",
"485 199 CURVE SMOOTH",
"485 227 OFFCURVE",
"485 257 OFFCURVE",
"486 287 CURVE",
"501 286 OFFCURVE",
"519 286 OFFCURVE",
"537 286 CURVE SMOOTH",
"625 286 OFFCURVE",
"739 298 OFFCURVE",
"758 347 CURVE SMOOTH",
"761 354 OFFCURVE",
"756 359 OFFCURVE",
"751 359 CURVE SMOOTH",
"748 359 OFFCURVE",
"745 357 OFFCURVE",
"744 353 CURVE",
"727 311 OFFCURVE",
"633 304 OFFCURVE",
"549 304 CURVE SMOOTH",
"527 304 OFFCURVE",
"506 304 OFFCURVE",
"487 305 CURVE",
"490 380 OFFCURVE",
"493 450 OFFCURVE",
"496 499 CURVE",
"546 506 OFFCURVE",
"591 509 OFFCURVE",
"637 509 CURVE SMOOTH",
"658 509 OFFCURVE",
"680 509 OFFCURVE",
"702 507 CURVE SMOOTH",
"759 504 OFFCURVE",
"782 483 OFFCURVE",
"781 438 CURVE SMOOTH",
"781 428 OFFCURVE",
"804 452 OFFCURVE",
"804 464 CURVE",
"801 483 OFFCURVE",
"798 503 OFFCURVE",
"790 515 CURVE SMOOTH",
"778 534 OFFCURVE",
"725 539 OFFCURVE",
"664 539 CURVE SMOOTH",
"607 539 OFFCURVE",
"543 534 OFFCURVE",
"499 533 CURVE",
"500 553 LINE SMOOTH",
"501 561 OFFCURVE",
"490 565 OFFCURVE",
"478 565 CURVE SMOOTH",
"464 565 OFFCURVE",
"449 560 OFFCURVE",
"449 550 CURVE",
"450 545 LINE",
"450 539 LINE SMOOTH",
"450 536 OFFCURVE",
"450 534 OFFCURVE",
"451 532 CURVE",
"450 509 LINE",
"448 481 LINE",
"439 492 LINE SMOOTH",
"391 547 OFFCURVE",
"332 574 OFFCURVE",
"261 574 CURVE SMOOTH",
"197 574 OFFCURVE",
"144 551 OFFCURVE",
"102 505 CURVE SMOOTH",
"63 462 OFFCURVE",
"42 410 OFFCURVE",
"39 350 CURVE",
"15 305 OFFCURVE",
"3 254 OFFCURVE",
"3 199 CURVE SMOOTH",
"3 127 OFFCURVE",
"26 70 OFFCURVE",
"71 29 CURVE SMOOTH",
"112 -10 OFFCURVE",
"164 -29 OFFCURVE",
"227 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 6 OFFCURVE",
"102 22 OFFCURVE",
"71 53 CURVE SMOOTH",
"36 88 OFFCURVE",
"18 136 OFFCURVE",
"18 199 CURVE SMOOTH",
"18 235 OFFCURVE",
"24 269 OFFCURVE",
"40 316 CURVE",
"52 231 OFFCURVE",
"89 179 OFFCURVE",
"156 146 CURVE SMOOTH",
"189 129 OFFCURVE",
"223 121 OFFCURVE",
"258 121 CURVE SMOOTH",
"289 121 OFFCURVE",
"316 128 OFFCURVE",
"340 141 CURVE SMOOTH",
"363 153 OFFCURVE",
"381 169 OFFCURVE",
"393 189 CURVE SMOOTH",
"403 206 OFFCURVE",
"408 223 OFFCURVE",
"408 241 CURVE SMOOTH",
"408 259 OFFCURVE",
"403 275 OFFCURVE",
"394 288 CURVE SMOOTH",
"384 301 OFFCURVE",
"371 308 OFFCURVE",
"354 309 CURVE SMOOTH",
"349 309 OFFCURVE",
"346 306 OFFCURVE",
"346 301 CURVE SMOOTH",
"346 296 OFFCURVE",
"348 294 OFFCURVE",
"353 294 CURVE SMOOTH",
"365 293 OFFCURVE",
"374 287 OFFCURVE",
"381 278 CURVE SMOOTH",
"388 269 OFFCURVE",
"391 259 OFFCURVE",
"391 246 CURVE SMOOTH",
"391 227 OFFCURVE",
"384 210 OFFCURVE",
"371 195 CURVE SMOOTH",
"345 165 OFFCURVE",
"308 150 OFFCURVE",
"259 150 CURVE SMOOTH",
"227 150 OFFCURVE",
"196 158 OFFCURVE",
"165 174 CURVE SMOOTH",
"134 190 OFFCURVE",
"110 214 OFFCURVE",
"94 246 CURVE SMOOTH",
"79 275 OFFCURVE",
"71 308 OFFCURVE",
"71 347 CURVE SMOOTH",
"71 359 LINE",
"72 373 LINE",
"97 406 OFFCURVE",
"129 427 OFFCURVE",
"167 437 CURVE SMOOTH",
"171 438 OFFCURVE",
"173 440 OFFCURVE",
"173 444 CURVE SMOOTH",
"173 449 OFFCURVE",
"171 452 OFFCURVE",
"166 452 CURVE",
"164 451 LINE",
"133 444 OFFCURVE",
"107 430 OFFCURVE",
"76 401 CURVE",
"91 454 OFFCURVE",
"112 488 OFFCURVE",
"141 515 CURVE SMOOTH",
"174 544 OFFCURVE",
"214 559 OFFCURVE",
"261 559 CURVE SMOOTH",
"325 559 OFFCURVE",
"376 534 OFFCURVE",
"413 484 CURVE SMOOTH",
"427 466 OFFCURVE",
"438 446 OFFCURVE",
"446 424 CURVE",
"445 407 OFFCURVE",
"445 388 OFFCURVE",
"445 369 CURVE SMOOTH",
"445 307 LINE",
"415 307 LINE SMOOTH",
"409 307 OFFCURVE",
"406 304 OFFCURVE",
"406 300 CURVE SMOOTH",
"406 296 OFFCURVE",
"409 292 OFFCURVE",
"415 292 CURVE SMOOTH",
"445 289 LINE",
"445 258 OFFCURVE",
"446 226 OFFCURVE",
"447 191 CURVE",
"432 150 OFFCURVE",
"408 114 OFFCURVE",
"377 84 CURVE SMOOTH",
"324 32 OFFCURVE",
"263 6 OFFCURVE",
"194 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 3 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012172 3 160 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 3 95 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012186 3 9 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 27 170 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 46 170 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 80 170 80 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 153 80 169 80 185 80 201 80 217 80 233 80 249 80 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 153 80 169 80 185 80 201 80 217 80 233 80 249 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012135 9 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 172 22 172 38 172 54 172 70 172 86 172 102 172 118 172 134 172 150 172 166 172 182 172 198 172 214 172 230 172 246 172 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 172 22 172 38 172 54 172 70 172 86 172 102 172 118 172 134 172 150 172 166 172 182 172 198 172 214 172 230 172 246 172 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 172 22 172 38 172 54 172 70 172 86 172 102 172 118 172 134 172 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 172 165 172 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012183 9 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 186 22 186 38 186 54 186 70 186 86 186 102 186 118 186 134 186 150 186 166 186 182 186 198 186 214 186 230 186 246 186 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 186 22 186 38 186 54 186 70 186 86 186 102 186 118 186 134 186 150 186 166 186 182 186 198 186 214 186 230 186 246 186 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 186 22 186 38 186 54 186 70 186 86 186 102 186 118 186 134 186 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 186 165 186 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012203 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012203 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012207 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01292 2 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012168 1 164 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012168 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012164 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012130 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 130 24 130 40 130 56 130 72 130 88 130 104 130 120 130 136 130 152 130 168 130 184 130 200 130 216 130 232 130 248 130 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 130 24 130 40 130 56 130 72 130 88 130 104 130 120 130 136 130 152 130 168 130 184 130 200 130 216 130 232 130 248 130 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 130 24 130 40 130 56 130 72 130 88 130 104 130 120 130 136 130 152 130 168 130 184 130 200 130 216 130 232 130 248 130 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012164 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012197 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012164 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012199 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012199 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012168 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012202 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012202 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 916;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"204 -86 OFFCURVE",
"208 -85 OFFCURVE",
"213 -82 CURVE SMOOTH",
"218 -80 OFFCURVE",
"220 -77 OFFCURVE",
"220 -74 CURVE SMOOTH",
"220 -73 LINE",
"219 -71 LINE",
"204 -53 OFFCURVE",
"190 -26 OFFCURVE",
"179 9 CURVE SMOOTH",
"164 52 OFFCURVE",
"157 101 OFFCURVE",
"157 154 CURVE SMOOTH",
"157 180 OFFCURVE",
"159 208 OFFCURVE",
"163 237 CURVE SMOOTH",
"176 333 OFFCURVE",
"219 420 OFFCURVE",
"291 498 CURVE",
"353 493 OFFCURVE",
"401 474 OFFCURVE",
"435 441 CURVE SMOOTH",
"464 412 OFFCURVE",
"479 377 OFFCURVE",
"479 335 CURVE SMOOTH",
"479 290 OFFCURVE",
"463 250 OFFCURVE",
"430 217 CURVE SMOOTH",
"394 181 OFFCURVE",
"349 163 OFFCURVE",
"295 163 CURVE SMOOTH",
"274 163 OFFCURVE",
"257 169 OFFCURVE",
"244 181 CURVE SMOOTH",
"233 192 OFFCURVE",
"228 205 OFFCURVE",
"228 221 CURVE SMOOTH",
"228 236 OFFCURVE",
"233 248 OFFCURVE",
"242 259 CURVE SMOOTH",
"253 271 OFFCURVE",
"267 277 OFFCURVE",
"285 277 CURVE SMOOTH",
"290 277 OFFCURVE",
"296 274 OFFCURVE",
"301 267 CURVE",
"307 262 OFFCURVE",
"311 255 OFFCURVE",
"312 248 CURVE SMOOTH",
"313 245 OFFCURVE",
"314 243 OFFCURVE",
"315 243 CURVE SMOOTH",
"316 243 OFFCURVE",
"317 244 OFFCURVE",
"318 245 CURVE SMOOTH",
"319 246 OFFCURVE",
"319 248 OFFCURVE",
"319 252 CURVE SMOOTH",
"319 261 OFFCURVE",
"316 270 OFFCURVE",
"309 279 CURVE SMOOTH",
"302 288 OFFCURVE",
"294 292 OFFCURVE",
"285 292 CURVE SMOOTH",
"261 292 OFFCURVE",
"243 285 OFFCURVE",
"230 271 CURVE SMOOTH",
"218 258 OFFCURVE",
"212 242 OFFCURVE",
"212 224 CURVE SMOOTH",
"212 203 OFFCURVE",
"219 186 OFFCURVE",
"233 172 CURVE SMOOTH",
"248 156 OFFCURVE",
"268 148 OFFCURVE",
"295 148 CURVE SMOOTH",
"358 148 OFFCURVE",
"413 171 OFFCURVE",
"458 216 CURVE SMOOTH",
"501 258 OFFCURVE",
"522 305 OFFCURVE",
"522 358 CURVE SMOOTH",
"522 401 OFFCURVE",
"506 435 OFFCURVE",
"475 462 CURVE SMOOTH",
"440 494 OFFCURVE",
"385 512 OFFCURVE",
"310 517 CURVE",
"327 533 OFFCURVE",
"338 542 OFFCURVE",
"350 550 CURVE SMOOTH",
"353 552 OFFCURVE",
"355 554 OFFCURVE",
"355 555 CURVE SMOOTH",
"355 556 OFFCURVE",
"352 556 OFFCURVE",
"347 556 CURVE",
"344 557 OFFCURVE",
"341 557 OFFCURVE",
"340 557 CURVE SMOOTH",
"336 556 LINE SMOOTH",
"313 547 OFFCURVE",
"292 534 OFFCURVE",
"272 518 CURVE",
"204 517 OFFCURVE",
"138 507 OFFCURVE",
"78 475 CURVE SMOOTH",
"20 443 OFFCURVE",
"-9 399 OFFCURVE",
"-9 344 CURVE SMOOTH",
"-9 315 OFFCURVE",
"6 289 OFFCURVE",
"37 264 CURVE SMOOTH",
"38 263 OFFCURVE",
"40 262 OFFCURVE",
"41 262 CURVE SMOOTH",
"44 262 OFFCURVE",
"47 264 OFFCURVE",
"51 268 CURVE SMOOTH",
"54 271 OFFCURVE",
"56 274 OFFCURVE",
"56 278 CURVE SMOOTH",
"56 279 OFFCURVE",
"55 281 OFFCURVE",
"54 282 CURVE SMOOTH",
"28 304 OFFCURVE",
"15 323 OFFCURVE",
"15 340 CURVE SMOOTH",
"15 393 OFFCURVE",
"41 434 OFFCURVE",
"93 462 CURVE SMOOTH",
"134 485 OFFCURVE",
"183 496 OFFCURVE",
"250 499 CURVE",
"181 428 OFFCURVE",
"140 342 OFFCURVE",
"128 239 CURVE SMOOTH",
"123 206 OFFCURVE",
"121 176 OFFCURVE",
"121 145 CURVE SMOOTH",
"121 46 OFFCURVE",
"144 -30 OFFCURVE",
"189 -83 CURVE",
"190 -85 OFFCURVE",
"192 -86 OFFCURVE",
"197 -86 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"204 -86 OFFCURVE",
"208 -85 OFFCURVE",
"213 -82 CURVE SMOOTH",
"218 -80 OFFCURVE",
"220 -77 OFFCURVE",
"220 -74 CURVE SMOOTH",
"220 -73 LINE",
"219 -71 LINE",
"204 -53 OFFCURVE",
"190 -26 OFFCURVE",
"179 9 CURVE SMOOTH",
"164 52 OFFCURVE",
"157 101 OFFCURVE",
"157 154 CURVE SMOOTH",
"157 180 OFFCURVE",
"159 208 OFFCURVE",
"163 237 CURVE SMOOTH",
"176 333 OFFCURVE",
"219 420 OFFCURVE",
"291 498 CURVE",
"353 493 OFFCURVE",
"401 474 OFFCURVE",
"435 441 CURVE SMOOTH",
"464 412 OFFCURVE",
"479 377 OFFCURVE",
"479 335 CURVE SMOOTH",
"479 290 OFFCURVE",
"463 250 OFFCURVE",
"430 217 CURVE SMOOTH",
"394 181 OFFCURVE",
"349 163 OFFCURVE",
"295 163 CURVE SMOOTH",
"274 163 OFFCURVE",
"257 169 OFFCURVE",
"244 181 CURVE SMOOTH",
"233 192 OFFCURVE",
"228 205 OFFCURVE",
"228 221 CURVE SMOOTH",
"228 236 OFFCURVE",
"233 248 OFFCURVE",
"242 259 CURVE SMOOTH",
"253 271 OFFCURVE",
"267 277 OFFCURVE",
"285 277 CURVE SMOOTH",
"290 277 OFFCURVE",
"296 274 OFFCURVE",
"301 267 CURVE",
"307 262 OFFCURVE",
"311 255 OFFCURVE",
"312 248 CURVE SMOOTH",
"313 245 OFFCURVE",
"314 243 OFFCURVE",
"315 243 CURVE SMOOTH",
"316 243 OFFCURVE",
"317 244 OFFCURVE",
"318 245 CURVE SMOOTH",
"319 246 OFFCURVE",
"319 248 OFFCURVE",
"319 252 CURVE SMOOTH",
"319 261 OFFCURVE",
"316 270 OFFCURVE",
"309 279 CURVE SMOOTH",
"302 288 OFFCURVE",
"294 292 OFFCURVE",
"285 292 CURVE SMOOTH",
"261 292 OFFCURVE",
"243 285 OFFCURVE",
"230 271 CURVE SMOOTH",
"218 258 OFFCURVE",
"212 242 OFFCURVE",
"212 224 CURVE SMOOTH",
"212 203 OFFCURVE",
"219 186 OFFCURVE",
"233 172 CURVE SMOOTH",
"248 156 OFFCURVE",
"268 148 OFFCURVE",
"295 148 CURVE SMOOTH",
"358 148 OFFCURVE",
"413 171 OFFCURVE",
"458 216 CURVE SMOOTH",
"501 258 OFFCURVE",
"522 305 OFFCURVE",
"522 358 CURVE SMOOTH",
"522 401 OFFCURVE",
"506 435 OFFCURVE",
"475 462 CURVE SMOOTH",
"440 494 OFFCURVE",
"385 512 OFFCURVE",
"310 517 CURVE",
"327 533 OFFCURVE",
"338 542 OFFCURVE",
"350 550 CURVE SMOOTH",
"353 552 OFFCURVE",
"355 554 OFFCURVE",
"355 555 CURVE SMOOTH",
"355 556 OFFCURVE",
"352 556 OFFCURVE",
"347 556 CURVE",
"344 557 OFFCURVE",
"341 557 OFFCURVE",
"340 557 CURVE SMOOTH",
"336 556 LINE SMOOTH",
"313 547 OFFCURVE",
"292 534 OFFCURVE",
"272 518 CURVE",
"204 517 OFFCURVE",
"138 507 OFFCURVE",
"78 475 CURVE SMOOTH",
"20 443 OFFCURVE",
"-9 399 OFFCURVE",
"-9 344 CURVE SMOOTH",
"-9 315 OFFCURVE",
"6 289 OFFCURVE",
"37 264 CURVE SMOOTH",
"38 263 OFFCURVE",
"40 262 OFFCURVE",
"41 262 CURVE SMOOTH",
"44 262 OFFCURVE",
"47 264 OFFCURVE",
"51 268 CURVE SMOOTH",
"54 271 OFFCURVE",
"56 274 OFFCURVE",
"56 278 CURVE SMOOTH",
"56 279 OFFCURVE",
"55 281 OFFCURVE",
"54 282 CURVE SMOOTH",
"28 304 OFFCURVE",
"15 323 OFFCURVE",
"15 340 CURVE SMOOTH",
"15 393 OFFCURVE",
"41 434 OFFCURVE",
"93 462 CURVE SMOOTH",
"134 485 OFFCURVE",
"183 496 OFFCURVE",
"250 499 CURVE",
"181 428 OFFCURVE",
"140 342 OFFCURVE",
"128 239 CURVE SMOOTH",
"123 206 OFFCURVE",
"121 176 OFFCURVE",
"121 145 CURVE SMOOTH",
"121 46 OFFCURVE",
"144 -30 OFFCURVE",
"189 -83 CURVE",
"190 -85 OFFCURVE",
"192 -86 OFFCURVE",
"197 -86 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01271 3 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 4 61 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 16 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 21 234 21 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 37 170 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 45 165 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01266 83 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 71 165 71 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012100 83 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01233 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1 25 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 463;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Thorn;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"136 516 OFFCURVE",
"196 529 OFFCURVE",
"255 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"394 511 OFFCURVE",
"435 471 CURVE SMOOTH",
"464 442 OFFCURVE",
"479 407 OFFCURVE",
"479 365 CURVE SMOOTH",
"479 320 OFFCURVE",
"463 280 OFFCURVE",
"430 247 CURVE SMOOTH",
"394 211 OFFCURVE",
"349 193 OFFCURVE",
"295 193 CURVE SMOOTH",
"274 193 OFFCURVE",
"257 199 OFFCURVE",
"244 211 CURVE SMOOTH",
"233 222 OFFCURVE",
"228 235 OFFCURVE",
"228 251 CURVE SMOOTH",
"228 266 OFFCURVE",
"233 278 OFFCURVE",
"242 289 CURVE SMOOTH",
"253 301 OFFCURVE",
"267 307 OFFCURVE",
"285 307 CURVE SMOOTH",
"290 307 OFFCURVE",
"296 304 OFFCURVE",
"301 297 CURVE",
"307 292 OFFCURVE",
"311 285 OFFCURVE",
"312 278 CURVE SMOOTH",
"313 275 OFFCURVE",
"314 273 OFFCURVE",
"315 273 CURVE SMOOTH",
"316 273 OFFCURVE",
"317 274 OFFCURVE",
"318 275 CURVE SMOOTH",
"319 276 OFFCURVE",
"319 278 OFFCURVE",
"319 282 CURVE SMOOTH",
"319 291 OFFCURVE",
"316 300 OFFCURVE",
"309 309 CURVE SMOOTH",
"302 318 OFFCURVE",
"294 322 OFFCURVE",
"285 322 CURVE SMOOTH",
"261 322 OFFCURVE",
"243 315 OFFCURVE",
"230 301 CURVE SMOOTH",
"218 288 OFFCURVE",
"212 272 OFFCURVE",
"212 254 CURVE SMOOTH",
"212 233 OFFCURVE",
"219 216 OFFCURVE",
"233 202 CURVE",
"295 178 LINE",
"358 178 OFFCURVE",
"413 201 OFFCURVE",
"458 246 CURVE SMOOTH",
"501 288 OFFCURVE",
"522 335 OFFCURVE",
"522 388 CURVE SMOOTH",
"522 431 OFFCURVE",
"506 465 OFFCURVE",
"475 492 CURVE SMOOTH",
"434 530 OFFCURVE",
"357 548 OFFCURVE",
"278 548 CURVE SMOOTH",
"206 548 OFFCURVE",
"131 534 OFFCURVE",
"78 505 CURVE SMOOTH",
"20 473 OFFCURVE",
"-9 429 OFFCURVE",
"-9 374 CURVE SMOOTH",
"-9 345 OFFCURVE",
"6 319 OFFCURVE",
"37 294 CURVE SMOOTH",
"38 293 OFFCURVE",
"40 292 OFFCURVE",
"41 292 CURVE SMOOTH",
"44 292 OFFCURVE",
"47 294 OFFCURVE",
"51 298 CURVE SMOOTH",
"54 301 OFFCURVE",
"56 304 OFFCURVE",
"56 308 CURVE SMOOTH",
"56 309 OFFCURVE",
"55 311 OFFCURVE",
"54 312 CURVE SMOOTH",
"28 334 OFFCURVE",
"15 353 OFFCURVE",
"15 370 CURVE SMOOTH",
"15 423 OFFCURVE",
"41 464 OFFCURVE",
"93 492 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 -78 OFFCURVE",
"276 -72 OFFCURVE",
"279 -64 CURVE",
"281 -61 OFFCURVE",
"282 -58 OFFCURVE",
"282 -56 CURVE SMOOTH",
"282 -53 OFFCURVE",
"280 -51 OFFCURVE",
"278 -51 CURVE SMOOTH",
"277 -51 OFFCURVE",
"275 -52 OFFCURVE",
"273 -55 CURVE SMOOTH",
"269 -61 OFFCURVE",
"265 -66 OFFCURVE",
"261 -70 CURVE SMOOTH",
"251 -79 OFFCURVE",
"241 -83 OFFCURVE",
"232 -83 CURVE SMOOTH",
"220 -83 OFFCURVE",
"208 -75 OFFCURVE",
"200 -64 CURVE SMOOTH",
"178 -34 OFFCURVE",
"170 23 OFFCURVE",
"170 94 CURVE SMOOTH",
"170 109 OFFCURVE",
"170 124 OFFCURVE",
"171 140 CURVE SMOOTH",
"172 186 OFFCURVE",
"176 234 OFFCURVE",
"182 286 CURVE SMOOTH",
"193 388 OFFCURVE",
"207 485 OFFCURVE",
"221 564 CURVE SMOOTH",
"237 655 LINE SMOOTH",
"239 667 OFFCURVE",
"223 678 OFFCURVE",
"210 678 CURVE SMOOTH",
"202 678 OFFCURVE",
"196 675 OFFCURVE",
"194 666 CURVE SMOOTH",
"172 541 OFFCURVE",
"157 431 OFFCURVE",
"143 279 CURVE SMOOTH",
"140 242 OFFCURVE",
"138 205 OFFCURVE",
"138 168 CURVE SMOOTH",
"138 61 OFFCURVE",
"152 -36 OFFCURVE",
"186 -77 CURVE SMOOTH",
"198 -92 OFFCURVE",
"214 -102 OFFCURVE",
"230 -102 CURVE SMOOTH",
"243 -102 OFFCURVE",
"256 -96 OFFCURVE",
"268 -82 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"358 178 OFFCURVE",
"413 201 OFFCURVE",
"458 246 CURVE SMOOTH",
"501 288 OFFCURVE",
"522 335 OFFCURVE",
"522 388 CURVE SMOOTH",
"522 431 OFFCURVE",
"506 465 OFFCURVE",
"475 492 CURVE SMOOTH",
"434 530 OFFCURVE",
"357 548 OFFCURVE",
"278 548 CURVE SMOOTH",
"206 548 OFFCURVE",
"131 534 OFFCURVE",
"78 505 CURVE SMOOTH",
"20 473 OFFCURVE",
"-9 429 OFFCURVE",
"-9 374 CURVE SMOOTH",
"-9 345 OFFCURVE",
"6 319 OFFCURVE",
"37 294 CURVE SMOOTH",
"38 293 OFFCURVE",
"40 292 OFFCURVE",
"41 292 CURVE SMOOTH",
"44 292 OFFCURVE",
"47 294 OFFCURVE",
"51 298 CURVE SMOOTH",
"54 301 OFFCURVE",
"56 304 OFFCURVE",
"56 308 CURVE SMOOTH",
"56 309 OFFCURVE",
"55 311 OFFCURVE",
"54 312 CURVE SMOOTH",
"28 334 OFFCURVE",
"15 353 OFFCURVE",
"15 370 CURVE SMOOTH",
"15 423 OFFCURVE",
"41 464 OFFCURVE",
"93 492 CURVE SMOOTH",
"136 516 OFFCURVE",
"196 529 OFFCURVE",
"255 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"394 511 OFFCURVE",
"435 471 CURVE SMOOTH",
"464 442 OFFCURVE",
"479 407 OFFCURVE",
"479 365 CURVE SMOOTH",
"479 320 OFFCURVE",
"463 280 OFFCURVE",
"430 247 CURVE SMOOTH",
"394 211 OFFCURVE",
"349 193 OFFCURVE",
"295 193 CURVE SMOOTH",
"274 193 OFFCURVE",
"257 199 OFFCURVE",
"244 211 CURVE SMOOTH",
"233 222 OFFCURVE",
"228 235 OFFCURVE",
"228 251 CURVE SMOOTH",
"228 266 OFFCURVE",
"233 278 OFFCURVE",
"242 289 CURVE SMOOTH",
"253 301 OFFCURVE",
"267 307 OFFCURVE",
"285 307 CURVE SMOOTH",
"290 307 OFFCURVE",
"296 304 OFFCURVE",
"301 297 CURVE",
"307 292 OFFCURVE",
"311 285 OFFCURVE",
"312 278 CURVE SMOOTH",
"313 275 OFFCURVE",
"314 273 OFFCURVE",
"315 273 CURVE SMOOTH",
"316 273 OFFCURVE",
"317 274 OFFCURVE",
"318 275 CURVE SMOOTH",
"319 276 OFFCURVE",
"319 278 OFFCURVE",
"319 282 CURVE SMOOTH",
"319 291 OFFCURVE",
"316 300 OFFCURVE",
"309 309 CURVE SMOOTH",
"302 318 OFFCURVE",
"294 322 OFFCURVE",
"285 322 CURVE SMOOTH",
"261 322 OFFCURVE",
"243 315 OFFCURVE",
"230 301 CURVE SMOOTH",
"218 288 OFFCURVE",
"212 272 OFFCURVE",
"212 254 CURVE SMOOTH",
"212 233 OFFCURVE",
"219 216 OFFCURVE",
"233 202 CURVE",
"295 178 LINE"
);
},
{
closed = 1;
nodes = (
"243 -102 OFFCURVE",
"256 -96 OFFCURVE",
"268 -82 CURVE SMOOTH",
"272 -78 OFFCURVE",
"276 -72 OFFCURVE",
"279 -64 CURVE",
"281 -61 OFFCURVE",
"282 -58 OFFCURVE",
"282 -56 CURVE SMOOTH",
"282 -53 OFFCURVE",
"280 -51 OFFCURVE",
"278 -51 CURVE SMOOTH",
"277 -51 OFFCURVE",
"275 -52 OFFCURVE",
"273 -55 CURVE SMOOTH",
"269 -61 OFFCURVE",
"265 -66 OFFCURVE",
"261 -70 CURVE SMOOTH",
"251 -79 OFFCURVE",
"241 -83 OFFCURVE",
"232 -83 CURVE SMOOTH",
"220 -83 OFFCURVE",
"208 -75 OFFCURVE",
"200 -64 CURVE SMOOTH",
"178 -34 OFFCURVE",
"170 23 OFFCURVE",
"170 94 CURVE SMOOTH",
"170 109 OFFCURVE",
"170 124 OFFCURVE",
"171 140 CURVE SMOOTH",
"172 186 OFFCURVE",
"176 234 OFFCURVE",
"182 286 CURVE SMOOTH",
"193 388 OFFCURVE",
"207 485 OFFCURVE",
"221 564 CURVE SMOOTH",
"237 655 LINE SMOOTH",
"239 667 OFFCURVE",
"223 678 OFFCURVE",
"210 678 CURVE SMOOTH",
"202 678 OFFCURVE",
"196 675 OFFCURVE",
"194 666 CURVE SMOOTH",
"172 541 OFFCURVE",
"157 431 OFFCURVE",
"143 279 CURVE SMOOTH",
"140 242 OFFCURVE",
"138 205 OFFCURVE",
"138 168 CURVE SMOOTH",
"138 61 OFFCURVE",
"152 -36 OFFCURVE",
"186 -77 CURVE SMOOTH",
"198 -92 OFFCURVE",
"214 -102 OFFCURVE",
"230 -102 CURVE SMOOTH"
);
}
);
width = 463;
}
);
unicode = 00DE;
},
{
glyphname = Q;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"565 -186 OFFCURVE",
"585 -179 OFFCURVE",
"600 -166 CURVE SMOOTH",
"613 -153 OFFCURVE",
"619 -138 OFFCURVE",
"619 -120 CURVE SMOOTH",
"619 -101 OFFCURVE",
"612 -85 OFFCURVE",
"599 -70 CURVE SMOOTH",
"584 -53 OFFCURVE",
"564 -45 OFFCURVE",
"540 -44 CURVE",
"536 -43 OFFCURVE",
"534 -44 OFFCURVE",
"534 -47 CURVE SMOOTH",
"534 -50 OFFCURVE",
"537 -52 OFFCURVE",
"543 -53 CURVE SMOOTH",
"558 -54 OFFCURVE",
"572 -60 OFFCURVE",
"583 -71 CURVE SMOOTH",
"593 -82 OFFCURVE",
"598 -95 OFFCURVE",
"598 -108 CURVE SMOOTH",
"598 -134 OFFCURVE",
"581 -147 OFFCURVE",
"548 -147 CURVE SMOOTH",
"540 -147 LINE",
"531 -146 LINE SMOOTH",
"490 -140 OFFCURVE",
"454 -126 OFFCURVE",
"422 -104 CURVE SMOOTH",
"399 -88 OFFCURVE",
"374 -66 OFFCURVE",
"345 -31 CURVE",
"397 -4 OFFCURVE",
"437 34 OFFCURVE",
"464 81 CURVE SMOOTH",
"494 133 OFFCURVE",
"509 196 OFFCURVE",
"509 268 CURVE SMOOTH",
"509 344 OFFCURVE",
"485 409 OFFCURVE",
"439 462 CURVE SMOOTH",
"391 517 OFFCURVE",
"332 544 OFFCURVE",
"261 544 CURVE SMOOTH",
"186 544 OFFCURVE",
"126 522 OFFCURVE",
"79 477 CURVE SMOOTH",
"36 437 OFFCURVE",
"15 392 OFFCURVE",
"15 342 CURVE SMOOTH",
"15 325 OFFCURVE",
"19 309 OFFCURVE",
"26 292 CURVE",
"10 253 OFFCURVE",
"3 213 OFFCURVE",
"3 170 CURVE SMOOTH",
"3 98 OFFCURVE",
"26 41 OFFCURVE",
"71 0 CURVE SMOOTH",
"112 -39 OFFCURVE",
"164 -58 OFFCURVE",
"227 -58 CURVE SMOOTH",
"252 -58 OFFCURVE",
"278 -54 OFFCURVE",
"305 -46 CURVE",
"336 -93 OFFCURVE",
"363 -123 OFFCURVE",
"390 -143 CURVE SMOOTH",
"431 -172 OFFCURVE",
"481 -186 OFFCURVE",
"540 -186 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 -23 OFFCURVE",
"102 -7 OFFCURVE",
"71 24 CURVE SMOOTH",
"36 57 OFFCURVE",
"18 106 OFFCURVE",
"18 170 CURVE SMOOTH",
"18 205 OFFCURVE",
"23 238 OFFCURVE",
"36 275 CURVE",
"47 260 OFFCURVE",
"60 250 OFFCURVE",
"73 245 CURVE SMOOTH",
"92 236 OFFCURVE",
"110 231 OFFCURVE",
"129 231 CURVE SMOOTH",
"150 231 OFFCURVE",
"171 236 OFFCURVE",
"192 247 CURVE SMOOTH",
"210 257 OFFCURVE",
"223 268 OFFCURVE",
"231 281 CURVE SMOOTH",
"238 290 OFFCURVE",
"241 301 OFFCURVE",
"241 312 CURVE SMOOTH",
"241 323 OFFCURVE",
"238 333 OFFCURVE",
"232 340 CURVE SMOOTH",
"226 347 OFFCURVE",
"218 352 OFFCURVE",
"208 353 CURVE SMOOTH",
"206 353 OFFCURVE",
"205 352 OFFCURVE",
"205 349 CURVE SMOOTH",
"205 347 OFFCURVE",
"206 346 OFFCURVE",
"208 346 CURVE SMOOTH",
"224 345 OFFCURVE",
"232 334 OFFCURVE",
"232 315 CURVE SMOOTH",
"232 304 OFFCURVE",
"228 293 OFFCURVE",
"220 283 CURVE SMOOTH",
"204 264 OFFCURVE",
"181 255 OFFCURVE",
"150 255 CURVE SMOOTH",
"131 255 OFFCURVE",
"111 260 OFFCURVE",
"91 270 CURVE SMOOTH",
"74 279 OFFCURVE",
"61 294 OFFCURVE",
"52 313 CURVE",
"79 362 OFFCURVE",
"118 394 OFFCURVE",
"167 407 CURVE SMOOTH",
"171 408 OFFCURVE",
"173 410 OFFCURVE",
"173 414 CURVE SMOOTH",
"173 419 OFFCURVE",
"171 422 OFFCURVE",
"166 422 CURVE",
"164 421 LINE",
"117 410 OFFCURVE",
"81 384 OFFCURVE",
"46 333 CURVE",
"45 339 OFFCURVE",
"45 343 OFFCURVE",
"45 346 CURVE SMOOTH",
"45 353 LINE SMOOTH",
"45 397 OFFCURVE",
"63 436 OFFCURVE",
"99 470 CURVE SMOOTH",
"142 509 OFFCURVE",
"196 529 OFFCURVE",
"261 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"376 504 OFFCURVE",
"413 454 CURVE SMOOTH",
"448 407 OFFCURVE",
"466 348 OFFCURVE",
"466 277 CURVE SMOOTH",
"466 214 OFFCURVE",
"451 159 OFFCURVE",
"421 111 CURVE SMOOTH",
"396 68 OFFCURVE",
"359 33 OFFCURVE",
"312 7 CURVE",
"285 38 OFFCURVE",
"263 58 OFFCURVE",
"242 71 CURVE SMOOTH",
"213 88 OFFCURVE",
"182 97 OFFCURVE",
"147 97 CURVE SMOOTH",
"130 97 OFFCURVE",
"112 92 OFFCURVE",
"95 83 CURVE SMOOTH",
"89 79 OFFCURVE",
"86 74 OFFCURVE",
"86 69 CURVE SMOOTH",
"86 68 OFFCURVE",
"86 68 OFFCURVE",
"87 68 CURVE SMOOTH",
"88 68 LINE",
"90 69 LINE SMOOTH",
"105 78 OFFCURVE",
"124 82 OFFCURVE",
"147 82 CURVE SMOOTH",
"175 82 OFFCURVE",
"201 73 OFFCURVE",
"224 56 CURVE SMOOTH",
"240 44 OFFCURVE",
"258 24 OFFCURVE",
"279 -7 CURVE",
"248 -19 OFFCURVE",
"221 -23 OFFCURVE",
"194 -23 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"565 -186 OFFCURVE",
"585 -179 OFFCURVE",
"600 -166 CURVE SMOOTH",
"613 -153 OFFCURVE",
"619 -138 OFFCURVE",
"619 -120 CURVE SMOOTH",
"619 -101 OFFCURVE",
"612 -85 OFFCURVE",
"599 -70 CURVE SMOOTH",
"584 -53 OFFCURVE",
"564 -45 OFFCURVE",
"540 -44 CURVE",
"536 -43 OFFCURVE",
"534 -44 OFFCURVE",
"534 -47 CURVE SMOOTH",
"534 -50 OFFCURVE",
"537 -52 OFFCURVE",
"543 -53 CURVE SMOOTH",
"558 -54 OFFCURVE",
"572 -60 OFFCURVE",
"583 -71 CURVE SMOOTH",
"593 -82 OFFCURVE",
"598 -95 OFFCURVE",
"598 -108 CURVE SMOOTH",
"598 -134 OFFCURVE",
"581 -147 OFFCURVE",
"548 -147 CURVE SMOOTH",
"540 -147 LINE",
"531 -146 LINE SMOOTH",
"490 -140 OFFCURVE",
"454 -126 OFFCURVE",
"422 -104 CURVE SMOOTH",
"399 -88 OFFCURVE",
"374 -66 OFFCURVE",
"345 -31 CURVE",
"397 -4 OFFCURVE",
"437 34 OFFCURVE",
"464 81 CURVE SMOOTH",
"494 133 OFFCURVE",
"509 196 OFFCURVE",
"509 268 CURVE SMOOTH",
"509 344 OFFCURVE",
"485 409 OFFCURVE",
"439 462 CURVE SMOOTH",
"391 517 OFFCURVE",
"332 544 OFFCURVE",
"261 544 CURVE SMOOTH",
"186 544 OFFCURVE",
"126 522 OFFCURVE",
"79 477 CURVE SMOOTH",
"36 437 OFFCURVE",
"15 392 OFFCURVE",
"15 342 CURVE SMOOTH",
"15 325 OFFCURVE",
"19 309 OFFCURVE",
"26 292 CURVE",
"10 253 OFFCURVE",
"3 213 OFFCURVE",
"3 170 CURVE SMOOTH",
"3 98 OFFCURVE",
"26 41 OFFCURVE",
"71 0 CURVE SMOOTH",
"112 -39 OFFCURVE",
"164 -58 OFFCURVE",
"227 -58 CURVE SMOOTH",
"252 -58 OFFCURVE",
"278 -54 OFFCURVE",
"305 -46 CURVE",
"336 -93 OFFCURVE",
"363 -123 OFFCURVE",
"390 -143 CURVE SMOOTH",
"431 -172 OFFCURVE",
"481 -186 OFFCURVE",
"540 -186 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 -23 OFFCURVE",
"102 -7 OFFCURVE",
"71 24 CURVE SMOOTH",
"36 57 OFFCURVE",
"18 106 OFFCURVE",
"18 170 CURVE SMOOTH",
"18 205 OFFCURVE",
"23 238 OFFCURVE",
"36 275 CURVE",
"47 260 OFFCURVE",
"60 250 OFFCURVE",
"73 245 CURVE SMOOTH",
"92 236 OFFCURVE",
"110 231 OFFCURVE",
"129 231 CURVE SMOOTH",
"150 231 OFFCURVE",
"171 236 OFFCURVE",
"192 247 CURVE SMOOTH",
"210 257 OFFCURVE",
"223 268 OFFCURVE",
"231 281 CURVE SMOOTH",
"238 290 OFFCURVE",
"241 301 OFFCURVE",
"241 312 CURVE SMOOTH",
"241 323 OFFCURVE",
"238 333 OFFCURVE",
"232 340 CURVE SMOOTH",
"226 347 OFFCURVE",
"218 352 OFFCURVE",
"208 353 CURVE SMOOTH",
"206 353 OFFCURVE",
"205 352 OFFCURVE",
"205 349 CURVE SMOOTH",
"205 347 OFFCURVE",
"206 346 OFFCURVE",
"208 346 CURVE SMOOTH",
"224 345 OFFCURVE",
"232 334 OFFCURVE",
"232 315 CURVE SMOOTH",
"232 304 OFFCURVE",
"228 293 OFFCURVE",
"220 283 CURVE SMOOTH",
"204 264 OFFCURVE",
"181 255 OFFCURVE",
"150 255 CURVE SMOOTH",
"131 255 OFFCURVE",
"111 260 OFFCURVE",
"91 270 CURVE SMOOTH",
"74 279 OFFCURVE",
"61 294 OFFCURVE",
"52 313 CURVE",
"79 362 OFFCURVE",
"118 394 OFFCURVE",
"167 407 CURVE SMOOTH",
"171 408 OFFCURVE",
"173 410 OFFCURVE",
"173 414 CURVE SMOOTH",
"173 419 OFFCURVE",
"171 422 OFFCURVE",
"166 422 CURVE",
"164 421 LINE",
"117 410 OFFCURVE",
"81 384 OFFCURVE",
"46 333 CURVE",
"45 339 OFFCURVE",
"45 343 OFFCURVE",
"45 346 CURVE SMOOTH",
"45 353 LINE SMOOTH",
"45 397 OFFCURVE",
"63 436 OFFCURVE",
"99 470 CURVE SMOOTH",
"142 509 OFFCURVE",
"196 529 OFFCURVE",
"261 529 CURVE SMOOTH",
"325 529 OFFCURVE",
"376 504 OFFCURVE",
"413 454 CURVE SMOOTH",
"448 407 OFFCURVE",
"466 348 OFFCURVE",
"466 277 CURVE SMOOTH",
"466 214 OFFCURVE",
"451 159 OFFCURVE",
"421 111 CURVE SMOOTH",
"396 68 OFFCURVE",
"359 33 OFFCURVE",
"312 7 CURVE",
"285 38 OFFCURVE",
"263 58 OFFCURVE",
"242 71 CURVE SMOOTH",
"213 88 OFFCURVE",
"182 97 OFFCURVE",
"147 97 CURVE SMOOTH",
"130 97 OFFCURVE",
"112 92 OFFCURVE",
"95 83 CURVE SMOOTH",
"89 79 OFFCURVE",
"86 74 OFFCURVE",
"86 69 CURVE SMOOTH",
"86 68 OFFCURVE",
"86 68 OFFCURVE",
"87 68 CURVE SMOOTH",
"88 68 LINE",
"90 69 LINE SMOOTH",
"105 78 OFFCURVE",
"124 82 OFFCURVE",
"147 82 CURVE SMOOTH",
"175 82 OFFCURVE",
"201 73 OFFCURVE",
"224 56 CURVE SMOOTH",
"240 44 OFFCURVE",
"258 24 OFFCURVE",
"279 -7 CURVE",
"248 -19 OFFCURVE",
"221 -23 OFFCURVE",
"194 -23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01262 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 4 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01294 84 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 54 170 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 62 165 62 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01290 20 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 27 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 102 94 118 94 134 94 150 94 166 94 182 94 198 94 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 94 229 94 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\012104 20 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012126 20 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01280 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01250 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01290 86 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 1 119 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01258 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 58 24 58 40 58 56 58 72 58 88 58 104 58 120 58 136 58 152 58 168 58 184 58 200 58 216 58 232 58 248 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 58 24 58 40 58 56 58 72 58 88 58 104 58 120 58 136 58 152 58 168 58 184 58 200 58 216 58 232 58 248 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 58 24 58 40 58 56 58 72 58 88 58 104 58 120 58 136 58 152 58 168 58 184 58 200 58 216 58 232 58 248 58 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01265 4 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012100 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 100 24 100 40 100 56 100 72 100 88 100 104 100 120 100 136 100 152 100 168 100 184 100 200 100 216 100 232 100 248 100 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 100 24 100 40 100 56 100 72 100 88 100 104 100 120 100 136 100 152 100 168 100 184 100 200 100 216 100 232 100 248 100 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 100 24 100 40 100 56 100 72 100 88 100 104 100 120 100 136 100 152 100 168 100 184 100 200 100 216 100 232 100 248 100 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012104 4 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012126 4 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 517;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{347, 0}";
},
{
name = top;
position = "{431, 563}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"675 -148 OFFCURVE",
"693 -141 OFFCURVE",
"712 -128 CURVE SMOOTH",
"731 -113 OFFCURVE",
"742 -96 OFFCURVE",
"745 -79 CURVE SMOOTH",
"745 -77 LINE SMOOTH",
"745 -72 OFFCURVE",
"742 -70 OFFCURVE",
"737 -70 CURVE SMOOTH",
"733 -70 OFFCURVE",
"731 -72 OFFCURVE",
"730 -76 CURVE SMOOTH",
"728 -91 OFFCURVE",
"719 -104 OFFCURVE",
"703 -116 CURVE SMOOTH",
"688 -127 OFFCURVE",
"672 -133 OFFCURVE",
"657 -133 CURVE SMOOTH",
"632 -133 OFFCURVE",
"604 -115 OFFCURVE",
"571 -78 CURVE SMOOTH",
"546 -51 OFFCURVE",
"519 -14 OFFCURVE",
"490 34 CURVE SMOOTH",
"481 49 OFFCURVE",
"471 65 OFFCURVE",
"462 81 CURVE SMOOTH",
"434 128 LINE SMOOTH",
"419 153 OFFCURVE",
"405 173 OFFCURVE",
"386 193 CURVE",
"434 213 OFFCURVE",
"472 244 OFFCURVE",
"500 285 CURVE SMOOTH",
"528 325 OFFCURVE",
"542 366 OFFCURVE",
"542 409 CURVE SMOOTH",
"542 456 OFFCURVE",
"525 494 OFFCURVE",
"490 523 CURVE SMOOTH",
"449 556 OFFCURVE",
"388 572 OFFCURVE",
"307 572 CURVE SMOOTH",
"239 572 OFFCURVE",
"168 563 OFFCURVE",
"107 528 CURVE SMOOTH",
"51 497 OFFCURVE",
"23 453 OFFCURVE",
"23 397 CURVE SMOOTH",
"23 379 OFFCURVE",
"29 362 OFFCURVE",
"42 347 CURVE SMOOTH",
"56 329 OFFCURVE",
"71 319 OFFCURVE",
"88 316 CURVE",
"91 316 LINE SMOOTH",
"94 316 OFFCURVE",
"96 316 OFFCURVE",
"97 317 CURVE",
"97 322 LINE",
"91 324 LINE SMOOTH",
"81 328 OFFCURVE",
"71 336 OFFCURVE",
"61 348 CURVE SMOOTH",
"50 362 OFFCURVE",
"45 374 OFFCURVE",
"45 385 CURVE SMOOTH",
"45 441 OFFCURVE",
"72 485 OFFCURVE",
"126 517 CURVE SMOOTH",
"169 544 OFFCURVE",
"220 557 OFFCURVE",
"278 557 CURVE SMOOTH",
"347 557 OFFCURVE",
"400 540 OFFCURVE",
"436 506 CURVE SMOOTH",
"466 478 OFFCURVE",
"481 442 OFFCURVE",
"481 397 CURVE SMOOTH",
"481 358 OFFCURVE",
"470 321 OFFCURVE",
"450 288 CURVE SMOOTH",
"431 255 OFFCURVE",
"405 229 OFFCURVE",
"370 210 CURVE",
"347 231 OFFCURVE",
"323 244 OFFCURVE",
"299 249 CURVE",
"303 302 OFFCURVE",
"305 350 OFFCURVE",
"305 394 CURVE SMOOTH",
"305 435 OFFCURVE",
"304 465 OFFCURVE",
"301 485 CURVE",
"298 493 OFFCURVE",
"293 498 OFFCURVE",
"276 498 CURVE SMOOTH",
"268 498 OFFCURVE",
"263 497 OFFCURVE",
"260 495 CURVE SMOOTH",
"257 493 OFFCURVE",
"256 490 OFFCURVE",
"256 487 CURVE SMOOTH",
"256 481 OFFCURVE",
"256 471 OFFCURVE",
"257 457 CURVE SMOOTH",
"260 403 LINE SMOOTH",
"263 360 OFFCURVE",
"265 321 OFFCURVE",
"265 289 CURVE SMOOTH",
"265 273 LINE",
"264 253 LINE",
"261 254 OFFCURVE",
"258 254 OFFCURVE",
"256 254 CURVE SMOOTH",
"251 254 LINE SMOOTH",
"237 254 OFFCURVE",
"224 250 OFFCURVE",
"211 242 CURVE SMOOTH",
"198 233 OFFCURVE",
"192 223 OFFCURVE",
"192 212 CURVE SMOOTH",
"192 205 OFFCURVE",
"196 197 OFFCURVE",
"203 190 CURVE SMOOTH",
"214 179 OFFCURVE",
"231 173 OFFCURVE",
"259 172 CURVE",
"247 74 OFFCURVE",
"217 10 OFFCURVE",
"169 -19 CURVE SMOOTH",
"157 -26 OFFCURVE",
"142 -30 OFFCURVE",
"124 -30 CURVE SMOOTH",
"92 -30 OFFCURVE",
"66 -19 OFFCURVE",
"45 4 CURVE SMOOTH",
"26 24 OFFCURVE",
"16 48 OFFCURVE",
"16 76 CURVE SMOOTH",
"16 111 OFFCURVE",
"32 138 OFFCURVE",
"63 158 CURVE SMOOTH",
"73 164 OFFCURVE",
"84 167 OFFCURVE",
"96 167 CURVE SMOOTH",
"108 167 OFFCURVE",
"119 164 OFFCURVE",
"128 158 CURVE SMOOTH",
"137 151 OFFCURVE",
"144 142 OFFCURVE",
"147 131 CURVE",
"147 127 OFFCURVE",
"149 125 OFFCURVE",
"152 125 CURVE SMOOTH",
"153 125 OFFCURVE",
"153 125 OFFCURVE",
"153 126 CURVE SMOOTH",
"153 127 LINE SMOOTH",
"151 141 OFFCURVE",
"144 153 OFFCURVE",
"131 162 CURVE SMOOTH",
"120 171 OFFCURVE",
"107 175 OFFCURVE",
"92 175 CURVE SMOOTH",
"80 175 OFFCURVE",
"69 172 OFFCURVE",
"59 166 CURVE SMOOTH",
"22 143 OFFCURVE",
"3 109 OFFCURVE",
"3 64 CURVE SMOOTH",
"3 40 OFFCURVE",
"10 18 OFFCURVE",
"23 -3 CURVE SMOOTH",
"44 -34 OFFCURVE",
"74 -50 OFFCURVE",
"112 -50 CURVE SMOOTH",
"135 -50 OFFCURVE",
"155 -44 OFFCURVE",
"174 -31 CURVE SMOOTH",
"228 2 OFFCURVE",
"265 71 OFFCURVE",
"286 174 CURVE",
"307 176 LINE SMOOTH",
"312 177 OFFCURVE",
"317 177 OFFCURVE",
"320 178 CURVE",
"347 181 LINE",
"362 167 OFFCURVE",
"374 151 OFFCURVE",
"384 132 CURVE SMOOTH",
"486 -55 OFFCURVE",
"577 -148 OFFCURVE",
"658 -148 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 188 OFFCURVE",
"238 191 OFFCURVE",
"231 194 CURVE SMOOTH",
"224 196 OFFCURVE",
"220 201 OFFCURVE",
"220 207 CURVE SMOOTH",
"220 217 OFFCURVE",
"234 222 OFFCURVE",
"263 221 CURVE",
"262 214 OFFCURVE",
"262 208 OFFCURVE",
"262 203 CURVE SMOOTH",
"260 186 LINE"
);
},
{
closed = 1;
nodes = (
"292 200 LINE",
"292 204 OFFCURVE",
"293 209 OFFCURVE",
"294 214 CURVE",
"307 209 OFFCURVE",
"317 205 OFFCURVE",
"333 194 CURVE",
"314 189 OFFCURVE",
"304 187 OFFCURVE",
"289 186 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"675 -148 OFFCURVE",
"693 -141 OFFCURVE",
"712 -128 CURVE SMOOTH",
"731 -113 OFFCURVE",
"745 -96 OFFCURVE",
"745 -79 CURVE SMOOTH",
"745 -77 LINE SMOOTH",
"745 -72 OFFCURVE",
"742 -70 OFFCURVE",
"737 -70 CURVE SMOOTH",
"733 -70 OFFCURVE",
"731 -72 OFFCURVE",
"730 -76 CURVE SMOOTH",
"728 -91 OFFCURVE",
"719 -104 OFFCURVE",
"703 -116 CURVE SMOOTH",
"688 -127 OFFCURVE",
"672 -133 OFFCURVE",
"657 -133 CURVE SMOOTH",
"632 -133 OFFCURVE",
"604 -115 OFFCURVE",
"571 -78 CURVE SMOOTH",
"546 -51 OFFCURVE",
"519 -14 OFFCURVE",
"490 34 CURVE SMOOTH",
"481 49 OFFCURVE",
"471 65 OFFCURVE",
"462 81 CURVE SMOOTH",
"434 128 LINE SMOOTH",
"419 153 OFFCURVE",
"405 173 OFFCURVE",
"386 193 CURVE",
"434 213 OFFCURVE",
"472 244 OFFCURVE",
"500 285 CURVE SMOOTH",
"528 325 OFFCURVE",
"542 366 OFFCURVE",
"542 409 CURVE SMOOTH",
"542 456 OFFCURVE",
"525 494 OFFCURVE",
"490 523 CURVE SMOOTH",
"449 556 OFFCURVE",
"388 572 OFFCURVE",
"307 572 CURVE SMOOTH",
"239 572 OFFCURVE",
"168 563 OFFCURVE",
"107 528 CURVE SMOOTH",
"51 497 OFFCURVE",
"23 453 OFFCURVE",
"23 397 CURVE SMOOTH",
"23 379 OFFCURVE",
"29 362 OFFCURVE",
"42 347 CURVE SMOOTH",
"56 329 OFFCURVE",
"71 319 OFFCURVE",
"88 316 CURVE",
"91 316 LINE SMOOTH",
"94 316 OFFCURVE",
"96 316 OFFCURVE",
"97 317 CURVE",
"97 322 LINE",
"91 324 LINE SMOOTH",
"81 327 OFFCURVE",
"71 336 OFFCURVE",
"61 348 CURVE SMOOTH",
"50 362 OFFCURVE",
"45 374 OFFCURVE",
"45 385 CURVE SMOOTH",
"45 441 OFFCURVE",
"72 485 OFFCURVE",
"126 517 CURVE SMOOTH",
"169 544 OFFCURVE",
"220 557 OFFCURVE",
"278 557 CURVE SMOOTH",
"347 557 OFFCURVE",
"400 540 OFFCURVE",
"436 506 CURVE SMOOTH",
"466 478 OFFCURVE",
"481 442 OFFCURVE",
"481 397 CURVE SMOOTH",
"481 358 OFFCURVE",
"470 321 OFFCURVE",
"450 288 CURVE SMOOTH",
"431 255 OFFCURVE",
"405 229 OFFCURVE",
"370 210 CURVE",
"347 231 OFFCURVE",
"323 244 OFFCURVE",
"299 249 CURVE",
"303 302 OFFCURVE",
"305 350 OFFCURVE",
"305 394 CURVE SMOOTH",
"305 435 OFFCURVE",
"304 465 OFFCURVE",
"301 485 CURVE",
"298 493 OFFCURVE",
"293 498 OFFCURVE",
"276 498 CURVE SMOOTH",
"268 498 OFFCURVE",
"263 497 OFFCURVE",
"260 495 CURVE SMOOTH",
"257 493 OFFCURVE",
"256 490 OFFCURVE",
"256 487 CURVE SMOOTH",
"256 481 OFFCURVE",
"256 471 OFFCURVE",
"257 457 CURVE SMOOTH",
"260 403 LINE SMOOTH",
"262 360 OFFCURVE",
"265 321 OFFCURVE",
"265 289 CURVE SMOOTH",
"265 273 LINE",
"264 253 LINE",
"261 254 OFFCURVE",
"258 254 OFFCURVE",
"256 254 CURVE SMOOTH",
"251 254 LINE SMOOTH",
"237 254 OFFCURVE",
"224 250 OFFCURVE",
"211 242 CURVE SMOOTH",
"198 233 OFFCURVE",
"192 223 OFFCURVE",
"192 212 CURVE SMOOTH",
"192 205 OFFCURVE",
"196 197 OFFCURVE",
"203 190 CURVE SMOOTH",
"214 179 OFFCURVE",
"231 173 OFFCURVE",
"259 172 CURVE",
"247 74 OFFCURVE",
"217 10 OFFCURVE",
"169 -19 CURVE SMOOTH",
"157 -26 OFFCURVE",
"142 -30 OFFCURVE",
"124 -30 CURVE SMOOTH",
"92 -30 OFFCURVE",
"66 -19 OFFCURVE",
"45 4 CURVE SMOOTH",
"26 24 OFFCURVE",
"16 48 OFFCURVE",
"16 76 CURVE SMOOTH",
"16 111 OFFCURVE",
"32 138 OFFCURVE",
"63 158 CURVE SMOOTH",
"73 164 OFFCURVE",
"84 167 OFFCURVE",
"96 167 CURVE SMOOTH",
"108 167 OFFCURVE",
"119 164 OFFCURVE",
"128 158 CURVE SMOOTH",
"137 151 OFFCURVE",
"144 142 OFFCURVE",
"147 131 CURVE",
"147 127 OFFCURVE",
"149 125 OFFCURVE",
"152 125 CURVE SMOOTH",
"153 125 OFFCURVE",
"153 125 OFFCURVE",
"153 126 CURVE SMOOTH",
"153 127 LINE SMOOTH",
"153 141 OFFCURVE",
"144 153 OFFCURVE",
"131 162 CURVE SMOOTH",
"120 171 OFFCURVE",
"107 175 OFFCURVE",
"92 175 CURVE SMOOTH",
"80 175 OFFCURVE",
"69 172 OFFCURVE",
"59 166 CURVE SMOOTH",
"22 143 OFFCURVE",
"3 109 OFFCURVE",
"3 64 CURVE SMOOTH",
"3 40 OFFCURVE",
"10 18 OFFCURVE",
"23 -3 CURVE SMOOTH",
"44 -34 OFFCURVE",
"74 -50 OFFCURVE",
"112 -50 CURVE SMOOTH",
"135 -50 OFFCURVE",
"155 -44 OFFCURVE",
"174 -31 CURVE SMOOTH",
"228 2 OFFCURVE",
"265 71 OFFCURVE",
"286 174 CURVE",
"307 176 LINE SMOOTH",
"312 176 OFFCURVE",
"317 177 OFFCURVE",
"320 178 CURVE",
"347 181 LINE",
"362 167 OFFCURVE",
"374 151 OFFCURVE",
"384 132 CURVE SMOOTH",
"486 -55 OFFCURVE",
"577 -148 OFFCURVE",
"658 -148 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 188 OFFCURVE",
"238 191 OFFCURVE",
"231 194 CURVE SMOOTH",
"224 196 OFFCURVE",
"220 201 OFFCURVE",
"220 207 CURVE SMOOTH",
"220 217 OFFCURVE",
"234 222 OFFCURVE",
"263 221 CURVE",
"262 214 OFFCURVE",
"263 208 OFFCURVE",
"262 203 CURVE SMOOTH",
"260 186 LINE"
);
},
{
closed = 1;
nodes = (
"292 200 LINE",
"292 204 OFFCURVE",
"293 209 OFFCURVE",
"294 214 CURVE",
"307 209 OFFCURVE",
"317 205 OFFCURVE",
"333 194 CURVE",
"314 189 OFFCURVE",
"304 187 OFFCURVE",
"289 186 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01244 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012154 3 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 4 62 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01288 4 120 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01234 21 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 44 165 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 82 165 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 88 170 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012107 21 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012124 21 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012143 21 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012149 62 82 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 154 22 154 38 154 54 154 70 154 86 154 102 154 118 154 134 154 150 154 166 154 182 154 198 154 214 154 230 154 246 154 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 154 22 154 38 154 54 154 70 154 86 154 102 154 118 154 134 154 150 154 166 154 182 154 198 154 214 154 230 154 246 154 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 154 22 154 38 154 54 154 70 154 86 154 102 154 118 154 134 154 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 154 165 154 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012161 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012134 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012116 1 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 2 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 1 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 545;
}
);
note = R;
unicode = 0052;
},
{
glyphname = Racute;
lastChange = "2021-10-08 06:23:55 +0000";
layers = (
{
background = {
components = (
{
name = R;
},
{
name = acutecomb;
}
);
};
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 399, 303}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 545;
}
);
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2021-10-08 06:23:55 +0000";
layers = (
{
background = {
components = (
{
name = R;
},
{
name = caroncomb;
}
);
};
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 349, 303}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 545;
}
);
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2021-10-08 06:23:55 +0000";
layers = (
{
background = {
components = (
{
name = R;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 545;
}
);
unicode = 0156;
},
{
glyphname = Rdblgrave;
lastChange = "2021-10-08 06:23:55 +0000";
layers = (
{
background = {
components = (
{
name = R;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 320, 303}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 545;
}
);
unicode = 0210;
},
{
glyphname = Rinvertedbreve;
lastChange = "2021-10-08 06:23:55 +0000";
layers = (
{
background = {
components = (
{
name = R;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 346, 303}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 545;
}
);
unicode = 0212;
},
{
glyphname = S;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{191, -97}";
},
{
name = top;
position = "{233, 488}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"310 -97 OFFCURVE",
"387 -25 OFFCURVE",
"387 86 CURVE SMOOTH",
"387 145 OFFCURVE",
"361 186 OFFCURVE",
"326 219 CURVE SMOOTH",
"298 245 OFFCURVE",
"243 281 OFFCURVE",
"212 303 CURVE SMOOTH",
"170 334 OFFCURVE",
"151 364 OFFCURVE",
"151 395 CURVE SMOOTH",
"151 417 OFFCURVE",
"158 436 OFFCURVE",
"172 449 CURVE SMOOTH",
"187 464 OFFCURVE",
"206 471 OFFCURVE",
"231 471 CURVE SMOOTH",
"249 471 OFFCURVE",
"265 465 OFFCURVE",
"279 454 CURVE SMOOTH",
"298 439 OFFCURVE",
"307 419 OFFCURVE",
"307 392 CURVE SMOOTH",
"307 376 OFFCURVE",
"301 368 OFFCURVE",
"288 368 CURVE",
"286 367 OFFCURVE",
"282 368 OFFCURVE",
"275 369 CURVE",
"274 370 OFFCURVE",
"272 370 OFFCURVE",
"270 370 CURVE SMOOTH",
"267 370 OFFCURVE",
"265 369 OFFCURVE",
"265 367 CURVE",
"266 364 OFFCURVE",
"268 361 OFFCURVE",
"271 359 CURVE SMOOTH",
"276 357 OFFCURVE",
"281 355 OFFCURVE",
"286 355 CURVE SMOOTH",
"289 355 LINE SMOOTH",
"297 355 OFFCURVE",
"305 359 OFFCURVE",
"312 368 CURVE SMOOTH",
"319 378 OFFCURVE",
"321 388 OFFCURVE",
"321 401 CURVE SMOOTH",
"321 429 OFFCURVE",
"312 452 OFFCURVE",
"292 468 CURVE SMOOTH",
"275 481 OFFCURVE",
"256 488 OFFCURVE",
"233 488 CURVE SMOOTH",
"202 488 OFFCURVE",
"176 480 OFFCURVE",
"156 461 CURVE SMOOTH",
"135 442 OFFCURVE",
"125 418 OFFCURVE",
"125 387 CURVE SMOOTH",
"125 348 OFFCURVE",
"143 315 OFFCURVE",
"178 288 CURVE SMOOTH",
"261 224 OFFCURVE",
"340 191 OFFCURVE",
"340 82 CURVE SMOOTH",
"340 -10 OFFCURVE",
"294 -84 OFFCURVE",
"196 -84 CURVE SMOOTH",
"118 -84 OFFCURVE",
"56 -27 OFFCURVE",
"56 57 CURVE SMOOTH",
"56 112 OFFCURVE",
"94 171 OFFCURVE",
"152 174 CURVE SMOOTH",
"183 176 OFFCURVE",
"207 169 OFFCURVE",
"225 153 CURVE SMOOTH",
"244 136 OFFCURVE",
"255 112 OFFCURVE",
"255 81 CURVE SMOOTH",
"255 61 OFFCURVE",
"250 43 OFFCURVE",
"239 29 CURVE SMOOTH",
"227 12 OFFCURVE",
"211 3 OFFCURVE",
"192 2 CURVE SMOOTH",
"185 2 OFFCURVE",
"176 6 OFFCURVE",
"165 13 CURVE SMOOTH",
"156 20 OFFCURVE",
"155 7 OFFCURVE",
"162 2 CURVE SMOOTH",
"175 -6 OFFCURVE",
"186 -10 OFFCURVE",
"196 -10 CURVE SMOOTH",
"223 -10 OFFCURVE",
"244 0 OFFCURVE",
"260 21 CURVE SMOOTH",
"273 39 OFFCURVE",
"279 59 OFFCURVE",
"279 82 CURVE SMOOTH",
"279 113 OFFCURVE",
"267 139 OFFCURVE",
"246 159 CURVE SMOOTH",
"222 180 OFFCURVE",
"190 190 OFFCURVE",
"151 187 CURVE SMOOTH",
"86 184 OFFCURVE",
"28 114 OFFCURVE",
"31 49 CURVE SMOOTH",
"36 -42 OFFCURVE",
"108 -97 OFFCURVE",
"195 -97 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"310 -97 OFFCURVE",
"387 -25 OFFCURVE",
"387 86 CURVE SMOOTH",
"387 145 OFFCURVE",
"361 186 OFFCURVE",
"326 219 CURVE SMOOTH",
"298 245 OFFCURVE",
"243 281 OFFCURVE",
"212 303 CURVE SMOOTH",
"170 334 OFFCURVE",
"151 364 OFFCURVE",
"151 395 CURVE SMOOTH",
"151 417 OFFCURVE",
"158 436 OFFCURVE",
"172 449 CURVE SMOOTH",
"187 464 OFFCURVE",
"206 471 OFFCURVE",
"231 471 CURVE SMOOTH",
"249 471 OFFCURVE",
"265 465 OFFCURVE",
"279 454 CURVE SMOOTH",
"298 439 OFFCURVE",
"307 419 OFFCURVE",
"307 392 CURVE SMOOTH",
"307 376 OFFCURVE",
"301 368 OFFCURVE",
"288 368 CURVE",
"286 367 OFFCURVE",
"282 368 OFFCURVE",
"275 369 CURVE",
"274 370 OFFCURVE",
"272 370 OFFCURVE",
"270 370 CURVE SMOOTH",
"267 370 OFFCURVE",
"265 369 OFFCURVE",
"265 367 CURVE",
"266 364 OFFCURVE",
"268 361 OFFCURVE",
"271 359 CURVE SMOOTH",
"276 357 OFFCURVE",
"281 355 OFFCURVE",
"286 355 CURVE SMOOTH",
"289 355 LINE SMOOTH",
"297 355 OFFCURVE",
"305 359 OFFCURVE",
"312 368 CURVE SMOOTH",
"319 378 OFFCURVE",
"321 388 OFFCURVE",
"321 401 CURVE SMOOTH",
"321 429 OFFCURVE",
"312 452 OFFCURVE",
"292 468 CURVE SMOOTH",
"275 481 OFFCURVE",
"256 488 OFFCURVE",
"233 488 CURVE SMOOTH",
"202 488 OFFCURVE",
"176 480 OFFCURVE",
"156 461 CURVE SMOOTH",
"135 442 OFFCURVE",
"125 418 OFFCURVE",
"125 387 CURVE SMOOTH",
"125 348 OFFCURVE",
"143 315 OFFCURVE",
"178 288 CURVE SMOOTH",
"261 224 OFFCURVE",
"340 191 OFFCURVE",
"340 82 CURVE SMOOTH",
"340 -10 OFFCURVE",
"294 -84 OFFCURVE",
"196 -84 CURVE SMOOTH",
"118 -84 OFFCURVE",
"56 -27 OFFCURVE",
"56 57 CURVE SMOOTH",
"56 112 OFFCURVE",
"94 171 OFFCURVE",
"152 174 CURVE SMOOTH",
"183 176 OFFCURVE",
"207 169 OFFCURVE",
"225 153 CURVE SMOOTH",
"244 136 OFFCURVE",
"255 112 OFFCURVE",
"255 81 CURVE SMOOTH",
"255 61 OFFCURVE",
"250 43 OFFCURVE",
"239 29 CURVE SMOOTH",
"227 12 OFFCURVE",
"211 3 OFFCURVE",
"192 2 CURVE SMOOTH",
"185 2 OFFCURVE",
"176 6 OFFCURVE",
"165 13 CURVE SMOOTH",
"156 20 OFFCURVE",
"155 7 OFFCURVE",
"162 2 CURVE SMOOTH",
"175 -6 OFFCURVE",
"186 -10 OFFCURVE",
"196 -10 CURVE SMOOTH",
"223 -10 OFFCURVE",
"244 0 OFFCURVE",
"260 21 CURVE SMOOTH",
"273 39 OFFCURVE",
"279 59 OFFCURVE",
"279 82 CURVE SMOOTH",
"279 113 OFFCURVE",
"267 139 OFFCURVE",
"246 159 CURVE SMOOTH",
"222 180 OFFCURVE",
"190 190 OFFCURVE",
"151 187 CURVE SMOOTH",
"86 184 OFFCURVE",
"28 114 OFFCURVE",
"31 49 CURVE SMOOTH",
"36 -42 OFFCURVE",
"108 -97 OFFCURVE",
"195 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01292 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01234 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 3 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 43 165 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 53 170 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01280 19 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 84 170 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 92 165 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01248 1 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 1 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 30 23 30 39 30 55 30 71 30 87 30 103 30 119 30 135 30 151 30 167 30 183 30 199 30 215 30 231 30 247 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 403;
}
);
note = S;
unicode = 0053;
},
{
glyphname = Sacute;
lastChange = "2021-10-08 06:24:14 +0000";
layers = (
{
background = {
components = (
{
name = S;
},
{
name = acutecomb;
}
);
};
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 201, 228}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 015A;
},
{
glyphname = Scaron;
lastChange = "2021-10-08 06:24:14 +0000";
layers = (
{
background = {
components = (
{
name = S;
},
{
name = caroncomb;
}
);
};
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 151, 228}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 0160;
},
{
glyphname = Scedilla;
lastChange = "2021-10-08 06:24:14 +0000";
layers = (
{
background = {
components = (
{
name = S;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 124, -97}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 015E;
},
{
glyphname = Scircumflex;
lastChange = "2021-10-08 06:24:14 +0000";
layers = (
{
background = {
components = (
{
name = S;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 149, 228}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 015C;
},
{
glyphname = Scommaaccent;
lastChange = "2021-10-08 06:24:14 +0000";
layers = (
{
background = {
components = (
{
name = S;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 155, -97}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 0218;
},
{
glyphname = Germandbls;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"38 -113 OFFCURVE",
"55 -101 OFFCURVE",
"69 -77 CURVE SMOOTH",
"81 -57 OFFCURVE",
"87 -37 OFFCURVE",
"87 -16 CURVE SMOOTH",
"87 9 OFFCURVE",
"83 47 OFFCURVE",
"77 98 CURVE SMOOTH",
"74 148 OFFCURVE",
"70 185 OFFCURVE",
"70 211 CURVE SMOOTH",
"70 310 OFFCURVE",
"87 386 OFFCURVE",
"120 440 CURVE SMOOTH",
"172 525 OFFCURVE",
"231 568 OFFCURVE",
"298 568 CURVE SMOOTH",
"320 568 OFFCURVE",
"339 562 OFFCURVE",
"355 550 CURVE",
"369 536 OFFCURVE",
"376 517 OFFCURVE",
"376 496 CURVE SMOOTH",
"376 440 OFFCURVE",
"337 385 OFFCURVE",
"260 331 CURVE SMOOTH",
"205 296 LINE SMOOTH",
"192 288 OFFCURVE",
"185 276 OFFCURVE",
"185 259 CURVE SMOOTH",
"185 252 OFFCURVE",
"189 249 OFFCURVE",
"196 249 CURVE SMOOTH",
"203 249 OFFCURVE",
"220 251 OFFCURVE",
"246 257 CURVE SMOOTH",
"278 262 LINE SMOOTH",
"287 263 OFFCURVE",
"295 264 OFFCURVE",
"303 264 CURVE SMOOTH",
"329 264 OFFCURVE",
"349 255 OFFCURVE",
"362 236 CURVE SMOOTH",
"374 218 OFFCURVE",
"378 197 OFFCURVE",
"378 169 CURVE SMOOTH",
"378 119 OFFCURVE",
"362 78 OFFCURVE",
"327 44 CURVE SMOOTH",
"294 9 OFFCURVE",
"253 -9 OFFCURVE",
"203 -9 CURVE SMOOTH",
"195 -9 LINE",
"183 -7 LINE",
"178 -7 OFFCURVE",
"173 -6 OFFCURVE",
"171 -6 CURVE SMOOTH",
"164 -5 LINE SMOOTH",
"153 -5 OFFCURVE",
"148 -10 OFFCURVE",
"148 -18 CURVE SMOOTH",
"148 -31 OFFCURVE",
"157 -37 OFFCURVE",
"172 -37 CURVE SMOOTH",
"233 -37 OFFCURVE",
"288 -18 OFFCURVE",
"341 20 CURVE SMOOTH",
"394 63 OFFCURVE",
"421 114 OFFCURVE",
"421 173 CURVE SMOOTH",
"421 208 OFFCURVE",
"408 239 OFFCURVE",
"384 263 CURVE",
"359 284 OFFCURVE",
"329 296 OFFCURVE",
"292 296 CURVE SMOOTH",
"274 296 LINE",
"357 360 OFFCURVE",
"399 426 OFFCURVE",
"399 491 CURVE SMOOTH",
"399 524 OFFCURVE",
"389 550 OFFCURVE",
"368 570 CURVE SMOOTH",
"348 590 OFFCURVE",
"322 600 OFFCURVE",
"288 600 CURVE SMOOTH",
"214 600 OFFCURVE",
"146 550 OFFCURVE",
"88 449 CURVE SMOOTH",
"53 389 OFFCURVE",
"36 308 OFFCURVE",
"36 205 CURVE SMOOTH",
"36 154 OFFCURVE",
"42 85 OFFCURVE",
"53 -1 CURVE",
"53 -18 LINE SMOOTH",
"53 -39 OFFCURVE",
"45 -58 OFFCURVE",
"31 -74 CURVE SMOOTH",
"26 -79 OFFCURVE",
"21 -82 OFFCURVE",
"19 -85 CURVE",
"6 -98 LINE",
"6 -108 OFFCURVE",
"11 -113 OFFCURVE",
"19 -113 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"38 -113 OFFCURVE",
"55 -101 OFFCURVE",
"69 -77 CURVE SMOOTH",
"81 -57 OFFCURVE",
"87 -37 OFFCURVE",
"87 -16 CURVE SMOOTH",
"87 9 OFFCURVE",
"83 47 OFFCURVE",
"77 98 CURVE SMOOTH",
"74 148 OFFCURVE",
"70 185 OFFCURVE",
"70 211 CURVE SMOOTH",
"70 310 OFFCURVE",
"87 386 OFFCURVE",
"120 440 CURVE SMOOTH",
"172 525 OFFCURVE",
"231 568 OFFCURVE",
"298 568 CURVE SMOOTH",
"320 568 OFFCURVE",
"339 562 OFFCURVE",
"355 550 CURVE",
"369 536 OFFCURVE",
"376 517 OFFCURVE",
"376 496 CURVE SMOOTH",
"376 440 OFFCURVE",
"337 385 OFFCURVE",
"260 331 CURVE SMOOTH",
"205 296 LINE SMOOTH",
"192 288 OFFCURVE",
"185 276 OFFCURVE",
"185 259 CURVE SMOOTH",
"185 252 OFFCURVE",
"189 249 OFFCURVE",
"196 249 CURVE SMOOTH",
"203 249 OFFCURVE",
"220 251 OFFCURVE",
"246 257 CURVE SMOOTH",
"278 262 LINE SMOOTH",
"287 263 OFFCURVE",
"295 264 OFFCURVE",
"303 264 CURVE SMOOTH",
"329 264 OFFCURVE",
"349 255 OFFCURVE",
"362 236 CURVE SMOOTH",
"374 218 OFFCURVE",
"378 197 OFFCURVE",
"378 169 CURVE SMOOTH",
"378 119 OFFCURVE",
"362 78 OFFCURVE",
"327 44 CURVE SMOOTH",
"294 9 OFFCURVE",
"253 -9 OFFCURVE",
"203 -9 CURVE SMOOTH",
"195 -9 LINE",
"183 -7 LINE",
"178 -7 OFFCURVE",
"173 -6 OFFCURVE",
"171 -6 CURVE SMOOTH",
"164 -5 LINE SMOOTH",
"153 -5 OFFCURVE",
"148 -10 OFFCURVE",
"148 -18 CURVE SMOOTH",
"148 -31 OFFCURVE",
"157 -37 OFFCURVE",
"172 -37 CURVE SMOOTH",
"233 -37 OFFCURVE",
"288 -18 OFFCURVE",
"341 20 CURVE SMOOTH",
"394 63 OFFCURVE",
"421 114 OFFCURVE",
"421 173 CURVE SMOOTH",
"421 208 OFFCURVE",
"408 239 OFFCURVE",
"384 263 CURVE",
"359 284 OFFCURVE",
"329 296 OFFCURVE",
"292 296 CURVE SMOOTH",
"274 296 LINE",
"357 360 OFFCURVE",
"399 426 OFFCURVE",
"399 491 CURVE SMOOTH",
"399 524 OFFCURVE",
"389 550 OFFCURVE",
"368 570 CURVE SMOOTH",
"348 590 OFFCURVE",
"322 600 OFFCURVE",
"288 600 CURVE SMOOTH",
"214 600 OFFCURVE",
"146 550 OFFCURVE",
"88 449 CURVE SMOOTH",
"53 389 OFFCURVE",
"36 308 OFFCURVE",
"36 205 CURVE SMOOTH",
"36 154 OFFCURVE",
"42 85 OFFCURVE",
"53 -1 CURVE",
"53 -18 LINE SMOOTH",
"53 -39 OFFCURVE",
"45 -58 OFFCURVE",
"31 -74 CURVE SMOOTH",
"26 -79 OFFCURVE",
"21 -82 OFFCURVE",
"19 -85 CURVE",
"6 -98 LINE",
"6 -108 OFFCURVE",
"11 -113 OFFCURVE",
"19 -113 CURVE SMOOTH"
);
}
);
width = 436;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"105 478 OFFCURVE",
"66 465 OFFCURVE",
"39 437 CURVE SMOOTH",
"29 427 OFFCURVE",
"24 414 OFFCURVE",
"24 406 CURVE SMOOTH",
"24 400 OFFCURVE",
"27 396 OFFCURVE",
"31 396 CURVE SMOOTH",
"36 396 OFFCURVE",
"45 402 OFFCURVE",
"56 416 CURVE SMOOTH",
"76 437 OFFCURVE",
"105 453 OFFCURVE",
"143 453 CURVE SMOOTH",
"234 453 OFFCURVE",
"267 361 OFFCURVE",
"267 263 CURVE SMOOTH",
"267 232 OFFCURVE",
"260 195 OFFCURVE",
"248 166 CURVE",
"232 201 OFFCURVE",
"195 218 OFFCURVE",
"158 218 CURVE SMOOTH",
"124 218 OFFCURVE",
"90 204 OFFCURVE",
"70.372 178.933 CURVE SMOOTH",
"48 151 OFFCURVE",
"38 120 OFFCURVE",
"38 92 CURVE SMOOTH",
"38 45 OFFCURVE",
"68 6 OFFCURVE",
"122 6 CURVE SMOOTH",
"136 6 OFFCURVE",
"152 9 OFFCURVE",
"168.875 14.603 CURVE SMOOTH",
"206.186 28.297 OFFCURVE",
"236.035 53.974 OFFCURVE",
"258.422 89.921 CURVE SMOOTH",
"291 137 OFFCURVE",
"306 197 OFFCURVE",
"306 267 CURVE SMOOTH",
"306 388 OFFCURVE",
"251 478 OFFCURVE",
"146.488 478.494 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 190 OFFCURVE",
"137 200 OFFCURVE",
"160 200 CURVE SMOOTH",
"197 200 OFFCURVE",
"233 175 OFFCURVE",
"233 142 CURVE",
"225 112 OFFCURVE",
"213 85 OFFCURVE",
"193 63 CURVE",
"176 40 OFFCURVE",
"155 30 OFFCURVE",
"129 30 CURVE SMOOTH",
"119 30 LINE SMOOTH",
"90 30 OFFCURVE",
"76 56 OFFCURVE",
"76 95 CURVE SMOOTH",
"76 121 OFFCURVE",
"84 144 OFFCURVE",
"98 166 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"136 6 OFFCURVE",
"152 9 OFFCURVE",
"169 15 CURVE SMOOTH",
"206 28 OFFCURVE",
"236 54 OFFCURVE",
"258 90 CURVE SMOOTH",
"291 137 OFFCURVE",
"306 197 OFFCURVE",
"306 267 CURVE SMOOTH",
"306 388 OFFCURVE",
"251 478 OFFCURVE",
"146 478 CURVE SMOOTH",
"105 478 OFFCURVE",
"66 465 OFFCURVE",
"39 437 CURVE SMOOTH",
"29 427 OFFCURVE",
"24 414 OFFCURVE",
"24 406 CURVE SMOOTH",
"24 400 OFFCURVE",
"27 396 OFFCURVE",
"31 396 CURVE SMOOTH",
"36 396 OFFCURVE",
"45 402 OFFCURVE",
"56 416 CURVE SMOOTH",
"76 437 OFFCURVE",
"105 453 OFFCURVE",
"143 453 CURVE SMOOTH",
"234 453 OFFCURVE",
"267 361 OFFCURVE",
"267 263 CURVE SMOOTH",
"267 232 OFFCURVE",
"260 195 OFFCURVE",
"248 166 CURVE",
"232 201 OFFCURVE",
"195 218 OFFCURVE",
"158 218 CURVE SMOOTH",
"124 218 OFFCURVE",
"90 204 OFFCURVE",
"70 179 CURVE SMOOTH",
"48 151 OFFCURVE",
"38 120 OFFCURVE",
"38 92 CURVE SMOOTH",
"38 45 OFFCURVE",
"68 6 OFFCURVE",
"122 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"90 30 OFFCURVE",
"76 56 OFFCURVE",
"76 95 CURVE SMOOTH",
"76 121 OFFCURVE",
"84 144 OFFCURVE",
"98 166 CURVE SMOOTH",
"114 190 OFFCURVE",
"137 200 OFFCURVE",
"160 200 CURVE SMOOTH",
"197 200 OFFCURVE",
"233 175 OFFCURVE",
"233 142 CURVE",
"225 112 OFFCURVE",
"213 85 OFFCURVE",
"193 63 CURVE",
"176 40 OFFCURVE",
"155 30 OFFCURVE",
"129 30 CURVE SMOOTH",
"119 30 LINE SMOOTH"
);
}
);
width = 306;
}
);
unicode = 018F;
},
{
glyphname = T;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{251, -40}";
},
{
name = center;
position = "{404, 332}";
},
{
name = top;
position = "{410, 542}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"310 -45 OFFCURVE",
"354 -26 OFFCURVE",
"392 12 CURVE SMOOTH",
"435 53 OFFCURVE",
"456 107 OFFCURVE",
"456 173 CURVE SMOOTH",
"456 184 OFFCURVE",
"455 192 OFFCURVE",
"454 203 CURVE SMOOTH",
"448 239 LINE",
"431 316 LINE SMOOTH",
"417 375 OFFCURVE",
"410 421 OFFCURVE",
"409 456 CURVE",
"450 456 OFFCURVE",
"482 462 OFFCURVE",
"503 473 CURVE SMOOTH",
"528 485 OFFCURVE",
"540 503 OFFCURVE",
"540 526 CURVE SMOOTH",
"540 533 OFFCURVE",
"538 540 OFFCURVE",
"534 547 CURVE SMOOTH",
"525 562 OFFCURVE",
"510 569 OFFCURVE",
"489 569 CURVE SMOOTH",
"460 569 OFFCURVE",
"436 557 OFFCURVE",
"417 534 CURVE SMOOTH",
"404 519 OFFCURVE",
"396 500 OFFCURVE",
"391 477 CURVE",
"349 483 LINE SMOOTH",
"329 485 OFFCURVE",
"303 489 OFFCURVE",
"271 494 CURVE SMOOTH",
"224 501 OFFCURVE",
"190 504 OFFCURVE",
"169 504 CURVE SMOOTH",
"124 504 OFFCURVE",
"81 490 OFFCURVE",
"46 459 CURVE SMOOTH",
"16 431 OFFCURVE",
"1 397 OFFCURVE",
"1 358 CURVE SMOOTH",
"1 348 OFFCURVE",
"2 338 OFFCURVE",
"4 327 CURVE SMOOTH",
"12 294 OFFCURVE",
"27 268 OFFCURVE",
"50 250 CURVE SMOOTH",
"71 235 OFFCURVE",
"95 227 OFFCURVE",
"122 227 CURVE SMOOTH",
"146 227 OFFCURVE",
"168 233 OFFCURVE",
"189 244 CURVE SMOOTH",
"205 253 OFFCURVE",
"218 266 OFFCURVE",
"228 283 CURVE SMOOTH",
"238 300 OFFCURVE",
"243 317 OFFCURVE",
"243 334 CURVE SMOOTH",
"243 356 OFFCURVE",
"236 373 OFFCURVE",
"221 386 CURVE",
"216 388 LINE",
"215 388 OFFCURVE",
"214 387 OFFCURVE",
"214 384 CURVE SMOOTH",
"214 381 OFFCURVE",
"215 378 OFFCURVE",
"218 375 CURVE SMOOTH",
"229 363 OFFCURVE",
"234 350 OFFCURVE",
"234 335 CURVE SMOOTH",
"234 320 OFFCURVE",
"229 305 OFFCURVE",
"218 289 CURVE SMOOTH",
"208 274 OFFCURVE",
"195 263 OFFCURVE",
"178 255 CURVE SMOOTH",
"163 248 OFFCURVE",
"148 245 OFFCURVE",
"133 245 CURVE SMOOTH",
"110 245 OFFCURVE",
"90 252 OFFCURVE",
"73 265 CURVE SMOOTH",
"54 281 OFFCURVE",
"41 303 OFFCURVE",
"34 332 CURVE SMOOTH",
"32 341 OFFCURVE",
"31 349 OFFCURVE",
"31 357 CURVE SMOOTH",
"31 391 OFFCURVE",
"46 419 OFFCURVE",
"77 442 CURVE SMOOTH",
"106 465 OFFCURVE",
"141 475 OFFCURVE",
"184 478 CURVE SMOOTH",
"193 478 LINE SMOOTH",
"209 478 OFFCURVE",
"238 475 OFFCURVE",
"280 469 CURVE SMOOTH",
"327 462 OFFCURVE",
"363 458 OFFCURVE",
"388 457 CURVE",
"387 445 OFFCURVE",
"386 436 OFFCURVE",
"386 427 CURVE SMOOTH",
"386 396 OFFCURVE",
"391 359 OFFCURVE",
"400 308 CURVE SMOOTH",
"412 237 LINE",
"417 202 LINE SMOOTH",
"418 195 OFFCURVE",
"419 189 OFFCURVE",
"419 183 CURVE SMOOTH",
"419 164 LINE SMOOTH",
"419 91 OFFCURVE",
"399 38 OFFCURVE",
"358 5 CURVE SMOOTH",
"334 -14 OFFCURVE",
"308 -24 OFFCURVE",
"280 -24 CURVE SMOOTH",
"266 -24 OFFCURVE",
"251 -21 OFFCURVE",
"235 -16 CURVE SMOOTH",
"190 -2 OFFCURVE",
"160 28 OFFCURVE",
"147 75 CURVE SMOOTH",
"143 89 OFFCURVE",
"141 102 OFFCURVE",
"141 114 CURVE SMOOTH",
"141 141 OFFCURVE",
"149 163 OFFCURVE",
"166 180 CURVE SMOOTH",
"183 197 OFFCURVE",
"205 205 OFFCURVE",
"234 205 CURVE SMOOTH",
"253 205 OFFCURVE",
"268 198 OFFCURVE",
"280 185 CURVE SMOOTH",
"291 172 OFFCURVE",
"297 158 OFFCURVE",
"297 142 CURVE SMOOTH",
"297 131 OFFCURVE",
"294 121 OFFCURVE",
"288 112 CURVE SMOOTH",
"287 111 OFFCURVE",
"287 109 OFFCURVE",
"287 108 CURVE SMOOTH",
"287 105 OFFCURVE",
"288 103 OFFCURVE",
"291 103 CURVE SMOOTH",
"292 103 OFFCURVE",
"294 104 OFFCURVE",
"296 107 CURVE SMOOTH",
"303 116 OFFCURVE",
"306 129 OFFCURVE",
"306 145 CURVE SMOOTH",
"306 166 OFFCURVE",
"300 184 OFFCURVE",
"288 199 CURVE SMOOTH",
"271 223 OFFCURVE",
"247 230 OFFCURVE",
"219 230 CURVE SMOOTH",
"186 230 OFFCURVE",
"160 219 OFFCURVE",
"140 196 CURVE SMOOTH",
"120 174 OFFCURVE",
"110 146 OFFCURVE",
"110 112 CURVE SMOOTH",
"110 95 OFFCURVE",
"112 80 OFFCURVE",
"117 66 CURVE SMOOTH",
"126 31 OFFCURVE",
"144 3 OFFCURVE",
"172 -18 CURVE SMOOTH",
"196 -36 OFFCURVE",
"225 -45 OFFCURVE",
"259 -45 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"411 497 OFFCURVE",
"416 513 OFFCURVE",
"424 523 CURVE SMOOTH",
"440 544 OFFCURVE",
"459 555 OFFCURVE",
"480 555 CURVE SMOOTH",
"494 555 OFFCURVE",
"505 550 OFFCURVE",
"512 541 CURVE SMOOTH",
"517 536 OFFCURVE",
"520 528 OFFCURVE",
"520 519 CURVE SMOOTH",
"520 504 OFFCURVE",
"513 492 OFFCURVE",
"498 483 CURVE SMOOTH",
"487 477 OFFCURVE",
"469 474 OFFCURVE",
"444 474 CURVE SMOOTH",
"433 474 OFFCURVE",
"422 474 OFFCURVE",
"409 475 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"310 -45 OFFCURVE",
"354 -26 OFFCURVE",
"392 12 CURVE SMOOTH",
"435 53 OFFCURVE",
"456 107 OFFCURVE",
"456 173 CURVE SMOOTH",
"456 184 OFFCURVE",
"456 192 OFFCURVE",
"454 203 CURVE SMOOTH",
"448 239 LINE",
"431 316 LINE SMOOTH",
"418 375 OFFCURVE",
"410 421 OFFCURVE",
"409 456 CURVE",
"450 456 OFFCURVE",
"482 462 OFFCURVE",
"503 473 CURVE SMOOTH",
"528 485 OFFCURVE",
"540 503 OFFCURVE",
"540 526 CURVE SMOOTH",
"540 533 OFFCURVE",
"538 540 OFFCURVE",
"534 547 CURVE SMOOTH",
"525 562 OFFCURVE",
"510 569 OFFCURVE",
"489 569 CURVE SMOOTH",
"460 569 OFFCURVE",
"436 557 OFFCURVE",
"417 534 CURVE SMOOTH",
"404 519 OFFCURVE",
"396 500 OFFCURVE",
"391 477 CURVE",
"349 483 LINE SMOOTH",
"329 486 OFFCURVE",
"303 489 OFFCURVE",
"271 494 CURVE SMOOTH",
"224 501 OFFCURVE",
"190 504 OFFCURVE",
"169 504 CURVE SMOOTH",
"124 504 OFFCURVE",
"81 490 OFFCURVE",
"46 459 CURVE SMOOTH",
"16 431 OFFCURVE",
"1 397 OFFCURVE",
"1 358 CURVE SMOOTH",
"1 348 OFFCURVE",
"2 338 OFFCURVE",
"4 327 CURVE SMOOTH",
"12 294 OFFCURVE",
"27 268 OFFCURVE",
"50 250 CURVE SMOOTH",
"71 235 OFFCURVE",
"95 227 OFFCURVE",
"122 227 CURVE SMOOTH",
"146 227 OFFCURVE",
"168 233 OFFCURVE",
"189 244 CURVE SMOOTH",
"205 253 OFFCURVE",
"218 266 OFFCURVE",
"228 283 CURVE SMOOTH",
"238 300 OFFCURVE",
"243 317 OFFCURVE",
"243 334 CURVE SMOOTH",
"243 356 OFFCURVE",
"236 373 OFFCURVE",
"221 386 CURVE",
"216 388 LINE",
"215 388 OFFCURVE",
"214 387 OFFCURVE",
"214 384 CURVE SMOOTH",
"214 381 OFFCURVE",
"215 378 OFFCURVE",
"218 375 CURVE SMOOTH",
"229 363 OFFCURVE",
"234 350 OFFCURVE",
"234 335 CURVE SMOOTH",
"234 320 OFFCURVE",
"229 305 OFFCURVE",
"218 289 CURVE SMOOTH",
"208 274 OFFCURVE",
"195 263 OFFCURVE",
"178 255 CURVE SMOOTH",
"163 248 OFFCURVE",
"148 245 OFFCURVE",
"133 245 CURVE SMOOTH",
"110 245 OFFCURVE",
"90 252 OFFCURVE",
"73 265 CURVE SMOOTH",
"54 281 OFFCURVE",
"41 303 OFFCURVE",
"34 332 CURVE SMOOTH",
"32 341 OFFCURVE",
"31 349 OFFCURVE",
"31 357 CURVE SMOOTH",
"31 391 OFFCURVE",
"46 419 OFFCURVE",
"77 442 CURVE SMOOTH",
"106 465 OFFCURVE",
"141 478 OFFCURVE",
"184 478 CURVE SMOOTH",
"193 478 LINE SMOOTH",
"209 478 OFFCURVE",
"238 475 OFFCURVE",
"280 469 CURVE SMOOTH",
"327 462 OFFCURVE",
"363 458 OFFCURVE",
"388 457 CURVE",
"387 445 OFFCURVE",
"386 436 OFFCURVE",
"386 427 CURVE SMOOTH",
"386 396 OFFCURVE",
"391 359 OFFCURVE",
"400 308 CURVE SMOOTH",
"412 237 LINE",
"417 202 LINE SMOOTH",
"418 195 OFFCURVE",
"419 189 OFFCURVE",
"419 183 CURVE SMOOTH",
"419 164 LINE SMOOTH",
"419 91 OFFCURVE",
"399 38 OFFCURVE",
"358 5 CURVE SMOOTH",
"334 -14 OFFCURVE",
"308 -24 OFFCURVE",
"280 -24 CURVE SMOOTH",
"266 -24 OFFCURVE",
"251 -21 OFFCURVE",
"235 -16 CURVE SMOOTH",
"190 -2 OFFCURVE",
"160 28 OFFCURVE",
"147 75 CURVE SMOOTH",
"143 89 OFFCURVE",
"141 102 OFFCURVE",
"141 114 CURVE SMOOTH",
"141 141 OFFCURVE",
"149 163 OFFCURVE",
"166 180 CURVE SMOOTH",
"183 197 OFFCURVE",
"205 205 OFFCURVE",
"234 205 CURVE SMOOTH",
"253 205 OFFCURVE",
"268 198 OFFCURVE",
"280 185 CURVE SMOOTH",
"291 172 OFFCURVE",
"297 158 OFFCURVE",
"297 142 CURVE SMOOTH",
"297 131 OFFCURVE",
"294 121 OFFCURVE",
"288 112 CURVE SMOOTH",
"287 111 OFFCURVE",
"287 109 OFFCURVE",
"287 108 CURVE SMOOTH",
"287 105 OFFCURVE",
"288 103 OFFCURVE",
"291 103 CURVE SMOOTH",
"292 103 OFFCURVE",
"294 104 OFFCURVE",
"296 107 CURVE SMOOTH",
"303 116 OFFCURVE",
"306 129 OFFCURVE",
"306 145 CURVE SMOOTH",
"306 166 OFFCURVE",
"300 184 OFFCURVE",
"288 199 CURVE SMOOTH",
"271 223 OFFCURVE",
"247 230 OFFCURVE",
"219 230 CURVE SMOOTH",
"186 230 OFFCURVE",
"160 219 OFFCURVE",
"140 196 CURVE SMOOTH",
"120 174 OFFCURVE",
"110 146 OFFCURVE",
"110 112 CURVE SMOOTH",
"110 95 OFFCURVE",
"112 80 OFFCURVE",
"117 66 CURVE SMOOTH",
"126 31 OFFCURVE",
"144 3 OFFCURVE",
"172 -18 CURVE SMOOTH",
"196 -36 OFFCURVE",
"225 -45 OFFCURVE",
"259 -45 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"433 474 OFFCURVE",
"422 474 OFFCURVE",
"409 475 CURVE",
"411 497 OFFCURVE",
"416 513 OFFCURVE",
"424 523 CURVE SMOOTH",
"440 544 OFFCURVE",
"459 555 OFFCURVE",
"480 555 CURVE SMOOTH",
"494 555 OFFCURVE",
"505 550 OFFCURVE",
"512 541 CURVE SMOOTH",
"517 536 OFFCURVE",
"520 528 OFFCURVE",
"520 519 CURVE SMOOTH",
"520 504 OFFCURVE",
"513 492 OFFCURVE",
"498 483 CURVE SMOOTH",
"487 477 OFFCURVE",
"469 474 OFFCURVE",
"444 474 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01279 3 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 4 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012132 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 4 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012101 91 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01241 31 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01239 113 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012218 41 234 41 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 49 165 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 57 170 57 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 79 165 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01299 113 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 27 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 101 229 101 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012154 132 170 132 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 132 25 132 41 132 57 132 73 132 89 132 105 132 121 132 137 132 153 132 169 132 185 132 201 132 217 132 233 132 249 132 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 132 25 132 41 132 57 132 73 132 89 132 105 132 121 132 137 132 153 132 169 132 185 132 201 132 217 132 233 132 249 132 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 132 25 132 41 132 57 132 73 132 89 132 105 132 121 132 137 132 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012118 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01285 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012105 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012109 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012128 1 136 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012105 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 26 24 26 40 26 56 26 72 26 88 26 104 26 120 26 136 26 152 26 168 26 184 26 200 26 216 26 232 26 248 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 26 24 26 40 26 56 26 72 26 88 26 104 26 120 26 136 26 152 26 168 26 184 26 200 26 216 26 232 26 248 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 26 24 26 40 26 56 26 72 26 88 26 104 26 120 26 136 26 152 26 168 26 184 26 200 26 216 26 232 26 248 26 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01299 105 118 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 481;
}
);
note = T;
unicode = 0054;
},
{
glyphname = Tbar;
lastChange = "2021-10-08 06:47:58 +0000";
layers = (
{
background = {
components = (
{
name = T;
},
{
name = strokeshortcomb;
}
);
};
components = (
{
name = T;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 333, 222}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 481;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2021-10-08 06:24:49 +0000";
layers = (
{
background = {
components = (
{
name = T;
},
{
name = caroncomb;
}
);
};
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 328, 282}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 481;
}
);
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2021-10-08 06:24:49 +0000";
layers = (
{
background = {
components = (
{
name = T;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 184, -40}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 481;
}
);
unicode = 0162;
},
{
glyphname = Tcommaaccent;
lastChange = "2021-10-08 06:24:49 +0000";
layers = (
{
background = {
components = (
{
name = T;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 215, -40}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 481;
}
);
unicode = 021A;
},
{
glyphname = U;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{454, -21}";
},
{
name = ogonek;
position = "{634, 0}";
},
{
name = top;
position = "{424, 485}";
},
{
name = topright;
position = "{516, 464}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"337 -47 OFFCURVE",
"351 -42 OFFCURVE",
"367 -32 CURVE SMOOTH",
"384 -21 OFFCURVE",
"396 -9 OFFCURVE",
"404 5 CURVE SMOOTH",
"443 65 OFFCURVE",
"472 143 OFFCURVE",
"496 263 CURVE",
"511 179 OFFCURVE",
"530 121 OFFCURVE",
"554 73 CURVE SMOOTH",
"583 15 OFFCURVE",
"615 -13 OFFCURVE",
"650 -13 CURVE SMOOTH",
"659 -13 OFFCURVE",
"664 -11 OFFCURVE",
"664 -10 CURVE SMOOTH",
"664 -9 OFFCURVE",
"661 -8 OFFCURVE",
"655 -5 CURVE",
"586 20 OFFCURVE",
"551 111 OFFCURVE",
"551 268 CURVE SMOOTH",
"551 299 OFFCURVE",
"552 334 OFFCURVE",
"555 377 CURVE SMOOTH",
"556 398 OFFCURVE",
"558 415 OFFCURVE",
"559 428 CURVE SMOOTH",
"560 451 LINE",
"560 458 LINE",
"559 462 LINE SMOOTH",
"554 476 OFFCURVE",
"548 483 OFFCURVE",
"540 483 CURVE SMOOTH",
"532 483 OFFCURVE",
"524 478 OFFCURVE",
"516 468 CURVE SMOOTH",
"508 457 OFFCURVE",
"503 444 OFFCURVE",
"501 431 CURVE SMOOTH",
"498 408 OFFCURVE",
"497 370 OFFCURVE",
"494 314 CURVE",
"486 257 OFFCURVE",
"474 204 OFFCURVE",
"458 154 CURVE SMOOTH",
"438 89 OFFCURVE",
"415 44 OFFCURVE",
"389 18 CURVE SMOOTH",
"374 3 OFFCURVE",
"362 -4 OFFCURVE",
"352 -4 CURVE SMOOTH",
"342 -4 OFFCURVE",
"335 2 OFFCURVE",
"331 14 CURVE SMOOTH",
"327 25 OFFCURVE",
"325 41 OFFCURVE",
"325 61 CURVE SMOOTH",
"325 76 OFFCURVE",
"326 90 OFFCURVE",
"327 106 CURVE SMOOTH",
"336 181 OFFCURVE",
"341 238 OFFCURVE",
"341 283 CURVE SMOOTH",
"341 442 OFFCURVE",
"295 517 OFFCURVE",
"203 517 CURVE SMOOTH",
"184 517 OFFCURVE",
"167 514 OFFCURVE",
"144 509 CURVE SMOOTH",
"106 498 OFFCURVE",
"74 477 OFFCURVE",
"47 447 CURVE SMOOTH",
"17 414 OFFCURVE",
"2 375 OFFCURVE",
"2 330 CURVE SMOOTH",
"2 302 OFFCURVE",
"9 277 OFFCURVE",
"26 254 CURVE SMOOTH",
"41 234 OFFCURVE",
"59 224 OFFCURVE",
"81 224 CURVE SMOOTH",
"94 224 OFFCURVE",
"108 228 OFFCURVE",
"123 236 CURVE SMOOTH",
"136 244 OFFCURVE",
"170 271 OFFCURVE",
"170 292 CURVE SMOOTH",
"170 295 OFFCURVE",
"168 297 OFFCURVE",
"166 297 CURVE SMOOTH",
"164 297 OFFCURVE",
"160 294 OFFCURVE",
"157 288 CURVE SMOOTH",
"144 265 OFFCURVE",
"129 252 OFFCURVE",
"113 247 CURVE SMOOTH",
"106 244 OFFCURVE",
"98 243 OFFCURVE",
"90 243 CURVE SMOOTH",
"67 243 OFFCURVE",
"51 254 OFFCURVE",
"41 276 CURVE SMOOTH",
"33 292 OFFCURVE",
"29 313 OFFCURVE",
"29 338 CURVE SMOOTH",
"29 377 OFFCURVE",
"42 412 OFFCURVE",
"69 445 CURVE SMOOTH",
"100 482 OFFCURVE",
"136 499 OFFCURVE",
"179 499 CURVE SMOOTH",
"223 499 OFFCURVE",
"256 481 OFFCURVE",
"276 445 CURVE SMOOTH",
"293 415 OFFCURVE",
"302 369 OFFCURVE",
"302 306 CURVE SMOOTH",
"302 271 OFFCURVE",
"299 222 OFFCURVE",
"292 157 CURVE SMOOTH",
"285 92 OFFCURVE",
"282 50 OFFCURVE",
"282 27 CURVE SMOOTH",
"282 12 LINE SMOOTH",
"282 7 OFFCURVE",
"282 2 OFFCURVE",
"283 -3 CURVE SMOOTH",
"288 -32 OFFCURVE",
"301 -47 OFFCURVE",
"324 -47 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"337 -47 OFFCURVE",
"351 -42 OFFCURVE",
"367 -32 CURVE SMOOTH",
"384 -21 OFFCURVE",
"396 -9 OFFCURVE",
"404 5 CURVE SMOOTH",
"443 65 OFFCURVE",
"472 143 OFFCURVE",
"496 263 CURVE",
"511 179 OFFCURVE",
"530 121 OFFCURVE",
"554 73 CURVE SMOOTH",
"583 15 OFFCURVE",
"615 -13 OFFCURVE",
"650 -13 CURVE SMOOTH",
"659 -13 OFFCURVE",
"664 -11 OFFCURVE",
"664 -10 CURVE SMOOTH",
"664 -9 OFFCURVE",
"661 -8 OFFCURVE",
"655 -5 CURVE",
"586 20 OFFCURVE",
"551 111 OFFCURVE",
"551 268 CURVE SMOOTH",
"551 299 OFFCURVE",
"552 334 OFFCURVE",
"555 377 CURVE SMOOTH",
"556 398 OFFCURVE",
"558 415 OFFCURVE",
"559 428 CURVE SMOOTH",
"560 451 LINE",
"560 458 LINE",
"559 462 LINE SMOOTH",
"555 476 OFFCURVE",
"548 483 OFFCURVE",
"540 483 CURVE SMOOTH",
"532 483 OFFCURVE",
"524 478 OFFCURVE",
"516 468 CURVE SMOOTH",
"508 457 OFFCURVE",
"503 444 OFFCURVE",
"501 431 CURVE SMOOTH",
"498 408 OFFCURVE",
"497 370 OFFCURVE",
"494 314 CURVE",
"486 257 OFFCURVE",
"474 204 OFFCURVE",
"458 154 CURVE SMOOTH",
"438 89 OFFCURVE",
"415 44 OFFCURVE",
"389 18 CURVE SMOOTH",
"374 3 OFFCURVE",
"362 -4 OFFCURVE",
"352 -4 CURVE SMOOTH",
"342 -4 OFFCURVE",
"335 2 OFFCURVE",
"331 14 CURVE SMOOTH",
"327 25 OFFCURVE",
"325 41 OFFCURVE",
"325 61 CURVE SMOOTH",
"325 76 OFFCURVE",
"326 90 OFFCURVE",
"327 106 CURVE SMOOTH",
"336 181 OFFCURVE",
"341 238 OFFCURVE",
"341 283 CURVE SMOOTH",
"341 442 OFFCURVE",
"295 517 OFFCURVE",
"203 517 CURVE SMOOTH",
"184 517 OFFCURVE",
"167 514 OFFCURVE",
"144 509 CURVE SMOOTH",
"106 498 OFFCURVE",
"74 477 OFFCURVE",
"47 447 CURVE SMOOTH",
"17 414 OFFCURVE",
"2 375 OFFCURVE",
"2 330 CURVE SMOOTH",
"2 302 OFFCURVE",
"9 277 OFFCURVE",
"26 254 CURVE SMOOTH",
"41 234 OFFCURVE",
"59 224 OFFCURVE",
"81 224 CURVE SMOOTH",
"94 224 OFFCURVE",
"108 228 OFFCURVE",
"123 236 CURVE SMOOTH",
"136 244 OFFCURVE",
"170 271 OFFCURVE",
"170 292 CURVE SMOOTH",
"170 295 OFFCURVE",
"168 297 OFFCURVE",
"166 297 CURVE SMOOTH",
"164 297 OFFCURVE",
"160 294 OFFCURVE",
"157 288 CURVE SMOOTH",
"144 265 OFFCURVE",
"129 252 OFFCURVE",
"113 247 CURVE SMOOTH",
"106 244 OFFCURVE",
"98 243 OFFCURVE",
"90 243 CURVE SMOOTH",
"67 243 OFFCURVE",
"51 254 OFFCURVE",
"41 276 CURVE SMOOTH",
"33 292 OFFCURVE",
"29 313 OFFCURVE",
"29 338 CURVE SMOOTH",
"29 377 OFFCURVE",
"42 412 OFFCURVE",
"69 445 CURVE SMOOTH",
"100 482 OFFCURVE",
"136 499 OFFCURVE",
"179 499 CURVE SMOOTH",
"223 499 OFFCURVE",
"256 481 OFFCURVE",
"276 445 CURVE SMOOTH",
"293 415 OFFCURVE",
"302 369 OFFCURVE",
"302 306 CURVE SMOOTH",
"302 271 OFFCURVE",
"299 222 OFFCURVE",
"292 157 CURVE SMOOTH",
"285 92 OFFCURVE",
"282 50 OFFCURVE",
"282 27 CURVE SMOOTH",
"282 12 LINE SMOOTH",
"282 7 OFFCURVE",
"282 2 OFFCURVE",
"283 -3 CURVE SMOOTH",
"288 -32 OFFCURVE",
"301 -47 OFFCURVE",
"324 -47 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 3 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 4 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 4 94 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 82 170 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 64 165 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01237 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01273 14 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = U;
unicode = 0055;
},
{
glyphname = Uacute;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = acutecomb;
}
);
};
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 392, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01249 3 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 4 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 4 110 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 98 170 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 49 165 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 80 165 80 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01253 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01255 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01263 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01289 30 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 1 45 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01265 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 65 24 65 40 65 56 65 72 65 88 65 104 65 120 65 136 65 152 65 168 65 184 65 200 65 216 65 232 65 248 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 65 24 65 40 65 56 65 72 65 88 65 104 65 120 65 136 65 152 65 168 65 184 65 200 65 216 65 232 65 248 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 65 24 65 40 65 56 65 72 65 88 65 104 65 120 65 136 65 152 65 168 65 184 65 200 65 216 65 232 65 248 65 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ubreve;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = brevecomb;
}
);
};
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 334, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 016C;
},
{
glyphname = Ucaron;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = caroncomb;
}
);
};
components = (
{
name = U;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 342, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 01D3;
},
{
glyphname = Ucircumflex;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 340, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 3 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 4 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 96 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 84 170 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 56 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 66 165 66 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01237 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01249 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01275 14 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udblgrave;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 313, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 0214;
},
{
glyphname = Udieresis;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 360, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 3 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012119 4 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012109 4 103 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 96 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 84 170 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 119 170 119 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 119 25 119 41 119 57 119 73 119 89 119 105 119 121 119 137 119 153 119 169 119 185 119 201 119 217 119 233 119 249 119 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 119 25 119 41 119 57 119 73 119 89 119 105 119 121 119 137 119 153 119 169 119 185 119 201 119 217 119 233 119 249 119 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 119 25 119 41 119 57 119 73 119 89 119 105 119 121 119 137 119 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01225 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 56 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 109 170 109 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01237 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01249 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01275 14 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012111 2 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Udieresiscaron;
lastChange = "2021-10-08 06:26:44 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = caroncomb;
}
);
};
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 360, 225}";
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 342, 282}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 01D9;
},
{
glyphname = Udieresisgrave;
lastChange = "2021-10-08 08:22:59 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = gravecomb;
}
);
};
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 360, 225}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 336, 282}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 01DB;
},
{
glyphname = Udieresismacron;
lastChange = "2021-10-08 06:26:44 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
};
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 360, 225}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 333, 282}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 01D5;
},
{
glyphname = Udotbelow;
lastChange = "2021-10-08 06:48:16 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 433, -21}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EE4;
},
{
glyphname = Ugrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = gravecomb;
}
);
};
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 336, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 3 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 4 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 96 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 84 170 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 56 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 66 165 66 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01237 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01249 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01275 14 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uhookabove;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 383, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2021-10-08 06:27:03 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = horncomb;
}
);
};
components = (
{
name = U;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 533, 204}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = Uhorn;
},
{
name = acutecomb;
}
);
};
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 392, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2021-10-08 06:48:23 +0000";
layers = (
{
background = {
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 433, -21}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = Uhorn;
},
{
name = gravecomb;
}
);
};
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 336, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 383, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = Uhorn;
},
{
name = tildecomb;
}
);
};
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 337, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2021-10-08 06:30:35 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = hungarumlautcomb;
}
);
};
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 388, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 339, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 0216;
},
{
glyphname = Umacron;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = macroncomb;
}
);
};
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 333, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 016A;
},
{
glyphname = Uogonek;
lastChange = "2021-10-08 06:48:25 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = U;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 555, -5}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = ringcomb;
}
);
};
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 379, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2021-10-08 06:25:21 +0000";
layers = (
{
background = {
components = (
{
name = U;
},
{
name = tildecomb;
}
);
};
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 337, 225}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 636;
}
);
unicode = 0168;
},
{
glyphname = V;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"196 -56 OFFCURVE",
"198 -56 OFFCURVE",
"199 -55 CURVE",
"226 -46 OFFCURVE",
"259 -25 OFFCURVE",
"291 14 CURVE",
"291 -3 LINE SMOOTH",
"291 -8 OFFCURVE",
"295 -10 OFFCURVE",
"302 -10 CURVE SMOOTH",
"306 -10 OFFCURVE",
"311 -9 OFFCURVE",
"318 -6 CURVE SMOOTH",
"323 -4 OFFCURVE",
"325 -2 OFFCURVE",
"325 0 CURVE SMOOTH",
"328 41 LINE",
"330 63 LINE",
"471 224 OFFCURVE",
"521 518 OFFCURVE",
"652 518 CURVE SMOOTH",
"706 518 OFFCURVE",
"735 471 OFFCURVE",
"735 424 CURVE SMOOTH",
"735 390 OFFCURVE",
"718 356 OFFCURVE",
"692 335 CURVE SMOOTH",
"689 332 OFFCURVE",
"686 327 OFFCURVE",
"686 323 CURVE SMOOTH",
"686 321 OFFCURVE",
"687 319 OFFCURVE",
"690 319 CURVE SMOOTH",
"691 319 OFFCURVE",
"693 320 OFFCURVE",
"695 321 CURVE SMOOTH",
"736 341 OFFCURVE",
"770 391 OFFCURVE",
"770 434 CURVE SMOOTH",
"770 490 OFFCURVE",
"727 536 OFFCURVE",
"652 536 CURVE SMOOTH",
"509 536 OFFCURVE",
"471 302 OFFCURVE",
"331 86 CURVE",
"332 96 OFFCURVE",
"332 106 OFFCURVE",
"332 141 CURVE SMOOTH",
"332 342 OFFCURVE",
"290 465 OFFCURVE",
"206 517 CURVE SMOOTH",
"178 535 OFFCURVE",
"150 544 OFFCURVE",
"122 544 CURVE SMOOTH",
"91 544 OFFCURVE",
"64 534 OFFCURVE",
"41 513 CURVE SMOOTH",
"15 490 OFFCURVE",
"2 461 OFFCURVE",
"2 427 CURVE SMOOTH",
"2 398 OFFCURVE",
"11 372 OFFCURVE",
"29 349 CURVE SMOOTH",
"47 326 OFFCURVE",
"68 315 OFFCURVE",
"91 315 CURVE SMOOTH",
"102 315 OFFCURVE",
"114 318 OFFCURVE",
"125 324 CURVE SMOOTH",
"148 337 OFFCURVE",
"160 355 OFFCURVE",
"159 377 CURVE SMOOTH",
"159 379 OFFCURVE",
"159 380 OFFCURVE",
"158 380 CURVE SMOOTH",
"155 380 OFFCURVE",
"154 378 OFFCURVE",
"153 374 CURVE SMOOTH",
"150 357 OFFCURVE",
"139 346 OFFCURVE",
"121 341 CURVE SMOOTH",
"115 339 OFFCURVE",
"109 338 OFFCURVE",
"103 338 CURVE SMOOTH",
"82 338 OFFCURVE",
"64 348 OFFCURVE",
"48 368 CURVE SMOOTH",
"32 387 OFFCURVE",
"24 408 OFFCURVE",
"24 433 CURVE SMOOTH",
"24 460 OFFCURVE",
"34 483 OFFCURVE",
"54 501 CURVE SMOOTH",
"69 515 OFFCURVE",
"88 522 OFFCURVE",
"112 522 CURVE SMOOTH",
"137 522 OFFCURVE",
"162 514 OFFCURVE",
"185 498 CURVE SMOOTH",
"259 449 OFFCURVE",
"296 338 OFFCURVE",
"296 163 CURVE SMOOTH",
"296 136 OFFCURVE",
"295 91 OFFCURVE",
"292 47 CURVE",
"255 -13 OFFCURVE",
"215 -31 OFFCURVE",
"197 -31 CURVE SMOOTH",
"192 -31 LINE SMOOTH",
"185 -31 OFFCURVE",
"181 -34 OFFCURVE",
"181 -40 CURVE SMOOTH",
"181 -51 OFFCURVE",
"185 -56 OFFCURVE",
"193 -56 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"196 -56 OFFCURVE",
"198 -56 OFFCURVE",
"199 -55 CURVE",
"226 -46 OFFCURVE",
"259 -25 OFFCURVE",
"291 14 CURVE",
"291 -3 LINE SMOOTH",
"291 -8 OFFCURVE",
"295 -10 OFFCURVE",
"302 -10 CURVE SMOOTH",
"306 -10 OFFCURVE",
"311 -9 OFFCURVE",
"318 -6 CURVE SMOOTH",
"323 -4 OFFCURVE",
"325 -2 OFFCURVE",
"325 0 CURVE SMOOTH",
"328 41 LINE",
"330 63 LINE",
"471 224 OFFCURVE",
"521 518 OFFCURVE",
"652 518 CURVE SMOOTH",
"706 518 OFFCURVE",
"735 471 OFFCURVE",
"735 424 CURVE SMOOTH",
"735 390 OFFCURVE",
"718 356 OFFCURVE",
"692 335 CURVE SMOOTH",
"689 332 OFFCURVE",
"686 327 OFFCURVE",
"686 323 CURVE SMOOTH",
"686 321 OFFCURVE",
"687 319 OFFCURVE",
"690 319 CURVE SMOOTH",
"691 319 OFFCURVE",
"693 320 OFFCURVE",
"695 321 CURVE SMOOTH",
"736 341 OFFCURVE",
"770 391 OFFCURVE",
"770 434 CURVE SMOOTH",
"770 490 OFFCURVE",
"727 536 OFFCURVE",
"652 536 CURVE SMOOTH",
"509 536 OFFCURVE",
"471 302 OFFCURVE",
"331 86 CURVE",
"332 96 OFFCURVE",
"332 106 OFFCURVE",
"332 141 CURVE SMOOTH",
"332 342 OFFCURVE",
"290 465 OFFCURVE",
"206 517 CURVE SMOOTH",
"178 535 OFFCURVE",
"150 544 OFFCURVE",
"122 544 CURVE SMOOTH",
"91 544 OFFCURVE",
"64 534 OFFCURVE",
"41 513 CURVE SMOOTH",
"15 490 OFFCURVE",
"2 461 OFFCURVE",
"2 427 CURVE SMOOTH",
"2 398 OFFCURVE",
"11 372 OFFCURVE",
"29 349 CURVE SMOOTH",
"47 326 OFFCURVE",
"68 315 OFFCURVE",
"91 315 CURVE SMOOTH",
"102 315 OFFCURVE",
"114 318 OFFCURVE",
"125 324 CURVE SMOOTH",
"148 337 OFFCURVE",
"160 355 OFFCURVE",
"159 377 CURVE SMOOTH",
"159 379 OFFCURVE",
"159 380 OFFCURVE",
"158 380 CURVE SMOOTH",
"155 380 OFFCURVE",
"154 378 OFFCURVE",
"153 374 CURVE SMOOTH",
"150 357 OFFCURVE",
"139 346 OFFCURVE",
"121 341 CURVE SMOOTH",
"115 339 OFFCURVE",
"109 338 OFFCURVE",
"103 338 CURVE SMOOTH",
"82 338 OFFCURVE",
"64 348 OFFCURVE",
"48 368 CURVE SMOOTH",
"32 387 OFFCURVE",
"24 408 OFFCURVE",
"24 433 CURVE SMOOTH",
"24 460 OFFCURVE",
"34 483 OFFCURVE",
"54 501 CURVE SMOOTH",
"69 515 OFFCURVE",
"88 522 OFFCURVE",
"112 522 CURVE SMOOTH",
"137 522 OFFCURVE",
"162 514 OFFCURVE",
"185 498 CURVE SMOOTH",
"259 449 OFFCURVE",
"296 338 OFFCURVE",
"296 163 CURVE SMOOTH",
"296 136 OFFCURVE",
"295 91 OFFCURVE",
"292 47 CURVE",
"255 -13 OFFCURVE",
"215 -31 OFFCURVE",
"197 -31 CURVE SMOOTH",
"192 -31 LINE SMOOTH",
"185 -31 OFFCURVE",
"181 -34 OFFCURVE",
"181 -40 CURVE SMOOTH",
"181 -51 OFFCURVE",
"185 -56 OFFCURVE",
"193 -56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01254 3 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 4 46 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 86 165 86 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 54 165 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01266 74 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01293 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01240 1 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 2 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01293 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 14 24 14 40 14 56 14 72 14 88 14 104 14 120 14 136 14 152 14 168 14 184 14 200 14 216 14 232 14 248 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 14 24 14 40 14 56 14 72 14 88 14 104 14 120 14 136 14 152 14 168 14 184 14 200 14 216 14 232 14 248 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 14 24 14 40 14 56 14 72 14 88 14 104 14 120 14 136 14 152 14 168 14 184 14 200 14 216 14 232 14 248 14 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 548;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{380, 0}";
},
{
name = top;
position = "{541, 475}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"269 -18 OFFCURVE",
"321 42 OFFCURVE",
"356 90 CURVE SMOOTH",
"383 129 OFFCURVE",
"425 195 OFFCURVE",
"436 213 CURVE",
"440 148 OFFCURVE",
"451 97 OFFCURVE",
"468 60 CURVE SMOOTH",
"491 11 OFFCURVE",
"523 -13 OFFCURVE",
"565 -13 CURVE SMOOTH",
"622 -12 OFFCURVE",
"668 20 OFFCURVE",
"703 83 CURVE SMOOTH",
"736 142 OFFCURVE",
"753 210 OFFCURVE",
"753 287 CURVE SMOOTH",
"753 330 OFFCURVE",
"747 370 OFFCURVE",
"734 407 CURVE SMOOTH",
"720 444 OFFCURVE",
"700 473 OFFCURVE",
"675 492 CURVE SMOOTH",
"666 498 OFFCURVE",
"657 501 OFFCURVE",
"650 501 CURVE SMOOTH",
"637 501 OFFCURVE",
"631 496 OFFCURVE",
"631 487 CURVE SMOOTH",
"631 480 OFFCURVE",
"637 471 OFFCURVE",
"650 461 CURVE SMOOTH",
"695 428 OFFCURVE",
"717 371 OFFCURVE",
"717 290 CURVE SMOOTH",
"717 222 OFFCURVE",
"703 160 OFFCURVE",
"674 103 CURVE SMOOTH",
"643 42 OFFCURVE",
"608 11 OFFCURVE",
"569 11 CURVE SMOOTH",
"549 11 OFFCURVE",
"529 20 OFFCURVE",
"509 38 CURVE SMOOTH",
"489 57 OFFCURVE",
"476 85 OFFCURVE",
"470 120 CURVE SMOOTH",
"466 141 OFFCURVE",
"464 172 OFFCURVE",
"464 214 CURVE SMOOTH",
"464 239 OFFCURVE",
"472 264 OFFCURVE",
"487 287 CURVE SMOOTH",
"494 297 OFFCURVE",
"501 307 OFFCURVE",
"509 317 CURVE SMOOTH",
"530 346 LINE SMOOTH",
"545 367 OFFCURVE",
"552 384 OFFCURVE",
"552 399 CURVE SMOOTH",
"552 416 OFFCURVE",
"546 425 OFFCURVE",
"534 425 CURVE SMOOTH",
"525 425 OFFCURVE",
"517 421 OFFCURVE",
"509 414 CURVE SMOOTH",
"500 405 OFFCURVE",
"493 396 OFFCURVE",
"488 385 CURVE SMOOTH",
"485 376 OFFCURVE",
"481 368 OFFCURVE",
"478 360 CURVE SMOOTH",
"467 336 LINE SMOOTH",
"456 311 OFFCURVE",
"450 282 OFFCURVE",
"443 250 CURVE",
"437 234 OFFCURVE",
"386 162 OFFCURVE",
"361 129 CURVE SMOOTH",
"327 83 OFFCURVE",
"272 21 OFFCURVE",
"242 21 CURVE SMOOTH",
"234 21 OFFCURVE",
"231 29 OFFCURVE",
"231 38 CURVE SMOOTH",
"231 49 OFFCURVE",
"241 76 OFFCURVE",
"262 117 CURVE SMOOTH",
"289 171 OFFCURVE",
"308 212 OFFCURVE",
"319 240 CURVE SMOOTH",
"339 294 OFFCURVE",
"349 343 OFFCURVE",
"349 388 CURVE SMOOTH",
"349 436 OFFCURVE",
"339 482 OFFCURVE",
"304 517 CURVE SMOOTH",
"277 545 OFFCURVE",
"242 559 OFFCURVE",
"201 559 CURVE SMOOTH",
"158 559 OFFCURVE",
"119 547 OFFCURVE",
"85 524 CURVE SMOOTH",
"46 497 OFFCURVE",
"22 460 OFFCURVE",
"12 413 CURVE SMOOTH",
"11 406 OFFCURVE",
"10 398 OFFCURVE",
"10 390 CURVE SMOOTH",
"10 367 OFFCURVE",
"16 346 OFFCURVE",
"27 329 CURVE SMOOTH",
"44 305 OFFCURVE",
"69 299 OFFCURVE",
"89 299 CURVE SMOOTH",
"97 299 OFFCURVE",
"105 300 OFFCURVE",
"111 301 CURVE SMOOTH",
"135 306 OFFCURVE",
"172 339 OFFCURVE",
"178 357 CURVE SMOOTH",
"179 359 OFFCURVE",
"177 365 OFFCURVE",
"174 365 CURVE",
"174 365 OFFCURVE",
"173 365 OFFCURVE",
"172 364 CURVE SMOOTH",
"152 344 LINE SMOOTH",
"134 326 OFFCURVE",
"117 317 OFFCURVE",
"100 317 CURVE SMOOTH",
"57 317 OFFCURVE",
"36 339 OFFCURVE",
"36 382 CURVE SMOOTH",
"36 398 OFFCURVE",
"39 415 OFFCURVE",
"45 433 CURVE SMOOTH",
"56 467 OFFCURVE",
"78 495 OFFCURVE",
"109 517 CURVE SMOOTH",
"138 537 OFFCURVE",
"168 547 OFFCURVE",
"201 547 CURVE SMOOTH",
"210 547 OFFCURVE",
"218 546 OFFCURVE",
"226 545 CURVE",
"257 537 OFFCURVE",
"280 517 OFFCURVE",
"295 486 CURVE SMOOTH",
"308 461 OFFCURVE",
"314 428 OFFCURVE",
"314 389 CURVE SMOOTH",
"314 369 OFFCURVE",
"312 349 OFFCURVE",
"309 329 CURVE SMOOTH",
"304 302 OFFCURVE",
"283 249 OFFCURVE",
"246 170 CURVE SMOOTH",
"212 97 OFFCURVE",
"195 50 OFFCURVE",
"195 30 CURVE SMOOTH",
"195 17 OFFCURVE",
"198 7 OFFCURVE",
"205 -2 CURVE SMOOTH",
"212 -13 OFFCURVE",
"221 -18 OFFCURVE",
"232 -18 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"269 -18 OFFCURVE",
"321 42 OFFCURVE",
"356 90 CURVE SMOOTH",
"383 129 OFFCURVE",
"425 195 OFFCURVE",
"436 213 CURVE",
"440 148 OFFCURVE",
"451 97 OFFCURVE",
"468 60 CURVE SMOOTH",
"491 11 OFFCURVE",
"523 -13 OFFCURVE",
"565 -13 CURVE SMOOTH",
"622 -12 OFFCURVE",
"668 20 OFFCURVE",
"703 83 CURVE SMOOTH",
"736 142 OFFCURVE",
"753 210 OFFCURVE",
"753 287 CURVE SMOOTH",
"753 330 OFFCURVE",
"747 370 OFFCURVE",
"734 407 CURVE SMOOTH",
"720 444 OFFCURVE",
"700 473 OFFCURVE",
"675 492 CURVE SMOOTH",
"666 498 OFFCURVE",
"657 501 OFFCURVE",
"650 501 CURVE SMOOTH",
"637 501 OFFCURVE",
"631 496 OFFCURVE",
"631 487 CURVE SMOOTH",
"631 480 OFFCURVE",
"637 471 OFFCURVE",
"650 461 CURVE SMOOTH",
"695 428 OFFCURVE",
"717 371 OFFCURVE",
"717 290 CURVE SMOOTH",
"717 222 OFFCURVE",
"703 160 OFFCURVE",
"674 103 CURVE SMOOTH",
"643 42 OFFCURVE",
"608 11 OFFCURVE",
"569 11 CURVE SMOOTH",
"549 11 OFFCURVE",
"529 20 OFFCURVE",
"509 38 CURVE SMOOTH",
"489 57 OFFCURVE",
"476 85 OFFCURVE",
"470 120 CURVE SMOOTH",
"466 141 OFFCURVE",
"464 172 OFFCURVE",
"464 214 CURVE SMOOTH",
"464 239 OFFCURVE",
"472 264 OFFCURVE",
"487 287 CURVE SMOOTH",
"494 297 OFFCURVE",
"501 307 OFFCURVE",
"509 317 CURVE SMOOTH",
"530 346 LINE SMOOTH",
"545 367 OFFCURVE",
"552 384 OFFCURVE",
"552 399 CURVE SMOOTH",
"552 416 OFFCURVE",
"546 425 OFFCURVE",
"534 425 CURVE SMOOTH",
"525 425 OFFCURVE",
"517 421 OFFCURVE",
"509 414 CURVE SMOOTH",
"500 405 OFFCURVE",
"493 396 OFFCURVE",
"488 385 CURVE SMOOTH",
"485 376 OFFCURVE",
"482 368 OFFCURVE",
"478 360 CURVE SMOOTH",
"467 336 LINE SMOOTH",
"456 311 OFFCURVE",
"450 282 OFFCURVE",
"443 250 CURVE",
"437 234 OFFCURVE",
"386 162 OFFCURVE",
"361 129 CURVE SMOOTH",
"327 83 OFFCURVE",
"272 21 OFFCURVE",
"242 21 CURVE SMOOTH",
"234 21 OFFCURVE",
"231 29 OFFCURVE",
"231 38 CURVE SMOOTH",
"231 49 OFFCURVE",
"241 76 OFFCURVE",
"262 117 CURVE SMOOTH",
"289 171 OFFCURVE",
"308 212 OFFCURVE",
"319 240 CURVE SMOOTH",
"339 294 OFFCURVE",
"349 343 OFFCURVE",
"349 388 CURVE SMOOTH",
"349 436 OFFCURVE",
"339 482 OFFCURVE",
"304 517 CURVE SMOOTH",
"277 545 OFFCURVE",
"242 559 OFFCURVE",
"201 559 CURVE SMOOTH",
"158 559 OFFCURVE",
"119 547 OFFCURVE",
"85 524 CURVE SMOOTH",
"46 497 OFFCURVE",
"22 460 OFFCURVE",
"12 413 CURVE SMOOTH",
"11 406 OFFCURVE",
"10 398 OFFCURVE",
"10 390 CURVE SMOOTH",
"10 367 OFFCURVE",
"16 346 OFFCURVE",
"27 329 CURVE SMOOTH",
"44 305 OFFCURVE",
"69 299 OFFCURVE",
"89 299 CURVE SMOOTH",
"97 299 OFFCURVE",
"105 300 OFFCURVE",
"111 301 CURVE SMOOTH",
"135 306 OFFCURVE",
"172 339 OFFCURVE",
"178 357 CURVE SMOOTH",
"179 359 OFFCURVE",
"177 365 OFFCURVE",
"174 365 CURVE",
"174 365 OFFCURVE",
"173 365 OFFCURVE",
"172 364 CURVE SMOOTH",
"152 344 LINE SMOOTH",
"134 326 OFFCURVE",
"117 317 OFFCURVE",
"100 317 CURVE SMOOTH",
"57 317 OFFCURVE",
"36 339 OFFCURVE",
"36 382 CURVE SMOOTH",
"36 398 OFFCURVE",
"39 415 OFFCURVE",
"45 433 CURVE SMOOTH",
"56 467 OFFCURVE",
"78 495 OFFCURVE",
"109 517 CURVE SMOOTH",
"138 537 OFFCURVE",
"168 547 OFFCURVE",
"201 547 CURVE SMOOTH",
"210 547 OFFCURVE",
"218 546 OFFCURVE",
"226 545 CURVE",
"257 537 OFFCURVE",
"280 517 OFFCURVE",
"295 486 CURVE SMOOTH",
"308 461 OFFCURVE",
"314 428 OFFCURVE",
"314 389 CURVE SMOOTH",
"314 369 OFFCURVE",
"312 349 OFFCURVE",
"309 329 CURVE SMOOTH",
"304 302 OFFCURVE",
"283 249 OFFCURVE",
"246 170 CURVE SMOOTH",
"212 97 OFFCURVE",
"195 50 OFFCURVE",
"195 30 CURVE SMOOTH",
"195 17 OFFCURVE",
"198 7 OFFCURVE",
"205 -2 CURVE SMOOTH",
"212 -13 OFFCURVE",
"221 -18 OFFCURVE",
"232 -18 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01239 3 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01269 4 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01275 4 19 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 39 165 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 69 22 69 38 69 54 69 70 69 86 69 102 69 118 69 134 69 150 69 166 69 182 69 198 69 214 69 230 69 246 69 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 69 22 69 38 69 54 69 70 69 86 69 102 69 118 69 134 69 150 69 166 69 182 69 198 69 214 69 230 69 246 69 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 69 22 69 38 69 54 69 70 69 86 69 102 69 118 69 134 69 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 69 165 69 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 75 165 75 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 114 170 114 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01264 1 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012110 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 110 23 110 39 110 55 110 71 110 87 110 103 110 119 110 135 110 151 110 167 110 183 110 199 110 215 110 231 110 247 110 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 110 23 110 39 110 55 110 71 110 87 110 103 110 119 110 135 110 151 110 167 110 183 110 199 110 215 110 231 110 247 110 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 110 23 110 39 110 55 110 71 110 87 110 103 110 119 110 135 110 151 110 167 110 183 110 199 110 215 110 231 110 247 110 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 760;
}
);
note = W;
unicode = 0057;
},
{
glyphname = Wacute;
lastChange = "2021-10-08 06:25:35 +0000";
layers = (
{
background = {
components = (
{
name = W;
},
{
name = acutecomb;
}
);
};
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 509, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 760;
}
);
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2021-10-08 06:25:35 +0000";
layers = (
{
background = {
components = (
{
name = W;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 457, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 760;
}
);
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2021-10-08 06:25:35 +0000";
layers = (
{
background = {
components = (
{
name = W;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 477, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 760;
}
);
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = W;
},
{
name = gravecomb;
}
);
};
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 453, 215}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 760;
}
);
unicode = 1E80;
},
{
glyphname = X;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"66 -110 OFFCURVE",
"68 -110 OFFCURVE",
"69 -109 CURVE",
"171 -76 OFFCURVE",
"282 119 OFFCURVE",
"327 199 CURVE",
"351 124 LINE SMOOTH",
"358 101 OFFCURVE",
"366 78 OFFCURVE",
"374 55 CURVE SMOOTH",
"390 7 OFFCURVE",
"410 -26 OFFCURVE",
"430 -49 CURVE SMOOTH",
"455 -76 OFFCURVE",
"486 -88 OFFCURVE",
"522 -86 CURVE SMOOTH",
"535 -86 OFFCURVE",
"549 -79 OFFCURVE",
"564 -66 CURVE SMOOTH",
"576 -54 OFFCURVE",
"586 -42 OFFCURVE",
"593 -29 CURVE",
"594 -28 OFFCURVE",
"594 -26 OFFCURVE",
"594 -25 CURVE SMOOTH",
"594 -20 OFFCURVE",
"591 -17 OFFCURVE",
"586 -17 CURVE SMOOTH",
"583 -17 OFFCURVE",
"581 -18 OFFCURVE",
"580 -21 CURVE",
"572 -34 OFFCURVE",
"565 -46 OFFCURVE",
"554 -55 CURVE SMOOTH",
"541 -66 OFFCURVE",
"531 -71 OFFCURVE",
"522 -71 CURVE SMOOTH",
"486 -71 OFFCURVE",
"455 -38 OFFCURVE",
"428 28 CURVE SMOOTH",
"414 63 OFFCURVE",
"401 97 OFFCURVE",
"389 132 CURVE SMOOTH",
"350 237 LINE",
"388 299 OFFCURVE",
"424 348 OFFCURVE",
"458 384 CURVE SMOOTH",
"475 402 OFFCURVE",
"494 411 OFFCURVE",
"516 411 CURVE SMOOTH",
"543 411 OFFCURVE",
"557 398 OFFCURVE",
"557 371 CURVE SMOOTH",
"557 359 OFFCURVE",
"554 346 OFFCURVE",
"547 331 CURVE",
"546 330 OFFCURVE",
"546 329 OFFCURVE",
"546 328 CURVE SMOOTH",
"546 325 OFFCURVE",
"547 323 OFFCURVE",
"550 323 CURVE SMOOTH",
"551 323 OFFCURVE",
"552 324 OFFCURVE",
"554 326 CURVE SMOOTH",
"566 339 OFFCURVE",
"572 355 OFFCURVE",
"572 376 CURVE SMOOTH",
"572 393 OFFCURVE",
"567 408 OFFCURVE",
"558 421 CURVE SMOOTH",
"549 434 OFFCURVE",
"537 440 OFFCURVE",
"520 440 CURVE SMOOTH",
"495 440 OFFCURVE",
"468 426 OFFCURVE",
"438 398 CURVE SMOOTH",
"408 369 OFFCURVE",
"375 325 OFFCURVE",
"339 264 CURVE",
"284 384 OFFCURVE",
"222 449 OFFCURVE",
"146 472 CURVE SMOOTH",
"132 476 OFFCURVE",
"118 478 OFFCURVE",
"103 478 CURVE SMOOTH",
"78 478 OFFCURVE",
"53 471 OFFCURVE",
"30 458 CURVE SMOOTH",
"9 446 OFFCURVE",
"-7 431 OFFCURVE",
"-18 412 CURVE SMOOTH",
"-31 393 OFFCURVE",
"-37 373 OFFCURVE",
"-37 352 CURVE SMOOTH",
"-37 344 OFFCURVE",
"-36 335 OFFCURVE",
"-34 326 CURVE SMOOTH",
"-28 299 OFFCURVE",
"-14 276 OFFCURVE",
"8 257 CURVE SMOOTH",
"29 238 OFFCURVE",
"52 229 OFFCURVE",
"77 229 CURVE SMOOTH",
"92 229 OFFCURVE",
"107 234 OFFCURVE",
"120 243 CURVE SMOOTH",
"134 253 OFFCURVE",
"141 268 OFFCURVE",
"141 287 CURVE SMOOTH",
"141 292 OFFCURVE",
"140 298 OFFCURVE",
"138 304 CURVE",
"137 304 OFFCURVE",
"137 305 OFFCURVE",
"137 306 CURVE SMOOTH",
"137 307 LINE",
"136 307 LINE SMOOTH",
"133 307 OFFCURVE",
"132 304 OFFCURVE",
"133 299 CURVE SMOOTH",
"133 295 LINE SMOOTH",
"133 281 OFFCURVE",
"126 269 OFFCURVE",
"111 258 CURVE SMOOTH",
"102 252 OFFCURVE",
"92 249 OFFCURVE",
"81 249 CURVE SMOOTH",
"58 249 OFFCURVE",
"36 260 OFFCURVE",
"15 282 CURVE SMOOTH",
"-6 305 OFFCURVE",
"-16 330 OFFCURVE",
"-16 357 CURVE SMOOTH",
"-16 373 OFFCURVE",
"-11 389 OFFCURVE",
"-2 404 CURVE SMOOTH",
"6 419 OFFCURVE",
"19 430 OFFCURVE",
"37 439 CURVE SMOOTH",
"56 448 OFFCURVE",
"75 453 OFFCURVE",
"95 453 CURVE SMOOTH",
"108 453 OFFCURVE",
"120 451 OFFCURVE",
"131 447 CURVE SMOOTH",
"177 433 OFFCURVE",
"216 405 OFFCURVE",
"249 362 CURVE SMOOTH",
"274 330 OFFCURVE",
"296 285 OFFCURVE",
"317 227 CURVE",
"315 224 OFFCURVE",
"313 220 OFFCURVE",
"312 217 CURVE",
"306 207 LINE SMOOTH",
"252 106 OFFCURVE",
"205 30 OFFCURVE",
"165 -21 CURVE SMOOTH",
"125 -72 OFFCURVE",
"92 -96 OFFCURVE",
"65 -94 CURVE SMOOTH",
"62 -94 LINE SMOOTH",
"55 -94 OFFCURVE",
"51 -96 OFFCURVE",
"51 -100 CURVE SMOOTH",
"51 -107 OFFCURVE",
"55 -110 OFFCURVE",
"63 -110 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"66 -110 OFFCURVE",
"68 -110 OFFCURVE",
"69 -109 CURVE",
"171 -76 OFFCURVE",
"282 119 OFFCURVE",
"327 199 CURVE",
"351 124 LINE SMOOTH",
"358 101 OFFCURVE",
"366 78 OFFCURVE",
"374 55 CURVE SMOOTH",
"390 7 OFFCURVE",
"410 -26 OFFCURVE",
"430 -49 CURVE SMOOTH",
"455 -76 OFFCURVE",
"486 -88 OFFCURVE",
"522 -86 CURVE SMOOTH",
"535 -86 OFFCURVE",
"549 -79 OFFCURVE",
"564 -66 CURVE SMOOTH",
"576 -54 OFFCURVE",
"586 -42 OFFCURVE",
"593 -29 CURVE",
"594 -28 OFFCURVE",
"594 -26 OFFCURVE",
"594 -25 CURVE SMOOTH",
"594 -20 OFFCURVE",
"591 -17 OFFCURVE",
"586 -17 CURVE SMOOTH",
"583 -17 OFFCURVE",
"581 -18 OFFCURVE",
"580 -21 CURVE",
"572 -34 OFFCURVE",
"565 -46 OFFCURVE",
"554 -55 CURVE SMOOTH",
"541 -66 OFFCURVE",
"531 -71 OFFCURVE",
"522 -71 CURVE SMOOTH",
"486 -71 OFFCURVE",
"455 -38 OFFCURVE",
"428 28 CURVE SMOOTH",
"414 63 OFFCURVE",
"401 97 OFFCURVE",
"389 132 CURVE SMOOTH",
"350 237 LINE",
"388 299 OFFCURVE",
"424 348 OFFCURVE",
"458 384 CURVE SMOOTH",
"475 402 OFFCURVE",
"494 411 OFFCURVE",
"516 411 CURVE SMOOTH",
"543 411 OFFCURVE",
"557 398 OFFCURVE",
"557 371 CURVE SMOOTH",
"557 359 OFFCURVE",
"554 346 OFFCURVE",
"547 331 CURVE",
"546 330 OFFCURVE",
"546 329 OFFCURVE",
"546 328 CURVE SMOOTH",
"546 325 OFFCURVE",
"547 323 OFFCURVE",
"550 323 CURVE SMOOTH",
"551 323 OFFCURVE",
"552 324 OFFCURVE",
"554 326 CURVE SMOOTH",
"566 339 OFFCURVE",
"572 355 OFFCURVE",
"572 376 CURVE SMOOTH",
"572 393 OFFCURVE",
"567 408 OFFCURVE",
"558 421 CURVE SMOOTH",
"549 434 OFFCURVE",
"537 440 OFFCURVE",
"520 440 CURVE SMOOTH",
"495 440 OFFCURVE",
"468 426 OFFCURVE",
"438 398 CURVE SMOOTH",
"408 369 OFFCURVE",
"375 325 OFFCURVE",
"339 264 CURVE",
"284 384 OFFCURVE",
"222 449 OFFCURVE",
"146 472 CURVE SMOOTH",
"132 476 OFFCURVE",
"118 478 OFFCURVE",
"103 478 CURVE SMOOTH",
"78 478 OFFCURVE",
"53 471 OFFCURVE",
"30 458 CURVE SMOOTH",
"9 446 OFFCURVE",
"-7 431 OFFCURVE",
"-18 412 CURVE SMOOTH",
"-31 393 OFFCURVE",
"-37 373 OFFCURVE",
"-37 352 CURVE SMOOTH",
"-37 344 OFFCURVE",
"-36 335 OFFCURVE",
"-34 326 CURVE SMOOTH",
"-28 299 OFFCURVE",
"-14 276 OFFCURVE",
"8 257 CURVE SMOOTH",
"29 238 OFFCURVE",
"52 229 OFFCURVE",
"77 229 CURVE SMOOTH",
"92 229 OFFCURVE",
"107 234 OFFCURVE",
"120 243 CURVE SMOOTH",
"134 253 OFFCURVE",
"141 268 OFFCURVE",
"141 287 CURVE SMOOTH",
"141 292 OFFCURVE",
"140 298 OFFCURVE",
"138 304 CURVE",
"137 304 OFFCURVE",
"137 305 OFFCURVE",
"137 306 CURVE SMOOTH",
"137 307 LINE",
"136 307 LINE SMOOTH",
"133 307 OFFCURVE",
"132 304 OFFCURVE",
"133 299 CURVE SMOOTH",
"133 295 LINE SMOOTH",
"133 281 OFFCURVE",
"126 269 OFFCURVE",
"111 258 CURVE SMOOTH",
"102 252 OFFCURVE",
"92 249 OFFCURVE",
"81 249 CURVE SMOOTH",
"58 249 OFFCURVE",
"36 260 OFFCURVE",
"15 282 CURVE SMOOTH",
"-6 305 OFFCURVE",
"-16 330 OFFCURVE",
"-16 357 CURVE SMOOTH",
"-16 373 OFFCURVE",
"-11 389 OFFCURVE",
"-2 404 CURVE SMOOTH",
"6 419 OFFCURVE",
"19 430 OFFCURVE",
"37 439 CURVE SMOOTH",
"56 448 OFFCURVE",
"75 453 OFFCURVE",
"95 453 CURVE SMOOTH",
"108 453 OFFCURVE",
"120 451 OFFCURVE",
"131 447 CURVE SMOOTH",
"177 433 OFFCURVE",
"216 405 OFFCURVE",
"249 362 CURVE SMOOTH",
"274 330 OFFCURVE",
"296 285 OFFCURVE",
"317 227 CURVE",
"315 224 OFFCURVE",
"313 220 OFFCURVE",
"312 217 CURVE",
"306 207 LINE SMOOTH",
"252 106 OFFCURVE",
"205 30 OFFCURVE",
"165 -21 CURVE SMOOTH",
"125 -72 OFFCURVE",
"92 -96 OFFCURVE",
"65 -94 CURVE SMOOTH",
"62 -94 LINE SMOOTH",
"55 -94 OFFCURVE",
"51 -96 OFFCURVE",
"51 -100 CURVE SMOOTH",
"51 -107 OFFCURVE",
"55 -110 OFFCURVE",
"63 -110 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01298 3 87 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 3 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01261 52 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 69 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 44 165 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 27 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 61 229 61 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01259 52 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 69 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01295 69 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 98 170 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01248 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01263 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012109 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01275 2 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 2 100 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 579;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{479, 0}";
},
{
name = top;
position = "{388, 530}";
},
{
name = topleft;
position = "{20, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"247 -204 OFFCURVE",
"270 -200 OFFCURVE",
"290 -192 CURVE SMOOTH",
"386 -153 OFFCURVE",
"434 -58 OFFCURVE",
"434 94 CURVE SMOOTH",
"434 121 OFFCURVE",
"433 148 OFFCURVE",
"430 176 CURVE SMOOTH",
"424 221 OFFCURVE",
"421 248 OFFCURVE",
"421 257 CURVE",
"448 310 OFFCURVE",
"466 347 OFFCURVE",
"474 370 CURVE SMOOTH",
"479 384 OFFCURVE",
"482 396 OFFCURVE",
"482 405 CURVE SMOOTH",
"482 417 OFFCURVE",
"479 426 OFFCURVE",
"473 432 CURVE SMOOTH",
"468 438 OFFCURVE",
"462 441 OFFCURVE",
"455 441 CURVE SMOOTH",
"444 441 OFFCURVE",
"434 435 OFFCURVE",
"425 424 CURVE SMOOTH",
"414 411 OFFCURVE",
"408 392 OFFCURVE",
"405 368 CURVE SMOOTH",
"403 357 OFFCURVE",
"403 344 OFFCURVE",
"403 330 CURVE SMOOTH",
"403 310 OFFCURVE",
"404 287 OFFCURVE",
"407 262 CURVE",
"403 255 OFFCURVE",
"400 249 OFFCURVE",
"396 244 CURVE",
"388 230 LINE SMOOTH",
"363 185 OFFCURVE",
"333 151 OFFCURVE",
"300 127 CURVE SMOOTH",
"271 106 OFFCURVE",
"243 96 OFFCURVE",
"216 96 CURVE SMOOTH",
"193 96 OFFCURVE",
"174 103 OFFCURVE",
"160 118 CURVE SMOOTH",
"145 132 OFFCURVE",
"138 151 OFFCURVE",
"138 175 CURVE SMOOTH",
"138 212 OFFCURVE",
"155 250 OFFCURVE",
"190 287 CURVE SMOOTH",
"208 307 OFFCURVE",
"223 332 OFFCURVE",
"235 361 CURVE SMOOTH",
"247 391 OFFCURVE",
"253 421 OFFCURVE",
"253 450 CURVE SMOOTH",
"253 493 OFFCURVE",
"240 527 OFFCURVE",
"214 551 CURVE SMOOTH",
"189 575 OFFCURVE",
"157 587 OFFCURVE",
"120 587 CURVE SMOOTH",
"83 587 OFFCURVE",
"51 573 OFFCURVE",
"25 544 CURVE SMOOTH",
"6 523 OFFCURVE",
"-3 499 OFFCURVE",
"-3 472 CURVE SMOOTH",
"-3 444 OFFCURVE",
"9 423 OFFCURVE",
"32 410 CURVE SMOOTH",
"38 406 OFFCURVE",
"47 404 OFFCURVE",
"59 404 CURVE SMOOTH",
"80 404 OFFCURVE",
"94 409 OFFCURVE",
"100 418 CURVE",
"98 418 OFFCURVE",
"94 417 OFFCURVE",
"87 415 CURVE SMOOTH",
"78 413 OFFCURVE",
"70 412 OFFCURVE",
"63 412 CURVE SMOOTH",
"50 412 OFFCURVE",
"40 416 OFFCURVE",
"33 423 CURVE SMOOTH",
"19 436 OFFCURVE",
"12 451 OFFCURVE",
"12 468 CURVE SMOOTH",
"12 492 OFFCURVE",
"25 516 OFFCURVE",
"52 541 CURVE SMOOTH",
"73 558 OFFCURVE",
"96 567 OFFCURVE",
"121 567 CURVE SMOOTH",
"160 567 OFFCURVE",
"190 552 OFFCURVE",
"211 521 CURVE SMOOTH",
"222 502 OFFCURVE",
"228 482 OFFCURVE",
"228 459 CURVE SMOOTH",
"228 433 OFFCURVE",
"222 406 OFFCURVE",
"209 379 CURVE SMOOTH",
"197 354 OFFCURVE",
"182 332 OFFCURVE",
"164 314 CURVE SMOOTH",
"111 259 OFFCURVE",
"85 208 OFFCURVE",
"85 161 CURVE SMOOTH",
"85 134 OFFCURVE",
"95 112 OFFCURVE",
"114 96 CURVE SMOOTH",
"133 79 OFFCURVE",
"157 71 OFFCURVE",
"187 71 CURVE SMOOTH",
"223 71 OFFCURVE",
"259 83 OFFCURVE",
"295 107 CURVE SMOOTH",
"336 132 OFFCURVE",
"372 171 OFFCURVE",
"402 222 CURVE",
"403 223 OFFCURVE",
"403 224 OFFCURVE",
"404 226 CURVE SMOOTH",
"410 236 LINE",
"413 217 OFFCURVE",
"415 203 OFFCURVE",
"416 193 CURVE SMOOTH",
"419 169 LINE SMOOTH",
"421 153 OFFCURVE",
"422 137 OFFCURVE",
"422 120 CURVE SMOOTH",
"422 57 OFFCURVE",
"409 2 OFFCURVE",
"384 -44 CURVE SMOOTH",
"357 -97 OFFCURVE",
"315 -136 OFFCURVE",
"260 -159 CURVE SMOOTH",
"233 -170 OFFCURVE",
"208 -175 OFFCURVE",
"181 -175 CURVE SMOOTH",
"122 -175 OFFCURVE",
"83 -152 OFFCURVE",
"62 -105 CURVE SMOOTH",
"58 -95 OFFCURVE",
"56 -84 OFFCURVE",
"56 -73 CURVE SMOOTH",
"56 -48 OFFCURVE",
"65 -26 OFFCURVE",
"82 -7 CURVE SMOOTH",
"101 14 OFFCURVE",
"122 24 OFFCURVE",
"145 24 CURVE SMOOTH",
"158 24 OFFCURVE",
"173 20 OFFCURVE",
"188 11 CURVE",
"189 10 OFFCURVE",
"191 9 OFFCURVE",
"194 9 CURVE SMOOTH",
"195 9 OFFCURVE",
"196 9 OFFCURVE",
"196 10 CURVE SMOOTH",
"196 12 OFFCURVE",
"194 14 OFFCURVE",
"190 17 CURVE SMOOTH",
"171 28 OFFCURVE",
"153 34 OFFCURVE",
"134 34 CURVE SMOOTH",
"107 34 OFFCURVE",
"83 23 OFFCURVE",
"63 1 CURVE SMOOTH",
"44 -20 OFFCURVE",
"34 -45 OFFCURVE",
"34 -72 CURVE SMOOTH",
"34 -85 OFFCURVE",
"36 -97 OFFCURVE",
"41 -107 CURVE SMOOTH",
"54 -137 OFFCURVE",
"78 -161 OFFCURVE",
"113 -178 CURVE SMOOTH",
"145 -195 OFFCURVE",
"181 -204 OFFCURVE",
"221 -204 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"418 299 OFFCURVE",
"418 313 OFFCURVE",
"418 325 CURVE SMOOTH",
"418 363 OFFCURVE",
"422 387 OFFCURVE",
"430 404 CURVE SMOOTH",
"435 416 OFFCURVE",
"442 422 OFFCURVE",
"451 422 CURVE SMOOTH",
"462 422 OFFCURVE",
"466 413 OFFCURVE",
"466 401 CURVE SMOOTH",
"466 395 LINE",
"464 386 OFFCURVE",
"459 372 OFFCURVE",
"452 355 CURVE SMOOTH",
"445 338 OFFCURVE",
"434 314 OFFCURVE",
"419 284 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"247 -204 OFFCURVE",
"270 -200 OFFCURVE",
"290 -192 CURVE SMOOTH",
"386 -153 OFFCURVE",
"434 -58 OFFCURVE",
"434 94 CURVE SMOOTH",
"434 121 OFFCURVE",
"433 148 OFFCURVE",
"430 176 CURVE SMOOTH",
"424 221 OFFCURVE",
"421 248 OFFCURVE",
"421 257 CURVE",
"448 310 OFFCURVE",
"466 347 OFFCURVE",
"474 370 CURVE SMOOTH",
"479 384 OFFCURVE",
"482 396 OFFCURVE",
"482 405 CURVE SMOOTH",
"482 417 OFFCURVE",
"479 426 OFFCURVE",
"473 432 CURVE SMOOTH",
"468 438 OFFCURVE",
"462 441 OFFCURVE",
"455 441 CURVE SMOOTH",
"444 441 OFFCURVE",
"434 435 OFFCURVE",
"425 424 CURVE SMOOTH",
"414 411 OFFCURVE",
"408 392 OFFCURVE",
"405 368 CURVE SMOOTH",
"403 357 OFFCURVE",
"403 344 OFFCURVE",
"403 330 CURVE SMOOTH",
"403 310 OFFCURVE",
"404 287 OFFCURVE",
"407 262 CURVE",
"403 255 OFFCURVE",
"400 249 OFFCURVE",
"396 244 CURVE",
"388 230 LINE SMOOTH",
"362 185 OFFCURVE",
"333 151 OFFCURVE",
"300 127 CURVE SMOOTH",
"271 106 OFFCURVE",
"243 96 OFFCURVE",
"216 96 CURVE SMOOTH",
"193 96 OFFCURVE",
"174 103 OFFCURVE",
"160 118 CURVE SMOOTH",
"145 132 OFFCURVE",
"138 151 OFFCURVE",
"138 175 CURVE SMOOTH",
"138 212 OFFCURVE",
"155 250 OFFCURVE",
"190 287 CURVE SMOOTH",
"208 307 OFFCURVE",
"223 332 OFFCURVE",
"235 361 CURVE SMOOTH",
"247 391 OFFCURVE",
"253 421 OFFCURVE",
"253 450 CURVE SMOOTH",
"253 493 OFFCURVE",
"240 527 OFFCURVE",
"214 551 CURVE SMOOTH",
"189 575 OFFCURVE",
"157 587 OFFCURVE",
"120 587 CURVE SMOOTH",
"83 587 OFFCURVE",
"51 573 OFFCURVE",
"25 544 CURVE SMOOTH",
"6 523 OFFCURVE",
"-3 499 OFFCURVE",
"-3 472 CURVE SMOOTH",
"-3 444 OFFCURVE",
"9 423 OFFCURVE",
"32 410 CURVE SMOOTH",
"38 406 OFFCURVE",
"47 404 OFFCURVE",
"59 404 CURVE SMOOTH",
"80 404 OFFCURVE",
"94 409 OFFCURVE",
"100 418 CURVE",
"98 418 OFFCURVE",
"94 417 OFFCURVE",
"87 415 CURVE SMOOTH",
"78 413 OFFCURVE",
"70 412 OFFCURVE",
"63 412 CURVE SMOOTH",
"50 412 OFFCURVE",
"40 416 OFFCURVE",
"33 423 CURVE SMOOTH",
"19 436 OFFCURVE",
"12 451 OFFCURVE",
"12 468 CURVE SMOOTH",
"12 492 OFFCURVE",
"25 516 OFFCURVE",
"52 541 CURVE SMOOTH",
"73 558 OFFCURVE",
"96 567 OFFCURVE",
"121 567 CURVE SMOOTH",
"160 567 OFFCURVE",
"190 552 OFFCURVE",
"211 521 CURVE SMOOTH",
"222 502 OFFCURVE",
"228 482 OFFCURVE",
"228 459 CURVE SMOOTH",
"228 433 OFFCURVE",
"222 406 OFFCURVE",
"209 379 CURVE SMOOTH",
"197 354 OFFCURVE",
"182 332 OFFCURVE",
"164 314 CURVE SMOOTH",
"111 259 OFFCURVE",
"85 208 OFFCURVE",
"85 161 CURVE SMOOTH",
"85 134 OFFCURVE",
"95 112 OFFCURVE",
"114 96 CURVE SMOOTH",
"133 79 OFFCURVE",
"157 71 OFFCURVE",
"187 71 CURVE SMOOTH",
"223 71 OFFCURVE",
"259 83 OFFCURVE",
"295 107 CURVE SMOOTH",
"336 132 OFFCURVE",
"372 171 OFFCURVE",
"402 222 CURVE",
"403 223 OFFCURVE",
"403 224 OFFCURVE",
"404 226 CURVE SMOOTH",
"410 236 LINE",
"413 217 OFFCURVE",
"415 203 OFFCURVE",
"416 193 CURVE SMOOTH",
"419 169 LINE SMOOTH",
"421 153 OFFCURVE",
"422 137 OFFCURVE",
"422 120 CURVE SMOOTH",
"422 57 OFFCURVE",
"409 2 OFFCURVE",
"384 -44 CURVE SMOOTH",
"357 -97 OFFCURVE",
"315 -136 OFFCURVE",
"260 -159 CURVE SMOOTH",
"233 -170 OFFCURVE",
"208 -175 OFFCURVE",
"181 -175 CURVE SMOOTH",
"122 -175 OFFCURVE",
"83 -152 OFFCURVE",
"62 -105 CURVE SMOOTH",
"58 -95 OFFCURVE",
"56 -84 OFFCURVE",
"56 -73 CURVE SMOOTH",
"56 -48 OFFCURVE",
"65 -26 OFFCURVE",
"82 -7 CURVE SMOOTH",
"101 14 OFFCURVE",
"122 24 OFFCURVE",
"145 24 CURVE SMOOTH",
"158 24 OFFCURVE",
"173 20 OFFCURVE",
"188 11 CURVE",
"189 10 OFFCURVE",
"191 9 OFFCURVE",
"194 9 CURVE SMOOTH",
"195 9 OFFCURVE",
"196 9 OFFCURVE",
"196 10 CURVE SMOOTH",
"196 12 OFFCURVE",
"194 14 OFFCURVE",
"190 17 CURVE SMOOTH",
"171 28 OFFCURVE",
"153 34 OFFCURVE",
"134 34 CURVE SMOOTH",
"107 34 OFFCURVE",
"83 23 OFFCURVE",
"63 1 CURVE SMOOTH",
"44 -20 OFFCURVE",
"34 -45 OFFCURVE",
"34 -72 CURVE SMOOTH",
"34 -85 OFFCURVE",
"36 -97 OFFCURVE",
"41 -107 CURVE SMOOTH",
"54 -137 OFFCURVE",
"78 -161 OFFCURVE",
"113 -178 CURVE SMOOTH",
"145 -195 OFFCURVE",
"181 -204 OFFCURVE",
"221 -204 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"418 299 OFFCURVE",
"418 313 OFFCURVE",
"418 325 CURVE SMOOTH",
"418 363 OFFCURVE",
"422 387 OFFCURVE",
"430 404 CURVE SMOOTH",
"435 416 OFFCURVE",
"442 422 OFFCURVE",
"451 422 CURVE SMOOTH",
"462 422 OFFCURVE",
"466 413 OFFCURVE",
"466 401 CURVE SMOOTH",
"466 395 LINE",
"464 386 OFFCURVE",
"459 372 OFFCURVE",
"452 355 CURVE SMOOTH",
"445 338 OFFCURVE",
"434 314 OFFCURVE",
"419 284 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01271 3 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 3 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012107 4 65 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01249 10 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 49 234 49 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01254 93 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 71 170 71 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 79 165 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 214 107 230 107 246 107 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 214 107 230 107 246 107 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 107 165 107 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01287 65 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01242 2 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 1 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012111 2 61 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 470;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Yacute;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = acutecomb;
}
);
};
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 356, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 304, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 0176;
},
{
glyphname = Ydieresis;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 324, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01271 3 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 3 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012107 4 65 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01249 10 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 49 234 49 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01254 93 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 71 170 71 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 79 165 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 214 107 230 107 246 107 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 214 107 230 107 246 107 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 107 165 107 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01287 65 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01242 2 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 1 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012111 2 61 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 470;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Ydotbelow;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 458, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = gravecomb;
}
);
};
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 300, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 347, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 1EF6;
},
{
glyphname = Ymacron;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = macroncomb;
}
);
};
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 297, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 0232;
},
{
glyphname = Ytilde;
lastChange = "2021-10-08 06:25:50 +0000";
layers = (
{
background = {
components = (
{
name = Y;
},
{
name = tildecomb;
}
);
};
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 301, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 470;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{238, 0}";
},
{
name = center;
position = "{214, 265}";
},
{
name = top;
position = "{291, 480}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"371 -26 OFFCURVE",
"403 -14 OFFCURVE",
"429 10 CURVE SMOOTH",
"456 36 OFFCURVE",
"470 70 OFFCURVE",
"470 113 CURVE SMOOTH",
"470 152 OFFCURVE",
"459 182 OFFCURVE",
"436 205 CURVE SMOOTH",
"416 226 OFFCURVE",
"392 236 OFFCURVE",
"364 236 CURVE SMOOTH",
"340 236 OFFCURVE",
"320 228 OFFCURVE",
"304 212 CURVE SMOOTH",
"286 195 OFFCURVE",
"277 171 OFFCURVE",
"277 141 CURVE SMOOTH",
"277 124 OFFCURVE",
"284 110 OFFCURVE",
"299 98 CURVE SMOOTH",
"313 87 OFFCURVE",
"328 82 OFFCURVE",
"345 82 CURVE SMOOTH",
"359 82 OFFCURVE",
"370 86 OFFCURVE",
"379 95 CURVE SMOOTH",
"380 96 OFFCURVE",
"381 98 OFFCURVE",
"381 101 CURVE SMOOTH",
"381 106 OFFCURVE",
"379 109 OFFCURVE",
"376 109 CURVE SMOOTH",
"375 109 OFFCURVE",
"373 108 OFFCURVE",
"372 107 CURVE SMOOTH",
"365 100 OFFCURVE",
"356 97 OFFCURVE",
"345 97 CURVE SMOOTH",
"332 97 OFFCURVE",
"319 101 OFFCURVE",
"307 109 CURVE SMOOTH",
"295 118 OFFCURVE",
"289 128 OFFCURVE",
"289 141 CURVE SMOOTH",
"289 162 OFFCURVE",
"296 178 OFFCURVE",
"309 189 CURVE SMOOTH",
"320 200 OFFCURVE",
"336 205 OFFCURVE",
"355 205 CURVE SMOOTH",
"380 205 OFFCURVE",
"403 197 OFFCURVE",
"425 180 CURVE SMOOTH",
"447 163 OFFCURVE",
"458 142 OFFCURVE",
"458 116 CURVE SMOOTH",
"458 39 OFFCURVE",
"421 0 OFFCURVE",
"345 0 CURVE SMOOTH",
"311 0 OFFCURVE",
"262 9 OFFCURVE",
"198 27 CURVE SMOOTH",
"135 45 OFFCURVE",
"97 54 OFFCURVE",
"85 54 CURVE SMOOTH",
"76 54 OFFCURVE",
"67 52 OFFCURVE",
"50 45 CURVE",
"109 141 OFFCURVE",
"234 268 OFFCURVE",
"435 440 CURVE",
"435 441 OFFCURVE",
"434 442 OFFCURVE",
"433 444 CURVE",
"431 446 OFFCURVE",
"426 449 OFFCURVE",
"419 453 CURVE",
"448 468 OFFCURVE",
"465 483 OFFCURVE",
"468 498 CURVE SMOOTH",
"469 502 OFFCURVE",
"465 506 OFFCURVE",
"462 506 CURVE SMOOTH",
"459 506 OFFCURVE",
"456 504 OFFCURVE",
"454 499 CURVE SMOOTH",
"442 472 OFFCURVE",
"415 463 OFFCURVE",
"369 463 CURVE SMOOTH",
"291 463 OFFCURVE",
"170 497 OFFCURVE",
"119 497 CURVE SMOOTH",
"82 497 OFFCURVE",
"51 475 OFFCURVE",
"51 449 CURVE SMOOTH",
"51 442 OFFCURVE",
"53 435 OFFCURVE",
"58 427 CURVE SMOOTH",
"61 423 OFFCURVE",
"65 421 OFFCURVE",
"70 421 CURVE SMOOTH",
"73 421 OFFCURVE",
"75 422 OFFCURVE",
"76 424 CURVE",
"83 452 OFFCURVE",
"100 466 OFFCURVE",
"127 466 CURVE SMOOTH",
"194 466 OFFCURVE",
"280 442 OFFCURVE",
"348 442 CURVE SMOOTH",
"357 442 LINE",
"372 443 LINE",
"293 370 OFFCURVE",
"220 295 OFFCURVE",
"141 208 CURVE SMOOTH",
"91 153 OFFCURVE",
"53 108 OFFCURVE",
"27 72 CURVE SMOOTH",
"1 36 OFFCURVE",
"-14 9 OFFCURVE",
"-18 -9 CURVE SMOOTH",
"-18 -10 OFFCURVE",
"-18 -11 OFFCURVE",
"-19 -12 CURVE",
"-19 -13 LINE SMOOTH",
"-19 -18 OFFCURVE",
"-17 -20 OFFCURVE",
"-13 -20 CURVE SMOOTH",
"-12 -20 OFFCURVE",
"-10 -18 OFFCURVE",
"-8 -15 CURVE SMOOTH",
"2 6 OFFCURVE",
"18 16 OFFCURVE",
"41 16 CURVE SMOOTH",
"73 16 OFFCURVE",
"122 9 OFFCURVE",
"188 -5 CURVE SMOOTH",
"254 -19 OFFCURVE",
"303 -26 OFFCURVE",
"334 -26 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"371 -26 OFFCURVE",
"403 -14 OFFCURVE",
"429 10 CURVE SMOOTH",
"456 36 OFFCURVE",
"470 70 OFFCURVE",
"470 113 CURVE SMOOTH",
"470 152 OFFCURVE",
"459 182 OFFCURVE",
"436 205 CURVE SMOOTH",
"416 226 OFFCURVE",
"392 236 OFFCURVE",
"364 236 CURVE SMOOTH",
"340 236 OFFCURVE",
"320 228 OFFCURVE",
"304 212 CURVE SMOOTH",
"286 195 OFFCURVE",
"277 171 OFFCURVE",
"277 141 CURVE SMOOTH",
"277 124 OFFCURVE",
"284 110 OFFCURVE",
"299 98 CURVE SMOOTH",
"313 87 OFFCURVE",
"328 82 OFFCURVE",
"345 82 CURVE SMOOTH",
"359 82 OFFCURVE",
"370 86 OFFCURVE",
"379 95 CURVE SMOOTH",
"380 96 OFFCURVE",
"381 98 OFFCURVE",
"381 101 CURVE SMOOTH",
"381 106 OFFCURVE",
"379 109 OFFCURVE",
"376 109 CURVE SMOOTH",
"375 109 OFFCURVE",
"373 108 OFFCURVE",
"372 107 CURVE SMOOTH",
"365 100 OFFCURVE",
"356 97 OFFCURVE",
"345 97 CURVE SMOOTH",
"332 97 OFFCURVE",
"319 101 OFFCURVE",
"307 109 CURVE SMOOTH",
"295 118 OFFCURVE",
"289 128 OFFCURVE",
"289 141 CURVE SMOOTH",
"289 162 OFFCURVE",
"296 178 OFFCURVE",
"309 189 CURVE SMOOTH",
"320 200 OFFCURVE",
"336 205 OFFCURVE",
"355 205 CURVE SMOOTH",
"380 205 OFFCURVE",
"403 197 OFFCURVE",
"425 180 CURVE SMOOTH",
"447 163 OFFCURVE",
"458 142 OFFCURVE",
"458 116 CURVE SMOOTH",
"458 39 OFFCURVE",
"421 0 OFFCURVE",
"345 0 CURVE SMOOTH",
"311 0 OFFCURVE",
"262 9 OFFCURVE",
"198 27 CURVE SMOOTH",
"135 45 OFFCURVE",
"97 54 OFFCURVE",
"85 54 CURVE SMOOTH",
"76 54 OFFCURVE",
"67 52 OFFCURVE",
"50 45 CURVE",
"109 141 OFFCURVE",
"234 268 OFFCURVE",
"435 440 CURVE",
"435 441 OFFCURVE",
"434 442 OFFCURVE",
"433 444 CURVE",
"431 446 OFFCURVE",
"426 449 OFFCURVE",
"419 453 CURVE",
"448 468 OFFCURVE",
"465 483 OFFCURVE",
"468 498 CURVE SMOOTH",
"469 502 OFFCURVE",
"465 506 OFFCURVE",
"462 506 CURVE SMOOTH",
"459 506 OFFCURVE",
"456 504 OFFCURVE",
"454 499 CURVE SMOOTH",
"442 472 OFFCURVE",
"415 463 OFFCURVE",
"369 463 CURVE SMOOTH",
"291 463 OFFCURVE",
"170 497 OFFCURVE",
"119 497 CURVE SMOOTH",
"82 497 OFFCURVE",
"51 475 OFFCURVE",
"51 449 CURVE SMOOTH",
"51 442 OFFCURVE",
"53 435 OFFCURVE",
"58 427 CURVE SMOOTH",
"61 423 OFFCURVE",
"65 421 OFFCURVE",
"70 421 CURVE SMOOTH",
"73 421 OFFCURVE",
"75 422 OFFCURVE",
"76 424 CURVE",
"83 452 OFFCURVE",
"100 466 OFFCURVE",
"127 466 CURVE SMOOTH",
"194 466 OFFCURVE",
"280 442 OFFCURVE",
"348 442 CURVE SMOOTH",
"357 442 LINE",
"372 443 LINE",
"293 370 OFFCURVE",
"220 295 OFFCURVE",
"141 208 CURVE SMOOTH",
"91 153 OFFCURVE",
"53 108 OFFCURVE",
"27 72 CURVE SMOOTH",
"1 36 OFFCURVE",
"-14 9 OFFCURVE",
"-18 -9 CURVE SMOOTH",
"-18 -10 OFFCURVE",
"-18 -11 OFFCURVE",
"-19 -12 CURVE",
"-19 -13 LINE SMOOTH",
"-19 -18 OFFCURVE",
"-17 -20 OFFCURVE",
"-13 -20 CURVE SMOOTH",
"-12 -20 OFFCURVE",
"-10 -18 OFFCURVE",
"-8 -15 CURVE SMOOTH",
"2 6 OFFCURVE",
"18 16 OFFCURVE",
"41 16 CURVE SMOOTH",
"73 16 OFFCURVE",
"122 9 OFFCURVE",
"188 -5 CURVE SMOOTH",
"254 -19 OFFCURVE",
"303 -26 OFFCURVE",
"334 -26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 70 234 70 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 153 70 169 70 185 70 201 70 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 96 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01255 96 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 78 229 78 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012100 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 1 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01223 4 31 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 4 31 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 4 31 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01268 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 74 24 74 40 74 56 74 72 74 88 74 104 74 120 74 136 74 152 74 168 74 184 74 200 74 216 74 232 74 248 74 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 475;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Zacute;
lastChange = "2021-10-08 06:18:11 +0000";
layers = (
{
background = {
components = (
{
name = Z;
},
{
name = acutecomb;
}
);
};
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 220}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 475;
}
);
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2021-10-08 06:18:07 +0000";
layers = (
{
background = {
components = (
{
name = Z;
},
{
name = caroncomb;
}
);
};
components = (
{
name = Z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 209, 220}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 475;
}
);
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2021-10-08 06:18:11 +0000";
layers = (
{
background = {
components = (
{
name = Z;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 270, 220}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 475;
}
);
unicode = 017B;
},
{
glyphname = a;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{135, 0}";
},
{
name = ogonek;
position = "{247, 13}";
},
{
name = top;
position = "{167, 241}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"114 -16 OFFCURVE",
"133 -7 OFFCURVE",
"150 10 CURVE SMOOTH",
"169 29 OFFCURVE",
"179 54 OFFCURVE",
"182 83 CURVE SMOOTH",
"182 86 OFFCURVE",
"183 87 OFFCURVE",
"184 87 CURVE SMOOTH",
"185 87 OFFCURVE",
"186 85 OFFCURVE",
"187 82 CURVE",
"186 62 OFFCURVE",
"190 39 OFFCURVE",
"199 22 CURVE SMOOTH",
"204 10 OFFCURVE",
"217 6 OFFCURVE",
"229 6 CURVE SMOOTH",
"243 6 OFFCURVE",
"253 13 OFFCURVE",
"263 21 CURVE",
"287 46 OFFCURVE",
"304 81 OFFCURVE",
"319 113 CURVE SMOOTH",
"322 118 OFFCURVE",
"319 122 OFFCURVE",
"316 122 CURVE SMOOTH",
"314 122 OFFCURVE",
"312 121 OFFCURVE",
"310 117 CURVE SMOOTH",
"302 99 OFFCURVE",
"271 53 OFFCURVE",
"257 39 CURVE SMOOTH",
"251 33 OFFCURVE",
"245 30 OFFCURVE",
"238 30 CURVE SMOOTH",
"231 30 OFFCURVE",
"223 35 OFFCURVE",
"219 46 CURVE SMOOTH",
"214 59 OFFCURVE",
"212 77 OFFCURVE",
"212 98 CURVE SMOOTH",
"212 105 OFFCURVE",
"212 113 OFFCURVE",
"213 120 CURVE SMOOTH",
"214 127 OFFCURVE",
"214 134 OFFCURVE",
"214 141 CURVE",
"213 146 OFFCURVE",
"210 150 OFFCURVE",
"206 153 CURVE SMOOTH",
"201 156 OFFCURVE",
"195 158 OFFCURVE",
"189 158 CURVE SMOOTH",
"178 158 OFFCURVE",
"173 154 OFFCURVE",
"173 145 CURVE SMOOTH",
"173 98 OFFCURVE",
"169 67 OFFCURVE",
"154 39 CURVE SMOOTH",
"142 16 OFFCURVE",
"124 -1 OFFCURVE",
"105 -1 CURVE SMOOTH",
"77 -1 OFFCURVE",
"68 29 OFFCURVE",
"68 52 CURVE SMOOTH",
"68 118 OFFCURVE",
"101 199 OFFCURVE",
"170 209 CURVE",
"172 210 OFFCURVE",
"175 210 OFFCURVE",
"178 210 CURVE SMOOTH",
"197 210 OFFCURVE",
"208 206 OFFCURVE",
"211 191 CURVE",
"211 186 OFFCURVE",
"214 183 OFFCURVE",
"219 183 CURVE SMOOTH",
"224 183 OFFCURVE",
"226 186 OFFCURVE",
"226 191 CURVE SMOOTH",
"226 218 OFFCURVE",
"211 235 OFFCURVE",
"182 240 CURVE",
"179 240 OFFCURVE",
"177 240 OFFCURVE",
"175 241 CURVE",
"167 241 LINE SMOOTH",
"86 241 OFFCURVE",
"31 157 OFFCURVE",
"31 77 CURVE SMOOTH",
"31 64 OFFCURVE",
"33 51 OFFCURVE",
"36 38 CURVE SMOOTH",
"46 2 OFFCURVE",
"65 -16 OFFCURVE",
"94 -16 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"114 -16 OFFCURVE",
"133 -7 OFFCURVE",
"150 10 CURVE SMOOTH",
"169 29 OFFCURVE",
"179 54 OFFCURVE",
"182 83 CURVE SMOOTH",
"182 86 OFFCURVE",
"183 87 OFFCURVE",
"184 87 CURVE SMOOTH",
"185 87 OFFCURVE",
"186 85 OFFCURVE",
"187 82 CURVE",
"186 62 OFFCURVE",
"190 39 OFFCURVE",
"199 22 CURVE SMOOTH",
"204 10 OFFCURVE",
"217 6 OFFCURVE",
"229 6 CURVE SMOOTH",
"243 6 OFFCURVE",
"253 13 OFFCURVE",
"263 21 CURVE",
"287 46 OFFCURVE",
"304 81 OFFCURVE",
"319 113 CURVE SMOOTH",
"322 118 OFFCURVE",
"319 122 OFFCURVE",
"316 122 CURVE SMOOTH",
"314 122 OFFCURVE",
"312 121 OFFCURVE",
"310 117 CURVE SMOOTH",
"302 99 OFFCURVE",
"271 53 OFFCURVE",
"257 39 CURVE SMOOTH",
"251 33 OFFCURVE",
"245 30 OFFCURVE",
"238 30 CURVE SMOOTH",
"231 30 OFFCURVE",
"223 35 OFFCURVE",
"219 46 CURVE SMOOTH",
"214 59 OFFCURVE",
"212 77 OFFCURVE",
"212 98 CURVE SMOOTH",
"212 105 OFFCURVE",
"212 113 OFFCURVE",
"213 120 CURVE SMOOTH",
"214 127 OFFCURVE",
"214 134 OFFCURVE",
"214 141 CURVE",
"213 146 OFFCURVE",
"210 150 OFFCURVE",
"206 153 CURVE SMOOTH",
"201 156 OFFCURVE",
"195 158 OFFCURVE",
"189 158 CURVE SMOOTH",
"178 158 OFFCURVE",
"173 154 OFFCURVE",
"173 145 CURVE SMOOTH",
"173 98 OFFCURVE",
"169 67 OFFCURVE",
"154 39 CURVE SMOOTH",
"142 16 OFFCURVE",
"124 -1 OFFCURVE",
"105 -1 CURVE SMOOTH",
"77 -1 OFFCURVE",
"68 29 OFFCURVE",
"68 52 CURVE SMOOTH",
"68 118 OFFCURVE",
"101 199 OFFCURVE",
"170 209 CURVE",
"172 210 OFFCURVE",
"175 210 OFFCURVE",
"178 210 CURVE SMOOTH",
"197 210 OFFCURVE",
"208 206 OFFCURVE",
"211 191 CURVE",
"211 186 OFFCURVE",
"214 183 OFFCURVE",
"219 183 CURVE SMOOTH",
"224 183 OFFCURVE",
"226 186 OFFCURVE",
"226 191 CURVE SMOOTH",
"226 218 OFFCURVE",
"211 235 OFFCURVE",
"182 240 CURVE",
"179 240 OFFCURVE",
"177 240 OFFCURVE",
"175 241 CURVE",
"167 241 LINE SMOOTH",
"86 241 OFFCURVE",
"31 157 OFFCURVE",
"31 77 CURVE SMOOTH",
"31 64 OFFCURVE",
"33 51 OFFCURVE",
"36 38 CURVE SMOOTH",
"46 2 OFFCURVE",
"65 -16 OFFCURVE",
"94 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = a;
unicode = 0061;
},
{
glyphname = aacute;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = acutecomb;
}
);
};
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 135, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = abreve;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = brevecomb;
}
);
};
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
}
);
};
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
}
);
};
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 114, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
}
);
};
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
}
);
};
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
}
);
};
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 95, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EB5;
},
{
glyphname = acaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = caroncomb;
}
);
};
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 85, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 01CE;
},
{
glyphname = acircumflex;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 114, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 83, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EAB;
},
{
glyphname = adblgrave;
lastChange = "2021-10-08 06:19:34 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 33, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 0201;
},
{
glyphname = adieresis;
lastChange = "2021-10-08 06:30:52 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 107, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01260 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01286 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 86 165 86 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01284 2 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = adotbelow;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 114, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EA1;
},
{
glyphname = agrave;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = gravecomb;
}
);
};
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 99, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = ahookabove;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 126, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 89, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 0203;
},
{
glyphname = amacron;
lastChange = "2021-10-08 06:59:32 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = macroncomb;
}
);
};
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 93, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 168, 8}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 0105;
},
{
glyphname = aring;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = ringcomb;
}
);
};
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 122, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 3 84 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01276 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 98 165 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012102 1 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01215 19 88 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2021-10-08 05:34:48 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = ringcomb;
},
{
name = acutecomb;
}
);
};
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 122, -19}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 153, 126}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 269;
}
);
unicode = 01FB;
},
{
glyphname = atilde;
lastChange = "2021-10-08 05:31:03 +0000";
layers = (
{
background = {
components = (
{
name = a;
},
{
name = tildecomb;
}
);
};
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 88, -19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01290 2 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 2 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = ae;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{202, 0}";
},
{
name = top;
position = "{222, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"254 -29 OFFCURVE",
"263 -23 OFFCURVE",
"273 -13 CURVE",
"277 -7 OFFCURVE",
"279 0 OFFCURVE",
"279 5 CURVE SMOOTH",
"279 8 OFFCURVE",
"278 10 OFFCURVE",
"276 10 CURVE SMOOTH",
"274 10 OFFCURVE",
"271 8 OFFCURVE",
"268 5 CURVE SMOOTH",
"261 -1 OFFCURVE",
"254 -5 OFFCURVE",
"248 -5 CURVE SMOOTH",
"240 -5 OFFCURVE",
"233 0 OFFCURVE",
"229 11 CURVE SMOOTH",
"227.667 16.333 OFFCURVE",
"224.667 30 OFFCURVE",
"222 46 CURVE",
"239.333 31.333 OFFCURVE",
"261 22.667 OFFCURVE",
"289 24 CURVE SMOOTH",
"338.784 24 OFFCURVE",
"387 52.248 OFFCURVE",
"387 106 CURVE SMOOTH",
"387 126 OFFCURVE",
"374 143 OFFCURVE",
"361 143 CURVE SMOOTH",
"357 143 OFFCURVE",
"354 139 OFFCURVE",
"354 137 CURVE SMOOTH",
"354 134 OFFCURVE",
"356 132 OFFCURVE",
"359 130 CURVE SMOOTH",
"367 126 OFFCURVE",
"371 118 OFFCURVE",
"371 107 CURVE SMOOTH",
"371 81 OFFCURVE",
"343 42 OFFCURVE",
"294 42 CURVE SMOOTH",
"236.197 42 OFFCURVE",
"215 94.358 OFFCURVE",
"215 149 CURVE SMOOTH",
"215 171.667 OFFCURVE",
"217 187.333 OFFCURVE",
"225 202 CURVE",
"235 183 OFFCURVE",
"256 174 OFFCURVE",
"279 174 CURVE SMOOTH",
"302 174 OFFCURVE",
"326 183 OFFCURVE",
"340 199 CURVE SMOOTH",
"355 216 OFFCURVE",
"362 234 OFFCURVE",
"362 250 CURVE SMOOTH",
"362 278 OFFCURVE",
"341 300 OFFCURVE",
"306 300 CURVE SMOOTH",
"296 300 OFFCURVE",
"286 299 OFFCURVE",
"274 295 CURVE SMOOTH",
"250.667 287.667 OFFCURVE",
"231 273.667 OFFCURVE",
"215 253 CURVE",
"208.333 261 OFFCURVE",
"197.333 266.667 OFFCURVE",
"182 270 CURVE",
"167 271 LINE SMOOTH",
"87 271 OFFCURVE",
"31 187 OFFCURVE",
"31 107 CURVE SMOOTH",
"31 94 OFFCURVE",
"33 81 OFFCURVE",
"36 68 CURVE SMOOTH",
"46 32 OFFCURVE",
"65.333 14 OFFCURVE",
"94 14 CURVE SMOOTH",
"114 14 OFFCURVE",
"132.667 22.667 OFFCURVE",
"150 40 CURVE SMOOTH",
"168.667 59.333 OFFCURVE",
"179.333 83.667 OFFCURVE",
"182 113 CURVE SMOOTH",
"182 115.667 OFFCURVE",
"182.667 117 OFFCURVE",
"184 117 CURVE",
"187 104 LINE",
"189.448 77.07 OFFCURVE",
"200.741 3.518 OFFCURVE",
"209 -13 CURVE SMOOTH",
"215 -25 OFFCURVE",
"228 -29 OFFCURVE",
"240 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 29 OFFCURVE",
"68 59.333 OFFCURVE",
"68 82 CURVE SMOOTH",
"68 147.685 OFFCURVE",
"100.958 228.772 OFFCURVE",
"170 239 CURVE SMOOTH",
"172 239.667 OFFCURVE",
"174.667 240 OFFCURVE",
"178 240 CURVE SMOOTH",
"188.667 240 OFFCURVE",
"197 238 OFFCURVE",
"203 234 CURVE",
"194.333 219.333 OFFCURVE",
"188.667 204 OFFCURVE",
"186 188 CURVE",
"177.333 187.333 OFFCURVE",
"173 183 OFFCURVE",
"173 175 CURVE SMOOTH",
"173 128.333 OFFCURVE",
"168.667 97 OFFCURVE",
"154 69 CURVE SMOOTH",
"142 46.333 OFFCURVE",
"123.667 29 OFFCURVE",
"105 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 200 OFFCURVE",
"295 195 OFFCURVE",
"280 195 CURVE SMOOTH",
"256 195 OFFCURVE",
"234 207 OFFCURVE",
"234 224 CURVE",
"238.667 239.333 OFFCURVE",
"247 252.333 OFFCURVE",
"259 263 CURVE SMOOTH",
"273 273.667 OFFCURVE",
"287.333 279 OFFCURVE",
"302 279 CURVE SMOOTH",
"304.667 279 OFFCURVE",
"306.667 278.667 OFFCURVE",
"308 278 CURVE",
"326.667 276.667 OFFCURVE",
"336 266 OFFCURVE",
"336 246 CURVE SMOOTH",
"336 234 OFFCURVE",
"331.333 222.667 OFFCURVE",
"322 212 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"254 -29 OFFCURVE",
"263 -23 OFFCURVE",
"273 -13 CURVE",
"277 -7 OFFCURVE",
"279 0 OFFCURVE",
"279 5 CURVE SMOOTH",
"279 8 OFFCURVE",
"278 10 OFFCURVE",
"276 10 CURVE SMOOTH",
"274 10 OFFCURVE",
"271 8 OFFCURVE",
"268 5 CURVE SMOOTH",
"261 -1 OFFCURVE",
"254 -5 OFFCURVE",
"248 -5 CURVE SMOOTH",
"240 -5 OFFCURVE",
"233 0 OFFCURVE",
"229 11 CURVE",
"222 46 LINE",
"238 32 OFFCURVE",
"259 24 OFFCURVE",
"284 24 CURVE SMOOTH",
"336 24 OFFCURVE",
"387 50 OFFCURVE",
"387 106 CURVE SMOOTH",
"387 126 OFFCURVE",
"374 143 OFFCURVE",
"361 143 CURVE SMOOTH",
"357 143 OFFCURVE",
"354 139 OFFCURVE",
"354 137 CURVE SMOOTH",
"354 134 OFFCURVE",
"356 132 OFFCURVE",
"359 130 CURVE SMOOTH",
"367 126 OFFCURVE",
"371 118 OFFCURVE",
"371 107 CURVE SMOOTH",
"371 81 OFFCURVE",
"343 42 OFFCURVE",
"294 42 CURVE SMOOTH",
"236 42 OFFCURVE",
"215 94 OFFCURVE",
"215 149 CURVE SMOOTH",
"215 172 OFFCURVE",
"217 187 OFFCURVE",
"225 202 CURVE",
"235 183 OFFCURVE",
"256 174 OFFCURVE",
"279 174 CURVE SMOOTH",
"302 174 OFFCURVE",
"326 183 OFFCURVE",
"340 199 CURVE SMOOTH",
"355 216 OFFCURVE",
"362 234 OFFCURVE",
"362 250 CURVE SMOOTH",
"362 278 OFFCURVE",
"341 300 OFFCURVE",
"306 300 CURVE SMOOTH",
"296 300 OFFCURVE",
"286 299 OFFCURVE",
"274 295 CURVE SMOOTH",
"251 288 OFFCURVE",
"231 274 OFFCURVE",
"215 253 CURVE",
"208 261 OFFCURVE",
"197 267 OFFCURVE",
"182 270 CURVE",
"167 271 LINE SMOOTH",
"87 276 OFFCURVE",
"31 187 OFFCURVE",
"31 107 CURVE SMOOTH",
"31 94 OFFCURVE",
"33 81 OFFCURVE",
"36 68 CURVE SMOOTH",
"46 32 OFFCURVE",
"65 14 OFFCURVE",
"94 14 CURVE SMOOTH",
"114 14 OFFCURVE",
"133 23 OFFCURVE",
"150 40 CURVE SMOOTH",
"169 59 OFFCURVE",
"179 84 OFFCURVE",
"182 113 CURVE SMOOTH",
"182 116 OFFCURVE",
"183 117 OFFCURVE",
"184 117 CURVE",
"187 104 LINE",
"189 77 OFFCURVE",
"201 4 OFFCURVE",
"209 -13 CURVE SMOOTH",
"215 -25 OFFCURVE",
"228 -29 OFFCURVE",
"240 -29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 29 OFFCURVE",
"68 59 OFFCURVE",
"68 82 CURVE SMOOTH",
"68 148 OFFCURVE",
"101 229 OFFCURVE",
"170 239 CURVE",
"172 240 OFFCURVE",
"175 240 OFFCURVE",
"178 240 CURVE SMOOTH",
"189 240 OFFCURVE",
"197 238 OFFCURVE",
"203 234 CURVE",
"194 219 OFFCURVE",
"189 204 OFFCURVE",
"186 188 CURVE",
"177 187 OFFCURVE",
"173 183 OFFCURVE",
"173 175 CURVE SMOOTH",
"173 128 OFFCURVE",
"169 97 OFFCURVE",
"154 69 CURVE SMOOTH",
"142 46 OFFCURVE",
"124 29 OFFCURVE",
"105 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"256 195 OFFCURVE",
"234 207 OFFCURVE",
"234 224 CURVE",
"239 239 OFFCURVE",
"247 252 OFFCURVE",
"259 263 CURVE SMOOTH",
"273 274 OFFCURVE",
"287 279 OFFCURVE",
"302 279 CURVE SMOOTH",
"305 279 OFFCURVE",
"307 279 OFFCURVE",
"308 278 CURVE",
"327 277 OFFCURVE",
"336 266 OFFCURVE",
"336 246 CURVE SMOOTH",
"336 234 OFFCURVE",
"331 223 OFFCURVE",
"322 212 CURVE SMOOTH",
"311 200 OFFCURVE",
"295 195 OFFCURVE",
"280 195 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 3 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 4 33 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 0 170 0 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 83 22 83 38 83 54 83 70 83 86 83 102 83 118 83 134 83 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 83 165 83 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01252 33 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 33 93 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01256 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012110 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01227 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01252 110 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012107 110 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 403;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = aeacute;
lastChange = "2021-10-08 05:35:01 +0000";
layers = (
{
background = {
components = (
{
name = ae;
},
{
name = acutecomb;
}
);
};
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 403;
}
);
unicode = 01FD;
},
{
glyphname = b;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"217 -9 OFFCURVE",
"243 8 OFFCURVE",
"262 48 CURVE SMOOTH",
"268 60 OFFCURVE",
"270 82 OFFCURVE",
"270 101 CURVE SMOOTH",
"270 114 OFFCURVE",
"269 124 OFFCURVE",
"267 131 CURVE",
"305 133 OFFCURVE",
"329 151 OFFCURVE",
"338 184 CURVE SMOOTH",
"339 189 OFFCURVE",
"338 192 OFFCURVE",
"335 192 CURVE SMOOTH",
"332 192 OFFCURVE",
"329 190 OFFCURVE",
"328 186 CURVE SMOOTH",
"323 174 OFFCURVE",
"314 164 OFFCURVE",
"299 155 CURVE",
"292 152 OFFCURVE",
"279 147 OFFCURVE",
"266 147 CURVE",
"261 158 OFFCURVE",
"259 161 OFFCURVE",
"252 178 CURVE SMOOTH",
"244 194 LINE SMOOTH",
"242 198 OFFCURVE",
"240 201 OFFCURVE",
"238 204 CURVE SMOOTH",
"229 217 OFFCURVE",
"220 223 OFFCURVE",
"211 223 CURVE SMOOTH",
"206 223 OFFCURVE",
"200 220 OFFCURVE",
"195 215 CURVE SMOOTH",
"191 210 OFFCURVE",
"189 204 OFFCURVE",
"189 198 CURVE SMOOTH",
"189 184 OFFCURVE",
"196 172 OFFCURVE",
"209 163 CURVE SMOOTH",
"228 148 OFFCURVE",
"239 139 OFFCURVE",
"240 135 CURVE SMOOTH",
"245 123 OFFCURVE",
"248 108 OFFCURVE",
"248 92 CURVE SMOOTH",
"248 53 OFFCURVE",
"232 11 OFFCURVE",
"197 11 CURVE SMOOTH",
"182 11 OFFCURVE",
"167 20 OFFCURVE",
"154 39 CURVE SMOOTH",
"139 62 OFFCURVE",
"129 93 OFFCURVE",
"122 130 CURVE SMOOTH",
"114 175 OFFCURVE",
"111 219 OFFCURVE",
"111 236 CURVE",
"140 244 OFFCURVE",
"168 263 OFFCURVE",
"196 294 CURVE SMOOTH",
"235 337 OFFCURVE",
"254 395 OFFCURVE",
"254 448 CURVE SMOOTH",
"254 491 OFFCURVE",
"239 508 OFFCURVE",
"211 508 CURVE SMOOTH",
"164 508 OFFCURVE",
"129 468 OFFCURVE",
"109 428 CURVE SMOOTH",
"84 379 OFFCURVE",
"71 322 OFFCURVE",
"71 259 CURVE",
"66 258 OFFCURVE",
"61 258 OFFCURVE",
"56 258 CURVE SMOOTH",
"42 258 OFFCURVE",
"28 262 OFFCURVE",
"14 271 CURVE SMOOTH",
"-10 286 OFFCURVE",
"-22 308 OFFCURVE",
"-22 338 CURVE SMOOTH",
"-22 352 OFFCURVE",
"-18 364 OFFCURVE",
"-11 374 CURVE SMOOTH",
"3 396 LINE",
"3 400 OFFCURVE",
"0 402 OFFCURVE",
"-6 402 CURVE SMOOTH",
"-12 402 OFFCURVE",
"-19 397 OFFCURVE",
"-28 386 CURVE SMOOTH",
"-38 372 OFFCURVE",
"-43 356 OFFCURVE",
"-43 338 CURVE SMOOTH",
"-43 323 OFFCURVE",
"-39 307 OFFCURVE",
"-30 290 CURVE SMOOTH",
"-21 274 OFFCURVE",
"-10 262 OFFCURVE",
"4 253 CURVE SMOOTH",
"20 243 OFFCURVE",
"39 238 OFFCURVE",
"61 238 CURVE SMOOTH",
"69 238 LINE",
"72 209 OFFCURVE",
"74 164 OFFCURVE",
"85 120 CURVE SMOOTH",
"97 64 OFFCURVE",
"122 -9 OFFCURVE",
"184 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 267 OFFCURVE",
"110 270 OFFCURVE",
"109 271 CURVE",
"109 275 LINE SMOOTH",
"109 314 OFFCURVE",
"119 359 OFFCURVE",
"138 409 CURVE SMOOTH",
"159 464 OFFCURVE",
"181 493 OFFCURVE",
"208 493 CURVE SMOOTH",
"224 493 OFFCURVE",
"230 477 OFFCURVE",
"230 450 CURVE SMOOTH",
"230 423 OFFCURVE",
"224 395 OFFCURVE",
"212 366 CURVE SMOOTH",
"201 341 OFFCURVE",
"186 318 OFFCURVE",
"167 299 CURVE SMOOTH",
"150 280 OFFCURVE",
"131 269 OFFCURVE",
"110 264 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"217 -9 OFFCURVE",
"243 8 OFFCURVE",
"262 48 CURVE SMOOTH",
"268 60 OFFCURVE",
"270 82 OFFCURVE",
"270 101 CURVE SMOOTH",
"270 114 OFFCURVE",
"269 124 OFFCURVE",
"267 131 CURVE",
"305 133 OFFCURVE",
"329 151 OFFCURVE",
"338 184 CURVE SMOOTH",
"339 189 OFFCURVE",
"338 192 OFFCURVE",
"335 192 CURVE SMOOTH",
"332 192 OFFCURVE",
"329 190 OFFCURVE",
"328 186 CURVE SMOOTH",
"323 174 OFFCURVE",
"314 164 OFFCURVE",
"299 155 CURVE",
"292 152 OFFCURVE",
"279 147 OFFCURVE",
"266 147 CURVE",
"261 158 OFFCURVE",
"259 161 OFFCURVE",
"252 178 CURVE SMOOTH",
"244 194 LINE SMOOTH",
"242 198 OFFCURVE",
"240 201 OFFCURVE",
"238 204 CURVE SMOOTH",
"229 217 OFFCURVE",
"220 223 OFFCURVE",
"211 223 CURVE SMOOTH",
"206 223 OFFCURVE",
"200 220 OFFCURVE",
"195 215 CURVE SMOOTH",
"191 210 OFFCURVE",
"189 204 OFFCURVE",
"189 198 CURVE SMOOTH",
"189 184 OFFCURVE",
"196 172 OFFCURVE",
"209 163 CURVE SMOOTH",
"228 148 OFFCURVE",
"239 139 OFFCURVE",
"240 135 CURVE SMOOTH",
"245 123 OFFCURVE",
"248 108 OFFCURVE",
"248 92 CURVE SMOOTH",
"248 53 OFFCURVE",
"232 11 OFFCURVE",
"197 11 CURVE SMOOTH",
"182 11 OFFCURVE",
"167 20 OFFCURVE",
"154 39 CURVE SMOOTH",
"139 62 OFFCURVE",
"129 93 OFFCURVE",
"122 130 CURVE SMOOTH",
"114 175 OFFCURVE",
"111 219 OFFCURVE",
"111 236 CURVE",
"140 244 OFFCURVE",
"168 263 OFFCURVE",
"196 294 CURVE SMOOTH",
"235 337 OFFCURVE",
"254 395 OFFCURVE",
"254 448 CURVE SMOOTH",
"254 491 OFFCURVE",
"239 508 OFFCURVE",
"211 508 CURVE SMOOTH",
"164 508 OFFCURVE",
"129 468 OFFCURVE",
"109 428 CURVE SMOOTH",
"84 379 OFFCURVE",
"71 322 OFFCURVE",
"71 259 CURVE",
"66 258 OFFCURVE",
"61 258 OFFCURVE",
"56 258 CURVE SMOOTH",
"42 258 OFFCURVE",
"28 262 OFFCURVE",
"14 271 CURVE SMOOTH",
"-10 286 OFFCURVE",
"-22 308 OFFCURVE",
"-22 338 CURVE SMOOTH",
"-22 352 OFFCURVE",
"-18 364 OFFCURVE",
"-11 374 CURVE SMOOTH",
"3 396 LINE",
"3 400 OFFCURVE",
"0 402 OFFCURVE",
"-6 402 CURVE SMOOTH",
"-12 402 OFFCURVE",
"-19 397 OFFCURVE",
"-28 386 CURVE SMOOTH",
"-38 372 OFFCURVE",
"-43 356 OFFCURVE",
"-43 338 CURVE SMOOTH",
"-43 323 OFFCURVE",
"-39 307 OFFCURVE",
"-30 290 CURVE SMOOTH",
"-21 274 OFFCURVE",
"-10 262 OFFCURVE",
"4 253 CURVE SMOOTH",
"20 243 OFFCURVE",
"39 238 OFFCURVE",
"61 238 CURVE SMOOTH",
"69 238 LINE",
"72 209 OFFCURVE",
"74 164 OFFCURVE",
"85 120 CURVE SMOOTH",
"97 64 OFFCURVE",
"122 -9 OFFCURVE",
"184 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 267 OFFCURVE",
"110 270 OFFCURVE",
"109 271 CURVE",
"109 275 LINE SMOOTH",
"109 314 OFFCURVE",
"119 359 OFFCURVE",
"138 409 CURVE SMOOTH",
"159 464 OFFCURVE",
"181 493 OFFCURVE",
"208 493 CURVE SMOOTH",
"224 493 OFFCURVE",
"230 477 OFFCURVE",
"230 450 CURVE SMOOTH",
"230 423 OFFCURVE",
"224 395 OFFCURVE",
"212 366 CURVE SMOOTH",
"201 341 OFFCURVE",
"186 318 OFFCURVE",
"167 299 CURVE SMOOTH",
"150 280 OFFCURVE",
"131 269 OFFCURVE",
"110 264 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01292 3 49 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 4 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 3 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 35 165 35 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 103 165 103 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 92 170 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01246 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01239 2 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 10 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01295 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 311;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{145, 0}";
},
{
name = top;
position = "{177, 282}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"227 2 OFFCURVE",
"268 24 OFFCURVE",
"268 71 CURVE SMOOTH",
"268 79 OFFCURVE",
"264 82 OFFCURVE",
"260 82 CURVE SMOOTH",
"256 82 OFFCURVE",
"251 78 OFFCURVE",
"251 72 CURVE SMOOTH",
"251 44 OFFCURVE",
"223 20 OFFCURVE",
"180 20 CURVE SMOOTH",
"121 20 OFFCURVE",
"84 83 OFFCURVE",
"84 156 CURVE SMOOTH",
"84 217 OFFCURVE",
"114 270 OFFCURVE",
"177 270 CURVE SMOOTH",
"232 270 OFFCURVE",
"261 229 OFFCURVE",
"261 194 CURVE SMOOTH",
"261 166 OFFCURVE",
"243 142 OFFCURVE",
"208 142 CURVE SMOOTH",
"178 142 OFFCURVE",
"163 169 OFFCURVE",
"163 190 CURVE SMOOTH",
"163 209 OFFCURVE",
"174 224 OFFCURVE",
"194 219 CURVE SMOOTH",
"201 217 OFFCURVE",
"204 220 OFFCURVE",
"204 223 CURVE SMOOTH",
"204 226 OFFCURVE",
"202 230 OFFCURVE",
"196 232 CURVE SMOOTH",
"190 233 OFFCURVE",
"185 234 OFFCURVE",
"180 234 CURVE SMOOTH",
"153 234 OFFCURVE",
"139 214 OFFCURVE",
"139 191 CURVE SMOOTH",
"139 163 OFFCURVE",
"161 131 OFFCURVE",
"206 131 CURVE SMOOTH",
"259 131 OFFCURVE",
"279 163 OFFCURVE",
"279 196 CURVE SMOOTH",
"279 253 OFFCURVE",
"229 283 OFFCURVE",
"174 283 CURVE SMOOTH",
"99 283 OFFCURVE",
"42 231 OFFCURVE",
"42 156 CURVE SMOOTH",
"42 66 OFFCURVE",
"100 1 OFFCURVE",
"186 1 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"227 2 OFFCURVE",
"268 24 OFFCURVE",
"268 71 CURVE SMOOTH",
"268 79 OFFCURVE",
"264 82 OFFCURVE",
"260 82 CURVE SMOOTH",
"256 82 OFFCURVE",
"251 78 OFFCURVE",
"251 72 CURVE SMOOTH",
"251 44 OFFCURVE",
"223 20 OFFCURVE",
"180 20 CURVE SMOOTH",
"121 20 OFFCURVE",
"84 83 OFFCURVE",
"84 156 CURVE SMOOTH",
"84 217 OFFCURVE",
"114 270 OFFCURVE",
"177 270 CURVE SMOOTH",
"232 270 OFFCURVE",
"261 229 OFFCURVE",
"261 194 CURVE SMOOTH",
"261 166 OFFCURVE",
"243 142 OFFCURVE",
"208 142 CURVE SMOOTH",
"178 142 OFFCURVE",
"163 169 OFFCURVE",
"163 190 CURVE SMOOTH",
"163 209 OFFCURVE",
"174 224 OFFCURVE",
"194 219 CURVE SMOOTH",
"201 217 OFFCURVE",
"204 220 OFFCURVE",
"204 223 CURVE SMOOTH",
"204 226 OFFCURVE",
"202 230 OFFCURVE",
"196 232 CURVE SMOOTH",
"190 233 OFFCURVE",
"185 234 OFFCURVE",
"180 234 CURVE SMOOTH",
"153 234 OFFCURVE",
"139 214 OFFCURVE",
"139 191 CURVE SMOOTH",
"139 163 OFFCURVE",
"161 131 OFFCURVE",
"206 131 CURVE SMOOTH",
"259 131 OFFCURVE",
"279 163 OFFCURVE",
"279 196 CURVE SMOOTH",
"279 253 OFFCURVE",
"229 283 OFFCURVE",
"174 283 CURVE SMOOTH",
"99 283 OFFCURVE",
"42 231 OFFCURVE",
"42 156 CURVE SMOOTH",
"42 66 OFFCURVE",
"100 1 OFFCURVE",
"186 1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01234 3 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 4 45 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 26 22 26 38 26 54 26 70 26 86 26 102 26 118 26 134 26 150 26 166 26 182 26 198 26 214 26 230 26 246 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 26 22 26 38 26 54 26 70 26 86 26 102 26 118 26 134 26 150 26 166 26 182 26 198 26 214 26 230 26 246 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 26 22 26 38 26 54 26 70 26 86 26 102 26 118 26 134 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 26 165 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01250 1 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 1 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01231 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 290;
}
);
note = c;
unicode = 0063;
},
{
glyphname = cacute;
lastChange = "2021-10-08 05:35:23 +0000";
layers = (
{
background = {
components = (
{
name = c;
},
{
name = acutecomb;
}
);
};
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 22}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 290;
}
);
unicode = 0107;
},
{
glyphname = ccaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = c;
},
{
name = caroncomb;
}
);
};
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 95, 22}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 290;
}
);
unicode = 010D;
},
{
glyphname = ccedilla;
lastChange = "2021-10-08 06:02:58 +0000";
layers = (
{
background = {
components = (
{
name = c;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01270 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 70 165 70 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 26 170 26 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 217 26 233 26 249 26 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01298 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01287 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01290 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01221 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 1 65 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 1 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01275 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 75 23 75 39 75 55 75 71 75 87 75 103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 290;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = c;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 93, 22}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 290;
}
);
unicode = 0109;
},
{
glyphname = cdotaccent;
lastChange = "2021-10-08 05:35:23 +0000";
layers = (
{
background = {
components = (
{
name = c;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 156, 22}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 290;
}
);
unicode = 010B;
},
{
glyphname = d;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{131, 0}";
},
{
name = center;
position = "{154, 321}";
},
{
name = top;
position = "{189, 534}";
},
{
name = topright;
position = "{281, 530}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"306 -83 OFFCURVE",
"278 -62 OFFCURVE",
"257 -38 CURVE SMOOTH",
"230 -9 OFFCURVE",
"211 43 OFFCURVE",
"192 124 CURVE",
"216 192 OFFCURVE",
"233 252 OFFCURVE",
"243 304 CURVE SMOOTH",
"247 326 OFFCURVE",
"253 376 OFFCURVE",
"253 421 CURVE SMOOTH",
"253 495 OFFCURVE",
"219 534 OFFCURVE",
"189 534 CURVE SMOOTH",
"166 534 OFFCURVE",
"144 513 OFFCURVE",
"137 470 CURVE SMOOTH",
"132 447 OFFCURVE",
"130 413 OFFCURVE",
"130 369 CURVE SMOOTH",
"130 328 OFFCURVE",
"131 284 OFFCURVE",
"138 235 CURVE",
"65 227 OFFCURVE",
"17 157 OFFCURVE",
"17 84 CURVE SMOOTH",
"17 13 OFFCURVE",
"46 -25 OFFCURVE",
"97 -25 CURVE SMOOTH",
"151 -25 OFFCURVE",
"165 36 OFFCURVE",
"174 86 CURVE",
"184 43 OFFCURVE",
"195 16 OFFCURVE",
"215 -17 CURVE SMOOTH",
"230 -40 OFFCURVE",
"253 -65 OFFCURVE",
"281 -80 CURVE SMOOTH",
"295 -88 OFFCURVE",
"318 -94 OFFCURVE",
"339 -94 CURVE SMOOTH",
"356 -94 OFFCURVE",
"371 -90 OFFCURVE",
"380 -79 CURVE",
"384 -72 OFFCURVE",
"389 -66 OFFCURVE",
"389 -55 CURVE SMOOTH",
"389 -47 OFFCURVE",
"379 -50 OFFCURVE",
"378 -55 CURVE SMOOTH",
"371 -83 OFFCURVE",
"349 -84 OFFCURVE",
"333 -84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 -4 OFFCURVE",
"84 1 OFFCURVE",
"74 12 CURVE SMOOTH",
"63 23 OFFCURVE",
"58 43 OFFCURVE",
"58 73 CURVE SMOOTH",
"58 128 OFFCURVE",
"80 185 OFFCURVE",
"132 203 CURVE SMOOTH",
"141 206 LINE",
"148 187 OFFCURVE",
"157 146 OFFCURVE",
"157 109 CURVE SMOOTH",
"157 70 OFFCURVE",
"147 2 OFFCURVE",
"106 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 216 OFFCURVE",
"169 271 OFFCURVE",
"169 331 CURVE SMOOTH",
"169 369 OFFCURVE",
"172 411 OFFCURVE",
"178 457 CURVE SMOOTH",
"182 484 OFFCURVE",
"192 498 OFFCURVE",
"203 498 CURVE SMOOTH",
"219 498 OFFCURVE",
"235 469 OFFCURVE",
"235 412 CURVE SMOOTH",
"235 375 OFFCURVE",
"230 325 OFFCURVE",
"227 307 CURVE SMOOTH",
"219 264 OFFCURVE",
"205 214 OFFCURVE",
"186 151 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"356 -94 OFFCURVE",
"371 -90 OFFCURVE",
"380 -79 CURVE",
"384 -72 OFFCURVE",
"389 -66 OFFCURVE",
"389 -55 CURVE SMOOTH",
"389 -47 OFFCURVE",
"379 -50 OFFCURVE",
"378 -55 CURVE SMOOTH",
"371 -83 OFFCURVE",
"349 -84 OFFCURVE",
"333 -84 CURVE SMOOTH",
"306 -83 OFFCURVE",
"278 -62 OFFCURVE",
"257 -38 CURVE SMOOTH",
"230 -9 OFFCURVE",
"211 43 OFFCURVE",
"192 124 CURVE",
"216 192 OFFCURVE",
"233 252 OFFCURVE",
"243 304 CURVE SMOOTH",
"247 326 OFFCURVE",
"253 376 OFFCURVE",
"253 421 CURVE SMOOTH",
"253 495 OFFCURVE",
"219 534 OFFCURVE",
"189 534 CURVE SMOOTH",
"166 534 OFFCURVE",
"144 513 OFFCURVE",
"137 470 CURVE SMOOTH",
"132 447 OFFCURVE",
"130 413 OFFCURVE",
"130 369 CURVE SMOOTH",
"130 328 OFFCURVE",
"131 284 OFFCURVE",
"138 235 CURVE",
"65 227 OFFCURVE",
"17 157 OFFCURVE",
"17 84 CURVE SMOOTH",
"17 13 OFFCURVE",
"46 -25 OFFCURVE",
"97 -25 CURVE SMOOTH",
"151 -25 OFFCURVE",
"165 36 OFFCURVE",
"174 86 CURVE",
"184 43 OFFCURVE",
"195 16 OFFCURVE",
"215 -17 CURVE SMOOTH",
"230 -40 OFFCURVE",
"253 -65 OFFCURVE",
"281 -80 CURVE SMOOTH",
"295 -88 OFFCURVE",
"318 -94 OFFCURVE",
"339 -94 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 -4 OFFCURVE",
"84 1 OFFCURVE",
"74 12 CURVE SMOOTH",
"63 23 OFFCURVE",
"58 43 OFFCURVE",
"58 73 CURVE SMOOTH",
"58 128 OFFCURVE",
"80 186 OFFCURVE",
"132 203 CURVE SMOOTH",
"141 206 LINE",
"148 187 OFFCURVE",
"157 146 OFFCURVE",
"157 109 CURVE SMOOTH",
"157 70 OFFCURVE",
"147 2 OFFCURVE",
"106 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 216 OFFCURVE",
"169 271 OFFCURVE",
"169 331 CURVE SMOOTH",
"169 369 OFFCURVE",
"172 411 OFFCURVE",
"178 457 CURVE SMOOTH",
"182 484 OFFCURVE",
"192 498 OFFCURVE",
"203 498 CURVE SMOOTH",
"219 498 OFFCURVE",
"235 469 OFFCURVE",
"235 412 CURVE SMOOTH",
"235 375 OFFCURVE",
"230 325 OFFCURVE",
"227 307 CURVE SMOOTH",
"219 264 OFFCURVE",
"205 214 OFFCURVE",
"186 151 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01244 4 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 3 39 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 44 165 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01216 74 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 56 170 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 84 165 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01266 16 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 261;
}
);
note = d;
unicode = 0064;
},
{
glyphname = eth;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"302 129 OFFCURVE",
"271 83 OFFCURVE",
"257 69 CURVE SMOOTH",
"251 63 OFFCURVE",
"245 60 OFFCURVE",
"238 60 CURVE SMOOTH",
"231 60 OFFCURVE",
"223 65 OFFCURVE",
"219 76 CURVE SMOOTH",
"214 89 OFFCURVE",
"212 107 OFFCURVE",
"212 128 CURVE SMOOTH",
"212 135 OFFCURVE",
"212 143 OFFCURVE",
"213 150 CURVE SMOOTH",
"214 157 OFFCURVE",
"214 164 OFFCURVE",
"214 171 CURVE",
"211 178 LINE",
"212 191 OFFCURVE",
"212 203 OFFCURVE",
"213 216 CURVE",
"214 214 OFFCURVE",
"216 213 OFFCURVE",
"219 213 CURVE SMOOTH",
"224 213 OFFCURVE",
"226 216 OFFCURVE",
"226 221 CURVE SMOOTH",
"226 235 OFFCURVE",
"222 247 OFFCURVE",
"213 255 CURVE",
"213 286 OFFCURVE",
"212 319 OFFCURVE",
"210 356 CURVE SMOOTH",
"208 386 OFFCURVE",
"204 416 OFFCURVE",
"196 443 CURVE",
"206 449 OFFCURVE",
"212 452 OFFCURVE",
"216 454 CURVE SMOOTH",
"223 457 OFFCURVE",
"228 458 OFFCURVE",
"232 459 CURVE",
"233 458 OFFCURVE",
"234 459 OFFCURVE",
"235 459 CURVE",
"240 461 OFFCURVE",
"240 465 OFFCURVE",
"237 471 CURVE",
"236 475 OFFCURVE",
"233 477 OFFCURVE",
"228 477 CURVE SMOOTH",
"222 477 OFFCURVE",
"209 472 OFFCURVE",
"189 464 CURVE",
"178 496 OFFCURVE",
"161 520 OFFCURVE",
"140 530 CURVE SMOOTH",
"132 534 OFFCURVE",
"123 536 OFFCURVE",
"114 536 CURVE SMOOTH",
"100 536 OFFCURVE",
"85 530 OFFCURVE",
"73 518 CURVE SMOOTH",
"70 515 OFFCURVE",
"68 511 OFFCURVE",
"66 506 CURVE",
"62 500 OFFCURVE",
"68 496 OFFCURVE",
"71 502 CURVE SMOOTH",
"74 506 OFFCURVE",
"77 510 OFFCURVE",
"80 513 CURVE SMOOTH",
"90 522 OFFCURVE",
"101 526 OFFCURVE",
"111 526 CURVE SMOOTH",
"118 526 OFFCURVE",
"125 524 OFFCURVE",
"130 521 CURVE SMOOTH",
"148 510 OFFCURVE",
"161 486 OFFCURVE",
"169 455 CURVE",
"147 444 LINE SMOOTH",
"138 439 OFFCURVE",
"130 434 OFFCURVE",
"124 430 CURVE SMOOTH",
"120 428 OFFCURVE",
"118 424 OFFCURVE",
"118 420 CURVE SMOOTH",
"118 416 OFFCURVE",
"119 411 OFFCURVE",
"122 406 CURVE SMOOTH",
"124 402 OFFCURVE",
"126 401 OFFCURVE",
"129 402 CURVE",
"147 413 OFFCURVE",
"162 422 OFFCURVE",
"174 430 CURVE",
"175 423 LINE SMOOTH",
"178 398 OFFCURVE",
"180 373 OFFCURVE",
"180 345 CURVE SMOOTH",
"181 332 OFFCURVE",
"181 319 OFFCURVE",
"181 307 CURVE SMOOTH",
"181 294 OFFCURVE",
"181 282 OFFCURVE",
"180 270 CURVE",
"178 270 OFFCURVE",
"177 270 OFFCURVE",
"175 271 CURVE",
"167 271 LINE SMOOTH",
"86 271 OFFCURVE",
"31 187 OFFCURVE",
"31 107 CURVE SMOOTH",
"31 94 OFFCURVE",
"33 81 OFFCURVE",
"36 68 CURVE SMOOTH",
"46 32 OFFCURVE",
"65 14 OFFCURVE",
"94 14 CURVE SMOOTH",
"114 14 OFFCURVE",
"133 23 OFFCURVE",
"150 40 CURVE SMOOTH",
"169 59 OFFCURVE",
"179 84 OFFCURVE",
"182 113 CURVE SMOOTH",
"182 116 OFFCURVE",
"183 117 OFFCURVE",
"184 117 CURVE SMOOTH",
"185 117 OFFCURVE",
"186 115 OFFCURVE",
"187 112 CURVE",
"186 92 OFFCURVE",
"190 69 OFFCURVE",
"199 52 CURVE SMOOTH",
"204 40 OFFCURVE",
"217 36 OFFCURVE",
"229 36 CURVE SMOOTH",
"243 36 OFFCURVE",
"253 43 OFFCURVE",
"263 51 CURVE",
"287 76 OFFCURVE",
"304 111 OFFCURVE",
"319 143 CURVE SMOOTH",
"322 148 OFFCURVE",
"319 152 OFFCURVE",
"316 152 CURVE SMOOTH",
"314 152 OFFCURVE",
"312 151 OFFCURVE",
"310 147 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 182 OFFCURVE",
"173 179 OFFCURVE",
"173 175 CURVE SMOOTH",
"173 128 OFFCURVE",
"169 97 OFFCURVE",
"154 69 CURVE SMOOTH",
"142 46 OFFCURVE",
"124 29 OFFCURVE",
"105 29 CURVE SMOOTH",
"77 29 OFFCURVE",
"68 59 OFFCURVE",
"68 82 CURVE SMOOTH",
"68 148 OFFCURVE",
"101 229 OFFCURVE",
"170 239 CURVE",
"172 240 OFFCURVE",
"175 240 OFFCURVE",
"178 240 CURVE SMOOTH",
"179 240 LINE",
"179 225 OFFCURVE",
"178 210 OFFCURVE",
"177 196 CURVE SMOOTH",
"176 184 LINE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"114 14 OFFCURVE",
"133 23 OFFCURVE",
"150 40 CURVE SMOOTH",
"169 59 OFFCURVE",
"179 84 OFFCURVE",
"182 113 CURVE SMOOTH",
"182 116 OFFCURVE",
"183 117 OFFCURVE",
"184 117 CURVE SMOOTH",
"185 117 OFFCURVE",
"186 115 OFFCURVE",
"187 112 CURVE",
"186 92 OFFCURVE",
"190 69 OFFCURVE",
"199 52 CURVE SMOOTH",
"204 40 OFFCURVE",
"217 36 OFFCURVE",
"229 36 CURVE SMOOTH",
"243 36 OFFCURVE",
"253 43 OFFCURVE",
"263 51 CURVE",
"287 76 OFFCURVE",
"304 111 OFFCURVE",
"319 143 CURVE SMOOTH",
"322 148 OFFCURVE",
"319 152 OFFCURVE",
"316 152 CURVE SMOOTH",
"314 152 OFFCURVE",
"312 151 OFFCURVE",
"310 147 CURVE SMOOTH",
"302 129 OFFCURVE",
"271 83 OFFCURVE",
"257 69 CURVE SMOOTH",
"251 63 OFFCURVE",
"245 60 OFFCURVE",
"238 60 CURVE SMOOTH",
"231 60 OFFCURVE",
"223 65 OFFCURVE",
"219 76 CURVE SMOOTH",
"214 89 OFFCURVE",
"212 107 OFFCURVE",
"212 128 CURVE SMOOTH",
"212 135 OFFCURVE",
"212 143 OFFCURVE",
"213 150 CURVE SMOOTH",
"214 157 OFFCURVE",
"214 164 OFFCURVE",
"214 171 CURVE",
"211 178 LINE",
"212 191 OFFCURVE",
"212 203 OFFCURVE",
"213 216 CURVE",
"214 214 OFFCURVE",
"216 213 OFFCURVE",
"219 213 CURVE SMOOTH",
"224 213 OFFCURVE",
"226 216 OFFCURVE",
"226 221 CURVE SMOOTH",
"226 235 OFFCURVE",
"222 247 OFFCURVE",
"213 255 CURVE",
"213 286 OFFCURVE",
"212 319 OFFCURVE",
"210 356 CURVE SMOOTH",
"208 386 OFFCURVE",
"204 416 OFFCURVE",
"196 443 CURVE",
"206 449 OFFCURVE",
"212 452 OFFCURVE",
"216 454 CURVE SMOOTH",
"223 457 OFFCURVE",
"228 458 OFFCURVE",
"232 459 CURVE",
"233 458 OFFCURVE",
"234 459 OFFCURVE",
"235 459 CURVE",
"240 461 OFFCURVE",
"240 465 OFFCURVE",
"237 471 CURVE",
"236 475 OFFCURVE",
"233 477 OFFCURVE",
"228 477 CURVE SMOOTH",
"222 477 OFFCURVE",
"209 472 OFFCURVE",
"189 464 CURVE",
"178 496 OFFCURVE",
"161 520 OFFCURVE",
"140 530 CURVE SMOOTH",
"132 534 OFFCURVE",
"123 536 OFFCURVE",
"114 536 CURVE SMOOTH",
"100 536 OFFCURVE",
"85 530 OFFCURVE",
"73 518 CURVE SMOOTH",
"70 515 OFFCURVE",
"68 511 OFFCURVE",
"66 506 CURVE",
"62 500 OFFCURVE",
"68 496 OFFCURVE",
"71 502 CURVE SMOOTH",
"74 506 OFFCURVE",
"77 510 OFFCURVE",
"80 513 CURVE SMOOTH",
"90 522 OFFCURVE",
"101 526 OFFCURVE",
"111 526 CURVE SMOOTH",
"118 526 OFFCURVE",
"125 524 OFFCURVE",
"130 521 CURVE SMOOTH",
"148 510 OFFCURVE",
"161 486 OFFCURVE",
"169 455 CURVE",
"147 444 LINE SMOOTH",
"138 439 OFFCURVE",
"130 434 OFFCURVE",
"124 430 CURVE SMOOTH",
"120 428 OFFCURVE",
"118 424 OFFCURVE",
"118 420 CURVE SMOOTH",
"118 416 OFFCURVE",
"119 411 OFFCURVE",
"122 406 CURVE SMOOTH",
"124 402 OFFCURVE",
"126 401 OFFCURVE",
"129 402 CURVE",
"147 413 OFFCURVE",
"162 422 OFFCURVE",
"174 430 CURVE",
"175 423 LINE SMOOTH",
"178 398 OFFCURVE",
"180 373 OFFCURVE",
"180 345 CURVE SMOOTH",
"181 332 OFFCURVE",
"181 319 OFFCURVE",
"181 307 CURVE SMOOTH",
"181 294 OFFCURVE",
"181 282 OFFCURVE",
"180 270 CURVE",
"178 270 OFFCURVE",
"177 270 OFFCURVE",
"175 271 CURVE",
"167 271 LINE SMOOTH",
"86 271 OFFCURVE",
"31 187 OFFCURVE",
"31 107 CURVE SMOOTH",
"31 94 OFFCURVE",
"33 81 OFFCURVE",
"36 68 CURVE SMOOTH",
"46 32 OFFCURVE",
"65 14 OFFCURVE",
"94 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 29 OFFCURVE",
"68 59 OFFCURVE",
"68 82 CURVE SMOOTH",
"68 148 OFFCURVE",
"101 229 OFFCURVE",
"170 239 CURVE",
"172 240 OFFCURVE",
"175 240 OFFCURVE",
"178 240 CURVE SMOOTH",
"179 240 LINE",
"179 225 OFFCURVE",
"178 210 OFFCURVE",
"177 196 CURVE SMOOTH",
"176 184 LINE",
"174 182 OFFCURVE",
"173 179 OFFCURVE",
"173 175 CURVE SMOOTH",
"173 128 OFFCURVE",
"169 97 OFFCURVE",
"154 69 CURVE SMOOTH",
"142 46 OFFCURVE",
"124 29 OFFCURVE",
"105 29 CURVE SMOOTH"
);
}
);
width = 269;
}
);
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2021-10-08 05:53:32 +0000";
layers = (
{
background = {
components = (
{
name = d;
},
{
name = caroncomb.alt;
}
);
};
components = (
{
name = d;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 278, 270}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 261;
}
);
unicode = 010F;
},
{
glyphname = dcroat;
lastChange = "2021-10-08 05:53:42 +0000";
layers = (
{
background = {
components = (
{
name = d;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 75, 265}";
}
);
};
components = (
{
name = d;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 83, 211}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 261;
}
);
unicode = 0111;
},
{
glyphname = dzcaron;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = d;
},
{
name = zcaron;
}
);
};
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 261, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 523;
}
);
unicode = 01C6;
},
{
glyphname = e;
lastChange = "2021-10-08 08:25:16 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{125, 0}";
},
{
name = ogonek;
position = "{157, 10}";
},
{
name = top;
position = "{138, 272}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"182 -4 OFFCURVE",
"229 24 OFFCURVE",
"229 78 CURVE SMOOTH",
"229 99 OFFCURVE",
"215 115 OFFCURVE",
"202 115 CURVE SMOOTH",
"198 115 OFFCURVE",
"196 112 OFFCURVE",
"196 109 CURVE SMOOTH",
"196 106 OFFCURVE",
"198 104 OFFCURVE",
"201 102 CURVE SMOOTH",
"209 98 OFFCURVE",
"213 90 OFFCURVE",
"213 80 CURVE SMOOTH",
"213 53 OFFCURVE",
"185 15 OFFCURVE",
"136 15 CURVE SMOOTH",
"78 15 OFFCURVE",
"57 67 OFFCURVE",
"57 122 CURVE SMOOTH",
"57 145 OFFCURVE",
"59 161 OFFCURVE",
"67 174 CURVE",
"77 155 OFFCURVE",
"99 146 OFFCURVE",
"121 146 CURVE SMOOTH",
"144 146 OFFCURVE",
"168 155 OFFCURVE",
"182 171 CURVE SMOOTH",
"196 188 OFFCURVE",
"203 206 OFFCURVE",
"203 222 CURVE SMOOTH",
"203 250 OFFCURVE",
"183 272 OFFCURVE",
"147 272 CURVE SMOOTH",
"138 272 OFFCURVE",
"128 270 OFFCURVE",
"116 267 CURVE SMOOTH",
"91 259 OFFCURVE",
"71 244 OFFCURVE",
"56 223 CURVE SMOOTH",
"34 195 OFFCURVE",
"24 160 OFFCURVE",
"24 120 CURVE SMOOTH",
"24 49 OFFCURVE",
"61 -4 OFFCURVE",
"131 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"154 172 OFFCURVE",
"138 168 OFFCURVE",
"123 168 CURVE SMOOTH",
"99 168 OFFCURVE",
"76 180 OFFCURVE",
"76 196 CURVE",
"81 211 OFFCURVE",
"89 224 OFFCURVE",
"102 235 CURVE SMOOTH",
"113 246 OFFCURVE",
"127 251 OFFCURVE",
"144 251 CURVE SMOOTH",
"150 251 LINE SMOOTH",
"169 249 OFFCURVE",
"178 238 OFFCURVE",
"178 219 CURVE SMOOTH",
"178 206 OFFCURVE",
"173 195 OFFCURVE",
"164 184 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"182 -4 OFFCURVE",
"229 24 OFFCURVE",
"229 78 CURVE SMOOTH",
"229 99 OFFCURVE",
"215 115 OFFCURVE",
"202 115 CURVE SMOOTH",
"198 115 OFFCURVE",
"196 112 OFFCURVE",
"196 109 CURVE SMOOTH",
"196 106 OFFCURVE",
"198 104 OFFCURVE",
"201 102 CURVE SMOOTH",
"209 98 OFFCURVE",
"213 90 OFFCURVE",
"213 80 CURVE SMOOTH",
"213 53 OFFCURVE",
"185 15 OFFCURVE",
"136 15 CURVE SMOOTH",
"78 15 OFFCURVE",
"57 67 OFFCURVE",
"57 122 CURVE SMOOTH",
"57 145 OFFCURVE",
"59 161 OFFCURVE",
"67 174 CURVE",
"77 155 OFFCURVE",
"99 146 OFFCURVE",
"121 146 CURVE SMOOTH",
"144 146 OFFCURVE",
"168 155 OFFCURVE",
"182 171 CURVE SMOOTH",
"196 188 OFFCURVE",
"203 206 OFFCURVE",
"203 222 CURVE SMOOTH",
"203 250 OFFCURVE",
"183 272 OFFCURVE",
"147 272 CURVE SMOOTH",
"138 272 OFFCURVE",
"128 270 OFFCURVE",
"116 267 CURVE SMOOTH",
"91 259 OFFCURVE",
"71 244 OFFCURVE",
"56 223 CURVE SMOOTH",
"34 195 OFFCURVE",
"24 160 OFFCURVE",
"24 120 CURVE SMOOTH",
"24 49 OFFCURVE",
"61 -4 OFFCURVE",
"131 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"99 168 OFFCURVE",
"76 180 OFFCURVE",
"76 196 CURVE",
"81 211 OFFCURVE",
"89 224 OFFCURVE",
"102 235 CURVE SMOOTH",
"113 246 OFFCURVE",
"127 251 OFFCURVE",
"144 251 CURVE SMOOTH",
"150 251 LINE SMOOTH",
"169 251 OFFCURVE",
"178 238 OFFCURVE",
"178 219 CURVE SMOOTH",
"178 206 OFFCURVE",
"173 195 OFFCURVE",
"164 184 CURVE SMOOTH",
"154 172 OFFCURVE",
"138 168 OFFCURVE",
"123 168 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01227 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 27 165 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 43 170 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01224 10 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01232 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 32 23 32 39 32 55 32 71 32 87 32 103 32 119 32 135 32 151 32 167 32 183 32 199 32 215 32 231 32 247 32 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 32 23 32 39 32 55 32 71 32 87 32 103 32 119 32 135 32 151 32 167 32 183 32 199 32 215 32 231 32 247 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 32 23 32 39 32 55 32 71 32 87 32 103 32 119 32 135 32 151 32 167 32 183 32 199 32 215 32 231 32 247 32 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = e;
unicode = 0065;
},
{
glyphname = eacute;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = acutecomb;
}
);
};
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 106, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01243 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 43 165 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 59 170 59 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01253 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01248 1 21 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = brevecomb;
}
);
};
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 66, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0115;
},
{
glyphname = ecaron;
lastChange = "2021-10-08 08:25:16 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = caroncomb;
}
);
};
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 56, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 011B;
},
{
glyphname = ecircumflex;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01227 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 27 165 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 43 170 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01224 10 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01232 1 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 104, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 54, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EC5;
},
{
glyphname = edblgrave;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 4, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0205;
},
{
glyphname = edieresis;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 78, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 3 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 4 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 4 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 63 170 63 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 10 165 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01244 30 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 47 165 47 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01252 1 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 117, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2021-10-08 05:54:37 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EB9;
},
{
glyphname = egrave;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = gravecomb;
}
);
};
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 70, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 59 170 59 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 59 25 59 41 59 57 59 73 59 89 59 105 59 121 59 137 59 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01243 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 43 165 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01253 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01248 1 21 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ehookabove;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 97, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 60, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0207;
},
{
glyphname = emacron;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = macroncomb;
}
);
};
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 64, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0113;
},
{
glyphname = eogonek;
lastChange = "2021-10-08 05:54:21 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 78, 5}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2021-10-08 08:25:19 +0000";
layers = (
{
background = {
components = (
{
name = e;
},
{
name = tildecomb;
}
);
};
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 59, 12}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = e;
transform = "{-1, 0, 0, -1, 238, 334}";
}
);
};
components = (
{
name = e;
transform = "{-1, 0, 0, -1, 221, 260}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 0259;
},
{
glyphname = f;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 -25 OFFCURVE",
"143 -18 OFFCURVE",
"139 -10 CURVE SMOOTH",
"124 20 OFFCURVE",
"113 59 OFFCURVE",
"105 107 CURVE SMOOTH",
"101 128 OFFCURVE",
"97 173 OFFCURVE",
"97 215 CURVE SMOOTH",
"97 248 OFFCURVE",
"99 280 OFFCURVE",
"105 297 CURVE",
"126 300 OFFCURVE",
"179 286 OFFCURVE",
"179 266 CURVE SMOOTH",
"179 263 OFFCURVE",
"178 260 OFFCURVE",
"176 257 CURVE SMOOTH",
"172 250 LINE",
"165 246 OFFCURVE",
"168 238 OFFCURVE",
"174 238 CURVE SMOOTH",
"175 238 OFFCURVE",
"177 238 OFFCURVE",
"179 240 CURVE",
"184 243 OFFCURVE",
"194 256 OFFCURVE",
"194 269 CURVE SMOOTH",
"194 293 OFFCURVE",
"170 306 OFFCURVE",
"150 311 CURVE SMOOTH",
"139 314 OFFCURVE",
"118 314 OFFCURVE",
"109 314 CURVE",
"116 349 OFFCURVE",
"134 375 OFFCURVE",
"154 402 CURVE SMOOTH",
"177 432 OFFCURVE",
"202 449 OFFCURVE",
"230 453 CURVE SMOOTH",
"232 453 OFFCURVE",
"234 453 OFFCURVE",
"236 454 CURVE",
"241 454 LINE SMOOTH",
"264 454 OFFCURVE",
"279 442 OFFCURVE",
"286 417 CURVE",
"287 415 OFFCURVE",
"287 412 OFFCURVE",
"287 408 CURVE SMOOTH",
"287 383 OFFCURVE",
"271 363 OFFCURVE",
"250 363 CURVE SMOOTH",
"243 363 OFFCURVE",
"234 366 OFFCURVE",
"226 372 CURVE SMOOTH",
"222 375 OFFCURVE",
"213 371 OFFCURVE",
"213 365 CURVE SMOOTH",
"213 364 OFFCURVE",
"214 363 OFFCURVE",
"214 362 CURVE",
"217 358 OFFCURVE",
"221 354 OFFCURVE",
"227 351 CURVE SMOOTH",
"234 347 OFFCURVE",
"242 346 OFFCURVE",
"249 346 CURVE SMOOTH",
"266 346 OFFCURVE",
"283 354 OFFCURVE",
"295 367 CURVE SMOOTH",
"306 380 OFFCURVE",
"312 394 OFFCURVE",
"312 410 CURVE SMOOTH",
"312 413 OFFCURVE",
"311 417 OFFCURVE",
"310 424 CURVE SMOOTH",
"302 459 OFFCURVE",
"279 477 OFFCURVE",
"241 477 CURVE SMOOTH",
"236 477 OFFCURVE",
"232 477 OFFCURVE",
"230 476 CURVE",
"190 472 OFFCURVE",
"156 453 OFFCURVE",
"129 419 CURVE SMOOTH",
"106 392 OFFCURVE",
"89 355 OFFCURVE",
"77 310 CURVE",
"72 307 OFFCURVE",
"64 304 OFFCURVE",
"53 300 CURVE SMOOTH",
"42 296 OFFCURVE",
"33 291 OFFCURVE",
"26 285 CURVE SMOOTH",
"15 277 OFFCURVE",
"8 266 OFFCURVE",
"8 257 CURVE SMOOTH",
"8 254 OFFCURVE",
"9 251 OFFCURVE",
"11 249 CURVE SMOOTH",
"14 245 OFFCURVE",
"18 244 OFFCURVE",
"22 247 CURVE SMOOTH",
"26 249 OFFCURVE",
"33 254 OFFCURVE",
"42 262 CURVE SMOOTH",
"47 266 OFFCURVE",
"53 271 OFFCURVE",
"58 276 CURVE SMOOTH",
"63 281 OFFCURVE",
"68 284 OFFCURVE",
"74 285 CURVE",
"70 263 OFFCURVE",
"69 238 OFFCURVE",
"69 212 CURVE SMOOTH",
"69 132 OFFCURVE",
"84 41 OFFCURVE",
"102 -25 CURVE SMOOTH",
"107 -42 OFFCURVE",
"119 -50 OFFCURVE",
"129 -50 CURVE SMOOTH",
"138 -50 OFFCURVE",
"145 -44 OFFCURVE",
"145 -30 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -50 OFFCURVE",
"145 -44 OFFCURVE",
"145 -30 CURVE SMOOTH",
"145 -25 OFFCURVE",
"143 -18 OFFCURVE",
"139 -10 CURVE SMOOTH",
"124 20 OFFCURVE",
"113 59 OFFCURVE",
"105 107 CURVE SMOOTH",
"101 128 OFFCURVE",
"97 173 OFFCURVE",
"97 215 CURVE SMOOTH",
"97 248 OFFCURVE",
"99 280 OFFCURVE",
"105 297 CURVE",
"126 300 OFFCURVE",
"179 286 OFFCURVE",
"179 266 CURVE SMOOTH",
"179 263 OFFCURVE",
"178 260 OFFCURVE",
"176 257 CURVE SMOOTH",
"172 250 LINE",
"165 246 OFFCURVE",
"168 238 OFFCURVE",
"174 238 CURVE SMOOTH",
"175 238 OFFCURVE",
"177 238 OFFCURVE",
"179 240 CURVE",
"184 243 OFFCURVE",
"194 256 OFFCURVE",
"194 269 CURVE SMOOTH",
"194 293 OFFCURVE",
"170 306 OFFCURVE",
"150 311 CURVE SMOOTH",
"139 314 OFFCURVE",
"118 314 OFFCURVE",
"109 314 CURVE",
"116 349 OFFCURVE",
"134 375 OFFCURVE",
"154 402 CURVE SMOOTH",
"177 432 OFFCURVE",
"202 449 OFFCURVE",
"230 453 CURVE SMOOTH",
"232 453 OFFCURVE",
"234 453 OFFCURVE",
"236 454 CURVE",
"241 454 LINE SMOOTH",
"264 454 OFFCURVE",
"279 442 OFFCURVE",
"286 417 CURVE",
"287 415 OFFCURVE",
"287 412 OFFCURVE",
"287 408 CURVE SMOOTH",
"287 383 OFFCURVE",
"271 363 OFFCURVE",
"250 363 CURVE SMOOTH",
"243 363 OFFCURVE",
"234 366 OFFCURVE",
"226 372 CURVE SMOOTH",
"222 375 OFFCURVE",
"213 371 OFFCURVE",
"213 365 CURVE SMOOTH",
"213 364 OFFCURVE",
"214 363 OFFCURVE",
"214 362 CURVE",
"217 358 OFFCURVE",
"221 354 OFFCURVE",
"227 351 CURVE SMOOTH",
"234 347 OFFCURVE",
"242 346 OFFCURVE",
"249 346 CURVE SMOOTH",
"266 346 OFFCURVE",
"283 354 OFFCURVE",
"295 367 CURVE SMOOTH",
"306 380 OFFCURVE",
"312 394 OFFCURVE",
"312 410 CURVE SMOOTH",
"312 413 OFFCURVE",
"311 417 OFFCURVE",
"310 424 CURVE SMOOTH",
"302 459 OFFCURVE",
"279 477 OFFCURVE",
"241 477 CURVE SMOOTH",
"236 477 OFFCURVE",
"232 477 OFFCURVE",
"230 476 CURVE",
"190 472 OFFCURVE",
"156 453 OFFCURVE",
"129 419 CURVE SMOOTH",
"106 392 OFFCURVE",
"89 355 OFFCURVE",
"77 310 CURVE",
"72 307 OFFCURVE",
"64 304 OFFCURVE",
"53 300 CURVE SMOOTH",
"42 296 OFFCURVE",
"33 291 OFFCURVE",
"26 285 CURVE SMOOTH",
"15 277 OFFCURVE",
"8 266 OFFCURVE",
"8 257 CURVE SMOOTH",
"8 254 OFFCURVE",
"9 251 OFFCURVE",
"11 249 CURVE SMOOTH",
"14 245 OFFCURVE",
"18 244 OFFCURVE",
"22 247 CURVE SMOOTH",
"26 249 OFFCURVE",
"33 254 OFFCURVE",
"42 262 CURVE SMOOTH",
"47 266 OFFCURVE",
"53 271 OFFCURVE",
"58 276 CURVE SMOOTH",
"63 281 OFFCURVE",
"68 284 OFFCURVE",
"74 285 CURVE",
"70 263 OFFCURVE",
"69 238 OFFCURVE",
"69 212 CURVE SMOOTH",
"69 132 OFFCURVE",
"84 41 OFFCURVE",
"102 -25 CURVE SMOOTH",
"107 -42 OFFCURVE",
"119 -50 OFFCURVE",
"129 -50 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01215 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 3 33 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 15 170 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 42 170 42 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 42 25 42 41 42 57 42 73 42 89 42 105 42 121 42 137 42 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01284 2 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 175;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{-25, -177}";
},
{
name = top;
position = "{166, 293}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"14 -179 OFFCURVE",
"20 -178 OFFCURVE",
"27 -177 CURVE SMOOTH",
"64 -172 OFFCURVE",
"103 -149 OFFCURVE",
"143 -107 CURVE SMOOTH",
"178 -68 OFFCURVE",
"203 -28 OFFCURVE",
"218 15 CURVE",
"265 32 OFFCURVE",
"301 70 OFFCURVE",
"326 128 CURVE",
"327 129 OFFCURVE",
"327 131 OFFCURVE",
"327 132 CURVE SMOOTH",
"327 135 OFFCURVE",
"326 137 OFFCURVE",
"323 137 CURVE SMOOTH",
"320 137 OFFCURVE",
"318 135 OFFCURVE",
"317 132 CURVE SMOOTH",
"296 87 OFFCURVE",
"268 55 OFFCURVE",
"224 35 CURVE",
"239 88 OFFCURVE",
"245 130 OFFCURVE",
"245 173 CURVE SMOOTH",
"245 256 OFFCURVE",
"220 293 OFFCURVE",
"173 293 CURVE SMOOTH",
"104 293 OFFCURVE",
"59 251 OFFCURVE",
"39 167 CURVE SMOOTH",
"36 152 OFFCURVE",
"34 138 OFFCURVE",
"34 126 CURVE SMOOTH",
"34 111 OFFCURVE",
"37 98 OFFCURVE",
"42 89 CURVE SMOOTH",
"55 68 OFFCURVE",
"69 58 OFFCURVE",
"85 58 CURVE SMOOTH",
"90 58 OFFCURVE",
"95 59 OFFCURVE",
"101 61 CURVE SMOOTH",
"120 68 OFFCURVE",
"140 88 OFFCURVE",
"160 120 CURVE SMOOTH",
"177 148 OFFCURVE",
"189 176 OFFCURVE",
"196 208 CURVE",
"205 202 OFFCURVE",
"209 189 OFFCURVE",
"209 170 CURVE SMOOTH",
"209 131 OFFCURVE",
"201 82 OFFCURVE",
"186 24 CURVE",
"167 21 OFFCURVE",
"144 18 OFFCURVE",
"111 17 CURVE SMOOTH",
"69 14 LINE SMOOTH",
"57 13 OFFCURVE",
"47 11 OFFCURVE",
"40 10 CURVE SMOOTH",
"13 5 OFFCURVE",
"-8 -3 OFFCURVE",
"-25 -14 CURVE SMOOTH",
"-62 -37 OFFCURVE",
"-80 -69 OFFCURVE",
"-80 -112 CURVE SMOOTH",
"-80 -131 OFFCURVE",
"-72 -147 OFFCURVE",
"-55 -160 CURVE SMOOTH",
"-38 -173 OFFCURVE",
"-18 -179 OFFCURVE",
"7 -179 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-38 -162 OFFCURVE",
"-59 -144 OFFCURVE",
"-59 -108 CURVE SMOOTH",
"-59 -79 OFFCURVE",
"-46 -55 OFFCURVE",
"-19 -36 CURVE SMOOTH",
"4 -19 OFFCURVE",
"35 -9 OFFCURVE",
"73 -5 CURVE SMOOTH",
"108 -2 OFFCURVE",
"141 1 OFFCURVE",
"180 5 CURVE",
"163 -42 OFFCURVE",
"138 -79 OFFCURVE",
"105 -111 CURVE SMOOTH",
"70 -145 OFFCURVE",
"36 -162 OFFCURVE",
"3 -162 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"75 86 OFFCURVE",
"66 104 OFFCURVE",
"66 133 CURVE SMOOTH",
"66 144 LINE",
"71 182 OFFCURVE",
"85 212 OFFCURVE",
"108 235 CURVE SMOOTH",
"127 255 OFFCURVE",
"146 265 OFFCURVE",
"167 265 CURVE SMOOTH",
"185 265 OFFCURVE",
"194 258 OFFCURVE",
"194 243 CURVE SMOOTH",
"194 238 OFFCURVE",
"192 229 OFFCURVE",
"187 216 CURVE SMOOTH",
"182 203 OFFCURVE",
"176 186 OFFCURVE",
"167 167 CURVE SMOOTH",
"146 120 OFFCURVE",
"125 94 OFFCURVE",
"105 88 CURVE SMOOTH",
"101 87 OFFCURVE",
"98 86 OFFCURVE",
"96 86 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"14 -179 OFFCURVE",
"20 -178 OFFCURVE",
"27 -177 CURVE SMOOTH",
"64 -172 OFFCURVE",
"103 -149 OFFCURVE",
"143 -107 CURVE SMOOTH",
"178 -68 OFFCURVE",
"203 -28 OFFCURVE",
"218 15 CURVE",
"265 32 OFFCURVE",
"301 70 OFFCURVE",
"326 128 CURVE",
"327 129 OFFCURVE",
"327 131 OFFCURVE",
"327 132 CURVE SMOOTH",
"327 135 OFFCURVE",
"326 137 OFFCURVE",
"323 137 CURVE SMOOTH",
"320 137 OFFCURVE",
"318 135 OFFCURVE",
"317 132 CURVE SMOOTH",
"296 87 OFFCURVE",
"268 55 OFFCURVE",
"224 35 CURVE",
"239 88 OFFCURVE",
"245 130 OFFCURVE",
"245 173 CURVE SMOOTH",
"245 256 OFFCURVE",
"220 293 OFFCURVE",
"173 293 CURVE SMOOTH",
"104 293 OFFCURVE",
"59 251 OFFCURVE",
"39 167 CURVE SMOOTH",
"36 152 OFFCURVE",
"34 138 OFFCURVE",
"34 126 CURVE SMOOTH",
"34 111 OFFCURVE",
"37 98 OFFCURVE",
"42 89 CURVE SMOOTH",
"55 68 OFFCURVE",
"69 58 OFFCURVE",
"85 58 CURVE SMOOTH",
"90 58 OFFCURVE",
"95 59 OFFCURVE",
"101 61 CURVE SMOOTH",
"120 68 OFFCURVE",
"140 88 OFFCURVE",
"160 120 CURVE SMOOTH",
"177 148 OFFCURVE",
"189 176 OFFCURVE",
"196 208 CURVE",
"205 202 OFFCURVE",
"209 189 OFFCURVE",
"209 170 CURVE SMOOTH",
"209 131 OFFCURVE",
"201 82 OFFCURVE",
"186 24 CURVE",
"167 21 OFFCURVE",
"144 19 OFFCURVE",
"111 17 CURVE SMOOTH",
"69 14 LINE SMOOTH",
"57 13 OFFCURVE",
"47 11 OFFCURVE",
"40 10 CURVE SMOOTH",
"13 5 OFFCURVE",
"-8 -3 OFFCURVE",
"-25 -14 CURVE SMOOTH",
"-62 -37 OFFCURVE",
"-80 -69 OFFCURVE",
"-80 -112 CURVE SMOOTH",
"-80 -131 OFFCURVE",
"-72 -147 OFFCURVE",
"-55 -160 CURVE SMOOTH",
"-38 -173 OFFCURVE",
"-18 -179 OFFCURVE",
"7 -179 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-38 -162 OFFCURVE",
"-59 -144 OFFCURVE",
"-59 -108 CURVE SMOOTH",
"-59 -79 OFFCURVE",
"-46 -55 OFFCURVE",
"-19 -36 CURVE SMOOTH",
"4 -19 OFFCURVE",
"35 -9 OFFCURVE",
"73 -5 CURVE SMOOTH",
"108 -2 OFFCURVE",
"141 1 OFFCURVE",
"180 5 CURVE",
"163 -42 OFFCURVE",
"138 -79 OFFCURVE",
"105 -111 CURVE SMOOTH",
"70 -145 OFFCURVE",
"36 -162 OFFCURVE",
"3 -162 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"75 86 OFFCURVE",
"66 104 OFFCURVE",
"66 133 CURVE SMOOTH",
"66 144 LINE",
"71 182 OFFCURVE",
"85 212 OFFCURVE",
"108 235 CURVE SMOOTH",
"127 255 OFFCURVE",
"146 265 OFFCURVE",
"167 265 CURVE SMOOTH",
"185 265 OFFCURVE",
"194 258 OFFCURVE",
"194 243 CURVE SMOOTH",
"194 238 OFFCURVE",
"192 229 OFFCURVE",
"187 216 CURVE SMOOTH",
"182 203 OFFCURVE",
"176 186 OFFCURVE",
"167 167 CURVE SMOOTH",
"146 120 OFFCURVE",
"125 94 OFFCURVE",
"105 88 CURVE SMOOTH",
"101 87 OFFCURVE",
"98 86 OFFCURVE",
"96 86 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01279 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 4 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 4 45 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 27 170 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01229 15 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 45 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01272 15 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 79 165 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01211 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01242 2 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01281 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = g;
unicode = 0067;
},
{
glyphname = gbreve;
lastChange = "2021-10-08 05:54:59 +0000";
layers = (
{
background = {
components = (
{
name = g;
},
{
name = brevecomb;
}
);
};
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 94, 33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 270;
}
);
unicode = 011F;
},
{
glyphname = gcaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = g;
},
{
name = caroncomb;
}
);
};
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 84, 33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 270;
}
);
unicode = 01E7;
},
{
glyphname = gcircumflex;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = g;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 82, 33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 270;
}
);
unicode = 011D;
},
{
glyphname = gcommaaccent;
lastChange = "2021-10-08 05:54:59 +0000";
layers = (
{
background = {
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
}
);
};
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 133, 33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 270;
}
);
unicode = 0123;
},
{
glyphname = gdotaccent;
lastChange = "2021-10-08 05:54:59 +0000";
layers = (
{
background = {
components = (
{
name = g;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 145, 33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 270;
}
);
unicode = 0121;
},
{
glyphname = h;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{133, 0}";
},
{
name = center;
position = "{67, 124}";
},
{
name = top;
position = "{283, 496}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"284 -106 OFFCURVE",
"295 -106 OFFCURVE",
"306 -106 CURVE SMOOTH",
"339 -106 OFFCURVE",
"374 -98 OFFCURVE",
"390 -73 CURVE SMOOTH",
"393 -67 OFFCURVE",
"395 -60 OFFCURVE",
"395 -52 CURVE SMOOTH",
"395 -47 OFFCURVE",
"394 -40 OFFCURVE",
"392 -34 CURVE SMOOTH",
"390 -28 OFFCURVE",
"387 -25 OFFCURVE",
"385 -25 CURVE SMOOTH",
"382 -25 OFFCURVE",
"379 -29 OFFCURVE",
"379 -34 CURVE SMOOTH",
"379 -36 OFFCURVE",
"379 -38 OFFCURVE",
"380 -41 CURVE SMOOTH",
"381 -45 OFFCURVE",
"382 -48 OFFCURVE",
"382 -52 CURVE SMOOTH",
"382 -58 OFFCURVE",
"380 -63 OFFCURVE",
"375 -68 CURVE SMOOTH",
"359 -85 OFFCURVE",
"332 -94 OFFCURVE",
"304 -94 CURVE SMOOTH",
"258 -94 OFFCURVE",
"208 -69 OFFCURVE",
"202 -17 CURVE SMOOTH",
"194 64 OFFCURVE",
"243 136 OFFCURVE",
"248 209 CURVE SMOOTH",
"249 233 OFFCURVE",
"240 252 OFFCURVE",
"209 253 CURVE SMOOTH",
"187 253 OFFCURVE",
"166 245 OFFCURVE",
"147 228 CURVE SMOOTH",
"135 217 OFFCURVE",
"121 201 OFFCURVE",
"96 168 CURVE",
"101 207 OFFCURVE",
"108 234 OFFCURVE",
"123 262 CURVE",
"160 281 OFFCURVE",
"186 292 OFFCURVE",
"221 320 CURVE SMOOTH",
"252 345 OFFCURVE",
"276 371 OFFCURVE",
"293 398 CURVE SMOOTH",
"310 425 OFFCURVE",
"319 449 OFFCURVE",
"319 468 CURVE SMOOTH",
"319 492 OFFCURVE",
"307 504 OFFCURVE",
"284 504 CURVE SMOOTH",
"250 504 OFFCURVE",
"215 480 OFFCURVE",
"180 433 CURVE SMOOTH",
"162 408 OFFCURVE",
"147 383 OFFCURVE",
"134 356 CURVE SMOOTH",
"121 330 OFFCURVE",
"107 304 OFFCURVE",
"92 277 CURVE",
"34 272 OFFCURVE",
"-15 320 OFFCURVE",
"-15 382 CURVE SMOOTH",
"-15 449 OFFCURVE",
"29 481 OFFCURVE",
"65 481 CURVE SMOOTH",
"92 481 OFFCURVE",
"116 463 OFFCURVE",
"116 428 CURVE SMOOTH",
"116 391 OFFCURVE",
"89 375 OFFCURVE",
"66 375 CURVE SMOOTH",
"49 375 OFFCURVE",
"34 384 OFFCURVE",
"34 402 CURVE SMOOTH",
"34 406 OFFCURVE",
"35 411 OFFCURVE",
"37 416 CURVE SMOOTH",
"40 423 OFFCURVE",
"37 427 OFFCURVE",
"34 427 CURVE SMOOTH",
"31 427 OFFCURVE",
"27 424 OFFCURVE",
"25 419 CURVE SMOOTH",
"22 412 OFFCURVE",
"21 405 OFFCURVE",
"21 399 CURVE SMOOTH",
"21 374 OFFCURVE",
"43 360 OFFCURVE",
"67 360 CURVE SMOOTH",
"97 360 OFFCURVE",
"132 382 OFFCURVE",
"132 430 CURVE SMOOTH",
"132 475 OFFCURVE",
"97 495 OFFCURVE",
"59 495 CURVE SMOOTH",
"0 495 OFFCURVE",
"-37 438 OFFCURVE",
"-37 376 CURVE SMOOTH",
"-37 304 OFFCURVE",
"16 254 OFFCURVE",
"85 257 CURVE",
"64 193 OFFCURVE",
"48 144 OFFCURVE",
"36 105 CURVE",
"26 57 LINE",
"26 50 OFFCURVE",
"28 44 OFFCURVE",
"32 39 CURVE SMOOTH",
"36 33 OFFCURVE",
"41 30 OFFCURVE",
"46 30 CURVE SMOOTH",
"47 30 OFFCURVE",
"48 30 OFFCURVE",
"49 31 CURVE",
"51 31 OFFCURVE",
"56 41 OFFCURVE",
"63 61 CURVE SMOOTH",
"75 92 OFFCURVE",
"85 115 OFFCURVE",
"93 131 CURVE SMOOTH",
"108 162 OFFCURVE",
"125 188 OFFCURVE",
"142 207 CURVE SMOOTH",
"160 226 OFFCURVE",
"181 240 OFFCURVE",
"196 240 CURVE SMOOTH",
"208 240 OFFCURVE",
"215 231 OFFCURVE",
"214 209 CURVE SMOOTH",
"208 125 OFFCURVE",
"167 87 OFFCURVE",
"167 19 CURVE SMOOTH",
"167 6 OFFCURVE",
"168 -8 OFFCURVE",
"172 -24 CURVE SMOOTH",
"183 -71 OFFCURVE",
"215 -95 OFFCURVE",
"274 -104 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"157 335 OFFCURVE",
"175 372 OFFCURVE",
"198 403 CURVE SMOOTH",
"221 435 OFFCURVE",
"239 454 OFFCURVE",
"253 461 CURVE SMOOTH",
"262 465 OFFCURVE",
"269 467 OFFCURVE",
"275 467 CURVE SMOOTH",
"286 467 OFFCURVE",
"292 461 OFFCURVE",
"292 449 CURVE SMOOTH",
"292 438 OFFCURVE",
"288 425 OFFCURVE",
"280 410 CURVE SMOOTH",
"265 383 OFFCURVE",
"246 360 OFFCURVE",
"219 337 CURVE SMOOTH",
"194 314 OFFCURVE",
"169 299 OFFCURVE",
"134 287 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"339 -106 OFFCURVE",
"374 -98 OFFCURVE",
"390 -73 CURVE SMOOTH",
"393 -67 OFFCURVE",
"395 -60 OFFCURVE",
"395 -52 CURVE SMOOTH",
"395 -47 OFFCURVE",
"394 -40 OFFCURVE",
"392 -34 CURVE SMOOTH",
"390 -28 OFFCURVE",
"387 -25 OFFCURVE",
"385 -25 CURVE SMOOTH",
"382 -25 OFFCURVE",
"379 -29 OFFCURVE",
"379 -34 CURVE SMOOTH",
"379 -36 OFFCURVE",
"379 -38 OFFCURVE",
"380 -41 CURVE SMOOTH",
"381 -45 OFFCURVE",
"382 -48 OFFCURVE",
"382 -52 CURVE SMOOTH",
"382 -58 OFFCURVE",
"380 -63 OFFCURVE",
"375 -68 CURVE SMOOTH",
"359 -85 OFFCURVE",
"332 -94 OFFCURVE",
"304 -94 CURVE SMOOTH",
"258 -94 OFFCURVE",
"208 -69 OFFCURVE",
"202 -17 CURVE SMOOTH",
"194 64 OFFCURVE",
"243 136 OFFCURVE",
"248 209 CURVE SMOOTH",
"249 233 OFFCURVE",
"240 252 OFFCURVE",
"209 253 CURVE SMOOTH",
"187 253 OFFCURVE",
"166 245 OFFCURVE",
"147 228 CURVE SMOOTH",
"135 217 OFFCURVE",
"121 201 OFFCURVE",
"96 168 CURVE",
"101 207 OFFCURVE",
"108 234 OFFCURVE",
"123 262 CURVE",
"160 281 OFFCURVE",
"186 292 OFFCURVE",
"221 320 CURVE SMOOTH",
"252 345 OFFCURVE",
"276 371 OFFCURVE",
"293 398 CURVE SMOOTH",
"310 425 OFFCURVE",
"319 449 OFFCURVE",
"319 468 CURVE SMOOTH",
"319 492 OFFCURVE",
"307 504 OFFCURVE",
"284 504 CURVE SMOOTH",
"250 504 OFFCURVE",
"215 480 OFFCURVE",
"180 433 CURVE SMOOTH",
"162 408 OFFCURVE",
"147 383 OFFCURVE",
"134 356 CURVE SMOOTH",
"121 330 OFFCURVE",
"107 304 OFFCURVE",
"92 277 CURVE",
"34 272 OFFCURVE",
"-15 320 OFFCURVE",
"-15 382 CURVE SMOOTH",
"-15 449 OFFCURVE",
"29 481 OFFCURVE",
"65 481 CURVE SMOOTH",
"92 481 OFFCURVE",
"116 463 OFFCURVE",
"116 428 CURVE SMOOTH",
"116 391 OFFCURVE",
"89 375 OFFCURVE",
"66 375 CURVE SMOOTH",
"49 375 OFFCURVE",
"34 384 OFFCURVE",
"34 402 CURVE SMOOTH",
"34 406 OFFCURVE",
"35 411 OFFCURVE",
"37 416 CURVE SMOOTH",
"40 423 OFFCURVE",
"37 427 OFFCURVE",
"34 427 CURVE SMOOTH",
"31 427 OFFCURVE",
"27 424 OFFCURVE",
"25 419 CURVE SMOOTH",
"22 412 OFFCURVE",
"21 405 OFFCURVE",
"21 399 CURVE SMOOTH",
"21 374 OFFCURVE",
"43 360 OFFCURVE",
"67 360 CURVE SMOOTH",
"97 360 OFFCURVE",
"132 382 OFFCURVE",
"132 430 CURVE SMOOTH",
"132 475 OFFCURVE",
"97 495 OFFCURVE",
"59 495 CURVE SMOOTH",
"0 495 OFFCURVE",
"-37 438 OFFCURVE",
"-37 376 CURVE SMOOTH",
"-37 304 OFFCURVE",
"16 254 OFFCURVE",
"85 257 CURVE",
"64 193 OFFCURVE",
"48 144 OFFCURVE",
"36 105 CURVE",
"26 57 LINE",
"26 50 OFFCURVE",
"28 44 OFFCURVE",
"32 39 CURVE SMOOTH",
"36 33 OFFCURVE",
"41 30 OFFCURVE",
"46 30 CURVE SMOOTH",
"47 30 OFFCURVE",
"48 30 OFFCURVE",
"49 31 CURVE",
"51 31 OFFCURVE",
"56 41 OFFCURVE",
"63 61 CURVE SMOOTH",
"75 92 OFFCURVE",
"85 115 OFFCURVE",
"93 131 CURVE SMOOTH",
"108 162 OFFCURVE",
"125 188 OFFCURVE",
"142 207 CURVE SMOOTH",
"160 226 OFFCURVE",
"181 240 OFFCURVE",
"196 240 CURVE SMOOTH",
"208 240 OFFCURVE",
"215 231 OFFCURVE",
"214 209 CURVE SMOOTH",
"208 125 OFFCURVE",
"167 87 OFFCURVE",
"167 19 CURVE SMOOTH",
"167 6 OFFCURVE",
"168 -8 OFFCURVE",
"172 -24 CURVE SMOOTH",
"183 -71 OFFCURVE",
"215 -95 OFFCURVE",
"274 -104 CURVE SMOOTH",
"284 -106 OFFCURVE",
"295 -106 OFFCURVE",
"306 -106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"157 335 OFFCURVE",
"175 372 OFFCURVE",
"198 403 CURVE SMOOTH",
"221 435 OFFCURVE",
"239 454 OFFCURVE",
"253 461 CURVE SMOOTH",
"262 465 OFFCURVE",
"269 467 OFFCURVE",
"275 467 CURVE SMOOTH",
"286 467 OFFCURVE",
"292 461 OFFCURVE",
"292 449 CURVE SMOOTH",
"292 438 OFFCURVE",
"288 425 OFFCURVE",
"280 410 CURVE SMOOTH",
"265 383 OFFCURVE",
"246 360 OFFCURVE",
"219 337 CURVE SMOOTH",
"194 314 OFFCURVE",
"169 299 OFFCURVE",
"134 287 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012118 3 103 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 4 3 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 33 170 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01258 63 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 91 165 91 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012113 63 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 118 170 118 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 118 25 118 41 118 57 118 73 118 89 118 105 118 121 118 137 118 153 118 169 118 185 118 201 118 217 118 233 118 249 118 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 118 25 118 41 118 57 118 73 118 89 118 105 118 121 118 137 118 153 118 169 118 185 118 201 118 217 118 233 118 249 118 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 118 25 118 41 118 57 118 73 118 89 118 105 118 121 118 137 118 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012127 63 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 266;
}
);
note = h;
unicode = 0068;
},
{
glyphname = hbar;
lastChange = "2021-10-08 05:55:12 +0000";
layers = (
{
background = {
components = (
{
name = h;
},
{
name = strokeshortcomb;
}
);
};
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -4, 14}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 266;
}
);
unicode = 0127;
},
{
glyphname = hcircumflex;
lastChange = "2021-10-08 05:56:32 +0000";
layers = (
{
background = {
components = (
{
name = h;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 199, 236}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 266;
}
);
unicode = 0125;
},
{
glyphname = i;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{82, 30}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"120 28 OFFCURVE",
"143 42 OFFCURVE",
"164 69 CURVE SMOOTH",
"176 84 OFFCURVE",
"184 102 OFFCURVE",
"192 121 CURVE SMOOTH",
"194 127 OFFCURVE",
"191 131 OFFCURVE",
"188 131 CURVE SMOOTH",
"187 131 OFFCURVE",
"184 129 OFFCURVE",
"183 126 CURVE SMOOTH",
"176 111 OFFCURVE",
"167 93 OFFCURVE",
"156 80 CURVE SMOOTH",
"139 60 OFFCURVE",
"124 50 OFFCURVE",
"109 50 CURVE SMOOTH",
"96 50 OFFCURVE",
"86 55 OFFCURVE",
"79 65 CURVE SMOOTH",
"73 74 OFFCURVE",
"70 84 OFFCURVE",
"70 97 CURVE SMOOTH",
"70 118 OFFCURVE",
"79 147 OFFCURVE",
"96 186 CURVE SMOOTH",
"100 196 OFFCURVE",
"104 204 OFFCURVE",
"107 211 CURVE SMOOTH",
"115 230 LINE",
"118 235 OFFCURVE",
"119 240 OFFCURVE",
"119 243 CURVE SMOOTH",
"119 246 OFFCURVE",
"118 248 OFFCURVE",
"117 249 CURVE SMOOTH",
"114 252 OFFCURVE",
"111 254 OFFCURVE",
"107 254 CURVE SMOOTH",
"100 254 OFFCURVE",
"92 250 OFFCURVE",
"85 241 CURVE SMOOTH",
"77 232 OFFCURVE",
"69 218 OFFCURVE",
"62 199 CURVE SMOOTH",
"49 165 OFFCURVE",
"42 137 OFFCURVE",
"42 116 CURVE SMOOTH",
"42 61 OFFCURVE",
"55 35 OFFCURVE",
"82 30 CURVE SMOOTH",
"87 29 OFFCURVE",
"91 28 OFFCURVE",
"96 28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"185 327 OFFCURVE",
"197 340 OFFCURVE",
"197 355 CURVE SMOOTH",
"197 371 OFFCURVE",
"185 383 OFFCURVE",
"169 383 CURVE SMOOTH",
"154 383 OFFCURVE",
"141 371 OFFCURVE",
"141 355 CURVE SMOOTH",
"141 340 OFFCURVE",
"154 327 OFFCURVE",
"169 327 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"120 28 OFFCURVE",
"143 42 OFFCURVE",
"164 69 CURVE SMOOTH",
"176 84 OFFCURVE",
"184 102 OFFCURVE",
"192 121 CURVE SMOOTH",
"194 127 OFFCURVE",
"191 131 OFFCURVE",
"188 131 CURVE SMOOTH",
"187 131 OFFCURVE",
"184 129 OFFCURVE",
"183 126 CURVE SMOOTH",
"176 111 OFFCURVE",
"167 93 OFFCURVE",
"156 80 CURVE SMOOTH",
"139 60 OFFCURVE",
"124 50 OFFCURVE",
"109 50 CURVE SMOOTH",
"96 50 OFFCURVE",
"86 55 OFFCURVE",
"79 65 CURVE SMOOTH",
"73 74 OFFCURVE",
"70 84 OFFCURVE",
"70 97 CURVE SMOOTH",
"70 118 OFFCURVE",
"79 147 OFFCURVE",
"96 186 CURVE SMOOTH",
"100 196 OFFCURVE",
"104 204 OFFCURVE",
"107 211 CURVE SMOOTH",
"115 230 LINE",
"118 235 OFFCURVE",
"119 240 OFFCURVE",
"119 243 CURVE SMOOTH",
"119 246 OFFCURVE",
"118 248 OFFCURVE",
"117 249 CURVE SMOOTH",
"114 252 OFFCURVE",
"111 254 OFFCURVE",
"107 254 CURVE SMOOTH",
"100 254 OFFCURVE",
"92 250 OFFCURVE",
"85 241 CURVE SMOOTH",
"77 232 OFFCURVE",
"69 218 OFFCURVE",
"62 199 CURVE SMOOTH",
"49 165 OFFCURVE",
"42 137 OFFCURVE",
"42 116 CURVE SMOOTH",
"42 61 OFFCURVE",
"55 35 OFFCURVE",
"82 30 CURVE SMOOTH",
"87 29 OFFCURVE",
"91 28 OFFCURVE",
"96 28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"185 327 OFFCURVE",
"197 340 OFFCURVE",
"197 355 CURVE SMOOTH",
"197 371 OFFCURVE",
"185 383 OFFCURVE",
"169 383 CURVE SMOOTH",
"154 383 OFFCURVE",
"141 371 OFFCURVE",
"141 355 CURVE SMOOTH",
"141 340 OFFCURVE",
"154 327 OFFCURVE",
"169 327 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01237 3 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 37 165 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01241 2 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = i;
unicode = 0069;
},
{
glyphname = idotless;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{100, 58}";
},
{
name = ogonek;
position = "{125, 69}";
},
{
name = top;
position = "{119, 284}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"120 58 OFFCURVE",
"142.667 71.667 OFFCURVE",
"164 99 CURVE SMOOTH",
"176 113.667 OFFCURVE",
"184 132.333 OFFCURVE",
"192 151 CURVE SMOOTH",
"195 157 OFFCURVE",
"192 161 OFFCURVE",
"189 161 CURVE SMOOTH",
"187 161 OFFCURVE",
"184 159 OFFCURVE",
"183 156 CURVE SMOOTH",
"176.333 141.333 OFFCURVE",
"166.667 123.333 OFFCURVE",
"156 110 CURVE SMOOTH",
"139.333 90 OFFCURVE",
"123.667 80 OFFCURVE",
"109 80 CURVE SMOOTH",
"97 80 OFFCURVE",
"87 85 OFFCURVE",
"79 95 CURVE SMOOTH",
"73 103.667 OFFCURVE",
"70 114.333 OFFCURVE",
"70 127 CURVE SMOOTH",
"70 147.667 OFFCURVE",
"78.667 177.333 OFFCURVE",
"96 216 CURVE SMOOTH",
"115 260 LINE",
"118 265 OFFCURVE",
"119 270 OFFCURVE",
"119 273 CURVE SMOOTH",
"119 276 OFFCURVE",
"118 278 OFFCURVE",
"117 279 CURVE SMOOTH",
"114.333 282.333 OFFCURVE",
"111.333 284 OFFCURVE",
"108 284 CURVE SMOOTH",
"100.667 284 OFFCURVE",
"93 279.667 OFFCURVE",
"85 271 CURVE SMOOTH",
"77 262.333 OFFCURVE",
"69.333 248.333 OFFCURVE",
"62 229 CURVE SMOOTH",
"49.333 197 OFFCURVE",
"43 169.333 OFFCURVE",
"43 146 CURVE SMOOTH",
"43 91.333 OFFCURVE",
"56.667 65.333 OFFCURVE",
"82 60 CURVE SMOOTH",
"87.333 58.667 OFFCURVE",
"90.667 58 OFFCURVE",
"96 58 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"120 58 OFFCURVE",
"143 72 OFFCURVE",
"164 99 CURVE SMOOTH",
"176 114 OFFCURVE",
"184 132 OFFCURVE",
"192 151 CURVE SMOOTH",
"195 157 OFFCURVE",
"192 161 OFFCURVE",
"189 161 CURVE SMOOTH",
"187 161 OFFCURVE",
"184 159 OFFCURVE",
"183 156 CURVE SMOOTH",
"176 141 OFFCURVE",
"167 123 OFFCURVE",
"156 110 CURVE SMOOTH",
"139 90 OFFCURVE",
"124 80 OFFCURVE",
"109 80 CURVE SMOOTH",
"97 80 OFFCURVE",
"87 85 OFFCURVE",
"79 95 CURVE SMOOTH",
"73 104 OFFCURVE",
"70 114 OFFCURVE",
"70 127 CURVE SMOOTH",
"70 148 OFFCURVE",
"79 177 OFFCURVE",
"96 216 CURVE SMOOTH",
"115 260 LINE",
"118 265 OFFCURVE",
"119 270 OFFCURVE",
"119 273 CURVE SMOOTH",
"119 276 OFFCURVE",
"118 278 OFFCURVE",
"117 279 CURVE SMOOTH",
"114 282 OFFCURVE",
"111 284 OFFCURVE",
"108 284 CURVE SMOOTH",
"101 284 OFFCURVE",
"93 280 OFFCURVE",
"85 271 CURVE SMOOTH",
"77 262 OFFCURVE",
"69 248 OFFCURVE",
"62 229 CURVE SMOOTH",
"49 197 OFFCURVE",
"43 169 OFFCURVE",
"43 146 CURVE SMOOTH",
"43 91 OFFCURVE",
"57 65 OFFCURVE",
"82 60 CURVE SMOOTH",
"87 59 OFFCURVE",
"91 58 OFFCURVE",
"96 58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 3 11 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 2 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = acutecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 87, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 3 11 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 2 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = brevecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 47, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 012D;
},
{
glyphname = icaron;
lastChange = "2021-10-08 06:33:16 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = caroncomb;
}
);
};
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 37, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 01D0;
},
{
glyphname = icircumflex;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 35, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 3 11 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 2 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idblgrave;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -15, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 0209;
},
{
glyphname = idieresis;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 59, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 43 170 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 2 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 2 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = idotaccent;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 98, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
},
{
glyphname = idotbelow;
lastChange = "2021-10-08 06:49:42 +0000";
layers = (
{
background = {
components = (
{
name = i;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 61, 30}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 1ECB;
},
{
glyphname = igrave;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = gravecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 51, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 3 11 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 2 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 139;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ihookabove;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 78, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 41, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 020B;
},
{
glyphname = imacron;
lastChange = "2021-10-08 06:59:31 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = macroncomb;
}
);
};
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 45, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 98, 24}";
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 46, 64}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 012F;
},
{
glyphname = itilde;
lastChange = "2021-10-08 06:33:19 +0000";
layers = (
{
background = {
components = (
{
name = idotless;
},
{
name = tildecomb;
}
);
};
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 40, 24}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 139;
}
);
unicode = 0129;
},
{
glyphname = j;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"-5 -183 OFFCURVE",
"66 -128 OFFCURVE",
"97 -17 CURVE",
"166 11 OFFCURVE",
"201 46 OFFCURVE",
"233 113 CURVE SMOOTH",
"235 117 OFFCURVE",
"233 123 OFFCURVE",
"230 123 CURVE SMOOTH",
"228 123 OFFCURVE",
"226 121 OFFCURVE",
"223 116 CURVE SMOOTH",
"192 53 OFFCURVE",
"159 28 OFFCURVE",
"101 3 CURVE",
"109 42 OFFCURVE",
"112 81 OFFCURVE",
"112 125 CURVE SMOOTH",
"112 168 OFFCURVE",
"105 216 OFFCURVE",
"92 268 CURVE",
"89 270 LINE SMOOTH",
"88 271 OFFCURVE",
"85 271 OFFCURVE",
"82 271 CURVE SMOOTH",
"74 271 OFFCURVE",
"67 269 OFFCURVE",
"61 266 CURVE SMOOTH",
"54 263 OFFCURVE",
"51 261 OFFCURVE",
"51 258 CURVE SMOOTH",
"51 257 LINE",
"67 198 OFFCURVE",
"75 139 OFFCURVE",
"75 82 CURVE SMOOTH",
"75 50 OFFCURVE",
"72 20 OFFCURVE",
"66 -9 CURVE",
"47 -14 OFFCURVE",
"29 -18 OFFCURVE",
"11 -21 CURVE SMOOTH",
"-42 -33 LINE SMOOTH",
"-85 -42 OFFCURVE",
"-121 -57 OFFCURVE",
"-150 -75 CURVE SMOOTH",
"-175 -90 OFFCURVE",
"-188 -111 OFFCURVE",
"-188 -131 CURVE SMOOTH",
"-188 -159 OFFCURVE",
"-164 -183 OFFCURVE",
"-116 -183 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-153 -166 OFFCURVE",
"-166 -154 OFFCURVE",
"-166 -137 CURVE SMOOTH",
"-166 -123 OFFCURVE",
"-156 -105 OFFCURVE",
"-134 -89 CURVE SMOOTH",
"-106 -69 OFFCURVE",
"-67 -56 OFFCURVE",
"-48 -52 CURVE SMOOTH",
"-31 -47 OFFCURVE",
"-13 -43 OFFCURVE",
"5 -40 CURVE SMOOTH",
"62 -27 LINE",
"32 -129 OFFCURVE",
"-32 -166 OFFCURVE",
"-128 -166 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"56 327 OFFCURVE",
"69 340 OFFCURVE",
"69 355 CURVE SMOOTH",
"69 371 OFFCURVE",
"56 383 OFFCURVE",
"41 383 CURVE SMOOTH",
"25 383 OFFCURVE",
"12 371 OFFCURVE",
"12 355 CURVE SMOOTH",
"12 340 OFFCURVE",
"25 327 OFFCURVE",
"41 327 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"-5 -183 OFFCURVE",
"66 -128 OFFCURVE",
"97 -17 CURVE",
"166 11 OFFCURVE",
"201 46 OFFCURVE",
"233 113 CURVE SMOOTH",
"235 117 OFFCURVE",
"233 123 OFFCURVE",
"230 123 CURVE SMOOTH",
"228 123 OFFCURVE",
"226 121 OFFCURVE",
"223 116 CURVE SMOOTH",
"192 53 OFFCURVE",
"159 28 OFFCURVE",
"101 3 CURVE",
"109 42 OFFCURVE",
"112 81 OFFCURVE",
"112 125 CURVE SMOOTH",
"112 168 OFFCURVE",
"105 216 OFFCURVE",
"92 268 CURVE",
"89 270 LINE SMOOTH",
"88 271 OFFCURVE",
"85 271 OFFCURVE",
"82 271 CURVE SMOOTH",
"74 271 OFFCURVE",
"67 269 OFFCURVE",
"61 266 CURVE SMOOTH",
"54 263 OFFCURVE",
"51 261 OFFCURVE",
"51 258 CURVE SMOOTH",
"51 257 LINE",
"67 198 OFFCURVE",
"75 139 OFFCURVE",
"75 82 CURVE SMOOTH",
"75 50 OFFCURVE",
"72 20 OFFCURVE",
"66 -9 CURVE",
"47 -14 OFFCURVE",
"29 -18 OFFCURVE",
"11 -21 CURVE SMOOTH",
"-42 -33 LINE SMOOTH",
"-85 -42 OFFCURVE",
"-121 -57 OFFCURVE",
"-150 -75 CURVE SMOOTH",
"-175 -90 OFFCURVE",
"-188 -111 OFFCURVE",
"-188 -131 CURVE SMOOTH",
"-188 -159 OFFCURVE",
"-164 -183 OFFCURVE",
"-116 -183 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-153 -166 OFFCURVE",
"-166 -154 OFFCURVE",
"-166 -137 CURVE SMOOTH",
"-166 -123 OFFCURVE",
"-156 -105 OFFCURVE",
"-134 -89 CURVE SMOOTH",
"-106 -69 OFFCURVE",
"-67 -56 OFFCURVE",
"-48 -52 CURVE SMOOTH",
"-31 -47 OFFCURVE",
"-13 -43 OFFCURVE",
"5 -40 CURVE SMOOTH",
"62 -27 LINE",
"32 -129 OFFCURVE",
"-32 -166 OFFCURVE",
"-128 -166 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"56 327 OFFCURVE",
"69 340 OFFCURVE",
"69 355 CURVE SMOOTH",
"69 371 OFFCURVE",
"56 383 OFFCURVE",
"41 383 CURVE SMOOTH",
"25 383 OFFCURVE",
"12 371 OFFCURVE",
"12 355 CURVE SMOOTH",
"12 340 OFFCURVE",
"25 327 OFFCURVE",
"41 327 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01229 4 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 29 170 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01244 41 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01252 0 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01263 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 63 23 63 39 63 55 63 71 63 87 63 103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 183;
}
);
note = j;
unicode = 006A;
},
{
glyphname = jdotless;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{92, -180}";
},
{
name = top;
position = "{67, 299}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"-5 -153 OFFCURVE",
"66 -98 OFFCURVE",
"97 13 CURVE",
"166 41 OFFCURVE",
"201 76 OFFCURVE",
"233 143 CURVE SMOOTH",
"235 147 OFFCURVE",
"233 153 OFFCURVE",
"230 153 CURVE SMOOTH",
"228 153 OFFCURVE",
"226 151 OFFCURVE",
"223 146 CURVE SMOOTH",
"192 83 OFFCURVE",
"159 58 OFFCURVE",
"101 33 CURVE",
"109 72 OFFCURVE",
"112 111 OFFCURVE",
"112 155 CURVE SMOOTH",
"112 198 OFFCURVE",
"105 246 OFFCURVE",
"92 298 CURVE",
"89 300 LINE SMOOTH",
"88 301 OFFCURVE",
"85 301 OFFCURVE",
"82 301 CURVE SMOOTH",
"74 301 OFFCURVE",
"67 299 OFFCURVE",
"61 296 CURVE SMOOTH",
"54 293 OFFCURVE",
"51 291 OFFCURVE",
"51 288 CURVE SMOOTH",
"51 287 LINE",
"67 228 OFFCURVE",
"75 169 OFFCURVE",
"75 112 CURVE SMOOTH",
"75 80 OFFCURVE",
"72 50 OFFCURVE",
"66 21 CURVE",
"47 16 OFFCURVE",
"29 12 OFFCURVE",
"11 9 CURVE SMOOTH",
"-42 -3 LINE SMOOTH",
"-85 -13 OFFCURVE",
"-121 -27 OFFCURVE",
"-150 -45 CURVE SMOOTH",
"-175 -60 OFFCURVE",
"-188 -81 OFFCURVE",
"-188 -101 CURVE SMOOTH",
"-188 -129 OFFCURVE",
"-164 -153 OFFCURVE",
"-116 -153 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-153 -136 OFFCURVE",
"-166 -124 OFFCURVE",
"-166 -107 CURVE SMOOTH",
"-166 -93 OFFCURVE",
"-156 -75 OFFCURVE",
"-134 -59 CURVE SMOOTH",
"-106 -39 OFFCURVE",
"-67 -26 OFFCURVE",
"-48 -22 CURVE SMOOTH",
"-31 -17 OFFCURVE",
"-13 -13 OFFCURVE",
"5 -10 CURVE SMOOTH",
"62 3 LINE",
"32 -99 OFFCURVE",
"-32 -136 OFFCURVE",
"-128 -136 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"-5 -153 OFFCURVE",
"66 -98 OFFCURVE",
"97 13 CURVE",
"166 41 OFFCURVE",
"201 76 OFFCURVE",
"233 143 CURVE SMOOTH",
"235 147 OFFCURVE",
"233 153 OFFCURVE",
"230 153 CURVE SMOOTH",
"228 153 OFFCURVE",
"226 151 OFFCURVE",
"223 146 CURVE SMOOTH",
"192 83 OFFCURVE",
"159 58 OFFCURVE",
"101 33 CURVE",
"109 72 OFFCURVE",
"112 111 OFFCURVE",
"112 155 CURVE SMOOTH",
"112 198 OFFCURVE",
"105 246 OFFCURVE",
"92 298 CURVE",
"89 300 LINE SMOOTH",
"88 301 OFFCURVE",
"85 301 OFFCURVE",
"82 301 CURVE SMOOTH",
"74 301 OFFCURVE",
"67 299 OFFCURVE",
"61 296 CURVE SMOOTH",
"54 293 OFFCURVE",
"51 291 OFFCURVE",
"51 288 CURVE SMOOTH",
"51 287 LINE",
"67 228 OFFCURVE",
"75 169 OFFCURVE",
"75 112 CURVE SMOOTH",
"75 80 OFFCURVE",
"72 50 OFFCURVE",
"66 21 CURVE",
"47 16 OFFCURVE",
"29 13 OFFCURVE",
"11 9 CURVE SMOOTH",
"-42 -3 LINE SMOOTH",
"-85 -13 OFFCURVE",
"-121 -27 OFFCURVE",
"-150 -45 CURVE SMOOTH",
"-175 -60 OFFCURVE",
"-188 -81 OFFCURVE",
"-188 -101 CURVE SMOOTH",
"-188 -129 OFFCURVE",
"-164 -153 OFFCURVE",
"-116 -153 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-153 -136 OFFCURVE",
"-166 -124 OFFCURVE",
"-166 -107 CURVE SMOOTH",
"-166 -93 OFFCURVE",
"-156 -75 OFFCURVE",
"-134 -59 CURVE SMOOTH",
"-106 -39 OFFCURVE",
"-67 -26 OFFCURVE",
"-48 -22 CURVE SMOOTH",
"-31 -17 OFFCURVE",
"-13 -14 OFFCURVE",
"5 -10 CURVE SMOOTH",
"62 3 LINE",
"32 -99 OFFCURVE",
"-32 -136 OFFCURVE",
"-128 -136 CURVE SMOOTH"
);
}
);
width = 183;
}
);
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2021-10-08 05:56:43 +0000";
layers = (
{
background = {
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -17, 39}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 183;
}
);
unicode = 0135;
},
{
glyphname = k;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{88, 0}";
},
{
name = top;
position = "{126, 470}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"297 -83 OFFCURVE",
"258 -62 OFFCURVE",
"231 -38 CURVE SMOOTH",
"200 -10 OFFCURVE",
"162 71 OFFCURVE",
"154 111 CURVE",
"161 102 OFFCURVE",
"180 93 OFFCURVE",
"191 93 CURVE SMOOTH",
"212 93 OFFCURVE",
"228 100 OFFCURVE",
"239 113 CURVE SMOOTH",
"250 124 OFFCURVE",
"255 139 OFFCURVE",
"255 158 CURVE SMOOTH",
"255 177 OFFCURVE",
"250 193 OFFCURVE",
"239 206 CURVE SMOOTH",
"226 222 OFFCURVE",
"209 228 OFFCURVE",
"189 228 CURVE SMOOTH",
"167 228 OFFCURVE",
"147 219 OFFCURVE",
"128 201 CURVE SMOOTH",
"124 198 OFFCURVE",
"118 191 OFFCURVE",
"111 181 CURVE SMOOTH",
"103 172 OFFCURVE",
"92 157 OFFCURVE",
"78 138 CURVE",
"83 177 OFFCURVE",
"92 204 OFFCURVE",
"105 233 CURVE",
"142 252 OFFCURVE",
"168 263 OFFCURVE",
"203 291 CURVE SMOOTH",
"234 316 OFFCURVE",
"258 341 OFFCURVE",
"275 368 CURVE SMOOTH",
"292 395 OFFCURVE",
"300 418 OFFCURVE",
"300 438 CURVE SMOOTH",
"300 465 OFFCURVE",
"287 478 OFFCURVE",
"261 478 CURVE SMOOTH",
"226 478 OFFCURVE",
"191 455 OFFCURVE",
"157 409 CURVE SMOOTH",
"128 368 OFFCURVE",
"100 314 OFFCURVE",
"73 246 CURVE",
"15 241 OFFCURVE",
"-33 289 OFFCURVE",
"-33 350 CURVE SMOOTH",
"-33 412 OFFCURVE",
"2 451 OFFCURVE",
"43 451 CURVE SMOOTH",
"73 451 OFFCURVE",
"98 431 OFFCURVE",
"98 399 CURVE SMOOTH",
"98 362 OFFCURVE",
"70 345 OFFCURVE",
"47 345 CURVE SMOOTH",
"30 345 OFFCURVE",
"16 354 OFFCURVE",
"16 372 CURVE SMOOTH",
"16 376 OFFCURVE",
"17 381 OFFCURVE",
"19 387 CURVE SMOOTH",
"22 394 OFFCURVE",
"19 397 OFFCURVE",
"16 397 CURVE SMOOTH",
"13 397 OFFCURVE",
"9 395 OFFCURVE",
"7 389 CURVE SMOOTH",
"4 382 OFFCURVE",
"3 375 OFFCURVE",
"3 369 CURVE SMOOTH",
"3 344 OFFCURVE",
"25 330 OFFCURVE",
"48 330 CURVE SMOOTH",
"79 330 OFFCURVE",
"114 353 OFFCURVE",
"114 401 CURVE SMOOTH",
"114 447 OFFCURVE",
"79 465 OFFCURVE",
"40 465 CURVE SMOOTH",
"-18 465 OFFCURVE",
"-55 409 OFFCURVE",
"-55 347 CURVE SMOOTH",
"-55 274 OFFCURVE",
"-2 226 OFFCURVE",
"67 229 CURVE",
"52 190 OFFCURVE",
"17 39 OFFCURVE",
"17 16 CURVE SMOOTH",
"17 7 OFFCURVE",
"19 3 OFFCURVE",
"24 3 CURVE SMOOTH",
"25 3 LINE SMOOTH",
"31 3 OFFCURVE",
"38 13 OFFCURVE",
"45 32 CURVE SMOOTH",
"57 63 OFFCURVE",
"67 86 OFFCURVE",
"75 102 CURVE SMOOTH",
"90 133 OFFCURVE",
"107 159 OFFCURVE",
"124 178 CURVE SMOOTH",
"144 200 OFFCURVE",
"163 211 OFFCURVE",
"182 211 CURVE SMOOTH",
"196 211 OFFCURVE",
"206 205 OFFCURVE",
"215 195 CURVE SMOOTH",
"221 188 OFFCURVE",
"225 177 OFFCURVE",
"226 164 CURVE SMOOTH",
"226 137 OFFCURVE",
"213 123 OFFCURVE",
"187 123 CURVE SMOOTH",
"168 123 OFFCURVE",
"153 131 OFFCURVE",
"142 148 CURVE SMOOTH",
"139 152 OFFCURVE",
"135 154 OFFCURVE",
"131 154 CURVE SMOOTH",
"123 154 OFFCURVE",
"121 145 OFFCURVE",
"121 131 CURVE SMOOTH",
"121 48 OFFCURVE",
"187 -47 OFFCURVE",
"261 -80 CURVE SMOOTH",
"278 -88 OFFCURVE",
"304 -95 OFFCURVE",
"328 -95 CURVE SMOOTH",
"346 -95 OFFCURVE",
"362 -90 OFFCURVE",
"371 -79 CURVE",
"375 -72 OFFCURVE",
"379 -66 OFFCURVE",
"379 -55 CURVE SMOOTH",
"379 -47 OFFCURVE",
"369 -50 OFFCURVE",
"368 -55 CURVE SMOOTH",
"361 -83 OFFCURVE",
"339 -84 OFFCURVE",
"324 -84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"133 305 OFFCURVE",
"155 343 OFFCURVE",
"178 378 CURVE SMOOTH",
"201 410 OFFCURVE",
"220 430 OFFCURVE",
"237 439 CURVE SMOOTH",
"248 444 OFFCURVE",
"255 446 OFFCURVE",
"260 446 CURVE SMOOTH",
"272 446 OFFCURVE",
"278 439 OFFCURVE",
"278 426 CURVE SMOOTH",
"278 386 OFFCURVE",
"230 333 OFFCURVE",
"201 307 CURVE SMOOTH",
"174 284 OFFCURVE",
"146 266 OFFCURVE",
"110 253 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"346 -95 OFFCURVE",
"362 -90 OFFCURVE",
"371 -79 CURVE",
"375 -72 OFFCURVE",
"379 -66 OFFCURVE",
"379 -55 CURVE SMOOTH",
"379 -47 OFFCURVE",
"369 -50 OFFCURVE",
"368 -55 CURVE SMOOTH",
"361 -83 OFFCURVE",
"339 -84 OFFCURVE",
"324 -84 CURVE SMOOTH",
"297 -83 OFFCURVE",
"258 -62 OFFCURVE",
"231 -38 CURVE SMOOTH",
"200 -10 OFFCURVE",
"162 71 OFFCURVE",
"154 111 CURVE",
"161 102 OFFCURVE",
"180 93 OFFCURVE",
"191 93 CURVE SMOOTH",
"212 93 OFFCURVE",
"228 100 OFFCURVE",
"239 113 CURVE SMOOTH",
"250 124 OFFCURVE",
"255 139 OFFCURVE",
"255 158 CURVE SMOOTH",
"255 177 OFFCURVE",
"250 193 OFFCURVE",
"239 206 CURVE SMOOTH",
"226 222 OFFCURVE",
"209 228 OFFCURVE",
"189 228 CURVE SMOOTH",
"167 228 OFFCURVE",
"147 219 OFFCURVE",
"128 201 CURVE SMOOTH",
"124 198 OFFCURVE",
"118 191 OFFCURVE",
"111 181 CURVE SMOOTH",
"103 172 OFFCURVE",
"92 157 OFFCURVE",
"78 138 CURVE",
"83 177 OFFCURVE",
"92 204 OFFCURVE",
"105 233 CURVE",
"142 252 OFFCURVE",
"168 263 OFFCURVE",
"203 291 CURVE SMOOTH",
"234 316 OFFCURVE",
"258 341 OFFCURVE",
"275 368 CURVE SMOOTH",
"292 395 OFFCURVE",
"300 418 OFFCURVE",
"300 438 CURVE SMOOTH",
"300 465 OFFCURVE",
"287 478 OFFCURVE",
"261 478 CURVE SMOOTH",
"226 478 OFFCURVE",
"191 455 OFFCURVE",
"157 409 CURVE SMOOTH",
"128 368 OFFCURVE",
"100 314 OFFCURVE",
"73 246 CURVE",
"15 241 OFFCURVE",
"-33 289 OFFCURVE",
"-33 350 CURVE SMOOTH",
"-33 412 OFFCURVE",
"2 451 OFFCURVE",
"43 451 CURVE SMOOTH",
"73 451 OFFCURVE",
"98 431 OFFCURVE",
"98 399 CURVE SMOOTH",
"98 362 OFFCURVE",
"70 345 OFFCURVE",
"47 345 CURVE SMOOTH",
"30 345 OFFCURVE",
"16 354 OFFCURVE",
"16 372 CURVE SMOOTH",
"16 376 OFFCURVE",
"17 381 OFFCURVE",
"19 387 CURVE SMOOTH",
"22 394 OFFCURVE",
"19 397 OFFCURVE",
"16 397 CURVE SMOOTH",
"13 397 OFFCURVE",
"9 395 OFFCURVE",
"7 389 CURVE SMOOTH",
"4 382 OFFCURVE",
"3 375 OFFCURVE",
"3 369 CURVE SMOOTH",
"3 344 OFFCURVE",
"25 330 OFFCURVE",
"48 330 CURVE SMOOTH",
"79 330 OFFCURVE",
"114 353 OFFCURVE",
"114 401 CURVE SMOOTH",
"114 447 OFFCURVE",
"79 465 OFFCURVE",
"40 465 CURVE SMOOTH",
"-18 465 OFFCURVE",
"-55 409 OFFCURVE",
"-55 347 CURVE SMOOTH",
"-55 274 OFFCURVE",
"-2 226 OFFCURVE",
"67 229 CURVE",
"52 190 OFFCURVE",
"17 39 OFFCURVE",
"17 16 CURVE SMOOTH",
"17 7 OFFCURVE",
"19 3 OFFCURVE",
"24 3 CURVE SMOOTH",
"25 3 LINE SMOOTH",
"31 3 OFFCURVE",
"38 13 OFFCURVE",
"45 32 CURVE SMOOTH",
"57 63 OFFCURVE",
"67 86 OFFCURVE",
"75 102 CURVE SMOOTH",
"90 133 OFFCURVE",
"107 159 OFFCURVE",
"124 178 CURVE SMOOTH",
"144 200 OFFCURVE",
"163 211 OFFCURVE",
"182 211 CURVE SMOOTH",
"196 211 OFFCURVE",
"206 205 OFFCURVE",
"215 195 CURVE SMOOTH",
"221 188 OFFCURVE",
"225 177 OFFCURVE",
"226 164 CURVE SMOOTH",
"226 137 OFFCURVE",
"213 123 OFFCURVE",
"187 123 CURVE SMOOTH",
"168 123 OFFCURVE",
"153 131 OFFCURVE",
"142 148 CURVE SMOOTH",
"139 152 OFFCURVE",
"135 154 OFFCURVE",
"131 154 CURVE SMOOTH",
"123 154 OFFCURVE",
"121 145 OFFCURVE",
"121 131 CURVE SMOOTH",
"121 48 OFFCURVE",
"187 -47 OFFCURVE",
"261 -80 CURVE SMOOTH",
"278 -88 OFFCURVE",
"304 -95 OFFCURVE",
"328 -95 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"133 305 OFFCURVE",
"155 343 OFFCURVE",
"178 378 CURVE SMOOTH",
"201 410 OFFCURVE",
"220 430 OFFCURVE",
"237 439 CURVE SMOOTH",
"248 444 OFFCURVE",
"255 446 OFFCURVE",
"260 446 CURVE SMOOTH",
"272 446 OFFCURVE",
"278 439 OFFCURVE",
"278 426 CURVE SMOOTH",
"278 386 OFFCURVE",
"230 333 OFFCURVE",
"201 307 CURVE SMOOTH",
"174 284 OFFCURVE",
"146 266 OFFCURVE",
"110 253 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012128 3 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 3 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 3 91 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 4 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01220 45 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 27 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 20 229 20 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01225 30 71 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 60 165 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01282 30 71 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 98 165 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 128 170 128 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 153 128 169 128 185 128 201 128 217 128 233 128 249 128 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 153 128 169 128 185 128 201 128 217 128 233 128 249 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 128 25 128 41 128 57 128 73 128 89 128 105 128 121 128 137 128 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012137 30 71 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0124 2 95 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 1 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01298 95 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 252;
}
);
note = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
lastChange = "2021-10-08 05:56:50 +0000";
layers = (
{
background = {
components = (
{
name = k;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 52, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 252;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"442 -15 OFFCURVE",
"486 -73 OFFCURVE",
"513 -73 CURVE SMOOTH",
"520 -73 OFFCURVE",
"526 -69 OFFCURVE",
"531 -61 CURVE",
"511 -41 OFFCURVE",
"489 -14 OFFCURVE",
"464 23 CURVE SMOOTH",
"456 34 OFFCURVE",
"448 46 OFFCURVE",
"440 58 CURVE SMOOTH",
"417 93 LINE SMOOTH",
"398 121 OFFCURVE",
"381 141 OFFCURVE",
"367 154 CURVE SMOOTH",
"349 169 OFFCURVE",
"331 178 OFFCURVE",
"307 184 CURVE",
"331 199 OFFCURVE",
"353 222 OFFCURVE",
"378 252 CURVE SMOOTH",
"395 273 OFFCURVE",
"408 290 OFFCURVE",
"418 302 CURVE SMOOTH",
"438 324 LINE SMOOTH",
"458 349 OFFCURVE",
"483 360 OFFCURVE",
"504 362 CURVE SMOOTH",
"514 363 OFFCURVE",
"521 368 OFFCURVE",
"521 374 CURVE SMOOTH",
"521 379 OFFCURVE",
"515 384 OFFCURVE",
"503 384 CURVE SMOOTH",
"501 384 LINE SMOOTH",
"476 382 OFFCURVE",
"453 370 OFFCURVE",
"430 347 CURVE SMOOTH",
"418 336 OFFCURVE",
"399 310 OFFCURVE",
"372 272 CURVE SMOOTH",
"348 238 OFFCURVE",
"328 215 OFFCURVE",
"305 198 CURVE",
"307 226 OFFCURVE",
"309 251 OFFCURVE",
"309 279 CURVE SMOOTH",
"309 301 LINE",
"308 328 LINE SMOOTH",
"308 338 OFFCURVE",
"307 347 OFFCURVE",
"307 354 CURVE SMOOTH",
"307 388 LINE",
"308 390 OFFCURVE",
"307 393 OFFCURVE",
"305 395 CURVE",
"302 396 OFFCURVE",
"297 397 OFFCURVE",
"289 397 CURVE SMOOTH",
"276 397 OFFCURVE",
"271 394 OFFCURVE",
"270 389 CURVE SMOOTH",
"269 380 OFFCURVE",
"268 369 OFFCURVE",
"268 357 CURVE SMOOTH",
"268 344 OFFCURVE",
"269 320 OFFCURVE",
"272 285 CURVE SMOOTH",
"274 249 OFFCURVE",
"276 222 OFFCURVE",
"276 202 CURVE SMOOTH",
"276 193 LINE",
"275 182 LINE",
"258 180 OFFCURVE",
"242 175 OFFCURVE",
"225 167 CURVE SMOOTH",
"222 166 OFFCURVE",
"221 165 OFFCURVE",
"221 162 CURVE SMOOTH",
"221 158 OFFCURVE",
"222 157 OFFCURVE",
"227 157 CURVE SMOOTH",
"229 157 LINE",
"243 162 OFFCURVE",
"258 164 OFFCURVE",
"274 163 CURVE",
"267 72 OFFCURVE",
"233 9 OFFCURVE",
"172 -25 CURVE SMOOTH",
"158 -32 OFFCURVE",
"143 -36 OFFCURVE",
"126 -36 CURVE SMOOTH",
"93 -36 OFFCURVE",
"65 -25 OFFCURVE",
"42 -4 CURVE",
"23 17 OFFCURVE",
"13 39 OFFCURVE",
"13 64 CURVE SMOOTH",
"13 96 OFFCURVE",
"30 121 OFFCURVE",
"62 139 CURVE SMOOTH",
"72 145 OFFCURVE",
"83 148 OFFCURVE",
"96 148 CURVE SMOOTH",
"108 148 OFFCURVE",
"120 145 OFFCURVE",
"129 139 CURVE SMOOTH",
"140 133 OFFCURVE",
"146 124 OFFCURVE",
"147 115 CURVE",
"149 111 OFFCURVE",
"151 109 OFFCURVE",
"155 109 CURVE SMOOTH",
"156 109 OFFCURVE",
"157 109 OFFCURVE",
"157 110 CURVE SMOOTH",
"157 111 OFFCURVE",
"157 112 OFFCURVE",
"156 112 CURVE",
"153 124 OFFCURVE",
"146 136 OFFCURVE",
"133 145 CURVE SMOOTH",
"121 153 OFFCURVE",
"107 157 OFFCURVE",
"91 157 CURVE SMOOTH",
"79 157 OFFCURVE",
"67 154 OFFCURVE",
"56 148 CURVE SMOOTH",
"17 126 OFFCURVE",
"-2 94 OFFCURVE",
"-2 53 CURVE SMOOTH",
"-2 28 OFFCURVE",
"5 7 OFFCURVE",
"19 -10 CURVE SMOOTH",
"41 -40 OFFCURVE",
"72 -55 OFFCURVE",
"113 -55 CURVE SMOOTH",
"136 -55 OFFCURVE",
"157 -49 OFFCURVE",
"177 -37 CURVE SMOOTH",
"242 -1 OFFCURVE",
"282 62 OFFCURVE",
"300 158 CURVE",
"331 147 OFFCURVE",
"356 127 OFFCURVE",
"375 96 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"520 -73 OFFCURVE",
"526 -69 OFFCURVE",
"531 -61 CURVE",
"511 -41 OFFCURVE",
"489 -14 OFFCURVE",
"464 23 CURVE SMOOTH",
"456 34 OFFCURVE",
"448 46 OFFCURVE",
"440 58 CURVE SMOOTH",
"417 93 LINE SMOOTH",
"398 121 OFFCURVE",
"381 141 OFFCURVE",
"367 154 CURVE SMOOTH",
"349 169 OFFCURVE",
"331 178 OFFCURVE",
"307 184 CURVE",
"331 199 OFFCURVE",
"353 222 OFFCURVE",
"378 252 CURVE SMOOTH",
"395 273 OFFCURVE",
"408 290 OFFCURVE",
"418 302 CURVE SMOOTH",
"438 324 LINE SMOOTH",
"458 349 OFFCURVE",
"483 360 OFFCURVE",
"504 362 CURVE SMOOTH",
"514 363 OFFCURVE",
"521 368 OFFCURVE",
"521 374 CURVE SMOOTH",
"521 379 OFFCURVE",
"515 384 OFFCURVE",
"503 384 CURVE SMOOTH",
"501 384 LINE SMOOTH",
"476 382 OFFCURVE",
"453 370 OFFCURVE",
"430 347 CURVE SMOOTH",
"418 336 OFFCURVE",
"399 310 OFFCURVE",
"372 272 CURVE SMOOTH",
"348 238 OFFCURVE",
"328 215 OFFCURVE",
"305 198 CURVE",
"307 226 OFFCURVE",
"309 251 OFFCURVE",
"309 279 CURVE SMOOTH",
"309 301 LINE",
"308 328 LINE SMOOTH",
"308 338 OFFCURVE",
"307 347 OFFCURVE",
"307 354 CURVE SMOOTH",
"307 388 LINE",
"308 390 OFFCURVE",
"307 393 OFFCURVE",
"305 395 CURVE",
"302 396 OFFCURVE",
"297 397 OFFCURVE",
"289 397 CURVE SMOOTH",
"276 397 OFFCURVE",
"271 394 OFFCURVE",
"270 389 CURVE SMOOTH",
"269 380 OFFCURVE",
"268 369 OFFCURVE",
"268 357 CURVE SMOOTH",
"268 344 OFFCURVE",
"269 320 OFFCURVE",
"272 285 CURVE SMOOTH",
"274 249 OFFCURVE",
"276 222 OFFCURVE",
"276 202 CURVE SMOOTH",
"276 193 LINE",
"275 182 LINE",
"258 180 OFFCURVE",
"242 175 OFFCURVE",
"225 167 CURVE SMOOTH",
"222 166 OFFCURVE",
"221 165 OFFCURVE",
"221 162 CURVE SMOOTH",
"221 158 OFFCURVE",
"222 157 OFFCURVE",
"227 157 CURVE SMOOTH",
"229 157 LINE",
"243 162 OFFCURVE",
"258 164 OFFCURVE",
"274 163 CURVE",
"267 72 OFFCURVE",
"233 9 OFFCURVE",
"172 -25 CURVE SMOOTH",
"158 -32 OFFCURVE",
"143 -36 OFFCURVE",
"126 -36 CURVE SMOOTH",
"93 -36 OFFCURVE",
"65 -25 OFFCURVE",
"42 -4 CURVE",
"23 17 OFFCURVE",
"13 39 OFFCURVE",
"13 64 CURVE SMOOTH",
"13 96 OFFCURVE",
"30 121 OFFCURVE",
"62 139 CURVE SMOOTH",
"72 145 OFFCURVE",
"83 148 OFFCURVE",
"96 148 CURVE SMOOTH",
"108 148 OFFCURVE",
"120 145 OFFCURVE",
"129 139 CURVE SMOOTH",
"140 133 OFFCURVE",
"146 124 OFFCURVE",
"147 115 CURVE",
"149 111 OFFCURVE",
"151 109 OFFCURVE",
"155 109 CURVE SMOOTH",
"156 109 OFFCURVE",
"157 109 OFFCURVE",
"157 110 CURVE SMOOTH",
"157 111 OFFCURVE",
"157 112 OFFCURVE",
"156 112 CURVE",
"153 124 OFFCURVE",
"146 136 OFFCURVE",
"133 145 CURVE SMOOTH",
"121 153 OFFCURVE",
"107 157 OFFCURVE",
"91 157 CURVE SMOOTH",
"79 157 OFFCURVE",
"67 154 OFFCURVE",
"56 148 CURVE SMOOTH",
"17 126 OFFCURVE",
"-2 94 OFFCURVE",
"-2 53 CURVE SMOOTH",
"-2 28 OFFCURVE",
"5 7 OFFCURVE",
"19 -10 CURVE SMOOTH",
"41 -40 OFFCURVE",
"72 -55 OFFCURVE",
"113 -55 CURVE SMOOTH",
"136 -55 OFFCURVE",
"157 -49 OFFCURVE",
"177 -37 CURVE SMOOTH",
"242 -1 OFFCURVE",
"282 62 OFFCURVE",
"300 158 CURVE",
"331 147 OFFCURVE",
"356 127 OFFCURVE",
"375 96 CURVE SMOOTH",
"442 -15 OFFCURVE",
"486 -73 OFFCURVE",
"513 -73 CURVE SMOOTH"
);
}
);
width = 546;
}
);
unicode = 0138;
},
{
glyphname = l;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{94, 0}";
},
{
name = center;
position = "{94, 235}";
},
{
name = top;
position = "{167, 449}";
},
{
name = topright;
position = "{235, 451}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"183 31 OFFCURVE",
"214 65 OFFCURVE",
"240 115 CURVE SMOOTH",
"241 117 OFFCURVE",
"242 119 OFFCURVE",
"242 122 CURVE SMOOTH",
"242 127 OFFCURVE",
"241 129 OFFCURVE",
"239 129 CURVE SMOOTH",
"238 129 OFFCURVE",
"237 128 OFFCURVE",
"235 125 CURVE SMOOTH",
"212 89 OFFCURVE",
"189 62 OFFCURVE",
"165 45 CURVE SMOOTH",
"144 30 OFFCURVE",
"125 22 OFFCURVE",
"110 22 CURVE SMOOTH",
"82 22 OFFCURVE",
"65 47 OFFCURVE",
"59 96 CURVE",
"150 167 OFFCURVE",
"203 250 OFFCURVE",
"217 345 CURVE SMOOTH",
"218 350 OFFCURVE",
"219 355 OFFCURVE",
"219 360 CURVE SMOOTH",
"219 373 LINE SMOOTH",
"219 397 OFFCURVE",
"214 416 OFFCURVE",
"204 430 CURVE SMOOTH",
"194 443 OFFCURVE",
"182 449 OFFCURVE",
"167 449 CURVE SMOOTH",
"146 449 OFFCURVE",
"126 437 OFFCURVE",
"109 413 CURVE SMOOTH",
"82 376 OFFCURVE",
"61 333 OFFCURVE",
"46 282 CURVE SMOOTH",
"32 236 OFFCURVE",
"24 191 OFFCURVE",
"24 147 CURVE SMOOTH",
"24 84 OFFCURVE",
"36 40 OFFCURVE",
"63 17 CURVE SMOOTH",
"75 6 OFFCURVE",
"89 1 OFFCURVE",
"105 1 CURVE SMOOTH",
"118 1 OFFCURVE",
"133 5 OFFCURVE",
"148 13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57 139 LINE SMOOTH",
"57 186 OFFCURVE",
"61 227 OFFCURVE",
"70 262 CURVE SMOOTH",
"82 310 OFFCURVE",
"97 350 OFFCURVE",
"120 385 CURVE SMOOTH",
"139 417 OFFCURVE",
"157 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"191 433 OFFCURVE",
"197 415 OFFCURVE",
"197 388 CURVE SMOOTH",
"197 376 OFFCURVE",
"196 362 OFFCURVE",
"193 346 CURVE SMOOTH",
"180 266 OFFCURVE",
"135 189 OFFCURVE",
"57 114 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"118 1 OFFCURVE",
"133 5 OFFCURVE",
"148 13 CURVE SMOOTH",
"183 31 OFFCURVE",
"214 65 OFFCURVE",
"240 115 CURVE SMOOTH",
"241 117 OFFCURVE",
"242 119 OFFCURVE",
"242 122 CURVE SMOOTH",
"242 127 OFFCURVE",
"241 129 OFFCURVE",
"239 129 CURVE SMOOTH",
"238 129 OFFCURVE",
"237 128 OFFCURVE",
"235 125 CURVE SMOOTH",
"212 89 OFFCURVE",
"189 62 OFFCURVE",
"165 45 CURVE SMOOTH",
"144 30 OFFCURVE",
"125 22 OFFCURVE",
"110 22 CURVE SMOOTH",
"82 22 OFFCURVE",
"65 47 OFFCURVE",
"59 96 CURVE",
"150 167 OFFCURVE",
"203 250 OFFCURVE",
"217 345 CURVE SMOOTH",
"218 350 OFFCURVE",
"219 355 OFFCURVE",
"219 360 CURVE SMOOTH",
"219 373 LINE SMOOTH",
"219 397 OFFCURVE",
"214 416 OFFCURVE",
"204 430 CURVE SMOOTH",
"194 443 OFFCURVE",
"182 449 OFFCURVE",
"167 449 CURVE SMOOTH",
"146 449 OFFCURVE",
"126 437 OFFCURVE",
"109 413 CURVE SMOOTH",
"82 376 OFFCURVE",
"61 333 OFFCURVE",
"46 282 CURVE SMOOTH",
"32 236 OFFCURVE",
"24 191 OFFCURVE",
"24 147 CURVE SMOOTH",
"24 84 OFFCURVE",
"36 40 OFFCURVE",
"63 17 CURVE SMOOTH",
"75 6 OFFCURVE",
"89 1 OFFCURVE",
"105 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57 139 LINE SMOOTH",
"57 186 OFFCURVE",
"61 227 OFFCURVE",
"70 262 CURVE SMOOTH",
"82 310 OFFCURVE",
"97 350 OFFCURVE",
"120 385 CURVE SMOOTH",
"139 417 OFFCURVE",
"157 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"191 433 OFFCURVE",
"197 415 OFFCURVE",
"197 388 CURVE SMOOTH",
"197 376 OFFCURVE",
"196 362 OFFCURVE",
"193 346 CURVE SMOOTH",
"180 266 OFFCURVE",
"135 189 OFFCURVE",
"57 114 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01244 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01219 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01215 1 37 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 188;
}
);
note = l;
unicode = 006C;
},
{
glyphname = lacute;
lastChange = "2021-10-08 05:57:01 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = acutecomb;
}
);
};
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 135, 189}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 188;
}
);
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2021-10-08 05:57:04 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = caroncomb.alt;
}
);
};
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 232, 191}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 188;
}
);
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2021-10-08 05:57:04 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 188;
}
);
unicode = 013C;
},
{
glyphname = ldot;
lastChange = "2021-10-08 05:57:12 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = periodcentered;
}
);
};
components = (
{
name = l;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 101, -47}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 188;
}
);
unicode = 0140;
},
{
glyphname = lj;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 235, 0}";
}
);
};
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 371;
}
);
unicode = 01C9;
},
{
glyphname = lslash;
lastChange = "2021-10-08 05:57:29 +0000";
layers = (
{
background = {
components = (
{
name = l;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, -89, -37}";
}
);
};
components = (
{
name = l;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, -111, 7}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 188;
}
);
unicode = 0142;
},
{
glyphname = m;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"431 -106 OFFCURVE",
"442 -106 OFFCURVE",
"453 -106 CURVE SMOOTH",
"486 -106 OFFCURVE",
"521 -98 OFFCURVE",
"537 -73 CURVE SMOOTH",
"540 -67 OFFCURVE",
"542 -60 OFFCURVE",
"542 -52 CURVE SMOOTH",
"542 -47 OFFCURVE",
"541 -40 OFFCURVE",
"539 -34 CURVE SMOOTH",
"537 -28 OFFCURVE",
"534 -25 OFFCURVE",
"532 -25 CURVE SMOOTH",
"529 -25 OFFCURVE",
"526 -29 OFFCURVE",
"526 -34 CURVE SMOOTH",
"526 -36 OFFCURVE",
"526 -38 OFFCURVE",
"527 -41 CURVE SMOOTH",
"528 -45 OFFCURVE",
"529 -48 OFFCURVE",
"529 -52 CURVE SMOOTH",
"529 -58 OFFCURVE",
"527 -63 OFFCURVE",
"522 -68 CURVE SMOOTH",
"509 -82 OFFCURVE",
"489 -89 OFFCURVE",
"467 -89 CURVE SMOOTH",
"423 -89 OFFCURVE",
"373 -60 OFFCURVE",
"368 -7 CURVE SMOOTH",
"366 8 OFFCURVE",
"363 26 OFFCURVE",
"363 48 CURVE SMOOTH",
"363 69 OFFCURVE",
"366 94 OFFCURVE",
"373 125 CURVE SMOOTH",
"387 183 OFFCURVE",
"393 217 OFFCURVE",
"392 228 CURVE SMOOTH",
"389 267 OFFCURVE",
"373 286 OFFCURVE",
"343 286 CURVE SMOOTH",
"340 286 OFFCURVE",
"338 286 OFFCURVE",
"336 285 CURVE",
"311 283 OFFCURVE",
"289 268 OFFCURVE",
"269 240 CURVE SMOOTH",
"256 223 OFFCURVE",
"243 197 OFFCURVE",
"224 150 CURVE",
"213 213 OFFCURVE",
"192 236 OFFCURVE",
"161 233 CURVE",
"142 233 OFFCURVE",
"124 220 OFFCURVE",
"107 194 CURVE SMOOTH",
"94 173 OFFCURVE",
"85 153 OFFCURVE",
"77 113 CURVE",
"75 131 OFFCURVE",
"73 144 OFFCURVE",
"71 152 CURVE SMOOTH",
"69 161 OFFCURVE",
"67 168 OFFCURVE",
"64 174 CURVE SMOOTH",
"62 179 OFFCURVE",
"59 182 OFFCURVE",
"55 182 CURVE SMOOTH",
"52 182 OFFCURVE",
"50 181 OFFCURVE",
"47 178 CURVE SMOOTH",
"44 175 OFFCURVE",
"43 172 OFFCURVE",
"43 167 CURVE SMOOTH",
"43 165 OFFCURVE",
"43 163 OFFCURVE",
"44 162 CURVE",
"47 134 OFFCURVE",
"50 105 OFFCURVE",
"51 76 CURVE SMOOTH",
"51 71 OFFCURVE",
"51 61 OFFCURVE",
"52 47 CURVE SMOOTH",
"53 -10 LINE SMOOTH",
"54 -27 OFFCURVE",
"60 -35 OFFCURVE",
"71 -35 CURVE SMOOTH",
"75 -35 OFFCURVE",
"80 -33 OFFCURVE",
"85 -30 CURVE",
"90 -25 OFFCURVE",
"92 -17 OFFCURVE",
"92 -4 CURVE SMOOTH",
"92 3 OFFCURVE",
"91 14 OFFCURVE",
"89 29 CURVE SMOOTH",
"88 36 OFFCURVE",
"87 43 OFFCURVE",
"87 48 CURVE SMOOTH",
"87 61 LINE SMOOTH",
"88 101 OFFCURVE",
"91 127 OFFCURVE",
"96 140 CURVE SMOOTH",
"115 189 OFFCURVE",
"136 213 OFFCURVE",
"160 213 CURVE SMOOTH",
"171 213 OFFCURVE",
"181 207 OFFCURVE",
"188 194 CURVE SMOOTH",
"195 181 OFFCURVE",
"199 166 OFFCURVE",
"199 148 CURVE SMOOTH",
"199 141 OFFCURVE",
"198 134 OFFCURVE",
"197 126 CURVE SMOOTH",
"191 84 OFFCURVE",
"188 59 OFFCURVE",
"188 51 CURVE SMOOTH",
"188 39 OFFCURVE",
"191 12 OFFCURVE",
"206 12 CURVE SMOOTH",
"211 12 OFFCURVE",
"217 16 OFFCURVE",
"223 25 CURVE SMOOTH",
"230 36 OFFCURVE",
"233 48 OFFCURVE",
"233 61 CURVE SMOOTH",
"234 109 OFFCURVE",
"247 159 OFFCURVE",
"273 210 CURVE SMOOTH",
"280 223 OFFCURVE",
"290 236 OFFCURVE",
"304 249 CURVE SMOOTH",
"319 262 OFFCURVE",
"332 269 OFFCURVE",
"343 269 CURVE SMOOTH",
"355 269 OFFCURVE",
"362 261 OFFCURVE",
"364 244 CURVE SMOOTH",
"364 243 OFFCURVE",
"364 241 OFFCURVE",
"365 240 CURVE",
"365 234 LINE SMOOTH",
"365 215 OFFCURVE",
"360 190 OFFCURVE",
"349 160 CURVE SMOOTH",
"333 115 OFFCURVE",
"321 66 OFFCURVE",
"321 22 CURVE SMOOTH",
"321 -40 OFFCURVE",
"346 -91 OFFCURVE",
"421 -104 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"486 -106 OFFCURVE",
"521 -98 OFFCURVE",
"537 -73 CURVE SMOOTH",
"540 -67 OFFCURVE",
"542 -60 OFFCURVE",
"542 -52 CURVE SMOOTH",
"542 -47 OFFCURVE",
"541 -40 OFFCURVE",
"539 -34 CURVE SMOOTH",
"537 -28 OFFCURVE",
"534 -25 OFFCURVE",
"532 -25 CURVE SMOOTH",
"529 -25 OFFCURVE",
"526 -29 OFFCURVE",
"526 -34 CURVE SMOOTH",
"526 -36 OFFCURVE",
"526 -38 OFFCURVE",
"527 -41 CURVE SMOOTH",
"528 -45 OFFCURVE",
"529 -48 OFFCURVE",
"529 -52 CURVE SMOOTH",
"529 -58 OFFCURVE",
"527 -63 OFFCURVE",
"522 -68 CURVE SMOOTH",
"509 -82 OFFCURVE",
"489 -89 OFFCURVE",
"467 -89 CURVE SMOOTH",
"423 -89 OFFCURVE",
"373 -60 OFFCURVE",
"368 -7 CURVE SMOOTH",
"366 8 OFFCURVE",
"363 26 OFFCURVE",
"363 48 CURVE SMOOTH",
"363 69 OFFCURVE",
"366 94 OFFCURVE",
"373 125 CURVE SMOOTH",
"387 183 OFFCURVE",
"393 217 OFFCURVE",
"392 228 CURVE SMOOTH",
"389 267 OFFCURVE",
"373 286 OFFCURVE",
"343 286 CURVE SMOOTH",
"340 286 OFFCURVE",
"338 286 OFFCURVE",
"336 285 CURVE",
"311 283 OFFCURVE",
"289 268 OFFCURVE",
"269 240 CURVE SMOOTH",
"256 223 OFFCURVE",
"243 197 OFFCURVE",
"224 150 CURVE",
"213 213 OFFCURVE",
"192 236 OFFCURVE",
"161 233 CURVE",
"142 233 OFFCURVE",
"124 220 OFFCURVE",
"107 194 CURVE SMOOTH",
"94 173 OFFCURVE",
"85 153 OFFCURVE",
"77 113 CURVE",
"75 131 OFFCURVE",
"73 144 OFFCURVE",
"71 152 CURVE SMOOTH",
"69 161 OFFCURVE",
"67 168 OFFCURVE",
"64 174 CURVE SMOOTH",
"62 179 OFFCURVE",
"59 182 OFFCURVE",
"55 182 CURVE SMOOTH",
"52 182 OFFCURVE",
"50 181 OFFCURVE",
"47 178 CURVE SMOOTH",
"44 175 OFFCURVE",
"43 172 OFFCURVE",
"43 167 CURVE SMOOTH",
"43 165 OFFCURVE",
"43 163 OFFCURVE",
"44 162 CURVE",
"47 134 OFFCURVE",
"50 105 OFFCURVE",
"51 76 CURVE SMOOTH",
"51 71 OFFCURVE",
"51 61 OFFCURVE",
"52 47 CURVE SMOOTH",
"53 -10 LINE SMOOTH",
"54 -27 OFFCURVE",
"60 -35 OFFCURVE",
"71 -35 CURVE SMOOTH",
"75 -35 OFFCURVE",
"80 -33 OFFCURVE",
"85 -30 CURVE",
"90 -25 OFFCURVE",
"92 -17 OFFCURVE",
"92 -4 CURVE SMOOTH",
"92 3 OFFCURVE",
"91 14 OFFCURVE",
"89 29 CURVE SMOOTH",
"88 36 OFFCURVE",
"87 43 OFFCURVE",
"87 48 CURVE SMOOTH",
"87 61 LINE SMOOTH",
"88 101 OFFCURVE",
"91 127 OFFCURVE",
"96 140 CURVE SMOOTH",
"115 189 OFFCURVE",
"136 213 OFFCURVE",
"160 213 CURVE SMOOTH",
"171 213 OFFCURVE",
"181 207 OFFCURVE",
"188 194 CURVE SMOOTH",
"195 181 OFFCURVE",
"199 166 OFFCURVE",
"199 148 CURVE SMOOTH",
"199 141 OFFCURVE",
"198 134 OFFCURVE",
"197 126 CURVE SMOOTH",
"191 84 OFFCURVE",
"188 59 OFFCURVE",
"188 51 CURVE SMOOTH",
"188 39 OFFCURVE",
"191 12 OFFCURVE",
"206 12 CURVE SMOOTH",
"211 12 OFFCURVE",
"217 16 OFFCURVE",
"223 25 CURVE SMOOTH",
"230 36 OFFCURVE",
"233 48 OFFCURVE",
"233 61 CURVE SMOOTH",
"234 109 OFFCURVE",
"247 159 OFFCURVE",
"273 210 CURVE SMOOTH",
"280 223 OFFCURVE",
"290 236 OFFCURVE",
"304 249 CURVE SMOOTH",
"319 262 OFFCURVE",
"332 269 OFFCURVE",
"343 269 CURVE SMOOTH",
"355 269 OFFCURVE",
"362 261 OFFCURVE",
"364 244 CURVE SMOOTH",
"364 243 OFFCURVE",
"364 241 OFFCURVE",
"365 240 CURVE",
"365 234 LINE SMOOTH",
"365 215 OFFCURVE",
"360 190 OFFCURVE",
"349 160 CURVE SMOOTH",
"333 115 OFFCURVE",
"321 66 OFFCURVE",
"321 22 CURVE SMOOTH",
"321 -40 OFFCURVE",
"346 -91 OFFCURVE",
"421 -104 CURVE SMOOTH",
"431 -106 OFFCURVE",
"442 -106 OFFCURVE",
"453 -106 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 17 170 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01245 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 45 165 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01273 59 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01290 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01281 62 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01286 1 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 413;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{95, 0}";
},
{
name = top;
position = "{177, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"38 2 OFFCURVE",
"42 3 OFFCURVE",
"46 5 CURVE SMOOTH",
"53 8 OFFCURVE",
"57 25 OFFCURVE",
"60 55 CURVE SMOOTH",
"66 120 LINE",
"71 140 OFFCURVE",
"80 162 OFFCURVE",
"95 186 CURVE SMOOTH",
"120 225 OFFCURVE",
"145 247 OFFCURVE",
"172 247 CURVE SMOOTH",
"191 247 OFFCURVE",
"200 237 OFFCURVE",
"200 217 CURVE SMOOTH",
"200 198 OFFCURVE",
"189 176 OFFCURVE",
"168 153 CURVE SMOOTH",
"145 128 OFFCURVE",
"128 97 OFFCURVE",
"128 62 CURVE SMOOTH",
"128 25 OFFCURVE",
"152 4 OFFCURVE",
"187 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"233 19 OFFCURVE",
"248 35 CURVE SMOOTH",
"264 52 OFFCURVE",
"285 79 OFFCURVE",
"300 114 CURVE",
"302 121 OFFCURVE",
"300 125 OFFCURVE",
"297 125 CURVE SMOOTH",
"295 125 OFFCURVE",
"293 123 OFFCURVE",
"291 119 CURVE SMOOTH",
"276 86 OFFCURVE",
"257 63 OFFCURVE",
"242 48 CURVE SMOOTH",
"229 35 OFFCURVE",
"210 19 OFFCURVE",
"191 19 CURVE SMOOTH",
"186 19 OFFCURVE",
"182 21 OFFCURVE",
"177 23 CURVE",
"167 29 OFFCURVE",
"162 42 OFFCURVE",
"162 59 CURVE SMOOTH",
"162 74 OFFCURVE",
"172 98 OFFCURVE",
"196 130 CURVE SMOOTH",
"216 156 OFFCURVE",
"226 180 OFFCURVE",
"226 201 CURVE SMOOTH",
"226 217 OFFCURVE",
"222 231 OFFCURVE",
"215 242 CURVE SMOOTH",
"206 257 OFFCURVE",
"191 265 OFFCURVE",
"172 266 CURVE SMOOTH",
"152 266 OFFCURVE",
"133 255 OFFCURVE",
"114 234 CURVE SMOOTH",
"98 218 OFFCURVE",
"87 202 OFFCURVE",
"71 163 CURVE",
"72 181 OFFCURVE",
"73 194 OFFCURVE",
"73 203 CURVE SMOOTH",
"73 212 OFFCURVE",
"72 219 OFFCURVE",
"71 226 CURVE SMOOTH",
"70 233 OFFCURVE",
"67 236 OFFCURVE",
"62 236 CURVE SMOOTH",
"59 236 OFFCURVE",
"56 235 OFFCURVE",
"53 232 CURVE SMOOTH",
"50 229 OFFCURVE",
"49 226 OFFCURVE",
"49 221 CURVE SMOOTH",
"49 219 LINE SMOOTH",
"46 191 OFFCURVE",
"43 159 OFFCURVE",
"36 124 CURVE SMOOTH",
"33 109 OFFCURVE",
"30 93 OFFCURVE",
"28 78 CURVE SMOOTH",
"19 31 LINE",
"18 30 OFFCURVE",
"18 27 OFFCURVE",
"18 24 CURVE SMOOTH",
"18 9 OFFCURVE",
"24 2 OFFCURVE",
"35 2 CURVE SMOOTH"
);
}
);
};
guideLines = (
{
position = "{118, 249}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"38 2 OFFCURVE",
"42 3 OFFCURVE",
"46 5 CURVE SMOOTH",
"53 8 OFFCURVE",
"57 25 OFFCURVE",
"60 55 CURVE SMOOTH",
"66 120 LINE",
"71 140 OFFCURVE",
"80 162 OFFCURVE",
"95 186 CURVE SMOOTH",
"120 225 OFFCURVE",
"145 247 OFFCURVE",
"172 247 CURVE SMOOTH",
"191 247 OFFCURVE",
"200 237 OFFCURVE",
"200 217 CURVE SMOOTH",
"200 198 OFFCURVE",
"189 176 OFFCURVE",
"168 153 CURVE SMOOTH",
"145 128 OFFCURVE",
"128 97 OFFCURVE",
"128 62 CURVE SMOOTH",
"128 25 OFFCURVE",
"152 4 OFFCURVE",
"187 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"233 19 OFFCURVE",
"248 35 CURVE SMOOTH",
"264 52 OFFCURVE",
"285 79 OFFCURVE",
"300 114 CURVE",
"302 121 OFFCURVE",
"300 125 OFFCURVE",
"297 125 CURVE SMOOTH",
"295 125 OFFCURVE",
"293 123 OFFCURVE",
"291 119 CURVE SMOOTH",
"276 86 OFFCURVE",
"257 63 OFFCURVE",
"242 48 CURVE SMOOTH",
"229 35 OFFCURVE",
"210 19 OFFCURVE",
"191 19 CURVE SMOOTH",
"186 19 OFFCURVE",
"182 21 OFFCURVE",
"177 23 CURVE",
"167 29 OFFCURVE",
"162 42 OFFCURVE",
"162 59 CURVE SMOOTH",
"162 74 OFFCURVE",
"172 98 OFFCURVE",
"196 130 CURVE SMOOTH",
"216 156 OFFCURVE",
"226 180 OFFCURVE",
"226 201 CURVE SMOOTH",
"226 217 OFFCURVE",
"222 231 OFFCURVE",
"215 242 CURVE SMOOTH",
"206 257 OFFCURVE",
"191 265 OFFCURVE",
"172 266 CURVE SMOOTH",
"152 266 OFFCURVE",
"133 255 OFFCURVE",
"114 234 CURVE SMOOTH",
"98 218 OFFCURVE",
"87 202 OFFCURVE",
"71 163 CURVE",
"72 181 OFFCURVE",
"73 194 OFFCURVE",
"73 203 CURVE SMOOTH",
"73 212 OFFCURVE",
"72 219 OFFCURVE",
"71 226 CURVE SMOOTH",
"70 233 OFFCURVE",
"67 236 OFFCURVE",
"62 236 CURVE SMOOTH",
"59 236 OFFCURVE",
"56 235 OFFCURVE",
"53 232 CURVE SMOOTH",
"50 229 OFFCURVE",
"49 226 OFFCURVE",
"49 221 CURVE SMOOTH",
"49 219 LINE SMOOTH",
"49 191 OFFCURVE",
"43 159 OFFCURVE",
"36 124 CURVE SMOOTH",
"33 109 OFFCURVE",
"31 93 OFFCURVE",
"28 78 CURVE SMOOTH",
"19 31 LINE",
"18 30 OFFCURVE",
"18 27 OFFCURVE",
"18 24 CURVE SMOOTH",
"18 9 OFFCURVE",
"24 2 OFFCURVE",
"35 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01260 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 60 165 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 14 170 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01252 2 16 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 249;
}
);
note = n;
unicode = 006E;
},
{
glyphname = nacute;
lastChange = "2021-10-08 05:57:43 +0000";
layers = (
{
background = {
components = (
{
name = n;
},
{
name = acutecomb;
}
);
};
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 249;
}
);
unicode = 0144;
},
{
glyphname = ncaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = n;
},
{
name = caroncomb;
}
);
};
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 95, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 249;
}
);
unicode = 0148;
},
{
glyphname = ncommaaccent;
lastChange = "2021-10-08 05:57:43 +0000";
layers = (
{
background = {
components = (
{
name = n;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 249;
}
);
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"233 223 OFFCURVE",
"217 273 OFFCURVE",
"160 273 CURVE SMOOTH",
"121 273 OFFCURVE",
"89 240 OFFCURVE",
"74 198 CURVE",
"71 216 OFFCURVE",
"69 228 OFFCURVE",
"67 237 CURVE SMOOTH",
"65 246 OFFCURVE",
"63 253 OFFCURVE",
"60 259 CURVE SMOOTH",
"58 266 OFFCURVE",
"54 268 OFFCURVE",
"49 267 CURVE SMOOTH",
"46 266 OFFCURVE",
"44 265 OFFCURVE",
"41 261 CURVE SMOOTH",
"39 258 OFFCURVE",
"39 255 OFFCURVE",
"40 250 CURVE SMOOTH",
"40 248 LINE SMOOTH",
"46 220 OFFCURVE",
"47 188 OFFCURVE",
"48 152 CURVE SMOOTH",
"48 137 OFFCURVE",
"49 121 OFFCURVE",
"50 106 CURVE SMOOTH",
"51 58 LINE",
"50 56 OFFCURVE",
"51 54 OFFCURVE",
"51 51 CURVE SMOOTH",
"55 36 OFFCURVE",
"62 30 OFFCURVE",
"73 33 CURVE SMOOTH",
"76 33 OFFCURVE",
"79 35 OFFCURVE",
"83 38 CURVE SMOOTH",
"89 42 OFFCURVE",
"89 60 OFFCURVE",
"86 90 CURVE SMOOTH",
"78 166 OFFCURVE",
"93 254 OFFCURVE",
"160 254 CURVE SMOOTH",
"183 254 OFFCURVE",
"204 208 OFFCURVE",
"204 154 CURVE SMOOTH",
"204 -11 OFFCURVE",
"179 -155 OFFCURVE",
"103 -155 CURVE SMOOTH",
"57 -155 OFFCURVE",
"23 -108 OFFCURVE",
"23 -50 CURVE SMOOTH",
"23 -21 OFFCURVE",
"-3 -31 OFFCURVE",
"-3 -71 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"30 -174 OFFCURVE",
"87 -174 CURVE SMOOTH",
"204 -174 OFFCURVE",
"233 -21 OFFCURVE",
"233 143 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"204 -174 OFFCURVE",
"233 -21 OFFCURVE",
"233 143 CURVE SMOOTH",
"233 223 OFFCURVE",
"217 273 OFFCURVE",
"160 273 CURVE SMOOTH",
"121 273 OFFCURVE",
"89 240 OFFCURVE",
"74 198 CURVE",
"71 216 OFFCURVE",
"69 228 OFFCURVE",
"67 237 CURVE SMOOTH",
"65 246 OFFCURVE",
"63 253 OFFCURVE",
"60 259 CURVE SMOOTH",
"58 265 OFFCURVE",
"55 267 OFFCURVE",
"51 267 CURVE SMOOTH",
"49 267 LINE",
"46 266 OFFCURVE",
"44 265 OFFCURVE",
"41 261 CURVE SMOOTH",
"39 258 OFFCURVE",
"39 255 OFFCURVE",
"40 250 CURVE SMOOTH",
"40 248 LINE",
"46 220 OFFCURVE",
"47 188 OFFCURVE",
"48 152 CURVE SMOOTH",
"48 137 OFFCURVE",
"49 121 OFFCURVE",
"50 106 CURVE SMOOTH",
"51 58 LINE",
"50 56 OFFCURVE",
"51 54 OFFCURVE",
"51 51 CURVE",
"54 39 OFFCURVE",
"60 32 OFFCURVE",
"68 32 CURVE SMOOTH",
"69 32 OFFCURVE",
"71 32 OFFCURVE",
"73 33 CURVE",
"76 33 OFFCURVE",
"79 35 OFFCURVE",
"83 38 CURVE SMOOTH",
"87 40 OFFCURVE",
"88 47 OFFCURVE",
"88 59 CURVE SMOOTH",
"88 67 OFFCURVE",
"87 78 OFFCURVE",
"86 90 CURVE SMOOTH",
"85 102 OFFCURVE",
"84 114 OFFCURVE",
"84 127 CURVE SMOOTH",
"84 192 OFFCURVE",
"104 254 OFFCURVE",
"160 254 CURVE SMOOTH",
"183 254 OFFCURVE",
"204 208 OFFCURVE",
"204 154 CURVE SMOOTH",
"204 -11 OFFCURVE",
"179 -155 OFFCURVE",
"103 -155 CURVE SMOOTH",
"57 -155 OFFCURVE",
"23 -108 OFFCURVE",
"23 -50 CURVE SMOOTH",
"23 -39 OFFCURVE",
"19 -33 OFFCURVE",
"14 -33 CURVE SMOOTH",
"7 -33 OFFCURVE",
"-3 -47 OFFCURVE",
"-3 -71 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"30 -174 OFFCURVE",
"87 -174 CURVE SMOOTH"
);
}
);
width = 249;
}
);
unicode = 014B;
},
{
glyphname = nj;
lastChange = "2021-10-08 05:23:42 +0000";
layers = (
{
background = {
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
};
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 249, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 432;
}
);
unicode = 01CC;
},
{
glyphname = ntilde;
lastChange = "2021-10-08 05:57:43 +0000";
layers = (
{
background = {
components = (
{
name = n;
},
{
name = tildecomb;
}
);
};
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 98, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01260 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 60 165 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 14 170 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01287 2 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 2 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 249;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = o;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{104, 19}";
},
{
name = center;
position = "{132, 130}";
},
{
name = ogonek;
position = "{124, 26}";
},
{
name = top;
position = "{166, 260}";
},
{
name = topright;
position = "{174, 249}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"164 19 OFFCURVE",
"193 31 OFFCURVE",
"217 56 CURVE SMOOTH",
"242 82 OFFCURVE",
"254 112 OFFCURVE",
"254 146 CURVE SMOOTH",
"254 175 OFFCURVE",
"244 202 OFFCURVE",
"225 225 CURVE SMOOTH",
"205 249 OFFCURVE",
"182 261 OFFCURVE",
"155 261 CURVE SMOOTH",
"148 261 OFFCURVE",
"142 260 OFFCURVE",
"135 259 CURVE SMOOTH",
"120 255 OFFCURVE",
"108 248 OFFCURVE",
"98 237 CURVE SMOOTH",
"89 226 OFFCURVE",
"84 214 OFFCURVE",
"84 202 CURVE SMOOTH",
"84 197 OFFCURVE",
"85 191 OFFCURVE",
"88 183 CURVE",
"71 178 OFFCURVE",
"58 169 OFFCURVE",
"49 154 CURVE SMOOTH",
"40 139 OFFCURVE",
"35 120 OFFCURVE",
"35 98 CURVE SMOOTH",
"35 74 OFFCURVE",
"45 55 OFFCURVE",
"64 40 CURVE SMOOTH",
"82 26 OFFCURVE",
"104 19 OFFCURVE",
"130 19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 34 OFFCURVE",
"90 42 OFFCURVE",
"77 59 CURVE SMOOTH",
"66 73 OFFCURVE",
"60 90 OFFCURVE",
"60 111 CURVE SMOOTH",
"60 134 OFFCURVE",
"66 149 OFFCURVE",
"83 160 CURVE",
"96 131 OFFCURVE",
"111 119 OFFCURVE",
"130 119 CURVE SMOOTH",
"142 119 OFFCURVE",
"153 126 OFFCURVE",
"163 139 CURVE SMOOTH",
"164 140 OFFCURVE",
"165 142 OFFCURVE",
"165 144 CURVE",
"164 145 LINE",
"162 144 LINE",
"153 136 OFFCURVE",
"145 132 OFFCURVE",
"138 132 CURVE SMOOTH",
"136 132 LINE SMOOTH",
"126 132 OFFCURVE",
"118 137 OFFCURVE",
"112 147 CURVE SMOOTH",
"107 154 OFFCURVE",
"104 163 OFFCURVE",
"104 172 CURVE SMOOTH",
"104 190 OFFCURVE",
"109 204 OFFCURVE",
"120 215 CURVE SMOOTH",
"130 225 OFFCURVE",
"142 230 OFFCURVE",
"157 230 CURVE SMOOTH",
"177 230 OFFCURVE",
"194 221 OFFCURVE",
"207 202 CURVE SMOOTH",
"218 186 OFFCURVE",
"224 166 OFFCURVE",
"224 141 CURVE SMOOTH",
"224 113 OFFCURVE",
"215 89 OFFCURVE",
"197 68 CURVE SMOOTH",
"179 47 OFFCURVE",
"157 35 OFFCURVE",
"130 34 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"164 19 OFFCURVE",
"193 31 OFFCURVE",
"217 56 CURVE SMOOTH",
"242 82 OFFCURVE",
"254 112 OFFCURVE",
"254 146 CURVE SMOOTH",
"254 175 OFFCURVE",
"244 202 OFFCURVE",
"225 225 CURVE SMOOTH",
"205 249 OFFCURVE",
"182 261 OFFCURVE",
"155 261 CURVE SMOOTH",
"148 261 OFFCURVE",
"142 260 OFFCURVE",
"135 259 CURVE SMOOTH",
"120 255 OFFCURVE",
"108 248 OFFCURVE",
"98 237 CURVE SMOOTH",
"89 226 OFFCURVE",
"84 214 OFFCURVE",
"84 202 CURVE SMOOTH",
"84 197 OFFCURVE",
"85 191 OFFCURVE",
"88 183 CURVE",
"71 178 OFFCURVE",
"58 169 OFFCURVE",
"49 154 CURVE SMOOTH",
"40 139 OFFCURVE",
"35 120 OFFCURVE",
"35 98 CURVE SMOOTH",
"35 74 OFFCURVE",
"45 55 OFFCURVE",
"64 40 CURVE SMOOTH",
"82 26 OFFCURVE",
"104 19 OFFCURVE",
"130 19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 34 OFFCURVE",
"90 42 OFFCURVE",
"77 59 CURVE SMOOTH",
"66 73 OFFCURVE",
"60 90 OFFCURVE",
"60 111 CURVE SMOOTH",
"60 134 OFFCURVE",
"66 149 OFFCURVE",
"83 160 CURVE",
"96 131 OFFCURVE",
"111 119 OFFCURVE",
"130 119 CURVE SMOOTH",
"142 119 OFFCURVE",
"153 126 OFFCURVE",
"163 139 CURVE SMOOTH",
"164 140 OFFCURVE",
"165 142 OFFCURVE",
"165 144 CURVE",
"164 145 LINE",
"162 144 LINE",
"153 136 OFFCURVE",
"145 132 OFFCURVE",
"138 132 CURVE SMOOTH",
"136 132 LINE SMOOTH",
"126 132 OFFCURVE",
"118 137 OFFCURVE",
"112 147 CURVE SMOOTH",
"107 154 OFFCURVE",
"104 163 OFFCURVE",
"104 172 CURVE SMOOTH",
"104 190 OFFCURVE",
"109 204 OFFCURVE",
"120 215 CURVE SMOOTH",
"130 225 OFFCURVE",
"142 230 OFFCURVE",
"157 230 CURVE SMOOTH",
"177 230 OFFCURVE",
"194 221 OFFCURVE",
"207 202 CURVE SMOOTH",
"218 186 OFFCURVE",
"224 166 OFFCURVE",
"224 141 CURVE SMOOTH",
"224 113 OFFCURVE",
"215 89 OFFCURVE",
"197 68 CURVE SMOOTH",
"179 47 OFFCURVE",
"157 35 OFFCURVE",
"130 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01252 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = o;
unicode = 006F;
},
{
glyphname = oacute;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = acutecomb;
}
);
};
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 134, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01252 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = obreve;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = brevecomb;
}
);
};
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 94, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 014F;
},
{
glyphname = ocircumflex;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01252 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
}
);
};
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 83, 19}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
}
);
};
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
}
);
};
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
}
);
};
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 82, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ED7;
},
{
glyphname = odblgrave;
lastChange = "2021-10-08 06:19:34 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 32, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 020D;
},
{
glyphname = odieresis;
lastChange = "2021-10-08 06:30:52 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01223 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 4 76 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 4 60 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 66 170 66 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 70 165 70 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 2 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = odieresismacron;
lastChange = "2021-10-08 08:25:50 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
};
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 106, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 100, 47}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 022B;
},
{
glyphname = odotaccentmacron;
lastChange = "2021-10-08 08:25:45 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dotaccentcomb;
},
{
name = macroncomb;
}
);
};
components = (
{
name = o;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 145, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 96, 45}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 0231;
},
{
glyphname = odotbelow;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 83, 19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ECD;
},
{
glyphname = ograve;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = gravecomb;
}
);
};
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 98, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01252 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ohookabove;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = horncomb;
}
);
};
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 191, -11}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = ohorn;
},
{
name = acutecomb;
}
);
};
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 134, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 83, 19}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = ohorn;
},
{
name = gravecomb;
}
);
};
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 98, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = ohorn;
},
{
name = tildecomb;
}
);
};
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = hungarumlautcomb;
}
);
};
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 0151;
},
{
glyphname = oinvertedbreve;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 88, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 020F;
},
{
glyphname = omacron;
lastChange = "2021-10-08 06:59:31 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = macroncomb;
}
);
};
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 92, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 014D;
},
{
glyphname = oogonek;
lastChange = "2021-10-08 05:58:08 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 45, 21}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 01EB;
},
{
color = 0;
glyphname = oslash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{147, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"158.667 17 OFFCURVE",
"191.667 34 OFFCURVE",
"217 68 CURVE",
"260.333 74.667 OFFCURVE",
"291.667 97.333 OFFCURVE",
"311 136 CURVE SMOOTH",
"311.667 137.333 OFFCURVE",
"312 139.667 OFFCURVE",
"312 143 CURVE",
"313 143 LINE",
"313 147.667 OFFCURVE",
"311.333 150 OFFCURVE",
"308 150 CURVE SMOOTH",
"307.333 150 OFFCURVE",
"306 148.667 OFFCURVE",
"304 146 CURVE",
"286.667 112 OFFCURVE",
"260 89.667 OFFCURVE",
"224 79 CURVE",
"237.333 105.667 OFFCURVE",
"242 124 OFFCURVE",
"242 144 CURVE SMOOTH",
"242 174 OFFCURVE",
"232.667 200.333 OFFCURVE",
"214 223 CURVE SMOOTH",
"194 247.667 OFFCURVE",
"170.667 260 OFFCURVE",
"144 260 CURVE SMOOTH",
"136.667 260 OFFCURVE",
"130 259 OFFCURVE",
"124 257 CURVE SMOOTH",
"105.333 253 OFFCURVE",
"91.667 244 OFFCURVE",
"83 230 CURVE SMOOTH",
"74.333 218.667 OFFCURVE",
"70 205 OFFCURVE",
"70 189 CURVE SMOOTH",
"70 180 LINE",
"39.333 166 OFFCURVE",
"24 138.333 OFFCURVE",
"24 97 CURVE SMOOTH",
"24 73 OFFCURVE",
"33.333 53.667 OFFCURVE",
"52 39 CURVE SMOOTH",
"69.333 24.333 OFFCURVE",
"91.333 17 OFFCURVE",
"118 17 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 33 OFFCURVE",
"79 41 OFFCURVE",
"65 58 CURVE SMOOTH",
"53.667 72.667 OFFCURVE",
"48 90 OFFCURVE",
"48 110 CURVE SMOOTH",
"48 130 OFFCURVE",
"55.333 146 OFFCURVE",
"70 158 CURVE",
"74 127.333 OFFCURVE",
"87.333 109 OFFCURVE",
"110 93 CURVE SMOOTH",
"130 78.333 OFFCURVE",
"152.667 69.667 OFFCURVE",
"186 67 CURVE",
"163 42 OFFCURVE",
"141 33 OFFCURVE",
"116 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167.333 77.667 OFFCURVE",
"144.333 85.333 OFFCURVE",
"125 100 CURVE SMOOTH",
"103 114.667 OFFCURVE",
"92 134 OFFCURVE",
"92 158 CURVE SMOOTH",
"92 205 OFFCURVE",
"109 228 OFFCURVE",
"144 228 CURVE SMOOTH",
"166 228 OFFCURVE",
"183 219 OFFCURVE",
"195 200 CURVE SMOOTH",
"207 182.667 OFFCURVE",
"213 162.333 OFFCURVE",
"213 139 CURVE SMOOTH",
"213 117 OFFCURVE",
"206.667 96.333 OFFCURVE",
"194 77 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"56 -22 OFFCURVE",
"57 -22 OFFCURVE",
"57 -21 CURVE",
"100 47 OFFCURVE",
"169 158 OFFCURVE",
"251 288 CURVE",
"252 289 OFFCURVE",
"252 290 OFFCURVE",
"252 292 CURVE SMOOTH",
"252 297 OFFCURVE",
"249 300 OFFCURVE",
"244 300 CURVE SMOOTH",
"242 300 OFFCURVE",
"240 299 OFFCURVE",
"238 296 CURVE SMOOTH",
"142 174 OFFCURVE",
"62 55 OFFCURVE",
"32 -4 CURVE SMOOTH",
"31 -6 LINE",
"31 -14 OFFCURVE",
"44 -22 OFFCURVE",
"53 -22 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 33 OFFCURVE",
"79 41 OFFCURVE",
"65 58 CURVE SMOOTH",
"54 73 OFFCURVE",
"48 90 OFFCURVE",
"48 110 CURVE SMOOTH",
"48 130 OFFCURVE",
"55 146 OFFCURVE",
"70 158 CURVE",
"74 127 OFFCURVE",
"87 109 OFFCURVE",
"110 93 CURVE SMOOTH",
"130 78 OFFCURVE",
"153 70 OFFCURVE",
"186 67 CURVE",
"163 42 OFFCURVE",
"141 33 OFFCURVE",
"116 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167 78 OFFCURVE",
"144 85 OFFCURVE",
"125 100 CURVE SMOOTH",
"103 115 OFFCURVE",
"92 134 OFFCURVE",
"92 158 CURVE SMOOTH",
"92 205 OFFCURVE",
"109 228 OFFCURVE",
"144 228 CURVE SMOOTH",
"166 228 OFFCURVE",
"183 219 OFFCURVE",
"195 200 CURVE SMOOTH",
"207 183 OFFCURVE",
"213 162 OFFCURVE",
"213 139 CURVE SMOOTH",
"213 117 OFFCURVE",
"207 96 OFFCURVE",
"194 77 CURVE"
);
},
{
closed = 1;
nodes = (
"159 17 OFFCURVE",
"192 34 OFFCURVE",
"217 68 CURVE",
"260 75 OFFCURVE",
"292 97 OFFCURVE",
"311 136 CURVE",
"312 137 OFFCURVE",
"312 140 OFFCURVE",
"312 143 CURVE",
"313 143 LINE",
"313 148 OFFCURVE",
"311 150 OFFCURVE",
"308 150 CURVE SMOOTH",
"307 150 OFFCURVE",
"306 149 OFFCURVE",
"304 146 CURVE SMOOTH",
"287 112 OFFCURVE",
"260 90 OFFCURVE",
"224 79 CURVE",
"237 106 OFFCURVE",
"242 124 OFFCURVE",
"242 144 CURVE SMOOTH",
"242 174 OFFCURVE",
"233 200 OFFCURVE",
"214 223 CURVE SMOOTH",
"194 248 OFFCURVE",
"171 260 OFFCURVE",
"144 260 CURVE SMOOTH",
"137 260 OFFCURVE",
"130 259 OFFCURVE",
"124 257 CURVE SMOOTH",
"105 253 OFFCURVE",
"92 244 OFFCURVE",
"83 230 CURVE SMOOTH",
"74 219 OFFCURVE",
"70 205 OFFCURVE",
"70 189 CURVE SMOOTH",
"70 180 LINE",
"39 166 OFFCURVE",
"24 138 OFFCURVE",
"24 97 CURVE SMOOTH",
"24 73 OFFCURVE",
"33 54 OFFCURVE",
"52 39 CURVE SMOOTH",
"69 24 OFFCURVE",
"91 17 OFFCURVE",
"118 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01221 3 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 3 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 21 170 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01226 23 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 39 165 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01245 10 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 53 165 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01219 2 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01257 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = oslashacute;
lastChange = "2021-10-08 06:05:15 +0000";
layers = (
{
background = {
components = (
{
name = oslash;
},
{
name = acutecomb;
}
);
};
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 264;
}
);
unicode = 01FF;
},
{
glyphname = otilde;
lastChange = "2021-10-08 06:00:28 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = tildecomb;
}
);
};
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 23 170 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01252 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 2 66 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 2 62 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 1 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = otildemacron;
lastChange = "2021-10-08 06:01:35 +0000";
layers = (
{
background = {
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
}
);
};
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 263;
}
);
unicode = 022D;
},
{
glyphname = oe;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"376 26 OFFCURVE",
"426 53 OFFCURVE",
"426 108 CURVE SMOOTH",
"426 128 OFFCURVE",
"414 145 OFFCURVE",
"401 145 CURVE SMOOTH",
"397 145 OFFCURVE",
"394 141 OFFCURVE",
"394 139 CURVE SMOOTH",
"394 136 OFFCURVE",
"396 134 OFFCURVE",
"399 132 CURVE SMOOTH",
"407 128 OFFCURVE",
"411 120 OFFCURVE",
"411 110 CURVE SMOOTH",
"411 83 OFFCURVE",
"384 45 OFFCURVE",
"334 45 CURVE SMOOTH",
"276.197 45 OFFCURVE",
"255 97.358 OFFCURVE",
"255 152 CURVE SMOOTH",
"255 174.667 OFFCURVE",
"257 190.667 OFFCURVE",
"265 204 CURVE",
"275 185 OFFCURVE",
"296 176 OFFCURVE",
"319 176 CURVE SMOOTH",
"342 176 OFFCURVE",
"366 185 OFFCURVE",
"380 201 CURVE SMOOTH",
"394 217 OFFCURVE",
"401 235 OFFCURVE",
"401 252 CURVE SMOOTH",
"401 279 OFFCURVE",
"381 302 OFFCURVE",
"345 302 CURVE SMOOTH",
"336 302 OFFCURVE",
"325 300 OFFCURVE",
"313 297 CURVE SMOOTH",
"289 289 OFFCURVE",
"269 274.333 OFFCURVE",
"253 253 CURVE SMOOTH",
"249 247.667 OFFCURVE",
"244.667 240.667 OFFCURVE",
"240 232 CURVE",
"235.333 240.667 OFFCURVE",
"230.333 248.333 OFFCURVE",
"225 255 CURVE SMOOTH",
"205 279 OFFCURVE",
"181.667 291 OFFCURVE",
"155 291 CURVE SMOOTH",
"148.333 291 OFFCURVE",
"141.667 290.333 OFFCURVE",
"135 289 CURVE SMOOTH",
"120.333 285 OFFCURVE",
"108 277.667 OFFCURVE",
"98 267 CURVE SMOOTH",
"88.667 255.667 OFFCURVE",
"84 244 OFFCURVE",
"84 232 CURVE SMOOTH",
"84 227.333 OFFCURVE",
"85.333 221 OFFCURVE",
"88 213 CURVE",
"71.333 208.333 OFFCURVE",
"58.333 198.667 OFFCURVE",
"49 184 CURVE SMOOTH",
"39.667 168.667 OFFCURVE",
"35 150 OFFCURVE",
"35 128 CURVE SMOOTH",
"35 104 OFFCURVE",
"44.667 84.667 OFFCURVE",
"64 70 CURVE SMOOTH",
"82 56 OFFCURVE",
"104 49 OFFCURVE",
"130 49 CURVE SMOOTH",
"164 49 OFFCURVE",
"193 61.333 OFFCURVE",
"217 86 CURVE SMOOTH",
"221 90 OFFCURVE",
"225 94.667 OFFCURVE",
"229 100 CURVE",
"242 57 OFFCURVE",
"273 26 OFFCURVE",
"326 26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107.333 64 OFFCURVE",
"89.667 72.333 OFFCURVE",
"77 89 CURVE SMOOTH",
"65.667 103 OFFCURVE",
"60 120.333 OFFCURVE",
"60 141 CURVE SMOOTH",
"60 163.667 OFFCURVE",
"65.667 179.333 OFFCURVE",
"83 190 CURVE",
"96.333 160.667 OFFCURVE",
"111.333 149 OFFCURVE",
"130 149 CURVE SMOOTH",
"142 149 OFFCURVE",
"153 155.667 OFFCURVE",
"163 169 CURVE SMOOTH",
"164.333 170.333 OFFCURVE",
"165 172 OFFCURVE",
"165 174 CURVE",
"164 175 LINE",
"162 174 LINE",
"153 166 OFFCURVE",
"145 162 OFFCURVE",
"138 162 CURVE SMOOTH",
"136 162 LINE SMOOTH",
"126 162 OFFCURVE",
"118 167 OFFCURVE",
"112 177 CURVE SMOOTH",
"106.667 184.333 OFFCURVE",
"104 192.667 OFFCURVE",
"104 202 CURVE SMOOTH",
"104 220 OFFCURVE",
"109.333 234.333 OFFCURVE",
"120 245 CURVE SMOOTH",
"130 255 OFFCURVE",
"142.333 260 OFFCURVE",
"157 260 CURVE SMOOTH",
"177 260 OFFCURVE",
"193.667 250.667 OFFCURVE",
"207 232 CURVE SMOOTH",
"216.333 217.333 OFFCURVE",
"222 201 OFFCURVE",
"224 183 CURVE",
"222 171 OFFCURVE",
"221 158.333 OFFCURVE",
"221 145 CURVE",
"217 127.667 OFFCURVE",
"209 112 OFFCURVE",
"197 98 CURVE SMOOTH",
"179 76.667 OFFCURVE",
"156.667 65.333 OFFCURVE",
"130 64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"352 203 OFFCURVE",
"336 198 OFFCURVE",
"320 198 CURVE SMOOTH",
"296 198 OFFCURVE",
"273 210 OFFCURVE",
"273 226 CURVE",
"279 242.667 OFFCURVE",
"287.667 255.667 OFFCURVE",
"299 265 CURVE SMOOTH",
"311.667 275.667 OFFCURVE",
"325.667 281 OFFCURVE",
"341 281 CURVE SMOOTH",
"347 281 LINE SMOOTH",
"366.333 279 OFFCURVE",
"376 268.333 OFFCURVE",
"376 249 CURVE SMOOTH",
"376 236.333 OFFCURVE",
"371.333 224.667 OFFCURVE",
"362 214 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"376 26 OFFCURVE",
"426 53 OFFCURVE",
"426 108 CURVE SMOOTH",
"426 128 OFFCURVE",
"414 145 OFFCURVE",
"401 145 CURVE SMOOTH",
"397 145 OFFCURVE",
"394 141 OFFCURVE",
"394 139 CURVE SMOOTH",
"394 136 OFFCURVE",
"396 134 OFFCURVE",
"399 132 CURVE SMOOTH",
"407 128 OFFCURVE",
"411 120 OFFCURVE",
"411 110 CURVE SMOOTH",
"411 83 OFFCURVE",
"384 45 OFFCURVE",
"334 45 CURVE SMOOTH",
"276 45 OFFCURVE",
"255 97 OFFCURVE",
"255 152 CURVE SMOOTH",
"255 175 OFFCURVE",
"257 191 OFFCURVE",
"265 204 CURVE",
"275 185 OFFCURVE",
"296 176 OFFCURVE",
"319 176 CURVE SMOOTH",
"342 176 OFFCURVE",
"366 185 OFFCURVE",
"380 201 CURVE SMOOTH",
"394 217 OFFCURVE",
"401 235 OFFCURVE",
"401 252 CURVE SMOOTH",
"401 279 OFFCURVE",
"381 302 OFFCURVE",
"345 302 CURVE SMOOTH",
"336 302 OFFCURVE",
"325 300 OFFCURVE",
"313 297 CURVE SMOOTH",
"289 289 OFFCURVE",
"269 274 OFFCURVE",
"253 253 CURVE SMOOTH",
"249 248 OFFCURVE",
"245 241 OFFCURVE",
"240 232 CURVE",
"235 241 OFFCURVE",
"230 248 OFFCURVE",
"225 255 CURVE SMOOTH",
"205 279 OFFCURVE",
"182 291 OFFCURVE",
"155 291 CURVE SMOOTH",
"148 291 OFFCURVE",
"142 290 OFFCURVE",
"135 289 CURVE SMOOTH",
"120 285 OFFCURVE",
"108 278 OFFCURVE",
"98 267 CURVE SMOOTH",
"89 256 OFFCURVE",
"84 244 OFFCURVE",
"84 232 CURVE SMOOTH",
"84 227 OFFCURVE",
"85 221 OFFCURVE",
"88 213 CURVE",
"71 208 OFFCURVE",
"58 199 OFFCURVE",
"49 184 CURVE SMOOTH",
"40 169 OFFCURVE",
"35 150 OFFCURVE",
"35 128 CURVE SMOOTH",
"35 104 OFFCURVE",
"45 85 OFFCURVE",
"64 70 CURVE SMOOTH",
"82 56 OFFCURVE",
"104 49 OFFCURVE",
"130 49 CURVE SMOOTH",
"164 49 OFFCURVE",
"193 61 OFFCURVE",
"217 86 CURVE SMOOTH",
"221 90 OFFCURVE",
"225 95 OFFCURVE",
"229 100 CURVE",
"242 57 OFFCURVE",
"273 26 OFFCURVE",
"326 26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 64 OFFCURVE",
"90 72 OFFCURVE",
"77 89 CURVE SMOOTH",
"66 103 OFFCURVE",
"60 120 OFFCURVE",
"60 141 CURVE SMOOTH",
"60 164 OFFCURVE",
"66 179 OFFCURVE",
"83 190 CURVE",
"96 161 OFFCURVE",
"111 149 OFFCURVE",
"130 149 CURVE SMOOTH",
"142 149 OFFCURVE",
"153 156 OFFCURVE",
"163 169 CURVE SMOOTH",
"164 170 OFFCURVE",
"165 172 OFFCURVE",
"165 174 CURVE",
"164 175 LINE",
"162 174 LINE",
"153 166 OFFCURVE",
"145 162 OFFCURVE",
"138 162 CURVE SMOOTH",
"136 162 LINE SMOOTH",
"126 162 OFFCURVE",
"118 167 OFFCURVE",
"112 177 CURVE SMOOTH",
"107 184 OFFCURVE",
"104 193 OFFCURVE",
"104 202 CURVE SMOOTH",
"104 220 OFFCURVE",
"109 234 OFFCURVE",
"120 245 CURVE SMOOTH",
"130 255 OFFCURVE",
"142 260 OFFCURVE",
"157 260 CURVE SMOOTH",
"177 260 OFFCURVE",
"194 251 OFFCURVE",
"207 232 CURVE SMOOTH",
"216 217 OFFCURVE",
"222 201 OFFCURVE",
"224 183 CURVE",
"222 171 OFFCURVE",
"221 158 OFFCURVE",
"221 145 CURVE",
"217 128 OFFCURVE",
"209 112 OFFCURVE",
"197 98 CURVE SMOOTH",
"179 77 OFFCURVE",
"157 65 OFFCURVE",
"130 64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"296 198 OFFCURVE",
"273 210 OFFCURVE",
"273 226 CURVE",
"279 243 OFFCURVE",
"288 256 OFFCURVE",
"299 265 CURVE SMOOTH",
"312 276 OFFCURVE",
"326 281 OFFCURVE",
"341 281 CURVE SMOOTH",
"347 281 LINE SMOOTH",
"366 279 OFFCURVE",
"376 268 OFFCURVE",
"376 249 CURVE SMOOTH",
"376 236 OFFCURVE",
"371 225 OFFCURVE",
"362 214 CURVE SMOOTH",
"352 203 OFFCURVE",
"336 198 OFFCURVE",
"320 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012118 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 104 170 104 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01298 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01221 54 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01271 54 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01285 54 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01214 1 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 42 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01250 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01233 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 452;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"72 -235 OFFCURVE",
"87 -219 OFFCURVE",
"101 -188 CURVE SMOOTH",
"110 -167 OFFCURVE",
"117 -144 OFFCURVE",
"122 -119 CURVE SMOOTH",
"126 -92 OFFCURVE",
"129 -64 OFFCURVE",
"129 -33 CURVE SMOOTH",
"129 26 OFFCURVE",
"121 79 OFFCURVE",
"106 132 CURVE",
"138 183 OFFCURVE",
"170 209 OFFCURVE",
"203 209 CURVE SMOOTH",
"220 209 OFFCURVE",
"234 201 OFFCURVE",
"245 184 CURVE SMOOTH",
"255 169 OFFCURVE",
"259 149 OFFCURVE",
"259 125 CURVE SMOOTH",
"259 90 OFFCURVE",
"252 64 OFFCURVE",
"236 43 CURVE SMOOTH",
"224 28 OFFCURVE",
"210 20 OFFCURVE",
"194 20 CURVE SMOOTH",
"172 20 OFFCURVE",
"160 32 OFFCURVE",
"158 55 CURVE SMOOTH",
"158 58 OFFCURVE",
"156 60 OFFCURVE",
"152 60 CURVE SMOOTH",
"148 60 OFFCURVE",
"146 58 OFFCURVE",
"146 55 CURVE SMOOTH",
"146 39 OFFCURVE",
"151 27 OFFCURVE",
"161 18 CURVE SMOOTH",
"170 9 OFFCURVE",
"181 5 OFFCURVE",
"196 5 CURVE SMOOTH",
"216 5 OFFCURVE",
"234 13 OFFCURVE",
"249 28 CURVE SMOOTH",
"268 47 OFFCURVE",
"280 72 OFFCURVE",
"287 105 CURVE SMOOTH",
"291 122 OFFCURVE",
"293 137 OFFCURVE",
"293 152 CURVE SMOOTH",
"293 208 OFFCURVE",
"271 244 OFFCURVE",
"212 244 CURVE SMOOTH",
"169 244 OFFCURVE",
"132 221 OFFCURVE",
"95 166 CURVE",
"82 201 OFFCURVE",
"70 222 OFFCURVE",
"55 239 CURVE",
"54 239 LINE SMOOTH",
"53 239 OFFCURVE",
"53 239 OFFCURVE",
"53 240 CURVE",
"52 240 LINE SMOOTH",
"48 240 OFFCURVE",
"44 238 OFFCURVE",
"39 234 CURVE SMOOTH",
"34 229 OFFCURVE",
"32 225 OFFCURVE",
"32 220 CURVE SMOOTH",
"32 216 OFFCURVE",
"34 212 OFFCURVE",
"37 207 CURVE SMOOTH",
"51 185 OFFCURVE",
"64 158 OFFCURVE",
"77 126 CURVE",
"50 51 OFFCURVE",
"31 -23 OFFCURVE",
"19 -94 CURVE SMOOTH",
"15 -119 OFFCURVE",
"12 -141 OFFCURVE",
"12 -160 CURVE SMOOTH",
"12 -208 OFFCURVE",
"26 -231 OFFCURVE",
"50 -234 CURVE",
"51 -235 OFFCURVE",
"53 -235 OFFCURVE",
"55 -235 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"33 -221 OFFCURVE",
"27 -200 OFFCURVE",
"27 -167 CURVE SMOOTH",
"27 -152 OFFCURVE",
"30 -128 OFFCURVE",
"34 -96 CURVE SMOOTH",
"45 -24 OFFCURVE",
"60 37 OFFCURVE",
"87 97 CURVE",
"103 40 OFFCURVE",
"110 -7 OFFCURVE",
"110 -54 CURVE SMOOTH",
"110 -73 OFFCURVE",
"109 -90 OFFCURVE",
"106 -109 CURVE SMOOTH",
"103 -131 OFFCURVE",
"98 -152 OFFCURVE",
"91 -173 CURVE SMOOTH",
"86 -190 OFFCURVE",
"80 -204 OFFCURVE",
"74 -213 CURVE SMOOTH",
"68 -220 OFFCURVE",
"61 -224 OFFCURVE",
"54 -224 CURVE SMOOTH",
"52 -224 LINE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"72 -235 OFFCURVE",
"87 -219 OFFCURVE",
"101 -188 CURVE SMOOTH",
"110 -167 OFFCURVE",
"117 -144 OFFCURVE",
"122 -119 CURVE SMOOTH",
"126 -92 OFFCURVE",
"129 -64 OFFCURVE",
"129 -33 CURVE SMOOTH",
"129 26 OFFCURVE",
"121 79 OFFCURVE",
"106 132 CURVE",
"138 183 OFFCURVE",
"170 209 OFFCURVE",
"203 209 CURVE SMOOTH",
"220 209 OFFCURVE",
"234 201 OFFCURVE",
"245 184 CURVE SMOOTH",
"255 169 OFFCURVE",
"259 149 OFFCURVE",
"259 125 CURVE SMOOTH",
"259 90 OFFCURVE",
"252 64 OFFCURVE",
"236 43 CURVE SMOOTH",
"224 28 OFFCURVE",
"210 20 OFFCURVE",
"194 20 CURVE SMOOTH",
"172 20 OFFCURVE",
"160 32 OFFCURVE",
"158 55 CURVE SMOOTH",
"158 58 OFFCURVE",
"156 60 OFFCURVE",
"152 60 CURVE SMOOTH",
"148 60 OFFCURVE",
"146 58 OFFCURVE",
"146 55 CURVE SMOOTH",
"146 39 OFFCURVE",
"151 27 OFFCURVE",
"161 18 CURVE SMOOTH",
"170 9 OFFCURVE",
"181 5 OFFCURVE",
"196 5 CURVE SMOOTH",
"216 5 OFFCURVE",
"234 13 OFFCURVE",
"249 28 CURVE SMOOTH",
"268 47 OFFCURVE",
"280 72 OFFCURVE",
"287 105 CURVE SMOOTH",
"291 122 OFFCURVE",
"293 137 OFFCURVE",
"293 152 CURVE SMOOTH",
"293 208 OFFCURVE",
"271 244 OFFCURVE",
"212 244 CURVE SMOOTH",
"169 244 OFFCURVE",
"132 221 OFFCURVE",
"95 166 CURVE",
"82 201 OFFCURVE",
"70 222 OFFCURVE",
"55 239 CURVE",
"54 239 LINE SMOOTH",
"53 239 OFFCURVE",
"53 239 OFFCURVE",
"53 240 CURVE",
"52 240 LINE SMOOTH",
"48 240 OFFCURVE",
"44 238 OFFCURVE",
"39 234 CURVE SMOOTH",
"34 229 OFFCURVE",
"32 225 OFFCURVE",
"32 220 CURVE SMOOTH",
"32 216 OFFCURVE",
"34 212 OFFCURVE",
"37 207 CURVE SMOOTH",
"51 185 OFFCURVE",
"64 158 OFFCURVE",
"77 126 CURVE",
"50 51 OFFCURVE",
"31 -23 OFFCURVE",
"19 -94 CURVE SMOOTH",
"15 -119 OFFCURVE",
"12 -141 OFFCURVE",
"12 -160 CURVE SMOOTH",
"12 -208 OFFCURVE",
"26 -231 OFFCURVE",
"50 -234 CURVE",
"51 -235 OFFCURVE",
"53 -235 OFFCURVE",
"55 -235 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"33 -221 OFFCURVE",
"27 -200 OFFCURVE",
"27 -167 CURVE SMOOTH",
"27 -152 OFFCURVE",
"30 -128 OFFCURVE",
"34 -96 CURVE SMOOTH",
"45 -24 OFFCURVE",
"60 37 OFFCURVE",
"87 97 CURVE",
"103 40 OFFCURVE",
"110 -7 OFFCURVE",
"110 -54 CURVE SMOOTH",
"110 -73 OFFCURVE",
"109 -90 OFFCURVE",
"106 -109 CURVE SMOOTH",
"103 -131 OFFCURVE",
"98 -152 OFFCURVE",
"91 -173 CURVE SMOOTH",
"86 -190 OFFCURVE",
"80 -204 OFFCURVE",
"74 -213 CURVE SMOOTH",
"68 -220 OFFCURVE",
"61 -224 OFFCURVE",
"54 -224 CURVE SMOOTH",
"52 -224 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01229 3 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01276 3 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 10 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 14 229 14 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012154 20 170 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 76 22 76 38 76 54 76 70 76 86 76 102 76 118 76 134 76 150 76 166 76 182 76 198 76 214 76 230 76 246 76 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 76 22 76 38 76 54 76 70 76 86 76 102 76 118 76 134 76 150 76 166 76 182 76 198 76 214 76 230 76 246 76 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 76 22 76 38 76 54 76 70 76 86 76 102 76 118 76 134 76 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 76 165 76 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01261 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01270 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01254 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01257 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01216 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01224 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 24 24 24 40 24 56 24 72 24 88 24 104 24 120 24 136 24 152 24 168 24 184 24 200 24 216 24 232 24 248 24 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 24 24 24 40 24 56 24 72 24 88 24 104 24 120 24 136 24 152 24 168 24 184 24 200 24 216 24 232 24 248 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 24 24 24 40 24 56 24 72 24 88 24 104 24 120 24 136 24 152 24 168 24 184 24 200 24 216 24 232 24 248 24 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 294;
}
);
note = p;
unicode = 0070;
},
{
glyphname = thorn;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"205 279 OFFCURVE",
"182 291 OFFCURVE",
"155 291 CURVE SMOOTH",
"148 291 OFFCURVE",
"142 290 OFFCURVE",
"135 289 CURVE SMOOTH",
"120 285 OFFCURVE",
"108 278 OFFCURVE",
"98 267 CURVE SMOOTH",
"93 261 OFFCURVE",
"89 254 OFFCURVE",
"86 247 CURVE",
"93 284 OFFCURVE",
"99 320 OFFCURVE",
"106 352 CURVE SMOOTH",
"122 429 LINE SMOOTH",
"124 439 OFFCURVE",
"108 449 OFFCURVE",
"95 449 CURVE SMOOTH",
"87 449 OFFCURVE",
"81 446 OFFCURVE",
"79 439 CURVE SMOOTH",
"57 332 OFFCURVE",
"42 238 OFFCURVE",
"28 108 CURVE SMOOTH",
"25 77 OFFCURVE",
"23 45 OFFCURVE",
"23 13 CURVE SMOOTH",
"23 -78 OFFCURVE",
"37 -161 OFFCURVE",
"71 -196 CURVE SMOOTH",
"83 -209 OFFCURVE",
"99 -217 OFFCURVE",
"115 -217 CURVE SMOOTH",
"128 -217 OFFCURVE",
"141 -212 OFFCURVE",
"153 -201 CURVE SMOOTH",
"157 -197 OFFCURVE",
"161 -192 OFFCURVE",
"164 -185 CURVE",
"168 -179 OFFCURVE",
"166 -174 OFFCURVE",
"163 -174 CURVE SMOOTH",
"162 -174 OFFCURVE",
"160 -175 OFFCURVE",
"158 -177 CURVE SMOOTH",
"154 -183 OFFCURVE",
"150 -187 OFFCURVE",
"146 -190 CURVE SMOOTH",
"136 -198 OFFCURVE",
"126 -201 OFFCURVE",
"117 -201 CURVE SMOOTH",
"105 -201 OFFCURVE",
"93 -194 OFFCURVE",
"85 -185 CURVE SMOOTH",
"63 -159 OFFCURVE",
"55 -110 OFFCURVE",
"55 -50 CURVE SMOOTH",
"55 -37 OFFCURVE",
"55 -24 OFFCURVE",
"56 -11 CURVE SMOOTH",
"57 16 OFFCURVE",
"59 43 OFFCURVE",
"62 72 CURVE",
"64 70 LINE SMOOTH",
"80 54 OFFCURVE",
"104 49 OFFCURVE",
"130 49 CURVE SMOOTH",
"164 49 OFFCURVE",
"193 61 OFFCURVE",
"217 86 CURVE SMOOTH",
"242 112 OFFCURVE",
"254 142 OFFCURVE",
"254 176 CURVE SMOOTH",
"254 205 OFFCURVE",
"244 232 OFFCURVE",
"225 255 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 77 OFFCURVE",
"157 65 OFFCURVE",
"130 64 CURVE SMOOTH",
"107 64 OFFCURVE",
"90 72 OFFCURVE",
"77 89 CURVE SMOOTH",
"73 95 OFFCURVE",
"69 101 OFFCURVE",
"66 108 CURVE",
"66 110 OFFCURVE",
"67 112 OFFCURVE",
"67 114 CURVE SMOOTH",
"70 138 OFFCURVE",
"73 162 OFFCURVE",
"77 185 CURVE SMOOTH",
"78 191 OFFCURVE",
"79 195 OFFCURVE",
"80 195 CURVE SMOOTH",
"81 195 OFFCURVE",
"82 193 OFFCURVE",
"83 190 CURVE SMOOTH",
"96 161 OFFCURVE",
"111 149 OFFCURVE",
"130 149 CURVE SMOOTH",
"142 149 OFFCURVE",
"153 156 OFFCURVE",
"163 169 CURVE SMOOTH",
"164 170 OFFCURVE",
"165 172 OFFCURVE",
"165 174 CURVE",
"164 175 LINE",
"162 174 LINE",
"153 166 OFFCURVE",
"145 162 OFFCURVE",
"138 162 CURVE SMOOTH",
"136 162 LINE SMOOTH",
"126 162 OFFCURVE",
"118 167 OFFCURVE",
"112 177 CURVE SMOOTH",
"107 184 OFFCURVE",
"104 193 OFFCURVE",
"104 202 CURVE SMOOTH",
"104 220 OFFCURVE",
"109 234 OFFCURVE",
"120 245 CURVE SMOOTH",
"130 255 OFFCURVE",
"142 260 OFFCURVE",
"157 260 CURVE SMOOTH",
"177 260 OFFCURVE",
"194 251 OFFCURVE",
"207 232 CURVE SMOOTH",
"218 216 OFFCURVE",
"224 196 OFFCURVE",
"224 171 CURVE SMOOTH",
"224 143 OFFCURVE",
"215 119 OFFCURVE",
"197 98 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"128 -217 OFFCURVE",
"141 -212 OFFCURVE",
"153 -201 CURVE SMOOTH",
"157 -197 OFFCURVE",
"161 -192 OFFCURVE",
"164 -185 CURVE",
"168 -179 OFFCURVE",
"166 -174 OFFCURVE",
"163 -174 CURVE SMOOTH",
"162 -174 OFFCURVE",
"160 -175 OFFCURVE",
"158 -177 CURVE SMOOTH",
"154 -183 OFFCURVE",
"150 -187 OFFCURVE",
"146 -190 CURVE SMOOTH",
"136 -198 OFFCURVE",
"126 -201 OFFCURVE",
"117 -201 CURVE SMOOTH",
"105 -201 OFFCURVE",
"93 -194 OFFCURVE",
"85 -185 CURVE SMOOTH",
"63 -159 OFFCURVE",
"55 -110 OFFCURVE",
"55 -50 CURVE SMOOTH",
"55 -37 OFFCURVE",
"55 -24 OFFCURVE",
"56 -11 CURVE SMOOTH",
"57 16 OFFCURVE",
"59 43 OFFCURVE",
"62 72 CURVE",
"64 70 LINE SMOOTH",
"80 54 OFFCURVE",
"104 49 OFFCURVE",
"130 49 CURVE SMOOTH",
"164 49 OFFCURVE",
"193 61 OFFCURVE",
"217 86 CURVE SMOOTH",
"242 112 OFFCURVE",
"254 142 OFFCURVE",
"254 176 CURVE SMOOTH",
"254 205 OFFCURVE",
"244 232 OFFCURVE",
"225 255 CURVE SMOOTH",
"205 279 OFFCURVE",
"182 291 OFFCURVE",
"155 291 CURVE SMOOTH",
"148 291 OFFCURVE",
"142 290 OFFCURVE",
"135 289 CURVE SMOOTH",
"120 285 OFFCURVE",
"108 278 OFFCURVE",
"98 267 CURVE SMOOTH",
"93 261 OFFCURVE",
"89 254 OFFCURVE",
"86 247 CURVE",
"93 284 OFFCURVE",
"99 320 OFFCURVE",
"106 352 CURVE SMOOTH",
"122 429 LINE SMOOTH",
"124 439 OFFCURVE",
"108 449 OFFCURVE",
"95 449 CURVE SMOOTH",
"87 449 OFFCURVE",
"81 446 OFFCURVE",
"79 439 CURVE SMOOTH",
"57 332 OFFCURVE",
"42 238 OFFCURVE",
"28 108 CURVE SMOOTH",
"25 77 OFFCURVE",
"23 45 OFFCURVE",
"23 13 CURVE SMOOTH",
"23 -78 OFFCURVE",
"37 -161 OFFCURVE",
"71 -196 CURVE SMOOTH",
"83 -209 OFFCURVE",
"99 -217 OFFCURVE",
"115 -217 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 64 OFFCURVE",
"90 72 OFFCURVE",
"77 89 CURVE SMOOTH",
"73 95 OFFCURVE",
"69 101 OFFCURVE",
"66 108 CURVE",
"66 110 OFFCURVE",
"67 112 OFFCURVE",
"67 114 CURVE SMOOTH",
"70 138 OFFCURVE",
"73 162 OFFCURVE",
"77 185 CURVE SMOOTH",
"78 191 OFFCURVE",
"79 195 OFFCURVE",
"80 195 CURVE SMOOTH",
"81 195 OFFCURVE",
"82 193 OFFCURVE",
"83 190 CURVE SMOOTH",
"96 161 OFFCURVE",
"111 149 OFFCURVE",
"130 149 CURVE SMOOTH",
"142 149 OFFCURVE",
"153 156 OFFCURVE",
"163 169 CURVE SMOOTH",
"164 170 OFFCURVE",
"165 172 OFFCURVE",
"165 174 CURVE",
"164 175 LINE",
"162 174 LINE",
"153 166 OFFCURVE",
"145 162 OFFCURVE",
"138 162 CURVE SMOOTH",
"136 162 LINE SMOOTH",
"126 162 OFFCURVE",
"118 167 OFFCURVE",
"112 177 CURVE SMOOTH",
"107 184 OFFCURVE",
"104 193 OFFCURVE",
"104 202 CURVE SMOOTH",
"104 220 OFFCURVE",
"109 234 OFFCURVE",
"120 245 CURVE SMOOTH",
"130 255 OFFCURVE",
"142 260 OFFCURVE",
"157 260 CURVE SMOOTH",
"177 260 OFFCURVE",
"194 251 OFFCURVE",
"207 232 CURVE SMOOTH",
"218 216 OFFCURVE",
"224 196 OFFCURVE",
"224 171 CURVE SMOOTH",
"224 143 OFFCURVE",
"215 119 OFFCURVE",
"197 98 CURVE SMOOTH",
"179 77 OFFCURVE",
"157 65 OFFCURVE",
"130 64 CURVE SMOOTH"
);
}
);
width = 263;
}
);
unicode = 00FE;
},
{
glyphname = q;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"301 -188 OFFCURVE",
"318 -181 OFFCURVE",
"333 -168 CURVE SMOOTH",
"348 -155 OFFCURVE",
"357 -134 OFFCURVE",
"357 -113 CURVE SMOOTH",
"357 -97 OFFCURVE",
"348 -62 OFFCURVE",
"329 -62 CURVE SMOOTH",
"324 -62 OFFCURVE",
"323 -64 OFFCURVE",
"323 -67 CURVE SMOOTH",
"323 -71 OFFCURVE",
"326 -76 OFFCURVE",
"328 -79 CURVE",
"335 -86 OFFCURVE",
"339 -95 OFFCURVE",
"339 -111 CURVE SMOOTH",
"339 -132 OFFCURVE",
"333 -149 OFFCURVE",
"321 -161 CURVE SMOOTH",
"310 -170 OFFCURVE",
"299 -174 OFFCURVE",
"288 -174 CURVE SMOOTH",
"230 -171 OFFCURVE",
"216 -80 OFFCURVE",
"213 -27 CURVE SMOOTH",
"211 1 OFFCURVE",
"210 29 OFFCURVE",
"211 56 CURVE SMOOTH",
"212 70 OFFCURVE",
"212 83 OFFCURVE",
"212 97 CURVE SMOOTH",
"212 110 OFFCURVE",
"212 124 OFFCURVE",
"211 138 CURVE SMOOTH",
"211 153 OFFCURVE",
"198 160 OFFCURVE",
"186 160 CURVE SMOOTH",
"176 160 OFFCURVE",
"167 155 OFFCURVE",
"167 145 CURVE SMOOTH",
"167 98 OFFCURVE",
"163 67 OFFCURVE",
"148 39 CURVE SMOOTH",
"135 16 OFFCURVE",
"117 -1 OFFCURVE",
"98 -1 CURVE SMOOTH",
"71 -1 OFFCURVE",
"62 29 OFFCURVE",
"62 52 CURVE SMOOTH",
"62 118 OFFCURVE",
"95 199 OFFCURVE",
"164 209 CURVE",
"165 210 OFFCURVE",
"168 210 OFFCURVE",
"172 210 CURVE SMOOTH",
"191 210 OFFCURVE",
"203 206 OFFCURVE",
"204 191 CURVE SMOOTH",
"205 186 OFFCURVE",
"208 183 OFFCURVE",
"213 183 CURVE SMOOTH",
"217 183 OFFCURVE",
"219 186 OFFCURVE",
"219 191 CURVE SMOOTH",
"219 219 OFFCURVE",
"204 235 OFFCURVE",
"175 240 CURVE SMOOTH",
"173 240 OFFCURVE",
"171 240 OFFCURVE",
"169 241 CURVE",
"161 241 LINE SMOOTH",
"79 241 OFFCURVE",
"25 158 OFFCURVE",
"25 78 CURVE SMOOTH",
"25 64 OFFCURVE",
"27 51 OFFCURVE",
"30 38 CURVE SMOOTH",
"40 2 OFFCURVE",
"59 -16 OFFCURVE",
"88 -16 CURVE SMOOTH",
"108 -16 OFFCURVE",
"127 -7 OFFCURVE",
"144 10 CURVE SMOOTH",
"162 29 OFFCURVE",
"173 54 OFFCURVE",
"176 84 CURVE SMOOTH",
"176 89 OFFCURVE",
"182 93 OFFCURVE",
"182 84 CURVE SMOOTH",
"182 62 LINE",
"181 40 LINE SMOOTH",
"181 -43 OFFCURVE",
"189 -188 OFFCURVE",
"283 -188 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"301 -188 OFFCURVE",
"318 -181 OFFCURVE",
"333 -168 CURVE SMOOTH",
"348 -155 OFFCURVE",
"357 -134 OFFCURVE",
"357 -113 CURVE SMOOTH",
"357 -97 OFFCURVE",
"348 -62 OFFCURVE",
"329 -62 CURVE SMOOTH",
"324 -62 OFFCURVE",
"323 -64 OFFCURVE",
"323 -67 CURVE SMOOTH",
"323 -71 OFFCURVE",
"326 -76 OFFCURVE",
"328 -79 CURVE",
"335 -86 OFFCURVE",
"339 -95 OFFCURVE",
"339 -111 CURVE SMOOTH",
"339 -132 OFFCURVE",
"333 -149 OFFCURVE",
"321 -161 CURVE SMOOTH",
"310 -170 OFFCURVE",
"299 -174 OFFCURVE",
"288 -174 CURVE SMOOTH",
"230 -171 OFFCURVE",
"216 -80 OFFCURVE",
"213 -27 CURVE SMOOTH",
"211 1 OFFCURVE",
"210 29 OFFCURVE",
"211 56 CURVE SMOOTH",
"212 70 OFFCURVE",
"212 83 OFFCURVE",
"212 97 CURVE SMOOTH",
"212 110 OFFCURVE",
"212 124 OFFCURVE",
"211 138 CURVE SMOOTH",
"211 153 OFFCURVE",
"198 160 OFFCURVE",
"186 160 CURVE SMOOTH",
"176 160 OFFCURVE",
"167 155 OFFCURVE",
"167 145 CURVE SMOOTH",
"167 98 OFFCURVE",
"163 67 OFFCURVE",
"148 39 CURVE SMOOTH",
"135 16 OFFCURVE",
"117 -1 OFFCURVE",
"98 -1 CURVE SMOOTH",
"71 -1 OFFCURVE",
"62 29 OFFCURVE",
"62 52 CURVE SMOOTH",
"62 118 OFFCURVE",
"95 199 OFFCURVE",
"164 209 CURVE",
"165 210 OFFCURVE",
"168 210 OFFCURVE",
"172 210 CURVE SMOOTH",
"191 210 OFFCURVE",
"203 206 OFFCURVE",
"204 191 CURVE SMOOTH",
"205 186 OFFCURVE",
"208 183 OFFCURVE",
"213 183 CURVE SMOOTH",
"217 183 OFFCURVE",
"219 186 OFFCURVE",
"219 191 CURVE SMOOTH",
"219 219 OFFCURVE",
"204 235 OFFCURVE",
"175 240 CURVE SMOOTH",
"173 240 OFFCURVE",
"171 240 OFFCURVE",
"169 241 CURVE",
"161 241 LINE SMOOTH",
"79 241 OFFCURVE",
"25 158 OFFCURVE",
"25 78 CURVE SMOOTH",
"25 64 OFFCURVE",
"27 51 OFFCURVE",
"30 38 CURVE SMOOTH",
"40 2 OFFCURVE",
"59 -16 OFFCURVE",
"88 -16 CURVE SMOOTH",
"108 -16 OFFCURVE",
"127 -7 OFFCURVE",
"144 10 CURVE SMOOTH",
"162 29 OFFCURVE",
"173 54 OFFCURVE",
"176 84 CURVE SMOOTH",
"176 89 OFFCURVE",
"182 93 OFFCURVE",
"182 84 CURVE SMOOTH",
"182 62 LINE",
"181 40 LINE SMOOTH",
"181 -43 OFFCURVE",
"189 -188 OFFCURVE",
"283 -188 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01213 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01272 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 13 170 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 72 170 72 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01249 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01268 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 68 23 68 39 68 55 68 71 68 87 68 103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2021-10-08 08:27:32 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{58, 49}";
},
{
name = top;
position = "{136, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"182 10 OFFCURVE",
"203 25 OFFCURVE",
"223 55 CURVE SMOOTH",
"228 63 OFFCURVE",
"250 108 OFFCURVE",
"256 120 CURVE SMOOTH",
"257 123 OFFCURVE",
"254 127 OFFCURVE",
"251 127 CURVE SMOOTH",
"249 127 OFFCURVE",
"247 126 OFFCURVE",
"246 123 CURVE",
"234 102 LINE",
"223 80 LINE SMOOTH",
"208 53 OFFCURVE",
"191 40 OFFCURVE",
"174 40 CURVE SMOOTH",
"171 40 OFFCURVE",
"167 41 OFFCURVE",
"162 42 CURVE",
"149 48 OFFCURVE",
"142 62 OFFCURVE",
"142 85 CURVE SMOOTH",
"142 108 OFFCURVE",
"151 137 OFFCURVE",
"170 172 CURVE SMOOTH",
"198 221 LINE",
"199 226 OFFCURVE",
"200 230 OFFCURVE",
"200 232 CURVE SMOOTH",
"200 239 OFFCURVE",
"196 243 OFFCURVE",
"188 243 CURVE SMOOTH",
"181 243 OFFCURVE",
"174 240 OFFCURVE",
"167 235 CURVE SMOOTH",
"133 209 OFFCURVE",
"107 196 OFFCURVE",
"89 196 CURVE SMOOTH",
"82 196 OFFCURVE",
"77 198 OFFCURVE",
"74 203 CURVE",
"71 230 OFFCURVE",
"70 247 OFFCURVE",
"66 258 CURVE SMOOTH",
"61 271 OFFCURVE",
"55 277 OFFCURVE",
"46 277 CURVE SMOOTH",
"35 277 OFFCURVE",
"29 268 OFFCURVE",
"29 249 CURVE SMOOTH",
"29 243 LINE SMOOTH",
"29 240 OFFCURVE",
"29 238 OFFCURVE",
"30 236 CURVE",
"36 209 OFFCURVE",
"46 191 OFFCURVE",
"59 182 CURVE",
"58 166 OFFCURVE",
"49 126 OFFCURVE",
"26 90 CURVE SMOOTH",
"22 83 OFFCURVE",
"24 80 OFFCURVE",
"27 80 CURVE SMOOTH",
"30 80 OFFCURVE",
"33 82 OFFCURVE",
"34 84 CURVE SMOOTH",
"52 110 OFFCURVE",
"68 156 OFFCURVE",
"71 182 CURVE",
"74 181 OFFCURVE",
"77 180 OFFCURVE",
"80 180 CURVE SMOOTH",
"86 180 LINE SMOOTH",
"91 180 OFFCURVE",
"98 181 OFFCURVE",
"106 183 CURVE",
"110 185 OFFCURVE",
"115 187 OFFCURVE",
"119 187 CURVE SMOOTH",
"124 187 OFFCURVE",
"128 185 OFFCURVE",
"128 178 CURVE SMOOTH",
"128 176 LINE",
"119 149 OFFCURVE",
"112 123 OFFCURVE",
"108 98 CURVE SMOOTH",
"107 91 OFFCURVE",
"106 84 OFFCURVE",
"106 77 CURVE SMOOTH",
"106 40 OFFCURVE",
"119 18 OFFCURVE",
"146 12 CURVE SMOOTH",
"151 11 OFFCURVE",
"156 10 OFFCURVE",
"159 10 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"182 10 OFFCURVE",
"203 25 OFFCURVE",
"223 55 CURVE SMOOTH",
"228 63 OFFCURVE",
"250 108 OFFCURVE",
"256 120 CURVE SMOOTH",
"257 123 OFFCURVE",
"254 127 OFFCURVE",
"251 127 CURVE SMOOTH",
"249 127 OFFCURVE",
"247 126 OFFCURVE",
"246 123 CURVE",
"234 102 LINE",
"223 80 LINE SMOOTH",
"209 52 OFFCURVE",
"191 40 OFFCURVE",
"174 40 CURVE SMOOTH",
"171 40 OFFCURVE",
"167 41 OFFCURVE",
"162 42 CURVE",
"149 48 OFFCURVE",
"142 62 OFFCURVE",
"142 85 CURVE SMOOTH",
"142 108 OFFCURVE",
"150 137 OFFCURVE",
"170 172 CURVE SMOOTH",
"198 221 LINE",
"199 226 OFFCURVE",
"200 230 OFFCURVE",
"200 232 CURVE SMOOTH",
"200 239 OFFCURVE",
"196 243 OFFCURVE",
"188 243 CURVE SMOOTH",
"181 243 OFFCURVE",
"174 240 OFFCURVE",
"167 235 CURVE SMOOTH",
"133 209 OFFCURVE",
"107 196 OFFCURVE",
"89 196 CURVE SMOOTH",
"82 196 OFFCURVE",
"77 198 OFFCURVE",
"74 203 CURVE",
"71 230 OFFCURVE",
"70 247 OFFCURVE",
"66 258 CURVE SMOOTH",
"61 271 OFFCURVE",
"55 277 OFFCURVE",
"46 277 CURVE SMOOTH",
"35 277 OFFCURVE",
"29 268 OFFCURVE",
"29 249 CURVE SMOOTH",
"29 243 LINE SMOOTH",
"29 240 OFFCURVE",
"29 238 OFFCURVE",
"30 236 CURVE",
"36 209 OFFCURVE",
"46 191 OFFCURVE",
"59 182 CURVE",
"58 166 OFFCURVE",
"49 126 OFFCURVE",
"26 90 CURVE SMOOTH",
"22 83 OFFCURVE",
"24 80 OFFCURVE",
"27 80 CURVE SMOOTH",
"30 80 OFFCURVE",
"33 82 OFFCURVE",
"34 84 CURVE SMOOTH",
"52 110 OFFCURVE",
"68 156 OFFCURVE",
"71 182 CURVE",
"74 181 OFFCURVE",
"77 180 OFFCURVE",
"80 180 CURVE SMOOTH",
"86 180 LINE SMOOTH",
"91 180 OFFCURVE",
"98 181 OFFCURVE",
"106 183 CURVE",
"110 185 OFFCURVE",
"115 187 OFFCURVE",
"119 187 CURVE SMOOTH",
"124 187 OFFCURVE",
"128 185 OFFCURVE",
"128 178 CURVE SMOOTH",
"128 176 LINE",
"119 149 OFFCURVE",
"112 123 OFFCURVE",
"108 98 CURVE SMOOTH",
"107 91 OFFCURVE",
"106 84 OFFCURVE",
"106 77 CURVE SMOOTH",
"106 40 OFFCURVE",
"119 18 OFFCURVE",
"146 12 CURVE SMOOTH",
"151 11 OFFCURVE",
"156 10 OFFCURVE",
"159 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 4 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 63 165 63 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01267 2 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 1 23 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 203;
}
);
note = r;
unicode = 0072;
},
{
glyphname = racute;
lastChange = "2021-10-08 06:02:17 +0000";
layers = (
{
background = {
components = (
{
name = r;
},
{
name = acutecomb;
}
);
};
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = r;
},
{
name = caroncomb;
}
);
};
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0159;
},
{
glyphname = rcommaaccent;
lastChange = "2021-10-08 08:27:32 +0000";
layers = (
{
background = {
components = (
{
name = r;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 22, 49}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0157;
},
{
glyphname = rdblgrave;
lastChange = "2021-10-08 06:19:34 +0000";
layers = (
{
background = {
components = (
{
name = r;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 2, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0211;
},
{
glyphname = rinvertedbreve;
lastChange = "2021-10-08 06:02:17 +0000";
layers = (
{
background = {
components = (
{
name = r;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0213;
},
{
glyphname = s;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{87, -39}";
},
{
name = top;
position = "{100, 304}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"160 -41 OFFCURVE",
"184 4 OFFCURVE",
"184 54 CURVE SMOOTH",
"184 93 OFFCURVE",
"167 136 OFFCURVE",
"145 167 CURVE SMOOTH",
"137 177 OFFCURVE",
"104 219 OFFCURVE",
"104 227 CURVE",
"107 234 OFFCURVE",
"113 255 OFFCURVE",
"114 262 CURVE SMOOTH",
"116 278 OFFCURVE",
"114 289 OFFCURVE",
"109 295 CURVE SMOOTH",
"104 301 OFFCURVE",
"100 304 OFFCURVE",
"95 304 CURVE SMOOTH",
"77 304 OFFCURVE",
"71 289 OFFCURVE",
"71 272 CURVE SMOOTH",
"71 254 OFFCURVE",
"78 233 OFFCURVE",
"87 222 CURVE",
"82 209 OFFCURVE",
"76 194 OFFCURVE",
"69 179 CURVE SMOOTH",
"47 132 LINE SMOOTH",
"40 117 OFFCURVE",
"36 108 OFFCURVE",
"31 99 CURVE SMOOTH",
"29 94 OFFCURVE",
"32 91 OFFCURVE",
"36 91 CURVE SMOOTH",
"38 91 OFFCURVE",
"40 92 OFFCURVE",
"41 94 CURVE SMOOTH",
"60 129 OFFCURVE",
"76 169 OFFCURVE",
"92 208 CURVE",
"108 192 OFFCURVE",
"135 146 OFFCURVE",
"142 123 CURVE SMOOTH",
"148 102 OFFCURVE",
"152 80 OFFCURVE",
"152 59 CURVE SMOOTH",
"152 19 OFFCURVE",
"137 -14 OFFCURVE",
"93 -14 CURVE SMOOTH",
"72 -14 OFFCURVE",
"51 1 OFFCURVE",
"51 24 CURVE SMOOTH",
"51 41 OFFCURVE",
"64 71 OFFCURVE",
"83 71 CURVE SMOOTH",
"90 71 OFFCURVE",
"93 74 OFFCURVE",
"93 76 CURVE SMOOTH",
"93 80 OFFCURVE",
"89 83 OFFCURVE",
"85 83 CURVE SMOOTH",
"54 83 OFFCURVE",
"35 52 OFFCURVE",
"35 17 CURVE SMOOTH",
"35 -18 OFFCURVE",
"59 -41 OFFCURVE",
"94 -41 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"160 -41 OFFCURVE",
"184 4 OFFCURVE",
"184 54 CURVE SMOOTH",
"184 93 OFFCURVE",
"167 136 OFFCURVE",
"145 167 CURVE SMOOTH",
"137 177 OFFCURVE",
"104 219 OFFCURVE",
"104 227 CURVE",
"107 234 OFFCURVE",
"113 255 OFFCURVE",
"114 262 CURVE SMOOTH",
"116 278 OFFCURVE",
"114 289 OFFCURVE",
"109 295 CURVE SMOOTH",
"104 301 OFFCURVE",
"100 304 OFFCURVE",
"95 304 CURVE SMOOTH",
"77 304 OFFCURVE",
"71 289 OFFCURVE",
"71 272 CURVE SMOOTH",
"71 254 OFFCURVE",
"78 233 OFFCURVE",
"87 222 CURVE",
"82 209 OFFCURVE",
"76 194 OFFCURVE",
"69 179 CURVE SMOOTH",
"47 132 LINE SMOOTH",
"40 117 OFFCURVE",
"36 108 OFFCURVE",
"31 99 CURVE SMOOTH",
"29 94 OFFCURVE",
"32 91 OFFCURVE",
"36 91 CURVE SMOOTH",
"38 91 OFFCURVE",
"40 92 OFFCURVE",
"41 94 CURVE SMOOTH",
"60 129 OFFCURVE",
"76 169 OFFCURVE",
"92 208 CURVE",
"108 192 OFFCURVE",
"135 146 OFFCURVE",
"142 123 CURVE SMOOTH",
"148 102 OFFCURVE",
"152 80 OFFCURVE",
"152 59 CURVE SMOOTH",
"152 19 OFFCURVE",
"137 -14 OFFCURVE",
"93 -14 CURVE SMOOTH",
"72 -14 OFFCURVE",
"51 1 OFFCURVE",
"51 24 CURVE SMOOTH",
"51 41 OFFCURVE",
"64 71 OFFCURVE",
"83 71 CURVE SMOOTH",
"90 71 OFFCURVE",
"93 74 OFFCURVE",
"93 76 CURVE SMOOTH",
"93 80 OFFCURVE",
"89 83 OFFCURVE",
"85 83 CURVE SMOOTH",
"54 83 OFFCURVE",
"35 52 OFFCURVE",
"35 17 CURVE SMOOTH",
"35 -18 OFFCURVE",
"59 -41 OFFCURVE",
"94 -41 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01217 3 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 17 165 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01220 2 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1 12 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 203;
}
);
note = s;
unicode = 0073;
},
{
glyphname = sacute;
lastChange = "2021-10-08 06:02:35 +0000";
layers = (
{
background = {
components = (
{
name = s;
},
{
name = acutecomb;
}
);
};
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 68, 44}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 015B;
},
{
glyphname = scaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = s;
},
{
name = caroncomb;
}
);
};
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 18, 44}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0161;
},
{
glyphname = scedilla;
lastChange = "2021-10-08 06:02:55 +0000";
layers = (
{
background = {
components = (
{
name = s;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 20, -39}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 015F;
},
{
glyphname = scircumflex;
lastChange = "2021-10-08 06:02:35 +0000";
layers = (
{
background = {
components = (
{
name = s;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 16, 44}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 015D;
},
{
glyphname = scommaaccent;
lastChange = "2021-10-08 06:02:58 +0000";
layers = (
{
background = {
components = (
{
name = s;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 51, -39}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 203;
}
);
unicode = 0219;
},
{
glyphname = germandbls;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"240 206 OFFCURVE",
"280 263 OFFCURVE",
"280 308 CURVE SMOOTH",
"280 331 OFFCURVE",
"273 349 OFFCURVE",
"258 363 CURVE SMOOTH",
"244 377 OFFCURVE",
"226 384 OFFCURVE",
"203 384 CURVE SMOOTH",
"150 384 OFFCURVE",
"97 364 OFFCURVE",
"56 294 CURVE SMOOTH",
"32 252 OFFCURVE",
"27 180 OFFCURVE",
"27 109 CURVE SMOOTH",
"27 73 OFFCURVE",
"31 25 OFFCURVE",
"39 -35 CURVE",
"39 -47 LINE SMOOTH",
"39 -62 OFFCURVE",
"31 -85 OFFCURVE",
"19 -96 CURVE SMOOTH",
"11 -103 LINE",
"2 -112 LINE",
"2 -119 OFFCURVE",
"5 -123 OFFCURVE",
"11 -123 CURVE SMOOTH",
"31 -123 OFFCURVE",
"61 -95 OFFCURVE",
"62 -45 CURVE SMOOTH",
"62 -28 OFFCURVE",
"60 -1 OFFCURVE",
"56 34 CURVE SMOOTH",
"53 69 OFFCURVE",
"51 94 OFFCURVE",
"51 113 CURVE SMOOTH",
"51 182 OFFCURVE",
"62 235 OFFCURVE",
"85 272 CURVE SMOOTH",
"122 332 OFFCURVE",
"163 362 OFFCURVE",
"209 362 CURVE SMOOTH",
"225 362 OFFCURVE",
"238 358 OFFCURVE",
"249 349 CURVE SMOOTH",
"259 339 OFFCURVE",
"264 326 OFFCURVE",
"264 311 CURVE SMOOTH",
"264 272 OFFCURVE",
"239 234 OFFCURVE",
"183 196 CURVE",
"183 200 OFFCURVE",
"179 201 OFFCURVE",
"176 201 CURVE SMOOTH",
"170 201 OFFCURVE",
"164 198 OFFCURVE",
"164 196 CURVE SMOOTH",
"164 195 LINE",
"178 176 OFFCURVE",
"215 108 OFFCURVE",
"219 96 CURVE SMOOTH",
"225 75 OFFCURVE",
"229 53 OFFCURVE",
"229 32 CURVE SMOOTH",
"229 -8 OFFCURVE",
"214 -41 OFFCURVE",
"170 -41 CURVE SMOOTH",
"149 -41 OFFCURVE",
"128 -26 OFFCURVE",
"128 -3 CURVE SMOOTH",
"128 14 OFFCURVE",
"141 44 OFFCURVE",
"160 44 CURVE SMOOTH",
"167 44 OFFCURVE",
"170 47 OFFCURVE",
"170 49 CURVE SMOOTH",
"170 53 OFFCURVE",
"166 56 OFFCURVE",
"162 56 CURVE SMOOTH",
"131 56 OFFCURVE",
"112 25 OFFCURVE",
"112 -10 CURVE SMOOTH",
"112 -45 OFFCURVE",
"136 -68 OFFCURVE",
"171 -68 CURVE SMOOTH",
"237 -68 OFFCURVE",
"261 -23 OFFCURVE",
"261 27 CURVE SMOOTH",
"261 66 OFFCURVE",
"244 109 OFFCURVE",
"222 140 CURVE SMOOTH",
"217 146 OFFCURVE",
"202 165 OFFCURVE",
"191 181 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"31 -123 OFFCURVE",
"61 -95 OFFCURVE",
"62 -45 CURVE SMOOTH",
"62 -28 OFFCURVE",
"60 -1 OFFCURVE",
"56 34 CURVE SMOOTH",
"53 69 OFFCURVE",
"51 94 OFFCURVE",
"51 113 CURVE SMOOTH",
"51 182 OFFCURVE",
"62 235 OFFCURVE",
"85 272 CURVE SMOOTH",
"122 332 OFFCURVE",
"163 362 OFFCURVE",
"209 362 CURVE SMOOTH",
"225 362 OFFCURVE",
"238 358 OFFCURVE",
"249 349 CURVE SMOOTH",
"259 339 OFFCURVE",
"264 326 OFFCURVE",
"264 311 CURVE SMOOTH",
"264 272 OFFCURVE",
"239 234 OFFCURVE",
"183 196 CURVE",
"183 200 OFFCURVE",
"179 201 OFFCURVE",
"176 201 CURVE SMOOTH",
"170 201 OFFCURVE",
"164 198 OFFCURVE",
"164 196 CURVE SMOOTH",
"164 195 LINE",
"178 176 OFFCURVE",
"215 108 OFFCURVE",
"219 96 CURVE SMOOTH",
"225 75 OFFCURVE",
"229 53 OFFCURVE",
"229 32 CURVE SMOOTH",
"229 -8 OFFCURVE",
"214 -41 OFFCURVE",
"170 -41 CURVE SMOOTH",
"149 -41 OFFCURVE",
"128 -26 OFFCURVE",
"128 -3 CURVE SMOOTH",
"128 14 OFFCURVE",
"141 44 OFFCURVE",
"160 44 CURVE SMOOTH",
"167 44 OFFCURVE",
"170 47 OFFCURVE",
"170 49 CURVE SMOOTH",
"170 53 OFFCURVE",
"166 56 OFFCURVE",
"162 56 CURVE SMOOTH",
"131 56 OFFCURVE",
"112 25 OFFCURVE",
"112 -10 CURVE SMOOTH",
"112 -45 OFFCURVE",
"136 -68 OFFCURVE",
"171 -68 CURVE SMOOTH",
"237 -68 OFFCURVE",
"261 -23 OFFCURVE",
"261 27 CURVE SMOOTH",
"261 66 OFFCURVE",
"244 109 OFFCURVE",
"222 140 CURVE SMOOTH",
"217 146 OFFCURVE",
"202 165 OFFCURVE",
"191 181 CURVE",
"240 206 OFFCURVE",
"280 263 OFFCURVE",
"280 308 CURVE SMOOTH",
"280 331 OFFCURVE",
"273 349 OFFCURVE",
"258 363 CURVE SMOOTH",
"244 377 OFFCURVE",
"226 384 OFFCURVE",
"203 384 CURVE SMOOTH",
"150 384 OFFCURVE",
"97 364 OFFCURVE",
"56 294 CURVE SMOOTH",
"32 252 OFFCURVE",
"27 180 OFFCURVE",
"27 109 CURVE SMOOTH",
"27 73 OFFCURVE",
"31 25 OFFCURVE",
"39 -35 CURVE",
"39 -47 LINE SMOOTH",
"39 -62 OFFCURVE",
"31 -85 OFFCURVE",
"19 -96 CURVE SMOOTH",
"11 -103 LINE",
"2 -112 LINE",
"2 -119 OFFCURVE",
"5 -123 OFFCURVE",
"11 -123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 44 165 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01274 59 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01268 2 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 311;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = t;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{114, -18}";
},
{
name = center;
position = "{60, 168}";
},
{
name = top;
position = "{132, 415}";
},
{
name = topright;
position = "{175, 426}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"149 -22 OFFCURVE",
"163 -17 OFFCURVE",
"174 -6 CURVE SMOOTH",
"186 5 OFFCURVE",
"192 20 OFFCURVE",
"192 40 CURVE SMOOTH",
"192 47 OFFCURVE",
"191 52 OFFCURVE",
"190 55 CURVE SMOOTH",
"189 58 OFFCURVE",
"187 59 OFFCURVE",
"185 59 CURVE SMOOTH",
"184 59 OFFCURVE",
"183 59 OFFCURVE",
"182 58 CURVE SMOOTH",
"181 57 OFFCURVE",
"181 54 OFFCURVE",
"181 49 CURVE SMOOTH",
"181 40 LINE SMOOTH",
"181 30 OFFCURVE",
"178 22 OFFCURVE",
"171 15 CURVE SMOOTH",
"163 7 OFFCURVE",
"153 3 OFFCURVE",
"141 3 CURVE SMOOTH",
"94 3 OFFCURVE",
"73 43 OFFCURVE",
"73 119 CURVE SMOOTH",
"73 161 OFFCURVE",
"87 223 OFFCURVE",
"95 245 CURVE",
"134 248 OFFCURVE",
"165 258 OFFCURVE",
"193 273 CURVE",
"195 275 OFFCURVE",
"196 277 OFFCURVE",
"196 278 CURVE SMOOTH",
"196 280 OFFCURVE",
"194 281 OFFCURVE",
"191 281 CURVE SMOOTH",
"188 281 OFFCURVE",
"186 280 OFFCURVE",
"184 279 CURVE SMOOTH",
"180 277 OFFCURVE",
"171 274 OFFCURVE",
"157 269 CURVE SMOOTH",
"146 266 OFFCURVE",
"136 265 OFFCURVE",
"128 265 CURVE SMOOTH",
"99 262 LINE",
"103 277 OFFCURVE",
"114 308 OFFCURVE",
"129 345 CURVE SMOOTH",
"149 396 LINE",
"149 400 OFFCURVE",
"147 404 OFFCURVE",
"142 409 CURVE SMOOTH",
"137 413 OFFCURVE",
"132 415 OFFCURVE",
"127 415 CURVE SMOOTH",
"122 415 OFFCURVE",
"118 412 OFFCURVE",
"116 407 CURVE SMOOTH",
"79 318 OFFCURVE",
"60 268 OFFCURVE",
"58 259 CURVE",
"27 261 OFFCURVE",
"1 271 OFFCURVE",
"-19 288 CURVE SMOOTH",
"-24 292 OFFCURVE",
"-30 294 OFFCURVE",
"-34 294 CURVE SMOOTH",
"-41 294 OFFCURVE",
"-46 289 OFFCURVE",
"-46 281 CURVE SMOOTH",
"-46 275 OFFCURVE",
"-43 268 OFFCURVE",
"-34 262 CURVE SMOOTH",
"-10 249 OFFCURVE",
"23 245 OFFCURVE",
"55 245 CURVE",
"40 186 OFFCURVE",
"34 145 OFFCURVE",
"34 114 CURVE SMOOTH",
"34 63 OFFCURVE",
"47 25 OFFCURVE",
"74 1 CURVE SMOOTH",
"91 -14 OFFCURVE",
"110 -22 OFFCURVE",
"131 -22 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"149 -22 OFFCURVE",
"163 -17 OFFCURVE",
"174 -6 CURVE SMOOTH",
"186 5 OFFCURVE",
"192 20 OFFCURVE",
"192 40 CURVE SMOOTH",
"192 47 OFFCURVE",
"191 52 OFFCURVE",
"190 55 CURVE SMOOTH",
"189 58 OFFCURVE",
"187 59 OFFCURVE",
"185 59 CURVE SMOOTH",
"184 59 OFFCURVE",
"183 59 OFFCURVE",
"182 58 CURVE SMOOTH",
"181 57 OFFCURVE",
"181 54 OFFCURVE",
"181 49 CURVE SMOOTH",
"181 40 LINE SMOOTH",
"181 30 OFFCURVE",
"178 22 OFFCURVE",
"171 15 CURVE SMOOTH",
"163 7 OFFCURVE",
"153 3 OFFCURVE",
"141 3 CURVE SMOOTH",
"94 3 OFFCURVE",
"73 43 OFFCURVE",
"73 119 CURVE SMOOTH",
"73 161 OFFCURVE",
"87 223 OFFCURVE",
"95 245 CURVE",
"134 248 OFFCURVE",
"165 258 OFFCURVE",
"193 273 CURVE",
"195 275 OFFCURVE",
"196 277 OFFCURVE",
"196 278 CURVE SMOOTH",
"196 280 OFFCURVE",
"194 281 OFFCURVE",
"191 281 CURVE SMOOTH",
"188 281 OFFCURVE",
"186 280 OFFCURVE",
"184 279 CURVE SMOOTH",
"180 277 OFFCURVE",
"171 274 OFFCURVE",
"157 269 CURVE SMOOTH",
"146 266 OFFCURVE",
"136 266 OFFCURVE",
"128 265 CURVE SMOOTH",
"99 262 LINE",
"103 277 OFFCURVE",
"114 308 OFFCURVE",
"129 345 CURVE SMOOTH",
"149 396 LINE",
"149 400 OFFCURVE",
"147 404 OFFCURVE",
"142 409 CURVE SMOOTH",
"137 413 OFFCURVE",
"132 415 OFFCURVE",
"127 415 CURVE SMOOTH",
"122 415 OFFCURVE",
"118 412 OFFCURVE",
"116 407 CURVE SMOOTH",
"79 318 OFFCURVE",
"60 268 OFFCURVE",
"58 259 CURVE",
"27 261 OFFCURVE",
"1 271 OFFCURVE",
"-19 288 CURVE SMOOTH",
"-24 292 OFFCURVE",
"-30 294 OFFCURVE",
"-34 294 CURVE SMOOTH",
"-41 294 OFFCURVE",
"-46 289 OFFCURVE",
"-46 281 CURVE SMOOTH",
"-46 275 OFFCURVE",
"-43 268 OFFCURVE",
"-34 262 CURVE SMOOTH",
"-10 249 OFFCURVE",
"23 245 OFFCURVE",
"55 245 CURVE",
"40 186 OFFCURVE",
"34 145 OFFCURVE",
"34 114 CURVE SMOOTH",
"34 63 OFFCURVE",
"47 25 OFFCURVE",
"74 1 CURVE SMOOTH",
"91 -14 OFFCURVE",
"110 -22 OFFCURVE",
"131 -22 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 4 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01217 24 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 10 165 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01258 32 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01213 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 182;
}
);
note = t;
unicode = 0074;
},
{
glyphname = tbar;
lastChange = "2021-10-08 06:03:11 +0000";
layers = (
{
background = {
components = (
{
name = t;
},
{
name = strokeshortcomb;
}
);
};
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -11, 58}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 182;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2021-10-08 06:03:21 +0000";
layers = (
{
background = {
components = (
{
name = t;
},
{
name = caroncomb.alt;
}
);
};
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 172, 166}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 182;
}
);
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2021-10-08 06:03:21 +0000";
layers = (
{
background = {
components = (
{
name = t;
},
{
name = cedillacomb;
}
);
};
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 47, -18}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 182;
}
);
unicode = 0163;
},
{
glyphname = tcommaaccent;
lastChange = "2021-10-08 06:03:21 +0000";
layers = (
{
background = {
components = (
{
name = t;
},
{
name = commaaccentcomb;
}
);
};
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 78, -18}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 182;
}
);
unicode = 021B;
},
{
glyphname = u;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{91, 0}";
},
{
name = ogonek;
position = "{203, -39}";
},
{
name = top;
position = "{143, 224}";
},
{
name = topright;
position = "{154, 212}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"216 -73 OFFCURVE",
"218 -71 OFFCURVE",
"218 -67 CURVE SMOOTH",
"218 -63 OFFCURVE",
"216 -59 OFFCURVE",
"212 -56 CURVE SMOOTH",
"191 -37 OFFCURVE",
"180 -1 OFFCURVE",
"180 50 CURVE SMOOTH",
"180 57 LINE SMOOTH",
"180 59 OFFCURVE",
"180 61 OFFCURVE",
"181 64 CURVE",
"182 111 OFFCURVE",
"191 152 OFFCURVE",
"206 188 CURVE",
"208 197 LINE",
"208 204 OFFCURVE",
"205 209 OFFCURVE",
"200 212 CURVE SMOOTH",
"195 216 OFFCURVE",
"189 218 OFFCURVE",
"182 218 CURVE SMOOTH",
"165 218 OFFCURVE",
"156 210 OFFCURVE",
"156 193 CURVE SMOOTH",
"156 170 OFFCURVE",
"148 138 OFFCURVE",
"133 97 CURVE SMOOTH",
"124 75 OFFCURVE",
"113 57 OFFCURVE",
"100 42 CURVE SMOOTH",
"86 27 OFFCURVE",
"73 19 OFFCURVE",
"62 19 CURVE SMOOTH",
"47 19 OFFCURVE",
"41 33 OFFCURVE",
"41 56 CURVE SMOOTH",
"42 91 OFFCURVE",
"47 124 OFFCURVE",
"62 155 CURVE SMOOTH",
"66 164 OFFCURVE",
"70 173 OFFCURVE",
"75 181 CURVE SMOOTH",
"89 208 LINE SMOOTH",
"91 212 OFFCURVE",
"92 215 OFFCURVE",
"92 218 CURVE SMOOTH",
"92 224 OFFCURVE",
"89 229 OFFCURVE",
"84 233 CURVE",
"77 236 OFFCURVE",
"71 238 OFFCURVE",
"65 238 CURVE SMOOTH",
"52 238 OFFCURVE",
"45 234 OFFCURVE",
"42 226 CURVE SMOOTH",
"37 214 OFFCURVE",
"32 192 OFFCURVE",
"26 161 CURVE SMOOTH",
"21 128 OFFCURVE",
"18 99 OFFCURVE",
"18 74 CURVE SMOOTH",
"18 57 OFFCURVE",
"19 45 OFFCURVE",
"22 37 CURVE SMOOTH",
"31 11 OFFCURVE",
"44 -2 OFFCURVE",
"62 -2 CURVE SMOOTH",
"71 -2 OFFCURVE",
"81 1 OFFCURVE",
"90 8 CURVE SMOOTH",
"101 15 OFFCURVE",
"111 26 OFFCURVE",
"122 42 CURVE SMOOTH",
"133 58 OFFCURVE",
"145 83 OFFCURVE",
"158 116 CURVE",
"155 98 OFFCURVE",
"154 85 OFFCURVE",
"154 77 CURVE SMOOTH",
"153 57 LINE SMOOTH",
"153 2 OFFCURVE",
"168 -39 OFFCURVE",
"198 -67 CURVE SMOOTH",
"203 -71 OFFCURVE",
"207 -73 OFFCURVE",
"211 -73 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"216 -73 OFFCURVE",
"218 -71 OFFCURVE",
"218 -67 CURVE SMOOTH",
"218 -63 OFFCURVE",
"216 -59 OFFCURVE",
"212 -56 CURVE SMOOTH",
"191 -37 OFFCURVE",
"180 -1 OFFCURVE",
"180 50 CURVE SMOOTH",
"180 57 LINE SMOOTH",
"180 59 OFFCURVE",
"180 61 OFFCURVE",
"181 64 CURVE",
"182 111 OFFCURVE",
"191 152 OFFCURVE",
"206 188 CURVE",
"208 197 LINE",
"208 204 OFFCURVE",
"205 209 OFFCURVE",
"200 212 CURVE SMOOTH",
"195 216 OFFCURVE",
"189 218 OFFCURVE",
"182 218 CURVE SMOOTH",
"165 218 OFFCURVE",
"156 210 OFFCURVE",
"156 193 CURVE SMOOTH",
"156 170 OFFCURVE",
"148 138 OFFCURVE",
"133 97 CURVE SMOOTH",
"124 75 OFFCURVE",
"113 57 OFFCURVE",
"100 42 CURVE SMOOTH",
"86 27 OFFCURVE",
"73 19 OFFCURVE",
"62 19 CURVE SMOOTH",
"47 19 OFFCURVE",
"41 33 OFFCURVE",
"41 56 CURVE SMOOTH",
"42 91 OFFCURVE",
"47 124 OFFCURVE",
"62 155 CURVE SMOOTH",
"66 164 OFFCURVE",
"71 173 OFFCURVE",
"75 181 CURVE SMOOTH",
"89 208 LINE SMOOTH",
"91 212 OFFCURVE",
"92 215 OFFCURVE",
"92 218 CURVE SMOOTH",
"92 224 OFFCURVE",
"89 229 OFFCURVE",
"84 233 CURVE",
"77 236 OFFCURVE",
"71 238 OFFCURVE",
"65 238 CURVE SMOOTH",
"52 238 OFFCURVE",
"45 234 OFFCURVE",
"42 226 CURVE SMOOTH",
"37 214 OFFCURVE",
"32 192 OFFCURVE",
"26 161 CURVE SMOOTH",
"21 128 OFFCURVE",
"18 99 OFFCURVE",
"18 74 CURVE SMOOTH",
"18 57 OFFCURVE",
"19 45 OFFCURVE",
"22 37 CURVE SMOOTH",
"31 11 OFFCURVE",
"44 -2 OFFCURVE",
"62 -2 CURVE SMOOTH",
"71 -2 OFFCURVE",
"81 1 OFFCURVE",
"90 8 CURVE SMOOTH",
"101 15 OFFCURVE",
"111 26 OFFCURVE",
"122 42 CURVE SMOOTH",
"133 58 OFFCURVE",
"145 83 OFFCURVE",
"158 116 CURVE",
"155 98 OFFCURVE",
"154 85 OFFCURVE",
"154 77 CURVE SMOOTH",
"153 57 LINE SMOOTH",
"150 2 OFFCURVE",
"168 -39 OFFCURVE",
"198 -67 CURVE SMOOTH",
"203 -71 OFFCURVE",
"207 -73 OFFCURVE",
"211 -73 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 14 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01241 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = u;
unicode = 0075;
},
{
glyphname = uacute;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = acutecomb;
}
);
};
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 111, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01241 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = brevecomb;
}
);
};
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 71, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 016D;
},
{
glyphname = ucircumflex;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 59, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01241 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udblgrave;
lastChange = "2021-10-08 06:19:34 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = dblgravecomb;
}
);
};
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 9, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 0215;
},
{
glyphname = udieresis;
lastChange = "2021-10-08 06:30:52 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 83, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01238 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 3 61 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01275 4 81 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 75 165 75 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01273 2 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01241 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = udotbelow;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 70, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EE5;
},
{
glyphname = ugrave;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = gravecomb;
}
);
};
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 75, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01241 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhookabove;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 102, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2021-10-08 06:45:23 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = horncomb;
}
);
};
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 171, -48}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = uhorn;
},
{
name = acutecomb;
}
);
};
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 111, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 70, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = uhorn;
},
{
name = gravecomb;
}
);
};
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 75, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 102, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = uhorn;
},
{
name = tildecomb;
}
);
};
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 64, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = hungarumlautcomb;
}
);
};
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 102, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 0171;
},
{
glyphname = uinvertedbreve;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = breveinvertedcomb;
}
);
};
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 65, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 0217;
},
{
glyphname = umacron;
lastChange = "2021-10-08 06:59:31 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = macroncomb;
}
);
};
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 69, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 016B;
},
{
glyphname = uogonek;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = ogonekcomb;
}
);
};
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 124, -44}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 0173;
},
{
glyphname = uring;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = ringcomb;
}
);
};
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 98, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 016F;
},
{
glyphname = utilde;
lastChange = "2021-10-08 06:03:57 +0000";
layers = (
{
background = {
components = (
{
name = u;
},
{
name = tildecomb;
}
);
};
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 64, -36}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 226;
}
);
unicode = 0169;
},
{
glyphname = v;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"101 -3 OFFCURVE",
"117 2 OFFCURVE",
"134 10 CURVE SMOOTH",
"151 19 OFFCURVE",
"163 29 OFFCURVE",
"171 40 CURVE SMOOTH",
"176 47 OFFCURVE",
"181 55 OFFCURVE",
"186 63 CURVE SMOOTH",
"200 88 LINE",
"222 132 LINE",
"229 130 OFFCURVE",
"235 130 OFFCURVE",
"242 130 CURVE SMOOTH",
"252 130 OFFCURVE",
"263 132 OFFCURVE",
"273 136 CURVE SMOOTH",
"278 138 OFFCURVE",
"281 141 OFFCURVE",
"281 145 CURVE SMOOTH",
"281 148 OFFCURVE",
"279 149 OFFCURVE",
"276 149 CURVE",
"269 147 LINE SMOOTH",
"264 145 OFFCURVE",
"258 144 OFFCURVE",
"252 144 CURVE SMOOTH",
"245 144 LINE SMOOTH",
"236 144 OFFCURVE",
"229 146 OFFCURVE",
"224 151 CURVE",
"225 155 OFFCURVE",
"225 159 OFFCURVE",
"225 161 CURVE SMOOTH",
"225 171 LINE SMOOTH",
"225 186 OFFCURVE",
"223 197 OFFCURVE",
"220 203 CURVE SMOOTH",
"217 209 OFFCURVE",
"212 212 OFFCURVE",
"207 212 CURVE SMOOTH",
"204 212 OFFCURVE",
"202 212 OFFCURVE",
"201 211 CURVE",
"191 208 OFFCURVE",
"186 198 OFFCURVE",
"186 183 CURVE SMOOTH",
"186 163 OFFCURVE",
"191 150 OFFCURVE",
"202 144 CURVE",
"202 131 OFFCURVE",
"198 116 OFFCURVE",
"190 99 CURVE SMOOTH",
"182 82 OFFCURVE",
"172 66 OFFCURVE",
"159 52 CURVE SMOOTH",
"140 30 OFFCURVE",
"119 19 OFFCURVE",
"98 19 CURVE SMOOTH",
"73 19 OFFCURVE",
"60 33 OFFCURVE",
"60 62 CURVE SMOOTH",
"60 74 OFFCURVE",
"62 88 OFFCURVE",
"69 103 CURVE SMOOTH",
"88 146 OFFCURVE",
"105 175 OFFCURVE",
"116 194 CURVE",
"120 206 OFFCURVE",
"122 217 OFFCURVE",
"122 228 CURVE SMOOTH",
"122 261 OFFCURVE",
"106 278 OFFCURVE",
"73 278 CURVE SMOOTH",
"61 278 OFFCURVE",
"51 273 OFFCURVE",
"43 263 CURVE SMOOTH",
"36 254 OFFCURVE",
"33 242 OFFCURVE",
"33 229 CURVE SMOOTH",
"33 214 OFFCURVE",
"38 205 OFFCURVE",
"47 202 CURVE",
"49 202 LINE",
"51 204 LINE",
"51 205 OFFCURVE",
"51 205 OFFCURVE",
"52 206 CURVE",
"52 207 LINE",
"50 213 OFFCURVE",
"49 219 OFFCURVE",
"49 225 CURVE SMOOTH",
"49 246 OFFCURVE",
"57 257 OFFCURVE",
"72 259 CURVE",
"73 260 OFFCURVE",
"75 260 OFFCURVE",
"76 260 CURVE SMOOTH",
"93 260 OFFCURVE",
"102 251 OFFCURVE",
"103 232 CURVE SMOOTH",
"103 220 OFFCURVE",
"98 206 OFFCURVE",
"87 191 CURVE SMOOTH",
"72 170 LINE",
"56 149 LINE SMOOTH",
"34 117 OFFCURVE",
"23 87 OFFCURVE",
"23 60 CURVE SMOOTH",
"23 35 OFFCURVE",
"34 16 OFFCURVE",
"55 4 CURVE SMOOTH",
"66 -1 OFFCURVE",
"76 -3 OFFCURVE",
"85 -3 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"101 -3 OFFCURVE",
"117 2 OFFCURVE",
"134 10 CURVE SMOOTH",
"151 19 OFFCURVE",
"163 29 OFFCURVE",
"171 40 CURVE SMOOTH",
"176 47 OFFCURVE",
"181 55 OFFCURVE",
"186 63 CURVE SMOOTH",
"200 88 LINE",
"222 132 LINE",
"229 130 OFFCURVE",
"235 130 OFFCURVE",
"242 130 CURVE SMOOTH",
"252 130 OFFCURVE",
"263 132 OFFCURVE",
"273 136 CURVE SMOOTH",
"278 138 OFFCURVE",
"281 141 OFFCURVE",
"281 145 CURVE SMOOTH",
"281 148 OFFCURVE",
"279 149 OFFCURVE",
"276 149 CURVE",
"269 147 LINE SMOOTH",
"264 145 OFFCURVE",
"258 144 OFFCURVE",
"252 144 CURVE SMOOTH",
"245 144 LINE SMOOTH",
"236 144 OFFCURVE",
"229 146 OFFCURVE",
"224 151 CURVE",
"225 155 OFFCURVE",
"225 159 OFFCURVE",
"225 161 CURVE SMOOTH",
"225 171 LINE SMOOTH",
"225 186 OFFCURVE",
"223 197 OFFCURVE",
"220 203 CURVE SMOOTH",
"217 209 OFFCURVE",
"212 212 OFFCURVE",
"207 212 CURVE SMOOTH",
"204 212 OFFCURVE",
"202 212 OFFCURVE",
"201 211 CURVE",
"191 208 OFFCURVE",
"186 198 OFFCURVE",
"186 183 CURVE SMOOTH",
"186 163 OFFCURVE",
"191 150 OFFCURVE",
"202 144 CURVE",
"202 131 OFFCURVE",
"198 116 OFFCURVE",
"190 99 CURVE SMOOTH",
"182 82 OFFCURVE",
"172 66 OFFCURVE",
"159 52 CURVE SMOOTH",
"140 30 OFFCURVE",
"119 19 OFFCURVE",
"98 19 CURVE SMOOTH",
"73 19 OFFCURVE",
"60 33 OFFCURVE",
"60 62 CURVE SMOOTH",
"60 74 OFFCURVE",
"62 88 OFFCURVE",
"69 103 CURVE SMOOTH",
"88 146 OFFCURVE",
"105 175 OFFCURVE",
"116 194 CURVE",
"120 206 OFFCURVE",
"122 217 OFFCURVE",
"122 228 CURVE SMOOTH",
"122 261 OFFCURVE",
"106 278 OFFCURVE",
"73 278 CURVE SMOOTH",
"61 278 OFFCURVE",
"51 273 OFFCURVE",
"43 263 CURVE SMOOTH",
"36 254 OFFCURVE",
"33 242 OFFCURVE",
"33 229 CURVE SMOOTH",
"33 214 OFFCURVE",
"38 205 OFFCURVE",
"47 202 CURVE",
"49 202 LINE",
"51 204 LINE",
"51 205 OFFCURVE",
"51 205 OFFCURVE",
"52 206 CURVE",
"52 207 LINE",
"50 213 OFFCURVE",
"49 219 OFFCURVE",
"49 225 CURVE SMOOTH",
"49 246 OFFCURVE",
"57 257 OFFCURVE",
"72 259 CURVE",
"73 260 OFFCURVE",
"75 260 OFFCURVE",
"76 260 CURVE SMOOTH",
"93 260 OFFCURVE",
"102 251 OFFCURVE",
"103 232 CURVE SMOOTH",
"103 220 OFFCURVE",
"98 206 OFFCURVE",
"87 191 CURVE SMOOTH",
"72 170 LINE",
"56 149 LINE SMOOTH",
"34 117 OFFCURVE",
"23 87 OFFCURVE",
"23 60 CURVE SMOOTH",
"23 35 OFFCURVE",
"34 16 OFFCURVE",
"55 4 CURVE SMOOTH",
"66 -1 OFFCURVE",
"76 -3 OFFCURVE",
"85 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 30 165 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 24 170 24 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01246 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01244 2 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01256 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 56 23 56 39 56 55 56 71 56 87 56 103 56 119 56 135 56 151 56 167 56 183 56 199 56 215 56 231 56 247 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 56 23 56 39 56 55 56 71 56 87 56 103 56 119 56 135 56 151 56 167 56 183 56 199 56 215 56 231 56 247 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 56 23 56 39 56 55 56 71 56 87 56 103 56 119 56 135 56 151 56 167 56 183 56 199 56 215 56 231 56 247 56 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 262;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{214, 0}";
},
{
name = top;
position = "{216, 227}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"111 -39 OFFCURVE",
"129 -32 OFFCURVE",
"146 -18 CURVE SMOOTH",
"165 -3 OFFCURVE",
"181 17 OFFCURVE",
"197 56 CURVE",
"208 -8 OFFCURVE",
"234 -33 OFFCURVE",
"277 -33 CURVE SMOOTH",
"319 -33 OFFCURVE",
"353 -14 OFFCURVE",
"379 25 CURVE SMOOTH",
"402 60 OFFCURVE",
"414 101 OFFCURVE",
"415 150 CURVE SMOOTH",
"415 181 OFFCURVE",
"407 206 OFFCURVE",
"392 225 CURVE SMOOTH",
"377 241 OFFCURVE",
"360 249 OFFCURVE",
"341 249 CURVE SMOOTH",
"327 249 OFFCURVE",
"315 244 OFFCURVE",
"304 235 CURVE SMOOTH",
"290 223 OFFCURVE",
"281 206 OFFCURVE",
"281 182 CURVE SMOOTH",
"281 176 OFFCURVE",
"282 168 OFFCURVE",
"283 158 CURVE SMOOTH",
"283 153 OFFCURVE",
"286 150 OFFCURVE",
"289 150 CURVE SMOOTH",
"293 150 OFFCURVE",
"296 154 OFFCURVE",
"297 160 CURVE",
"297 175 OFFCURVE",
"298 185 OFFCURVE",
"300 189 CURVE",
"304 206 OFFCURVE",
"314 214 OFFCURVE",
"329 214 CURVE SMOOTH",
"340 214 OFFCURVE",
"350 209 OFFCURVE",
"359 198 CURVE SMOOTH",
"370 185 OFFCURVE",
"376 171 OFFCURVE",
"379 154 CURVE SMOOTH",
"381 144 OFFCURVE",
"382 134 OFFCURVE",
"382 123 CURVE SMOOTH",
"382 68 OFFCURVE",
"353 -18 OFFCURVE",
"292 -18 CURVE SMOOTH",
"269 -18 OFFCURVE",
"253 -8 OFFCURVE",
"244 13 CURVE SMOOTH",
"236 28 OFFCURVE",
"232 56 OFFCURVE",
"232 84 CURVE SMOOTH",
"232 94 OFFCURVE",
"232 104 OFFCURVE",
"233 114 CURVE SMOOTH",
"233 144 LINE SMOOTH",
"232 157 OFFCURVE",
"230 167 OFFCURVE",
"227 173 CURVE SMOOTH",
"224 178 OFFCURVE",
"219 181 OFFCURVE",
"214 181 CURVE SMOOTH",
"201 181 OFFCURVE",
"193 170 OFFCURVE",
"190 147 CURVE SMOOTH",
"182 90 OFFCURVE",
"170 48 OFFCURVE",
"155 21 CURVE SMOOTH",
"140 -4 OFFCURVE",
"122 -15 OFFCURVE",
"107 -15 CURVE SMOOTH",
"86 -15 OFFCURVE",
"69 5 OFFCURVE",
"69 40 CURVE SMOOTH",
"69 59 OFFCURVE",
"71 75 OFFCURVE",
"77 93 CURVE SMOOTH",
"89 134 LINE SMOOTH",
"94 151 OFFCURVE",
"100 168 OFFCURVE",
"100 185 CURVE SMOOTH",
"100 197 OFFCURVE",
"97 209 OFFCURVE",
"89 221 CURVE SMOOTH",
"81 232 OFFCURVE",
"69 238 OFFCURVE",
"54 238 CURVE SMOOTH",
"48 238 LINE SMOOTH",
"45 238 OFFCURVE",
"43 238 OFFCURVE",
"41 237 CURVE",
"20 233 OFFCURVE",
"10 218 OFFCURVE",
"10 192 CURVE SMOOTH",
"10 187 OFFCURVE",
"10 183 OFFCURVE",
"11 180 CURVE SMOOTH",
"14 165 OFFCURVE",
"20 158 OFFCURVE",
"30 157 CURVE SMOOTH",
"31 157 OFFCURVE",
"32 158 OFFCURVE",
"33 159 CURVE",
"33 160 OFFCURVE",
"33 160 OFFCURVE",
"34 160 CURVE",
"34 162 LINE",
"29 171 OFFCURVE",
"27 181 OFFCURVE",
"27 190 CURVE SMOOTH",
"27 205 OFFCURVE",
"33 214 OFFCURVE",
"44 218 CURVE SMOOTH",
"48 219 OFFCURVE",
"51 220 OFFCURVE",
"53 220 CURVE SMOOTH",
"67 220 OFFCURVE",
"76 212 OFFCURVE",
"79 197 CURVE",
"80 195 OFFCURVE",
"80 192 OFFCURVE",
"80 189 CURVE SMOOTH",
"80 179 OFFCURVE",
"76 166 OFFCURVE",
"69 149 CURVE SMOOTH",
"66 142 OFFCURVE",
"62 135 OFFCURVE",
"58 128 CURVE SMOOTH",
"48 106 LINE SMOOTH",
"36 79 OFFCURVE",
"31 56 OFFCURVE",
"31 35 CURVE SMOOTH",
"31 22 OFFCURVE",
"33 10 OFFCURVE",
"37 -1 CURVE SMOOTH",
"48 -26 OFFCURVE",
"67 -39 OFFCURVE",
"93 -39 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"111 -39 OFFCURVE",
"129 -32 OFFCURVE",
"146 -18 CURVE SMOOTH",
"165 -3 OFFCURVE",
"181 17 OFFCURVE",
"197 56 CURVE",
"208 -8 OFFCURVE",
"234 -33 OFFCURVE",
"277 -33 CURVE SMOOTH",
"319 -33 OFFCURVE",
"353 -14 OFFCURVE",
"379 25 CURVE SMOOTH",
"402 60 OFFCURVE",
"414 101 OFFCURVE",
"415 150 CURVE SMOOTH",
"415 181 OFFCURVE",
"407 206 OFFCURVE",
"392 225 CURVE SMOOTH",
"377 241 OFFCURVE",
"360 249 OFFCURVE",
"341 249 CURVE SMOOTH",
"327 249 OFFCURVE",
"315 244 OFFCURVE",
"304 235 CURVE SMOOTH",
"290 223 OFFCURVE",
"281 206 OFFCURVE",
"281 182 CURVE SMOOTH",
"281 176 OFFCURVE",
"282 168 OFFCURVE",
"283 158 CURVE SMOOTH",
"283 153 OFFCURVE",
"286 150 OFFCURVE",
"289 150 CURVE SMOOTH",
"293 150 OFFCURVE",
"296 154 OFFCURVE",
"297 160 CURVE",
"297 175 OFFCURVE",
"298 185 OFFCURVE",
"300 189 CURVE",
"304 206 OFFCURVE",
"314 214 OFFCURVE",
"329 214 CURVE SMOOTH",
"340 214 OFFCURVE",
"350 209 OFFCURVE",
"359 198 CURVE SMOOTH",
"370 185 OFFCURVE",
"376 171 OFFCURVE",
"379 154 CURVE SMOOTH",
"381 144 OFFCURVE",
"382 134 OFFCURVE",
"382 123 CURVE SMOOTH",
"382 68 OFFCURVE",
"353 -18 OFFCURVE",
"292 -18 CURVE SMOOTH",
"269 -18 OFFCURVE",
"253 -8 OFFCURVE",
"244 13 CURVE SMOOTH",
"236 28 OFFCURVE",
"232 56 OFFCURVE",
"232 84 CURVE SMOOTH",
"232 94 OFFCURVE",
"233 104 OFFCURVE",
"233 114 CURVE SMOOTH",
"233 144 LINE SMOOTH",
"233 157 OFFCURVE",
"230 167 OFFCURVE",
"227 173 CURVE SMOOTH",
"224 178 OFFCURVE",
"219 181 OFFCURVE",
"214 181 CURVE SMOOTH",
"201 181 OFFCURVE",
"193 170 OFFCURVE",
"190 147 CURVE SMOOTH",
"182 90 OFFCURVE",
"170 48 OFFCURVE",
"155 21 CURVE SMOOTH",
"140 -4 OFFCURVE",
"122 -15 OFFCURVE",
"107 -15 CURVE SMOOTH",
"86 -15 OFFCURVE",
"69 5 OFFCURVE",
"69 40 CURVE SMOOTH",
"69 59 OFFCURVE",
"72 75 OFFCURVE",
"77 93 CURVE SMOOTH",
"89 134 LINE SMOOTH",
"94 151 OFFCURVE",
"100 168 OFFCURVE",
"100 185 CURVE SMOOTH",
"100 197 OFFCURVE",
"97 209 OFFCURVE",
"89 221 CURVE SMOOTH",
"81 232 OFFCURVE",
"69 238 OFFCURVE",
"54 238 CURVE SMOOTH",
"48 238 LINE SMOOTH",
"45 238 OFFCURVE",
"43 238 OFFCURVE",
"41 237 CURVE",
"20 233 OFFCURVE",
"10 218 OFFCURVE",
"10 192 CURVE SMOOTH",
"10 187 OFFCURVE",
"10 183 OFFCURVE",
"11 180 CURVE SMOOTH",
"14 165 OFFCURVE",
"20 158 OFFCURVE",
"30 157 CURVE SMOOTH",
"31 157 OFFCURVE",
"32 158 OFFCURVE",
"33 159 CURVE",
"33 160 OFFCURVE",
"33 160 OFFCURVE",
"34 160 CURVE",
"34 162 LINE",
"29 171 OFFCURVE",
"27 181 OFFCURVE",
"27 190 CURVE SMOOTH",
"27 205 OFFCURVE",
"33 214 OFFCURVE",
"44 218 CURVE SMOOTH",
"48 219 OFFCURVE",
"51 220 OFFCURVE",
"53 220 CURVE SMOOTH",
"67 220 OFFCURVE",
"76 212 OFFCURVE",
"79 197 CURVE",
"80 195 OFFCURVE",
"80 192 OFFCURVE",
"80 189 CURVE SMOOTH",
"80 179 OFFCURVE",
"76 166 OFFCURVE",
"69 149 CURVE SMOOTH",
"66 142 OFFCURVE",
"61 135 OFFCURVE",
"58 128 CURVE SMOOTH",
"48 106 LINE SMOOTH",
"36 79 OFFCURVE",
"31 56 OFFCURVE",
"31 35 CURVE SMOOTH",
"31 22 OFFCURVE",
"33 10 OFFCURVE",
"37 -1 CURVE SMOOTH",
"48 -26 OFFCURVE",
"67 -39 OFFCURVE",
"93 -39 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01292 3 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 3 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0127 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01219 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 79 170 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 92 170 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01243 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01246 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01296 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01274 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01225 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 25 24 25 40 25 56 25 72 25 88 25 104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 25 24 25 40 25 56 25 72 25 88 25 104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 25 24 25 40 25 56 25 72 25 88 25 104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 427;
}
);
note = w;
unicode = 0077;
},
{
glyphname = wacute;
lastChange = "2021-10-08 06:04:28 +0000";
layers = (
{
background = {
components = (
{
name = w;
},
{
name = acutecomb;
}
);
};
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 184, -33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 427;
}
);
unicode = 1E83;
},
{
glyphname = wcircumflex;
lastChange = "2021-10-08 06:04:28 +0000";
layers = (
{
background = {
components = (
{
name = w;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 132, -33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 427;
}
);
unicode = 0175;
},
{
glyphname = wdieresis;
lastChange = "2021-10-08 06:30:52 +0000";
layers = (
{
background = {
components = (
{
name = w;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 156, -33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 427;
}
);
unicode = 1E85;
},
{
glyphname = wgrave;
lastChange = "2021-10-08 06:04:28 +0000";
layers = (
{
background = {
components = (
{
name = w;
},
{
name = gravecomb;
}
);
};
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 148, -33}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 427;
}
);
unicode = 1E81;
},
{
glyphname = x;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"366 -89 OFFCURVE",
"373 -78 OFFCURVE",
"378 -67 CURVE",
"378 -68 LINE",
"381 -62 OFFCURVE",
"377 -58 OFFCURVE",
"373 -58 CURVE SMOOTH",
"370 -58 OFFCURVE",
"367 -60 OFFCURVE",
"366 -63 CURVE SMOOTH",
"363 -70 OFFCURVE",
"357 -76 OFFCURVE",
"347 -81 CURVE SMOOTH",
"342 -83 OFFCURVE",
"337 -84 OFFCURVE",
"330 -84 CURVE SMOOTH",
"321 -84 OFFCURVE",
"311 -83 OFFCURVE",
"298 -80 CURVE SMOOTH",
"238 -67 OFFCURVE",
"179 67 OFFCURVE",
"154 123 CURVE",
"194 167 OFFCURVE",
"223 203 OFFCURVE",
"241 231 CURVE SMOOTH",
"244 236 OFFCURVE",
"245 240 OFFCURVE",
"245 244 CURVE SMOOTH",
"245 253 OFFCURVE",
"240 259 OFFCURVE",
"235 259 CURVE SMOOTH",
"232 259 OFFCURVE",
"228 257 OFFCURVE",
"225 252 CURVE SMOOTH",
"209 225 OFFCURVE",
"183 193 OFFCURVE",
"146 146 CURVE",
"128 194 OFFCURVE",
"100 239 OFFCURVE",
"48 239 CURVE SMOOTH",
"30 239 OFFCURVE",
"21 230 OFFCURVE",
"21 221 CURVE SMOOTH",
"21 213 OFFCURVE",
"29 205 OFFCURVE",
"45 205 CURVE SMOOTH",
"74 205 OFFCURVE",
"100 175 OFFCURVE",
"121 116 CURVE",
"73 57 OFFCURVE",
"40 8 OFFCURVE",
"21 -33 CURVE",
"20 -34 OFFCURVE",
"20 -36 OFFCURVE",
"20 -37 CURVE SMOOTH",
"20 -42 OFFCURVE",
"23 -44 OFFCURVE",
"28 -44 CURVE SMOOTH",
"31 -44 OFFCURVE",
"33 -43 OFFCURVE",
"34 -40 CURVE SMOOTH",
"51 -3 OFFCURVE",
"110 76 OFFCURVE",
"128 94 CURVE",
"171 3 OFFCURVE",
"218 -99 OFFCURVE",
"312 -99 CURVE SMOOTH",
"323 -99 OFFCURVE",
"336 -97 OFFCURVE",
"349 -94 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"323 -99 OFFCURVE",
"336 -97 OFFCURVE",
"349 -94 CURVE SMOOTH",
"366 -89 OFFCURVE",
"373 -78 OFFCURVE",
"378 -67 CURVE",
"378 -68 LINE",
"381 -62 OFFCURVE",
"377 -58 OFFCURVE",
"373 -58 CURVE SMOOTH",
"370 -58 OFFCURVE",
"367 -60 OFFCURVE",
"366 -63 CURVE SMOOTH",
"363 -70 OFFCURVE",
"357 -76 OFFCURVE",
"347 -81 CURVE SMOOTH",
"342 -83 OFFCURVE",
"337 -84 OFFCURVE",
"330 -84 CURVE SMOOTH",
"321 -84 OFFCURVE",
"311 -83 OFFCURVE",
"298 -80 CURVE SMOOTH",
"238 -67 OFFCURVE",
"179 67 OFFCURVE",
"154 123 CURVE",
"194 167 OFFCURVE",
"223 203 OFFCURVE",
"241 231 CURVE SMOOTH",
"244 236 OFFCURVE",
"245 240 OFFCURVE",
"245 244 CURVE SMOOTH",
"245 253 OFFCURVE",
"240 259 OFFCURVE",
"235 259 CURVE SMOOTH",
"232 259 OFFCURVE",
"228 257 OFFCURVE",
"225 252 CURVE SMOOTH",
"209 225 OFFCURVE",
"183 193 OFFCURVE",
"146 146 CURVE",
"128 194 OFFCURVE",
"100 239 OFFCURVE",
"48 239 CURVE SMOOTH",
"30 239 OFFCURVE",
"21 230 OFFCURVE",
"21 221 CURVE SMOOTH",
"21 213 OFFCURVE",
"29 205 OFFCURVE",
"45 205 CURVE SMOOTH",
"74 205 OFFCURVE",
"100 175 OFFCURVE",
"121 116 CURVE",
"73 57 OFFCURVE",
"40 8 OFFCURVE",
"21 -33 CURVE",
"20 -34 OFFCURVE",
"20 -36 OFFCURVE",
"20 -37 CURVE SMOOTH",
"20 -42 OFFCURVE",
"23 -44 OFFCURVE",
"28 -44 CURVE SMOOTH",
"31 -44 OFFCURVE",
"33 -43 OFFCURVE",
"34 -40 CURVE SMOOTH",
"51 -3 OFFCURVE",
"110 76 OFFCURVE",
"128 94 CURVE",
"171 3 OFFCURVE",
"218 -99 OFFCURVE",
"312 -99 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01223 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 184 23 200 23 216 23 232 23 248 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 184 23 200 23 216 23 232 23 248 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 23 24 23 40 23 56 23 72 23 88 23 104 23 120 23 136 23 152 23 168 23 184 23 200 23 216 23 232 23 248 23 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 253;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{328, 69}";
},
{
name = top;
position = "{217, 319}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"195 -181 OFFCURVE",
"267 -118 OFFCURVE",
"270 -38 CURVE SMOOTH",
"270 -25 LINE SMOOTH",
"270 38 OFFCURVE",
"244 82 OFFCURVE",
"216 135 CURVE",
"231 164 OFFCURVE",
"253 206 OFFCURVE",
"253 238 CURVE SMOOTH",
"253 256 OFFCURVE",
"246 265 OFFCURVE",
"233 265 CURVE SMOOTH",
"226 265 OFFCURVE",
"219 261 OFFCURVE",
"214 252 CURVE SMOOTH",
"209 243 OFFCURVE",
"206 229 OFFCURVE",
"203 209 CURVE SMOOTH",
"194 141 OFFCURVE",
"178 47 OFFCURVE",
"100 47 CURVE SMOOTH",
"69 47 OFFCURVE",
"61 74 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 168 OFFCURVE",
"140 218 OFFCURVE",
"140 288 CURVE SMOOTH",
"140 335 OFFCURVE",
"118 367 OFFCURVE",
"78 367 CURVE SMOOTH",
"59 367 OFFCURVE",
"43 361 OFFCURVE",
"30 350 CURVE SMOOTH",
"18 338 OFFCURVE",
"13 323 OFFCURVE",
"13 309 CURVE SMOOTH",
"13 285 OFFCURVE",
"25 262 OFFCURVE",
"38 255 CURVE SMOOTH",
"40 254 OFFCURVE",
"46 258 OFFCURVE",
"46 263 CURVE SMOOTH",
"46 264 OFFCURVE",
"45 266 OFFCURVE",
"43 268 CURVE SMOOTH",
"41 271 LINE",
"38 277 LINE SMOOTH",
"34 286 OFFCURVE",
"31 295 OFFCURVE",
"31 303 CURVE SMOOTH",
"31 313 OFFCURVE",
"35 323 OFFCURVE",
"43 332 CURVE SMOOTH",
"50 340 OFFCURVE",
"61 344 OFFCURVE",
"74 344 CURVE SMOOTH",
"105 344 OFFCURVE",
"118 319 OFFCURVE",
"118 290 CURVE SMOOTH",
"118 233 OFFCURVE",
"25 184 OFFCURVE",
"25 110 CURVE SMOOTH",
"25 67 OFFCURVE",
"44 30 OFFCURVE",
"103 30 CURVE SMOOTH",
"156 30 OFFCURVE",
"186 69 OFFCURVE",
"205 114 CURVE",
"225 101 OFFCURVE",
"237 26 OFFCURVE",
"237 3 CURVE SMOOTH",
"237 -83 OFFCURVE",
"203 -161 OFFCURVE",
"117 -161 CURVE SMOOTH",
"94 -161 OFFCURVE",
"72 -154 OFFCURVE",
"56 -141 CURVE SMOOTH",
"39 -128 OFFCURVE",
"30 -104 OFFCURVE",
"30 -84 CURVE SMOOTH",
"30 -51 OFFCURVE",
"43 -17 OFFCURVE",
"76 -17 CURVE SMOOTH",
"97 -17 OFFCURVE",
"116 -26 OFFCURVE",
"116 -50 CURVE SMOOTH",
"116 -70 OFFCURVE",
"99 -83 OFFCURVE",
"86 -83 CURVE SMOOTH",
"81 -83 OFFCURVE",
"78 -85 OFFCURVE",
"78 -89 CURVE SMOOTH",
"78 -92 OFFCURVE",
"81 -94 OFFCURVE",
"86 -94 CURVE SMOOTH",
"105 -94 OFFCURVE",
"129 -81 OFFCURVE",
"129 -50 CURVE SMOOTH",
"129 -18 OFFCURVE",
"103 -3 OFFCURVE",
"75 -3 CURVE SMOOTH",
"26 -3 OFFCURVE",
"6 -42 OFFCURVE",
"6 -86 CURVE SMOOTH",
"6 -111 OFFCURVE",
"12 -130 OFFCURVE",
"25 -143 CURVE SMOOTH",
"46 -168 OFFCURVE",
"79 -181 OFFCURVE",
"114 -181 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"195 -181 OFFCURVE",
"270 -118 OFFCURVE",
"270 -38 CURVE SMOOTH",
"270 -25 LINE SMOOTH",
"270 38 OFFCURVE",
"244 82 OFFCURVE",
"216 135 CURVE",
"231 164 OFFCURVE",
"253 206 OFFCURVE",
"253 238 CURVE SMOOTH",
"253 256 OFFCURVE",
"246 265 OFFCURVE",
"233 265 CURVE SMOOTH",
"226 265 OFFCURVE",
"219 261 OFFCURVE",
"214 252 CURVE SMOOTH",
"209 243 OFFCURVE",
"206 229 OFFCURVE",
"203 209 CURVE SMOOTH",
"194 141 OFFCURVE",
"178 47 OFFCURVE",
"100 47 CURVE SMOOTH",
"69 47 OFFCURVE",
"61 74 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 168 OFFCURVE",
"140 218 OFFCURVE",
"140 288 CURVE SMOOTH",
"140 335 OFFCURVE",
"118 367 OFFCURVE",
"78 367 CURVE SMOOTH",
"59 367 OFFCURVE",
"43 361 OFFCURVE",
"30 350 CURVE SMOOTH",
"18 338 OFFCURVE",
"13 323 OFFCURVE",
"13 309 CURVE SMOOTH",
"13 285 OFFCURVE",
"25 262 OFFCURVE",
"38 255 CURVE SMOOTH",
"40 254 OFFCURVE",
"46 258 OFFCURVE",
"46 263 CURVE SMOOTH",
"46 264 OFFCURVE",
"45 266 OFFCURVE",
"43 268 CURVE SMOOTH",
"41 271 LINE",
"38 277 LINE SMOOTH",
"34 286 OFFCURVE",
"31 295 OFFCURVE",
"31 303 CURVE SMOOTH",
"31 313 OFFCURVE",
"35 323 OFFCURVE",
"43 332 CURVE SMOOTH",
"50 340 OFFCURVE",
"61 344 OFFCURVE",
"74 344 CURVE SMOOTH",
"105 344 OFFCURVE",
"118 319 OFFCURVE",
"118 290 CURVE SMOOTH",
"118 233 OFFCURVE",
"25 184 OFFCURVE",
"25 110 CURVE SMOOTH",
"25 67 OFFCURVE",
"44 30 OFFCURVE",
"103 30 CURVE SMOOTH",
"156 30 OFFCURVE",
"186 69 OFFCURVE",
"205 114 CURVE",
"225 101 OFFCURVE",
"237 26 OFFCURVE",
"237 3 CURVE SMOOTH",
"237 -83 OFFCURVE",
"203 -161 OFFCURVE",
"117 -161 CURVE SMOOTH",
"94 -161 OFFCURVE",
"72 -154 OFFCURVE",
"56 -141 CURVE SMOOTH",
"39 -128 OFFCURVE",
"30 -104 OFFCURVE",
"30 -84 CURVE SMOOTH",
"30 -51 OFFCURVE",
"43 -17 OFFCURVE",
"76 -17 CURVE SMOOTH",
"97 -17 OFFCURVE",
"116 -26 OFFCURVE",
"116 -50 CURVE SMOOTH",
"116 -70 OFFCURVE",
"99 -83 OFFCURVE",
"86 -83 CURVE SMOOTH",
"81 -83 OFFCURVE",
"78 -85 OFFCURVE",
"78 -89 CURVE SMOOTH",
"78 -92 OFFCURVE",
"81 -94 OFFCURVE",
"86 -94 CURVE SMOOTH",
"105 -94 OFFCURVE",
"129 -81 OFFCURVE",
"129 -50 CURVE SMOOTH",
"129 -18 OFFCURVE",
"103 -3 OFFCURVE",
"75 -3 CURVE SMOOTH",
"26 -3 OFFCURVE",
"6 -42 OFFCURVE",
"6 -86 CURVE SMOOTH",
"6 -111 OFFCURVE",
"12 -130 OFFCURVE",
"25 -143 CURVE SMOOTH",
"46 -168 OFFCURVE",
"79 -181 OFFCURVE",
"114 -181 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01284 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 4 108 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 84 165 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 2 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 1 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01213 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 277;
}
);
note = y;
unicode = 0079;
},
{
glyphname = yacute;
lastChange = "2021-10-08 06:04:51 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = acutecomb;
}
);
};
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 185, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 00FD;
},
{
glyphname = ycircumflex;
lastChange = "2021-10-08 06:04:49 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 133, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 0177;
},
{
glyphname = ydieresis;
lastChange = "2021-10-08 06:30:52 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = dieresiscomb;
}
);
};
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 157, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 3 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 3 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 4 108 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 33 165 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 84 165 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 2 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 1 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01213 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 13 23 13 39 13 55 13 71 13 87 13 103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 277;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = ydotbelow;
lastChange = "2021-10-08 06:04:58 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = dotbelowcomb;
}
);
};
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 307, 69}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
lastChange = "2021-10-08 06:04:51 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = gravecomb;
}
);
};
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 149, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2021-10-08 06:04:51 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = hookabovecomb;
}
);
};
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 176, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 1EF7;
},
{
glyphname = ymacron;
lastChange = "2021-10-08 06:59:31 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = macroncomb;
}
);
};
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 143, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 0233;
},
{
glyphname = ytilde;
lastChange = "2021-10-08 06:04:51 +0000";
layers = (
{
background = {
components = (
{
name = y;
},
{
name = tildecomb;
}
);
};
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 138, 59}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 277;
}
);
unicode = 1EF9;
},
{
glyphname = z;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{131, 0}";
},
{
name = center;
position = "{131, 130}";
},
{
name = top;
position = "{131, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"222 12 OFFCURVE",
"254 37 OFFCURVE",
"255 88 CURVE SMOOTH",
"255 101 OFFCURVE",
"250 113 OFFCURVE",
"241 122 CURVE SMOOTH",
"231 130 OFFCURVE",
"220 134 OFFCURVE",
"208 134 CURVE SMOOTH",
"201 134 OFFCURVE",
"193 132 OFFCURVE",
"185 129 CURVE",
"176 123 OFFCURVE",
"172 117 OFFCURVE",
"172 112 CURVE SMOOTH",
"172 105 OFFCURVE",
"175 102 OFFCURVE",
"180 102 CURVE SMOOTH",
"183 102 OFFCURVE",
"184 105 OFFCURVE",
"185 110 CURVE SMOOTH",
"186 115 OFFCURVE",
"194 118 OFFCURVE",
"208 118 CURVE SMOOTH",
"227 118 OFFCURVE",
"236 108 OFFCURVE",
"235 89 CURVE SMOOTH",
"232 52 OFFCURVE",
"209 34 OFFCURVE",
"165 34 CURVE SMOOTH",
"156 34 OFFCURVE",
"142 36 OFFCURVE",
"123 40 CURVE SMOOTH",
"104 43 OFFCURVE",
"80 49 OFFCURVE",
"49 57 CURVE",
"75 82 OFFCURVE",
"99 105 OFFCURVE",
"120 124 CURVE SMOOTH",
"178 176 LINE SMOOTH",
"192 189 OFFCURVE",
"202 200 OFFCURVE",
"208 208 CURVE SMOOTH",
"214 215 OFFCURVE",
"217 221 OFFCURVE",
"217 224 CURVE SMOOTH",
"217 228 OFFCURVE",
"213 231 OFFCURVE",
"205 234 CURVE SMOOTH",
"165 247 OFFCURVE",
"124 254 OFFCURVE",
"81 254 CURVE SMOOTH",
"72 254 LINE",
"62 253 LINE SMOOTH",
"42 252 OFFCURVE",
"29 241 OFFCURVE",
"29 220 CURVE SMOOTH",
"29 212 OFFCURVE",
"33 204 OFFCURVE",
"40 197 CURVE SMOOTH",
"43 194 OFFCURVE",
"46 193 OFFCURVE",
"51 193 CURVE SMOOTH",
"55 193 OFFCURVE",
"57 193 OFFCURVE",
"58 194 CURVE SMOOTH",
"59 195 OFFCURVE",
"59 196 OFFCURVE",
"59 197 CURVE SMOOTH",
"59 198 LINE",
"58 200 LINE",
"49 209 OFFCURVE",
"45 216 OFFCURVE",
"45 222 CURVE SMOOTH",
"45 233 OFFCURVE",
"55 235 OFFCURVE",
"70 236 CURVE SMOOTH",
"101 236 OFFCURVE",
"134 232 OFFCURVE",
"181 221 CURVE",
"154 201 OFFCURVE",
"129 177 OFFCURVE",
"97 146 CURVE SMOOTH",
"82 131 OFFCURVE",
"68 117 OFFCURVE",
"53 103 CURVE SMOOTH",
"10 60 LINE",
"7 58 OFFCURVE",
"6 55 OFFCURVE",
"6 52 CURVE SMOOTH",
"6 45 OFFCURVE",
"10 40 OFFCURVE",
"18 38 CURVE SMOOTH",
"77 19 OFFCURVE",
"123 12 OFFCURVE",
"158 12 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"222 12 OFFCURVE",
"254 37 OFFCURVE",
"255 88 CURVE SMOOTH",
"255 101 OFFCURVE",
"250 113 OFFCURVE",
"241 122 CURVE SMOOTH",
"231 130 OFFCURVE",
"220 134 OFFCURVE",
"208 134 CURVE SMOOTH",
"201 134 OFFCURVE",
"193 132 OFFCURVE",
"185 129 CURVE",
"176 123 OFFCURVE",
"172 117 OFFCURVE",
"172 112 CURVE SMOOTH",
"172 105 OFFCURVE",
"175 102 OFFCURVE",
"180 102 CURVE SMOOTH",
"183 102 OFFCURVE",
"184 105 OFFCURVE",
"185 110 CURVE SMOOTH",
"186 115 OFFCURVE",
"194 118 OFFCURVE",
"208 118 CURVE SMOOTH",
"227 118 OFFCURVE",
"236 108 OFFCURVE",
"235 89 CURVE SMOOTH",
"232 52 OFFCURVE",
"209 34 OFFCURVE",
"165 34 CURVE SMOOTH",
"156 34 OFFCURVE",
"142 36 OFFCURVE",
"123 40 CURVE SMOOTH",
"104 43 OFFCURVE",
"80 49 OFFCURVE",
"49 57 CURVE",
"75 82 OFFCURVE",
"99 105 OFFCURVE",
"120 124 CURVE SMOOTH",
"178 176 LINE SMOOTH",
"192 189 OFFCURVE",
"202 200 OFFCURVE",
"208 208 CURVE SMOOTH",
"214 215 OFFCURVE",
"217 221 OFFCURVE",
"217 224 CURVE SMOOTH",
"217 228 OFFCURVE",
"213 231 OFFCURVE",
"205 234 CURVE SMOOTH",
"165 247 OFFCURVE",
"124 254 OFFCURVE",
"81 254 CURVE SMOOTH",
"72 254 LINE",
"62 253 LINE SMOOTH",
"42 252 OFFCURVE",
"29 241 OFFCURVE",
"29 220 CURVE SMOOTH",
"29 212 OFFCURVE",
"33 204 OFFCURVE",
"40 197 CURVE SMOOTH",
"43 194 OFFCURVE",
"46 193 OFFCURVE",
"51 193 CURVE SMOOTH",
"55 193 OFFCURVE",
"57 193 OFFCURVE",
"58 194 CURVE SMOOTH",
"59 195 OFFCURVE",
"59 196 OFFCURVE",
"59 197 CURVE SMOOTH",
"59 198 LINE",
"58 200 LINE",
"49 209 OFFCURVE",
"45 216 OFFCURVE",
"45 222 CURVE SMOOTH",
"45 233 OFFCURVE",
"55 235 OFFCURVE",
"70 236 CURVE SMOOTH",
"101 236 OFFCURVE",
"134 232 OFFCURVE",
"181 221 CURVE",
"154 201 OFFCURVE",
"129 177 OFFCURVE",
"97 146 CURVE SMOOTH",
"82 131 OFFCURVE",
"68 117 OFFCURVE",
"53 103 CURVE SMOOTH",
"10 60 LINE",
"7 58 OFFCURVE",
"6 55 OFFCURVE",
"6 52 CURVE SMOOTH",
"6 45 OFFCURVE",
"10 40 OFFCURVE",
"18 38 CURVE SMOOTH",
"77 19 OFFCURVE",
"123 12 OFFCURVE",
"158 12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01253 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 3 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 61 170 61 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01215 57 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 53 170 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01238 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01251 2 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01218 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 262;
}
);
note = z;
unicode = 007A;
},
{
glyphname = zacute;
lastChange = "2021-10-08 06:05:04 +0000";
layers = (
{
background = {
components = (
{
name = z;
},
{
name = acutecomb;
}
);
};
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 99, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 262;
}
);
unicode = 017A;
},
{
glyphname = zcaron;
lastChange = "2021-10-08 06:06:23 +0000";
layers = (
{
background = {
components = (
{
name = z;
},
{
name = caroncomb;
}
);
};
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 262;
}
);
unicode = 017E;
},
{
glyphname = zdotaccent;
lastChange = "2021-10-08 06:05:04 +0000";
layers = (
{
background = {
components = (
{
name = z;
},
{
name = dotaccentcomb;
}
);
};
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 262;
}
);
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"514 489 OFFCURVE",
"491 507 OFFCURVE",
"453 507 CURVE SMOOTH",
"448 507 OFFCURVE",
"444 507 OFFCURVE",
"442 506 CURVE",
"402 502 OFFCURVE",
"368 483 OFFCURVE",
"341 449 CURVE SMOOTH",
"307 409 OFFCURVE",
"290 354 OFFCURVE",
"283 293 CURVE",
"114 292 LINE SMOOTH",
"108 292 OFFCURVE",
"103 292 OFFCURVE",
"98 291 CURVE",
"105 342 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"95 409 OFFCURVE",
"78 352 OFFCURVE",
"72 290 CURVE",
"63 290 OFFCURVE",
"56 289 OFFCURVE",
"51 289 CURVE SMOOTH",
"37 288 OFFCURVE",
"31 281 OFFCURVE",
"31 268 CURVE SMOOTH",
"31 263 OFFCURVE",
"34 261 OFFCURVE",
"39 261 CURVE SMOOTH",
"49 262 OFFCURVE",
"60 263 OFFCURVE",
"70 263 CURVE",
"66 174 OFFCURVE",
"82 77 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH",
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 203 OFFCURVE",
"94 236 CURVE SMOOTH",
"94 246 OFFCURVE",
"94 255 OFFCURVE",
"95 265 CURVE",
"154 269 OFFCURVE",
"216 272 OFFCURVE",
"282 273 CURVE",
"281 260 OFFCURVE",
"281 247 OFFCURVE",
"281 234 CURVE SMOOTH",
"281 156 OFFCURVE",
"295 73 OFFCURVE",
"314 5 CURVE SMOOTH",
"319 -12 OFFCURVE",
"331 -20 OFFCURVE",
"341 -20 CURVE SMOOTH",
"350 -20 OFFCURVE",
"357 -14 OFFCURVE",
"357 0 CURVE SMOOTH",
"357 5 OFFCURVE",
"355 12 OFFCURVE",
"351 20 CURVE SMOOTH",
"336 50 OFFCURVE",
"325 89 OFFCURVE",
"317 137 CURVE SMOOTH",
"310 169 OFFCURVE",
"306 203 OFFCURVE",
"306 237 CURVE SMOOTH",
"306 249 OFFCURVE",
"307 261 OFFCURVE",
"308 273 CURVE",
"350 273 LINE SMOOTH",
"368 273 OFFCURVE",
"383 272 OFFCURVE",
"392 271 CURVE",
"395 270 LINE",
"403 270 OFFCURVE",
"407 273 OFFCURVE",
"407 280 CURVE SMOOTH",
"407 284 OFFCURVE",
"403 287 OFFCURVE",
"398 289 CURVE SMOOTH",
"389 291 OFFCURVE",
"360 292 OFFCURVE",
"310 293 CURVE",
"318 343 OFFCURVE",
"335 391 OFFCURVE",
"366 432 CURVE SMOOTH",
"389 462 OFFCURVE",
"414 479 OFFCURVE",
"442 483 CURVE SMOOTH",
"444 483 OFFCURVE",
"446 484 OFFCURVE",
"448 484 CURVE SMOOTH",
"453 484 LINE SMOOTH",
"476 484 OFFCURVE",
"491 472 OFFCURVE",
"498 447 CURVE",
"499 445 OFFCURVE",
"499 442 OFFCURVE",
"499 438 CURVE SMOOTH",
"499 413 OFFCURVE",
"483 393 OFFCURVE",
"462 393 CURVE SMOOTH",
"455 393 OFFCURVE",
"446 396 OFFCURVE",
"438 402 CURVE SMOOTH",
"434 405 OFFCURVE",
"425 401 OFFCURVE",
"425 395 CURVE SMOOTH",
"425 394 OFFCURVE",
"426 393 OFFCURVE",
"426 392 CURVE",
"429 388 OFFCURVE",
"433 384 OFFCURVE",
"439 381 CURVE SMOOTH",
"446 377 OFFCURVE",
"454 376 OFFCURVE",
"461 376 CURVE SMOOTH",
"478 376 OFFCURVE",
"495 384 OFFCURVE",
"507 397 CURVE SMOOTH",
"518 410 OFFCURVE",
"524 424 OFFCURVE",
"524 440 CURVE SMOOTH",
"524 443 OFFCURVE",
"523 447 OFFCURVE",
"522 454 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 203 OFFCURVE",
"94 236 CURVE SMOOTH",
"94 246 OFFCURVE",
"94 255 OFFCURVE",
"95 265 CURVE",
"154 269 OFFCURVE",
"216 272 OFFCURVE",
"282 273 CURVE",
"281 260 OFFCURVE",
"281 247 OFFCURVE",
"281 234 CURVE SMOOTH",
"281 156 OFFCURVE",
"295 73 OFFCURVE",
"314 5 CURVE SMOOTH",
"319 -12 OFFCURVE",
"331 -20 OFFCURVE",
"341 -20 CURVE SMOOTH",
"350 -20 OFFCURVE",
"357 -14 OFFCURVE",
"357 0 CURVE SMOOTH",
"357 5 OFFCURVE",
"355 12 OFFCURVE",
"351 20 CURVE SMOOTH",
"336 50 OFFCURVE",
"325 89 OFFCURVE",
"317 137 CURVE SMOOTH",
"310 169 OFFCURVE",
"306 203 OFFCURVE",
"306 237 CURVE SMOOTH",
"306 249 OFFCURVE",
"307 261 OFFCURVE",
"308 273 CURVE",
"350 273 LINE SMOOTH",
"368 273 OFFCURVE",
"383 272 OFFCURVE",
"392 271 CURVE",
"395 270 LINE",
"403 270 OFFCURVE",
"407 273 OFFCURVE",
"407 280 CURVE SMOOTH",
"407 284 OFFCURVE",
"403 287 OFFCURVE",
"398 289 CURVE SMOOTH",
"389 291 OFFCURVE",
"360 292 OFFCURVE",
"310 293 CURVE",
"318 343 OFFCURVE",
"335 391 OFFCURVE",
"366 432 CURVE SMOOTH",
"389 462 OFFCURVE",
"414 479 OFFCURVE",
"442 483 CURVE SMOOTH",
"444 483 OFFCURVE",
"446 484 OFFCURVE",
"448 484 CURVE SMOOTH",
"453 484 LINE SMOOTH",
"476 484 OFFCURVE",
"491 472 OFFCURVE",
"498 447 CURVE",
"499 445 OFFCURVE",
"499 442 OFFCURVE",
"499 438 CURVE SMOOTH",
"499 413 OFFCURVE",
"483 393 OFFCURVE",
"462 393 CURVE SMOOTH",
"455 393 OFFCURVE",
"446 396 OFFCURVE",
"438 402 CURVE SMOOTH",
"434 405 OFFCURVE",
"425 401 OFFCURVE",
"425 395 CURVE SMOOTH",
"425 394 OFFCURVE",
"426 393 OFFCURVE",
"426 392 CURVE",
"429 388 OFFCURVE",
"433 384 OFFCURVE",
"439 381 CURVE SMOOTH",
"446 377 OFFCURVE",
"454 376 OFFCURVE",
"461 376 CURVE SMOOTH",
"478 376 OFFCURVE",
"495 384 OFFCURVE",
"507 397 CURVE SMOOTH",
"518 410 OFFCURVE",
"524 424 OFFCURVE",
"524 440 CURVE SMOOTH",
"524 443 OFFCURVE",
"523 447 OFFCURVE",
"522 454 CURVE SMOOTH",
"514 489 OFFCURVE",
"491 507 OFFCURVE",
"453 507 CURVE SMOOTH",
"448 507 OFFCURVE",
"444 507 OFFCURVE",
"442 506 CURVE",
"402 502 OFFCURVE",
"368 483 OFFCURVE",
"341 449 CURVE SMOOTH",
"307 409 OFFCURVE",
"290 354 OFFCURVE",
"283 293 CURVE",
"114 292 LINE SMOOTH",
"108 292 OFFCURVE",
"103 292 OFFCURVE",
"98 291 CURVE",
"105 342 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"95 409 OFFCURVE",
"78 352 OFFCURVE",
"72 290 CURVE",
"63 290 OFFCURVE",
"56 289 OFFCURVE",
"51 289 CURVE SMOOTH",
"37 288 OFFCURVE",
"31 281 OFFCURVE",
"31 268 CURVE SMOOTH",
"31 263 OFFCURVE",
"34 261 OFFCURVE",
"39 261 CURVE SMOOTH",
"49 262 OFFCURVE",
"60 263 OFFCURVE",
"70 263 CURVE",
"66 174 OFFCURVE",
"82 77 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH"
);
}
);
width = 387;
}
);
},
{
glyphname = f_f_i;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"514 489 OFFCURVE",
"491 507 OFFCURVE",
"453 507 CURVE SMOOTH",
"448 507 OFFCURVE",
"444 507 OFFCURVE",
"442 506 CURVE",
"402 502 OFFCURVE",
"368 483 OFFCURVE",
"341 449 CURVE SMOOTH",
"307 409 OFFCURVE",
"290 354 OFFCURVE",
"283 293 CURVE",
"114 292 LINE SMOOTH",
"108 292 OFFCURVE",
"103 292 OFFCURVE",
"98 291 CURVE",
"105 342 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"95 409 OFFCURVE",
"78 352 OFFCURVE",
"72 290 CURVE",
"63 290 OFFCURVE",
"56 289 OFFCURVE",
"51 289 CURVE SMOOTH",
"37 288 OFFCURVE",
"31 281 OFFCURVE",
"31 268 CURVE SMOOTH",
"31 263 OFFCURVE",
"34 261 OFFCURVE",
"39 261 CURVE SMOOTH",
"49 262 OFFCURVE",
"60 263 OFFCURVE",
"70 263 CURVE",
"66 174 OFFCURVE",
"82 77 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH",
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 203 OFFCURVE",
"94 236 CURVE SMOOTH",
"94 246 OFFCURVE",
"94 255 OFFCURVE",
"95 265 CURVE",
"154 269 OFFCURVE",
"216 272 OFFCURVE",
"282 273 CURVE",
"281 260 OFFCURVE",
"281 247 OFFCURVE",
"281 234 CURVE SMOOTH",
"281 156 OFFCURVE",
"295 73 OFFCURVE",
"314 5 CURVE SMOOTH",
"319 -12 OFFCURVE",
"331 -20 OFFCURVE",
"341 -20 CURVE SMOOTH",
"350 -20 OFFCURVE",
"357 -14 OFFCURVE",
"357 0 CURVE SMOOTH",
"357 5 OFFCURVE",
"355 12 OFFCURVE",
"351 20 CURVE SMOOTH",
"336 50 OFFCURVE",
"325 89 OFFCURVE",
"317 137 CURVE SMOOTH",
"310 169 OFFCURVE",
"306 203 OFFCURVE",
"306 237 CURVE SMOOTH",
"306 249 OFFCURVE",
"307 261 OFFCURVE",
"308 273 CURVE",
"350 273 LINE SMOOTH",
"368 273 OFFCURVE",
"383 272 OFFCURVE",
"392 271 CURVE",
"395 270 LINE",
"403 270 OFFCURVE",
"407 273 OFFCURVE",
"407 280 CURVE SMOOTH",
"407 284 OFFCURVE",
"403 287 OFFCURVE",
"398 289 CURVE SMOOTH",
"389 291 OFFCURVE",
"360 292 OFFCURVE",
"310 293 CURVE",
"318 343 OFFCURVE",
"335 391 OFFCURVE",
"366 432 CURVE SMOOTH",
"389 462 OFFCURVE",
"414 479 OFFCURVE",
"442 483 CURVE SMOOTH",
"444 483 OFFCURVE",
"446 484 OFFCURVE",
"448 484 CURVE SMOOTH",
"453 484 LINE SMOOTH",
"476 484 OFFCURVE",
"491 472 OFFCURVE",
"498 447 CURVE",
"499 445 OFFCURVE",
"499 442 OFFCURVE",
"499 438 CURVE",
"502 429 OFFCURVE",
"507 425 OFFCURVE",
"512 425 CURVE SMOOTH",
"518 425 OFFCURVE",
"524 431 OFFCURVE",
"524 440 CURVE SMOOTH",
"524 443 OFFCURVE",
"523 447 OFFCURVE",
"522 454 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"455 56 OFFCURVE",
"478 70 OFFCURVE",
"499 97 CURVE SMOOTH",
"511 112 OFFCURVE",
"519 130 OFFCURVE",
"527 149 CURVE SMOOTH",
"529 155 OFFCURVE",
"526 159 OFFCURVE",
"523 159 CURVE SMOOTH",
"522 159 OFFCURVE",
"519 157 OFFCURVE",
"518 154 CURVE SMOOTH",
"511 139 OFFCURVE",
"502 121 OFFCURVE",
"491 108 CURVE SMOOTH",
"474 88 OFFCURVE",
"459 78 OFFCURVE",
"444 78 CURVE SMOOTH",
"431 78 OFFCURVE",
"421 83 OFFCURVE",
"414 93 CURVE SMOOTH",
"408 102 OFFCURVE",
"405 112 OFFCURVE",
"405 125 CURVE SMOOTH",
"405 146 OFFCURVE",
"414 175 OFFCURVE",
"431 214 CURVE SMOOTH",
"442 240 LINE",
"450 258 LINE SMOOTH",
"452 263 OFFCURVE",
"454 268 OFFCURVE",
"454 272 CURVE SMOOTH",
"454 274 OFFCURVE",
"453 276 OFFCURVE",
"452 277 CURVE SMOOTH",
"449 280 OFFCURVE",
"446 282 OFFCURVE",
"442 282 CURVE SMOOTH",
"435 282 OFFCURVE",
"427 278 OFFCURVE",
"420 269 CURVE SMOOTH",
"412 260 OFFCURVE",
"404 246 OFFCURVE",
"397 227 CURVE SMOOTH",
"384 193 OFFCURVE",
"377 165 OFFCURVE",
"377 144 CURVE SMOOTH",
"377 89 OFFCURVE",
"390 63 OFFCURVE",
"417 58 CURVE SMOOTH",
"422 57 OFFCURVE",
"426 56 OFFCURVE",
"431 56 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"508 342 OFFCURVE",
"520 355 OFFCURVE",
"520 370 CURVE SMOOTH",
"520 386 OFFCURVE",
"508 398 OFFCURVE",
"492 398 CURVE SMOOTH",
"477 398 OFFCURVE",
"464 386 OFFCURVE",
"464 370 CURVE SMOOTH",
"464 355 OFFCURVE",
"477 342 OFFCURVE",
"492 342 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 203 OFFCURVE",
"94 236 CURVE SMOOTH",
"94 246 OFFCURVE",
"94 255 OFFCURVE",
"95 265 CURVE",
"154 269 OFFCURVE",
"216 272 OFFCURVE",
"282 273 CURVE",
"281 260 OFFCURVE",
"281 247 OFFCURVE",
"281 234 CURVE SMOOTH",
"281 156 OFFCURVE",
"295 73 OFFCURVE",
"314 5 CURVE SMOOTH",
"319 -12 OFFCURVE",
"331 -20 OFFCURVE",
"341 -20 CURVE SMOOTH",
"350 -20 OFFCURVE",
"357 -14 OFFCURVE",
"357 0 CURVE SMOOTH",
"357 5 OFFCURVE",
"355 12 OFFCURVE",
"351 20 CURVE SMOOTH",
"336 50 OFFCURVE",
"325 89 OFFCURVE",
"317 137 CURVE SMOOTH",
"310 169 OFFCURVE",
"306 203 OFFCURVE",
"306 237 CURVE SMOOTH",
"306 249 OFFCURVE",
"307 261 OFFCURVE",
"308 273 CURVE",
"350 273 LINE SMOOTH",
"368 273 OFFCURVE",
"383 272 OFFCURVE",
"392 271 CURVE",
"395 270 LINE",
"403 270 OFFCURVE",
"407 273 OFFCURVE",
"407 280 CURVE SMOOTH",
"407 284 OFFCURVE",
"403 287 OFFCURVE",
"398 289 CURVE SMOOTH",
"389 291 OFFCURVE",
"360 292 OFFCURVE",
"310 293 CURVE",
"318 343 OFFCURVE",
"335 391 OFFCURVE",
"366 432 CURVE SMOOTH",
"389 462 OFFCURVE",
"414 479 OFFCURVE",
"442 483 CURVE SMOOTH",
"444 483 OFFCURVE",
"446 484 OFFCURVE",
"448 484 CURVE SMOOTH",
"453 484 LINE SMOOTH",
"476 484 OFFCURVE",
"491 472 OFFCURVE",
"498 447 CURVE",
"499 445 OFFCURVE",
"499 442 OFFCURVE",
"499 438 CURVE",
"502 429 OFFCURVE",
"507 425 OFFCURVE",
"512 425 CURVE SMOOTH",
"518 425 OFFCURVE",
"524 431 OFFCURVE",
"524 440 CURVE SMOOTH",
"524 443 OFFCURVE",
"523 447 OFFCURVE",
"522 454 CURVE SMOOTH",
"514 489 OFFCURVE",
"491 507 OFFCURVE",
"453 507 CURVE SMOOTH",
"448 507 OFFCURVE",
"444 507 OFFCURVE",
"442 506 CURVE",
"402 502 OFFCURVE",
"368 483 OFFCURVE",
"341 449 CURVE SMOOTH",
"307 409 OFFCURVE",
"290 354 OFFCURVE",
"283 293 CURVE",
"114 292 LINE SMOOTH",
"108 292 OFFCURVE",
"103 292 OFFCURVE",
"98 291 CURVE",
"105 342 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"95 409 OFFCURVE",
"78 352 OFFCURVE",
"72 290 CURVE",
"63 290 OFFCURVE",
"56 289 OFFCURVE",
"51 289 CURVE SMOOTH",
"37 288 OFFCURVE",
"31 281 OFFCURVE",
"31 268 CURVE SMOOTH",
"31 263 OFFCURVE",
"34 261 OFFCURVE",
"39 261 CURVE SMOOTH",
"49 262 OFFCURVE",
"60 263 OFFCURVE",
"70 263 CURVE",
"66 174 OFFCURVE",
"82 77 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"455 56 OFFCURVE",
"478 70 OFFCURVE",
"499 97 CURVE SMOOTH",
"511 112 OFFCURVE",
"519 130 OFFCURVE",
"527 149 CURVE SMOOTH",
"529 155 OFFCURVE",
"526 159 OFFCURVE",
"523 159 CURVE SMOOTH",
"522 159 OFFCURVE",
"519 157 OFFCURVE",
"518 154 CURVE SMOOTH",
"511 139 OFFCURVE",
"502 121 OFFCURVE",
"491 108 CURVE SMOOTH",
"474 88 OFFCURVE",
"459 78 OFFCURVE",
"444 78 CURVE SMOOTH",
"431 78 OFFCURVE",
"421 83 OFFCURVE",
"414 93 CURVE SMOOTH",
"408 102 OFFCURVE",
"405 112 OFFCURVE",
"405 125 CURVE SMOOTH",
"405 146 OFFCURVE",
"414 175 OFFCURVE",
"431 214 CURVE SMOOTH",
"442 240 LINE",
"450 258 LINE SMOOTH",
"452 263 OFFCURVE",
"454 268 OFFCURVE",
"454 272 CURVE SMOOTH",
"454 274 OFFCURVE",
"453 276 OFFCURVE",
"452 277 CURVE SMOOTH",
"449 280 OFFCURVE",
"446 282 OFFCURVE",
"442 282 CURVE SMOOTH",
"435 282 OFFCURVE",
"427 278 OFFCURVE",
"420 269 CURVE SMOOTH",
"412 260 OFFCURVE",
"404 246 OFFCURVE",
"397 227 CURVE SMOOTH",
"384 193 OFFCURVE",
"377 165 OFFCURVE",
"377 144 CURVE SMOOTH",
"377 89 OFFCURVE",
"390 63 OFFCURVE",
"417 58 CURVE SMOOTH",
"422 57 OFFCURVE",
"426 56 OFFCURVE",
"431 56 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"508 342 OFFCURVE",
"520 355 OFFCURVE",
"520 370 CURVE SMOOTH",
"520 386 OFFCURVE",
"508 398 OFFCURVE",
"492 398 CURVE SMOOTH",
"477 398 OFFCURVE",
"464 386 OFFCURVE",
"464 370 CURVE SMOOTH",
"464 355 OFFCURVE",
"477 342 OFFCURVE",
"492 342 CURVE SMOOTH"
);
}
);
width = 474;
}
);
},
{
glyphname = f_f_l;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"633 159 OFFCURVE",
"632 158 OFFCURVE",
"630 155 CURVE SMOOTH",
"607 119 OFFCURVE",
"584 92 OFFCURVE",
"560 75 CURVE SMOOTH",
"539 60 OFFCURVE",
"520 52 OFFCURVE",
"505 52 CURVE SMOOTH",
"477 52 OFFCURVE",
"460 77 OFFCURVE",
"454 126 CURVE",
"545 197 OFFCURVE",
"598 280 OFFCURVE",
"612 375 CURVE SMOOTH",
"613 380 OFFCURVE",
"614 385 OFFCURVE",
"614 390 CURVE SMOOTH",
"614 403 LINE SMOOTH",
"614 427 OFFCURVE",
"609 446 OFFCURVE",
"599 460 CURVE SMOOTH",
"589 473 OFFCURVE",
"577 479 OFFCURVE",
"562 479 CURVE SMOOTH",
"546 479 OFFCURVE",
"530 472 OFFCURVE",
"515 457 CURVE",
"507 490 OFFCURVE",
"484 507 OFFCURVE",
"447 507 CURVE SMOOTH",
"442 507 OFFCURVE",
"438 507 OFFCURVE",
"436 506 CURVE",
"396 502 OFFCURVE",
"362 483 OFFCURVE",
"335 449 CURVE SMOOTH",
"312 422 OFFCURVE",
"295 385 OFFCURVE",
"283 340 CURVE SMOOTH",
"279 327 OFFCURVE",
"277 310 OFFCURVE",
"275 291 CURVE",
"98 290 LINE",
"105 341 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"94 408 OFFCURVE",
"77 352 OFFCURVE",
"71 289 CURVE",
"58 288 OFFCURVE",
"48 288 OFFCURVE",
"41 287 CURVE SMOOTH",
"29 286 OFFCURVE",
"22 279 OFFCURVE",
"22 266 CURVE SMOOTH",
"22 261 OFFCURVE",
"26 259 OFFCURVE",
"30 259 CURVE SMOOTH",
"69 262 LINE",
"65 177 OFFCURVE",
"80 84 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH",
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 202 OFFCURVE",
"94 235 CURVE SMOOTH",
"94 245 OFFCURVE",
"94 254 OFFCURVE",
"95 264 CURVE",
"151 268 OFFCURVE",
"211 270 OFFCURVE",
"274 271 CURVE",
"272 188 OFFCURVE",
"289 75 OFFCURVE",
"308 5 CURVE SMOOTH",
"313 -12 OFFCURVE",
"325 -20 OFFCURVE",
"335 -20 CURVE SMOOTH",
"344 -20 OFFCURVE",
"351 -14 OFFCURVE",
"351 0 CURVE SMOOTH",
"351 5 OFFCURVE",
"349 12 OFFCURVE",
"345 20 CURVE SMOOTH",
"330 50 OFFCURVE",
"319 89 OFFCURVE",
"311 137 CURVE SMOOTH",
"304 169 OFFCURVE",
"300 202 OFFCURVE",
"300 235 CURVE SMOOTH",
"300 247 OFFCURVE",
"301 259 OFFCURVE",
"302 271 CURVE",
"327 271 LINE SMOOTH",
"345 271 OFFCURVE",
"359 270 OFFCURVE",
"367 269 CURVE",
"370 268 LINE",
"378 268 OFFCURVE",
"381 271 OFFCURVE",
"381 278 CURVE SMOOTH",
"381 282 OFFCURVE",
"378 285 OFFCURVE",
"373 287 CURVE SMOOTH",
"366 289 OFFCURVE",
"343 290 OFFCURVE",
"304 290 CURVE",
"311 341 OFFCURVE",
"329 390 OFFCURVE",
"360 432 CURVE SMOOTH",
"383 462 OFFCURVE",
"408 479 OFFCURVE",
"436 483 CURVE SMOOTH",
"438 483 OFFCURVE",
"440 484 OFFCURVE",
"442 484 CURVE SMOOTH",
"447 484 LINE SMOOTH",
"470 484 OFFCURVE",
"485 472 OFFCURVE",
"492 447 CURVE",
"493 445 OFFCURVE",
"493 442 OFFCURVE",
"493 438 CURVE SMOOTH",
"493 427 LINE",
"471 393 OFFCURVE",
"454 356 OFFCURVE",
"441 312 CURVE SMOOTH",
"427 266 OFFCURVE",
"419 221 OFFCURVE",
"419 177 CURVE SMOOTH",
"419 114 OFFCURVE",
"431 70 OFFCURVE",
"458 47 CURVE SMOOTH",
"470 36 OFFCURVE",
"484 31 OFFCURVE",
"500 31 CURVE SMOOTH",
"513 31 OFFCURVE",
"528 35 OFFCURVE",
"543 43 CURVE SMOOTH",
"578 61 OFFCURVE",
"609 95 OFFCURVE",
"635 145 CURVE SMOOTH",
"636 147 OFFCURVE",
"637 149 OFFCURVE",
"637 152 CURVE SMOOTH",
"637 157 OFFCURVE",
"636 159 OFFCURVE",
"634 159 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"452 216 OFFCURVE",
"456 257 OFFCURVE",
"465 292 CURVE SMOOTH",
"477 340 OFFCURVE",
"492 380 OFFCURVE",
"515 415 CURVE SMOOTH",
"534 447 OFFCURVE",
"552 463 OFFCURVE",
"569 463 CURVE SMOOTH",
"586 463 OFFCURVE",
"592 445 OFFCURVE",
"592 418 CURVE SMOOTH",
"592 406 OFFCURVE",
"591 392 OFFCURVE",
"588 376 CURVE SMOOTH",
"575 296 OFFCURVE",
"530 219 OFFCURVE",
"452 144 CURVE",
"452 169 LINE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"98 169 OFFCURVE",
"94 202 OFFCURVE",
"94 235 CURVE SMOOTH",
"94 245 OFFCURVE",
"94 254 OFFCURVE",
"95 264 CURVE",
"151 268 OFFCURVE",
"211 270 OFFCURVE",
"274 271 CURVE",
"272 188 OFFCURVE",
"289 75 OFFCURVE",
"308 5 CURVE SMOOTH",
"313 -12 OFFCURVE",
"325 -20 OFFCURVE",
"335 -20 CURVE SMOOTH",
"344 -20 OFFCURVE",
"351 -14 OFFCURVE",
"351 0 CURVE SMOOTH",
"351 5 OFFCURVE",
"349 12 OFFCURVE",
"345 20 CURVE SMOOTH",
"330 50 OFFCURVE",
"319 89 OFFCURVE",
"311 137 CURVE SMOOTH",
"304 169 OFFCURVE",
"300 202 OFFCURVE",
"300 235 CURVE SMOOTH",
"300 247 OFFCURVE",
"301 259 OFFCURVE",
"302 271 CURVE",
"327 271 LINE SMOOTH",
"345 271 OFFCURVE",
"359 270 OFFCURVE",
"367 269 CURVE",
"370 268 LINE",
"378 268 OFFCURVE",
"381 271 OFFCURVE",
"381 278 CURVE SMOOTH",
"381 282 OFFCURVE",
"378 285 OFFCURVE",
"373 287 CURVE SMOOTH",
"366 289 OFFCURVE",
"343 290 OFFCURVE",
"304 290 CURVE",
"311 341 OFFCURVE",
"329 390 OFFCURVE",
"360 432 CURVE SMOOTH",
"383 462 OFFCURVE",
"408 479 OFFCURVE",
"436 483 CURVE SMOOTH",
"438 483 OFFCURVE",
"440 484 OFFCURVE",
"442 484 CURVE SMOOTH",
"447 484 LINE SMOOTH",
"470 484 OFFCURVE",
"485 472 OFFCURVE",
"492 447 CURVE",
"493 445 OFFCURVE",
"493 442 OFFCURVE",
"493 438 CURVE SMOOTH",
"493 427 LINE",
"471 393 OFFCURVE",
"454 356 OFFCURVE",
"441 312 CURVE SMOOTH",
"427 266 OFFCURVE",
"419 221 OFFCURVE",
"419 177 CURVE SMOOTH",
"419 114 OFFCURVE",
"431 70 OFFCURVE",
"458 47 CURVE SMOOTH",
"470 36 OFFCURVE",
"484 31 OFFCURVE",
"500 31 CURVE SMOOTH",
"513 31 OFFCURVE",
"528 35 OFFCURVE",
"543 43 CURVE SMOOTH",
"578 61 OFFCURVE",
"609 95 OFFCURVE",
"635 145 CURVE SMOOTH",
"636 147 OFFCURVE",
"637 149 OFFCURVE",
"637 152 CURVE SMOOTH",
"637 157 OFFCURVE",
"636 159 OFFCURVE",
"634 159 CURVE SMOOTH",
"633 159 OFFCURVE",
"632 158 OFFCURVE",
"630 155 CURVE SMOOTH",
"607 119 OFFCURVE",
"584 92 OFFCURVE",
"560 75 CURVE SMOOTH",
"539 60 OFFCURVE",
"520 52 OFFCURVE",
"505 52 CURVE SMOOTH",
"477 52 OFFCURVE",
"460 77 OFFCURVE",
"454 126 CURVE",
"545 197 OFFCURVE",
"598 280 OFFCURVE",
"612 375 CURVE SMOOTH",
"613 380 OFFCURVE",
"614 385 OFFCURVE",
"614 390 CURVE SMOOTH",
"614 403 LINE SMOOTH",
"614 427 OFFCURVE",
"609 446 OFFCURVE",
"599 460 CURVE SMOOTH",
"589 473 OFFCURVE",
"577 479 OFFCURVE",
"562 479 CURVE SMOOTH",
"546 479 OFFCURVE",
"530 472 OFFCURVE",
"515 457 CURVE",
"507 490 OFFCURVE",
"484 507 OFFCURVE",
"447 507 CURVE SMOOTH",
"442 507 OFFCURVE",
"438 507 OFFCURVE",
"436 506 CURVE",
"396 502 OFFCURVE",
"362 483 OFFCURVE",
"335 449 CURVE SMOOTH",
"312 422 OFFCURVE",
"295 385 OFFCURVE",
"283 340 CURVE SMOOTH",
"279 327 OFFCURVE",
"277 310 OFFCURVE",
"275 291 CURVE",
"98 290 LINE",
"105 341 OFFCURVE",
"123 390 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"94 408 OFFCURVE",
"77 352 OFFCURVE",
"71 289 CURVE",
"58 288 OFFCURVE",
"48 288 OFFCURVE",
"41 287 CURVE SMOOTH",
"29 286 OFFCURVE",
"22 279 OFFCURVE",
"22 266 CURVE SMOOTH",
"22 261 OFFCURVE",
"26 259 OFFCURVE",
"30 259 CURVE SMOOTH",
"69 262 LINE",
"65 177 OFFCURVE",
"80 84 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"452 169 LINE SMOOTH",
"452 216 OFFCURVE",
"456 257 OFFCURVE",
"465 292 CURVE SMOOTH",
"477 340 OFFCURVE",
"492 380 OFFCURVE",
"515 415 CURVE SMOOTH",
"534 447 OFFCURVE",
"552 463 OFFCURVE",
"569 463 CURVE SMOOTH",
"586 463 OFFCURVE",
"592 445 OFFCURVE",
"592 418 CURVE SMOOTH",
"592 406 OFFCURVE",
"591 392 OFFCURVE",
"588 376 CURVE SMOOTH",
"575 296 OFFCURVE",
"530 219 OFFCURVE",
"452 144 CURVE"
);
}
);
width = 583;
}
);
},
{
glyphname = fi;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"101 158 OFFCURVE",
"97 203 OFFCURVE",
"97 245 CURVE SMOOTH",
"97 278 OFFCURVE",
"99 310 OFFCURVE",
"105 327 CURVE",
"126 330 OFFCURVE",
"179 316 OFFCURVE",
"179 296 CURVE SMOOTH",
"179 293 OFFCURVE",
"178 290 OFFCURVE",
"176 287 CURVE SMOOTH",
"172 280 LINE",
"165 276 OFFCURVE",
"168 268 OFFCURVE",
"174 268 CURVE SMOOTH",
"175 268 OFFCURVE",
"177 268 OFFCURVE",
"179 270 CURVE",
"184 273 OFFCURVE",
"194 286 OFFCURVE",
"194 299 CURVE SMOOTH",
"194 323 OFFCURVE",
"170 336 OFFCURVE",
"150 341 CURVE SMOOTH",
"139 344 OFFCURVE",
"118 344 OFFCURVE",
"109 344 CURVE",
"116 379 OFFCURVE",
"134 405 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"106 422 OFFCURVE",
"89 385 OFFCURVE",
"77 340 CURVE",
"72 337 OFFCURVE",
"64 334 OFFCURVE",
"53 330 CURVE SMOOTH",
"42 326 OFFCURVE",
"33 321 OFFCURVE",
"26 315 CURVE SMOOTH",
"15 307 OFFCURVE",
"8 296 OFFCURVE",
"8 287 CURVE SMOOTH",
"8 284 OFFCURVE",
"9 281 OFFCURVE",
"11 279 CURVE SMOOTH",
"14 275 OFFCURVE",
"18 274 OFFCURVE",
"22 277 CURVE SMOOTH",
"26 279 OFFCURVE",
"33 284 OFFCURVE",
"42 292 CURVE SMOOTH",
"47 296 OFFCURVE",
"53 301 OFFCURVE",
"58 306 CURVE SMOOTH",
"63 311 OFFCURVE",
"68 314 OFFCURVE",
"74 315 CURVE",
"70 293 OFFCURVE",
"69 268 OFFCURVE",
"69 242 CURVE SMOOTH",
"69 162 OFFCURVE",
"84 71 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH",
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 58 OFFCURVE",
"312 72 OFFCURVE",
"333 99 CURVE SMOOTH",
"345 114 OFFCURVE",
"353 132 OFFCURVE",
"361 151 CURVE SMOOTH",
"363 157 OFFCURVE",
"360 161 OFFCURVE",
"357 161 CURVE SMOOTH",
"356 161 OFFCURVE",
"353 159 OFFCURVE",
"352 156 CURVE SMOOTH",
"345 141 OFFCURVE",
"336 123 OFFCURVE",
"325 110 CURVE SMOOTH",
"308 90 OFFCURVE",
"293 80 OFFCURVE",
"278 80 CURVE SMOOTH",
"265 80 OFFCURVE",
"255 85 OFFCURVE",
"248 95 CURVE SMOOTH",
"242 104 OFFCURVE",
"239 114 OFFCURVE",
"239 127 CURVE SMOOTH",
"239 148 OFFCURVE",
"248 177 OFFCURVE",
"265 216 CURVE SMOOTH",
"276 242 LINE",
"284 260 LINE SMOOTH",
"286 265 OFFCURVE",
"288 270 OFFCURVE",
"288 274 CURVE SMOOTH",
"288 276 OFFCURVE",
"287 278 OFFCURVE",
"286 279 CURVE SMOOTH",
"283 282 OFFCURVE",
"280 284 OFFCURVE",
"276 284 CURVE SMOOTH",
"269 284 OFFCURVE",
"261 280 OFFCURVE",
"254 271 CURVE SMOOTH",
"246 262 OFFCURVE",
"238 248 OFFCURVE",
"231 229 CURVE SMOOTH",
"218 195 OFFCURVE",
"211 167 OFFCURVE",
"211 146 CURVE SMOOTH",
"211 91 OFFCURVE",
"224 65 OFFCURVE",
"251 60 CURVE SMOOTH",
"256 59 OFFCURVE",
"260 58 OFFCURVE",
"265 58 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"320 313 OFFCURVE",
"332 326 OFFCURVE",
"332 341 CURVE SMOOTH",
"332 357 OFFCURVE",
"320 369 OFFCURVE",
"304 369 CURVE SMOOTH",
"289 369 OFFCURVE",
"276 357 OFFCURVE",
"276 341 CURVE SMOOTH",
"276 326 OFFCURVE",
"289 313 OFFCURVE",
"304 313 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"101 158 OFFCURVE",
"97 203 OFFCURVE",
"97 245 CURVE SMOOTH",
"97 278 OFFCURVE",
"99 310 OFFCURVE",
"105 327 CURVE",
"126 330 OFFCURVE",
"179 316 OFFCURVE",
"179 296 CURVE SMOOTH",
"179 293 OFFCURVE",
"178 290 OFFCURVE",
"176 287 CURVE SMOOTH",
"172 280 LINE",
"165 276 OFFCURVE",
"168 268 OFFCURVE",
"174 268 CURVE SMOOTH",
"175 268 OFFCURVE",
"177 268 OFFCURVE",
"179 270 CURVE",
"184 273 OFFCURVE",
"194 286 OFFCURVE",
"194 299 CURVE SMOOTH",
"194 323 OFFCURVE",
"170 336 OFFCURVE",
"150 341 CURVE SMOOTH",
"139 344 OFFCURVE",
"118 344 OFFCURVE",
"109 344 CURVE",
"116 379 OFFCURVE",
"134 405 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 484 OFFCURVE",
"236 484 CURVE SMOOTH",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 413 OFFCURVE",
"271 393 OFFCURVE",
"250 393 CURVE SMOOTH",
"243 393 OFFCURVE",
"234 396 OFFCURVE",
"226 402 CURVE SMOOTH",
"222 405 OFFCURVE",
"213 401 OFFCURVE",
"213 395 CURVE SMOOTH",
"213 394 OFFCURVE",
"214 393 OFFCURVE",
"214 392 CURVE",
"217 388 OFFCURVE",
"221 384 OFFCURVE",
"227 381 CURVE SMOOTH",
"234 377 OFFCURVE",
"242 376 OFFCURVE",
"249 376 CURVE SMOOTH",
"266 376 OFFCURVE",
"283 384 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"106 422 OFFCURVE",
"89 385 OFFCURVE",
"77 340 CURVE",
"72 337 OFFCURVE",
"64 334 OFFCURVE",
"53 330 CURVE SMOOTH",
"42 326 OFFCURVE",
"33 321 OFFCURVE",
"26 315 CURVE SMOOTH",
"15 307 OFFCURVE",
"8 296 OFFCURVE",
"8 287 CURVE SMOOTH",
"8 284 OFFCURVE",
"9 281 OFFCURVE",
"11 279 CURVE SMOOTH",
"14 275 OFFCURVE",
"18 274 OFFCURVE",
"22 277 CURVE SMOOTH",
"26 279 OFFCURVE",
"33 284 OFFCURVE",
"42 292 CURVE SMOOTH",
"47 296 OFFCURVE",
"53 301 OFFCURVE",
"58 306 CURVE SMOOTH",
"63 311 OFFCURVE",
"68 314 OFFCURVE",
"74 315 CURVE",
"70 293 OFFCURVE",
"69 268 OFFCURVE",
"69 242 CURVE SMOOTH",
"69 162 OFFCURVE",
"84 71 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 58 OFFCURVE",
"312 72 OFFCURVE",
"333 99 CURVE SMOOTH",
"345 114 OFFCURVE",
"353 132 OFFCURVE",
"361 151 CURVE SMOOTH",
"363 157 OFFCURVE",
"360 161 OFFCURVE",
"357 161 CURVE SMOOTH",
"356 161 OFFCURVE",
"353 159 OFFCURVE",
"352 156 CURVE SMOOTH",
"345 141 OFFCURVE",
"336 123 OFFCURVE",
"325 110 CURVE SMOOTH",
"308 90 OFFCURVE",
"293 80 OFFCURVE",
"278 80 CURVE SMOOTH",
"265 80 OFFCURVE",
"255 85 OFFCURVE",
"248 95 CURVE SMOOTH",
"242 104 OFFCURVE",
"239 114 OFFCURVE",
"239 127 CURVE SMOOTH",
"239 148 OFFCURVE",
"248 177 OFFCURVE",
"265 216 CURVE SMOOTH",
"276 242 LINE",
"284 260 LINE SMOOTH",
"286 265 OFFCURVE",
"288 270 OFFCURVE",
"288 274 CURVE SMOOTH",
"288 276 OFFCURVE",
"287 278 OFFCURVE",
"286 279 CURVE SMOOTH",
"283 282 OFFCURVE",
"280 284 OFFCURVE",
"276 284 CURVE SMOOTH",
"269 284 OFFCURVE",
"261 280 OFFCURVE",
"254 271 CURVE SMOOTH",
"246 262 OFFCURVE",
"238 248 OFFCURVE",
"231 229 CURVE SMOOTH",
"218 195 OFFCURVE",
"211 167 OFFCURVE",
"211 146 CURVE SMOOTH",
"211 91 OFFCURVE",
"224 65 OFFCURVE",
"251 60 CURVE SMOOTH",
"256 59 OFFCURVE",
"260 58 OFFCURVE",
"265 58 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"320 313 OFFCURVE",
"332 326 OFFCURVE",
"332 341 CURVE SMOOTH",
"332 357 OFFCURVE",
"320 369 OFFCURVE",
"304 369 CURVE SMOOTH",
"289 369 OFFCURVE",
"276 357 OFFCURVE",
"276 341 CURVE SMOOTH",
"276 326 OFFCURVE",
"289 313 OFFCURVE",
"304 313 CURVE SMOOTH"
);
}
);
width = 308;
}
);
leftMetricsKey = f;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"101 158 OFFCURVE",
"97 203 OFFCURVE",
"97 245 CURVE SMOOTH",
"97 278 OFFCURVE",
"99 310 OFFCURVE",
"105 327 CURVE",
"126 330 OFFCURVE",
"179 316 OFFCURVE",
"179 296 CURVE SMOOTH",
"179 293 OFFCURVE",
"178 290 OFFCURVE",
"176 287 CURVE SMOOTH",
"172 280 LINE",
"165 276 OFFCURVE",
"168 268 OFFCURVE",
"174 268 CURVE SMOOTH",
"175 268 OFFCURVE",
"177 268 OFFCURVE",
"179 270 CURVE",
"184 273 OFFCURVE",
"194 286 OFFCURVE",
"194 299 CURVE SMOOTH",
"194 323 OFFCURVE",
"170 336 OFFCURVE",
"150 341 CURVE SMOOTH",
"139 344 OFFCURVE",
"118 344 OFFCURVE",
"109 344 CURVE",
"116 379 OFFCURVE",
"134 405 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 483 OFFCURVE",
"236 484 CURVE",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 411 OFFCURVE",
"282 390 OFFCURVE",
"287 390 CURVE SMOOTH",
"288 390 OFFCURVE",
"291 392 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"106 422 OFFCURVE",
"89 385 OFFCURVE",
"77 340 CURVE",
"72 337 OFFCURVE",
"64 334 OFFCURVE",
"53 330 CURVE SMOOTH",
"42 326 OFFCURVE",
"33 321 OFFCURVE",
"26 315 CURVE SMOOTH",
"15 307 OFFCURVE",
"8 296 OFFCURVE",
"8 287 CURVE SMOOTH",
"8 284 OFFCURVE",
"9 281 OFFCURVE",
"11 279 CURVE SMOOTH",
"14 275 OFFCURVE",
"18 274 OFFCURVE",
"22 277 CURVE SMOOTH",
"26 279 OFFCURVE",
"33 284 OFFCURVE",
"42 292 CURVE SMOOTH",
"47 296 OFFCURVE",
"53 301 OFFCURVE",
"58 306 CURVE SMOOTH",
"63 311 OFFCURVE",
"68 314 OFFCURVE",
"74 315 CURVE",
"70 293 OFFCURVE",
"69 268 OFFCURVE",
"69 242 CURVE SMOOTH",
"69 162 OFFCURVE",
"84 71 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH",
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"372 61 OFFCURVE",
"403 95 OFFCURVE",
"429 145 CURVE SMOOTH",
"430 147 OFFCURVE",
"431 149 OFFCURVE",
"431 152 CURVE SMOOTH",
"431 157 OFFCURVE",
"430 159 OFFCURVE",
"428 159 CURVE SMOOTH",
"427 159 OFFCURVE",
"426 158 OFFCURVE",
"424 155 CURVE SMOOTH",
"401 119 OFFCURVE",
"378 92 OFFCURVE",
"354 75 CURVE SMOOTH",
"333 60 OFFCURVE",
"314 52 OFFCURVE",
"299 52 CURVE SMOOTH",
"271 52 OFFCURVE",
"254 77 OFFCURVE",
"248 126 CURVE",
"339 197 OFFCURVE",
"392 280 OFFCURVE",
"406 375 CURVE SMOOTH",
"407 380 OFFCURVE",
"408 385 OFFCURVE",
"408 390 CURVE SMOOTH",
"408 403 LINE SMOOTH",
"408 427 OFFCURVE",
"403 446 OFFCURVE",
"393 460 CURVE SMOOTH",
"383 473 OFFCURVE",
"371 479 OFFCURVE",
"356 479 CURVE SMOOTH",
"335 479 OFFCURVE",
"315 467 OFFCURVE",
"298 443 CURVE SMOOTH",
"271 406 OFFCURVE",
"250 363 OFFCURVE",
"235 312 CURVE SMOOTH",
"221 266 OFFCURVE",
"213 221 OFFCURVE",
"213 177 CURVE SMOOTH",
"213 114 OFFCURVE",
"225 70 OFFCURVE",
"252 47 CURVE SMOOTH",
"264 36 OFFCURVE",
"278 31 OFFCURVE",
"294 31 CURVE SMOOTH",
"307 31 OFFCURVE",
"322 35 OFFCURVE",
"337 43 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 169 LINE SMOOTH",
"246 216 OFFCURVE",
"250 257 OFFCURVE",
"259 292 CURVE SMOOTH",
"271 340 OFFCURVE",
"286 380 OFFCURVE",
"309 415 CURVE SMOOTH",
"328 447 OFFCURVE",
"346 463 OFFCURVE",
"363 463 CURVE SMOOTH",
"380 463 OFFCURVE",
"386 445 OFFCURVE",
"386 418 CURVE SMOOTH",
"386 406 OFFCURVE",
"385 392 OFFCURVE",
"382 376 CURVE SMOOTH",
"369 296 OFFCURVE",
"324 219 OFFCURVE",
"246 144 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"138 -20 OFFCURVE",
"145 -14 OFFCURVE",
"145 0 CURVE SMOOTH",
"145 5 OFFCURVE",
"143 12 OFFCURVE",
"139 20 CURVE SMOOTH",
"124 50 OFFCURVE",
"113 89 OFFCURVE",
"105 137 CURVE SMOOTH",
"101 158 OFFCURVE",
"97 203 OFFCURVE",
"97 245 CURVE SMOOTH",
"97 278 OFFCURVE",
"99 310 OFFCURVE",
"105 327 CURVE",
"126 330 OFFCURVE",
"179 316 OFFCURVE",
"179 296 CURVE SMOOTH",
"179 293 OFFCURVE",
"178 290 OFFCURVE",
"176 287 CURVE SMOOTH",
"172 280 LINE",
"165 276 OFFCURVE",
"168 268 OFFCURVE",
"174 268 CURVE SMOOTH",
"175 268 OFFCURVE",
"177 268 OFFCURVE",
"179 270 CURVE",
"184 273 OFFCURVE",
"194 286 OFFCURVE",
"194 299 CURVE SMOOTH",
"194 323 OFFCURVE",
"170 336 OFFCURVE",
"150 341 CURVE SMOOTH",
"139 344 OFFCURVE",
"118 344 OFFCURVE",
"109 344 CURVE",
"116 379 OFFCURVE",
"134 405 OFFCURVE",
"154 432 CURVE SMOOTH",
"177 462 OFFCURVE",
"202 479 OFFCURVE",
"230 483 CURVE SMOOTH",
"232 483 OFFCURVE",
"234 483 OFFCURVE",
"236 484 CURVE",
"241 484 LINE SMOOTH",
"264 484 OFFCURVE",
"279 472 OFFCURVE",
"286 447 CURVE",
"287 445 OFFCURVE",
"287 442 OFFCURVE",
"287 438 CURVE SMOOTH",
"287 411 OFFCURVE",
"282 390 OFFCURVE",
"287 390 CURVE SMOOTH",
"288 390 OFFCURVE",
"291 392 OFFCURVE",
"295 397 CURVE SMOOTH",
"306 410 OFFCURVE",
"312 424 OFFCURVE",
"312 440 CURVE SMOOTH",
"312 443 OFFCURVE",
"311 447 OFFCURVE",
"310 454 CURVE SMOOTH",
"302 489 OFFCURVE",
"279 507 OFFCURVE",
"241 507 CURVE SMOOTH",
"236 507 OFFCURVE",
"232 507 OFFCURVE",
"230 506 CURVE",
"190 502 OFFCURVE",
"156 483 OFFCURVE",
"129 449 CURVE SMOOTH",
"106 422 OFFCURVE",
"89 385 OFFCURVE",
"77 340 CURVE",
"72 337 OFFCURVE",
"64 334 OFFCURVE",
"53 330 CURVE SMOOTH",
"42 326 OFFCURVE",
"33 321 OFFCURVE",
"26 315 CURVE SMOOTH",
"15 307 OFFCURVE",
"8 296 OFFCURVE",
"8 287 CURVE SMOOTH",
"8 284 OFFCURVE",
"9 281 OFFCURVE",
"11 279 CURVE SMOOTH",
"14 275 OFFCURVE",
"18 274 OFFCURVE",
"22 277 CURVE SMOOTH",
"26 279 OFFCURVE",
"33 284 OFFCURVE",
"42 292 CURVE SMOOTH",
"47 296 OFFCURVE",
"53 301 OFFCURVE",
"58 306 CURVE SMOOTH",
"63 311 OFFCURVE",
"68 314 OFFCURVE",
"74 315 CURVE",
"70 293 OFFCURVE",
"69 268 OFFCURVE",
"69 242 CURVE SMOOTH",
"69 162 OFFCURVE",
"84 71 OFFCURVE",
"102 5 CURVE SMOOTH",
"107 -12 OFFCURVE",
"119 -20 OFFCURVE",
"129 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 31 OFFCURVE",
"322 35 OFFCURVE",
"337 43 CURVE SMOOTH",
"372 61 OFFCURVE",
"403 95 OFFCURVE",
"429 145 CURVE SMOOTH",
"430 147 OFFCURVE",
"431 149 OFFCURVE",
"431 152 CURVE SMOOTH",
"431 157 OFFCURVE",
"430 159 OFFCURVE",
"428 159 CURVE SMOOTH",
"427 159 OFFCURVE",
"426 158 OFFCURVE",
"424 155 CURVE SMOOTH",
"401 119 OFFCURVE",
"378 92 OFFCURVE",
"354 75 CURVE SMOOTH",
"333 60 OFFCURVE",
"314 52 OFFCURVE",
"299 52 CURVE SMOOTH",
"271 52 OFFCURVE",
"254 77 OFFCURVE",
"248 126 CURVE",
"339 197 OFFCURVE",
"392 280 OFFCURVE",
"406 375 CURVE SMOOTH",
"407 380 OFFCURVE",
"408 385 OFFCURVE",
"408 390 CURVE SMOOTH",
"408 403 LINE SMOOTH",
"408 427 OFFCURVE",
"403 446 OFFCURVE",
"393 460 CURVE SMOOTH",
"383 473 OFFCURVE",
"371 479 OFFCURVE",
"356 479 CURVE SMOOTH",
"335 479 OFFCURVE",
"315 467 OFFCURVE",
"298 443 CURVE SMOOTH",
"271 406 OFFCURVE",
"250 363 OFFCURVE",
"235 312 CURVE SMOOTH",
"221 266 OFFCURVE",
"213 221 OFFCURVE",
"213 177 CURVE SMOOTH",
"213 114 OFFCURVE",
"225 70 OFFCURVE",
"252 47 CURVE SMOOTH",
"264 36 OFFCURVE",
"278 31 OFFCURVE",
"294 31 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 169 LINE SMOOTH",
"246 216 OFFCURVE",
"250 257 OFFCURVE",
"259 292 CURVE SMOOTH",
"271 340 OFFCURVE",
"286 380 OFFCURVE",
"309 415 CURVE SMOOTH",
"328 447 OFFCURVE",
"346 463 OFFCURVE",
"363 463 CURVE SMOOTH",
"380 463 OFFCURVE",
"386 445 OFFCURVE",
"386 418 CURVE SMOOTH",
"386 406 OFFCURVE",
"385 392 OFFCURVE",
"382 376 CURVE SMOOTH",
"369 296 OFFCURVE",
"324 219 OFFCURVE",
"246 144 CURVE"
);
}
);
width = 377;
}
);
leftMetricsKey = f;
unicode = FB02;
},
{
glyphname = t_h;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"467 -67 OFFCURVE",
"493 -55 OFFCURVE",
"513 -31 CURVE SMOOTH",
"517 -25 OFFCURVE",
"519 -19.667 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -9 OFFCURVE",
"516.667 -6 OFFCURVE",
"512 -6 CURVE SMOOTH",
"510.667 -6 OFFCURVE",
"505.667 -11 OFFCURVE",
"497 -21 CURVE SMOOTH",
"487 -34.333 OFFCURVE",
"475.333 -43 OFFCURVE",
"462 -47 CURVE SMOOTH",
"450 -50.333 OFFCURVE",
"440.667 -52 OFFCURVE",
"434 -52 CURVE SMOOTH",
"394 -52 OFFCURVE",
"376 -17 OFFCURVE",
"376 47 CURVE SMOOTH",
"376 71 OFFCURVE",
"380.333 105.333 OFFCURVE",
"387 152 CURVE SMOOTH",
"393.667 197.333 OFFCURVE",
"398 230.333 OFFCURVE",
"398 253 CURVE SMOOTH",
"398 258.333 OFFCURVE",
"397.333 263 OFFCURVE",
"396 267 CURVE SMOOTH",
"388 299.667 OFFCURVE",
"372 316 OFFCURVE",
"348 316 CURVE SMOOTH",
"342 316 OFFCURVE",
"336.667 315 OFFCURVE",
"332 313 CURVE",
"311.333 308.333 OFFCURVE",
"294 294.333 OFFCURVE",
"280 271 CURVE",
"272 260.333 OFFCURVE",
"261.333 236.333 OFFCURVE",
"248 199 CURVE",
"244.667 218.333 OFFCURVE",
"243 235.667 OFFCURVE",
"243 251 CURVE SMOOTH",
"243 266.333 OFFCURVE",
"244.333 281.667 OFFCURVE",
"247 297 CURVE",
"268 318 LINE",
"286 331.333 OFFCURVE",
"304.667 352.333 OFFCURVE",
"324 381 CURVE SMOOTH",
"346.667 415.667 OFFCURVE",
"362 446.333 OFFCURVE",
"370 477 CURVE SMOOTH",
"375.333 497 OFFCURVE",
"378 513.667 OFFCURVE",
"378 527 CURVE SMOOTH",
"378 561.667 OFFCURVE",
"366.333 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"328.333 579 OFFCURVE",
"313 570.667 OFFCURVE",
"297 554 CURVE SMOOTH",
"278.333 534.667 OFFCURVE",
"263.333 509 OFFCURVE",
"252 477 CURVE SMOOTH",
"241.333 448.333 OFFCURVE",
"232.667 415.333 OFFCURVE",
"226 378 CURVE SMOOTH",
"223.333 366 OFFCURVE",
"221.167 354.167 OFFCURVE",
"219.5 342.5 CURVE SMOOTH",
"217.833 330.833 OFFCURVE",
"215.667 318.667 OFFCURVE",
"213 306 CURVE",
"189 295.333 OFFCURVE",
"165.667 290 OFFCURVE",
"143 290 CURVE SMOOTH",
"131 290 OFFCURVE",
"118.667 291 OFFCURVE",
"104 295 CURVE",
"119 336.5 LINE",
"138 388 LINE SMOOTH",
"148 416 OFFCURVE",
"153 431 OFFCURVE",
"153 433 CURVE SMOOTH",
"153 437 OFFCURVE",
"150.667 441.333 OFFCURVE",
"146 446 CURVE SMOOTH",
"140.667 450 OFFCURVE",
"135.667 452 OFFCURVE",
"131 452 CURVE SMOOTH",
"125.667 452 OFFCURVE",
"122 449.333 OFFCURVE",
"120 444 CURVE SMOOTH",
"106.667 412 OFFCURVE",
"96 385.167 OFFCURVE",
"88 363.5 CURVE SMOOTH",
"69 313 LINE",
"38.333 337 OFFCURVE",
"21 368 OFFCURVE",
"13 408 CURVE SMOOTH",
"12 417 LINE",
"12 426 LINE SMOOTH",
"12 443.333 OFFCURVE",
"15.667 457 OFFCURVE",
"23 467 CURVE SMOOTH",
"33 478.333 OFFCURVE",
"46 484 OFFCURVE",
"62 484 CURVE SMOOTH",
"72 484 OFFCURVE",
"78.833 485.167 OFFCURVE",
"82.5 487.5 CURVE SMOOTH",
"86.167 489.833 OFFCURVE",
"88 492.667 OFFCURVE",
"88 496 CURVE SMOOTH",
"88 499 LINE SMOOTH",
"86 511 OFFCURVE",
"74 517 OFFCURVE",
"52 517 CURVE SMOOTH",
"31.333 517 OFFCURVE",
"14 508.667 OFFCURVE",
"0 492 CURVE SMOOTH",
"-14.667 476.667 OFFCURVE",
"-22 457.667 OFFCURVE",
"-22 435 CURVE SMOOTH",
"-21 426 LINE SMOOTH",
"-14.333 358 OFFCURVE",
"13 311 OFFCURVE",
"61 285 CURVE",
"45 231.667 OFFCURVE",
"37 187 OFFCURVE",
"37 151 CURVE SMOOTH",
"37 102.333 OFFCURVE",
"50.667 65.333 OFFCURVE",
"78 40 CURVE SMOOTH",
"94.667 25.333 OFFCURVE",
"110.667 18 OFFCURVE",
"126 18 CURVE SMOOTH",
"136.667 18 OFFCURVE",
"146.333 20.667 OFFCURVE",
"155 26 CURVE SMOOTH",
"159.667 28.667 OFFCURVE",
"166 34.333 OFFCURVE",
"174 43 CURVE SMOOTH",
"179.333 49.667 OFFCURVE",
"184 58.667 OFFCURVE",
"184 68 CURVE SMOOTH",
"184 72 OFFCURVE",
"183 74 OFFCURVE",
"181 74 CURVE SMOOTH",
"177.667 74 OFFCURVE",
"175 71.667 OFFCURVE",
"173 67 CURVE SMOOTH",
"163.667 49.667 OFFCURVE",
"152 41 OFFCURVE",
"138 41 CURVE SMOOTH",
"92 41 OFFCURVE",
"69 69.667 OFFCURVE",
"69 127 CURVE SMOOTH",
"69 163.667 OFFCURVE",
"78.333 212.333 OFFCURVE",
"97 273 CURVE",
"109.667 270.333 OFFCURVE",
"122 269 OFFCURVE",
"134 269 CURVE SMOOTH",
"160 269 OFFCURVE",
"186 274.333 OFFCURVE",
"212 285 CURVE",
"210.667 251.667 OFFCURVE",
"210 221.667 OFFCURVE",
"210 195 CURVE SMOOTH",
"210 121 LINE",
"210.5 113 LINE",
"212 97 LINE",
"212.5 86.5 LINE",
"213 79 LINE SMOOTH",
"213 76.333 OFFCURVE",
"213.333 74.333 OFFCURVE",
"214 73 CURVE SMOOTH",
"218 59 OFFCURVE",
"225.333 52 OFFCURVE",
"236 52 CURVE SMOOTH",
"237.333 52 OFFCURVE",
"240 52.667 OFFCURVE",
"244 54 CURVE SMOOTH",
"244.667 54 OFFCURVE",
"246 65 OFFCURVE",
"248 87 CURVE SMOOTH",
"250.667 120.333 OFFCURVE",
"253.333 144.333 OFFCURVE",
"256 163 CURVE SMOOTH",
"261.333 197.667 OFFCURVE",
"270.333 226 OFFCURVE",
"281 250 CURVE SMOOTH",
"287 262.667 OFFCURVE",
"295.333 274 OFFCURVE",
"306 284 CURVE SMOOTH",
"319.333 296 OFFCURVE",
"331 302 OFFCURVE",
"341 302 CURVE SMOOTH",
"352.333 302 OFFCURVE",
"360.667 294 OFFCURVE",
"366 278 CURVE SMOOTH",
"368 270 OFFCURVE",
"369 260.333 OFFCURVE",
"369 249 CURVE SMOOTH",
"369 230.333 OFFCURVE",
"366.667 207.333 OFFCURVE",
"360 178 CURVE SMOOTH",
"348 127 LINE SMOOTH",
"342 101 OFFCURVE",
"340 78 OFFCURVE",
"340 57 CURVE SMOOTH",
"340 25 OFFCURVE",
"346 -2 OFFCURVE",
"359 -23 CURVE SMOOTH",
"375.667 -52.333 OFFCURVE",
"401 -67 OFFCURVE",
"435 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"256.667 377.333 OFFCURVE",
"266 417.667 OFFCURVE",
"278 455 CURVE SMOOTH",
"290 490.333 OFFCURVE",
"302 514 OFFCURVE",
"314 526 CURVE SMOOTH",
"324 534.667 OFFCURVE",
"332.333 539 OFFCURVE",
"339 539 CURVE SMOOTH",
"352.333 539 OFFCURVE",
"356 527.667 OFFCURVE",
"356 509 CURVE SMOOTH",
"356 497.5 LINE SMOOTH",
"356 493.833 OFFCURVE",
"355.333 489.667 OFFCURVE",
"354 485 CURVE SMOOTH",
"348 455 OFFCURVE",
"335.667 426 OFFCURVE",
"317 398 CURVE SMOOTH",
"298.333 368.667 OFFCURVE",
"279.333 346.667 OFFCURVE",
"250 324 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"467 -67 OFFCURVE",
"493 -55 OFFCURVE",
"513 -31 CURVE SMOOTH",
"517 -25 OFFCURVE",
"519 -20 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -9 OFFCURVE",
"517 -6 OFFCURVE",
"512 -6 CURVE SMOOTH",
"511 -6 OFFCURVE",
"506 -11 OFFCURVE",
"497 -21 CURVE SMOOTH",
"487 -34 OFFCURVE",
"475 -43 OFFCURVE",
"462 -47 CURVE SMOOTH",
"450 -50 OFFCURVE",
"441 -52 OFFCURVE",
"434 -52 CURVE SMOOTH",
"394 -52 OFFCURVE",
"376 -17 OFFCURVE",
"376 47 CURVE SMOOTH",
"376 71 OFFCURVE",
"380 105 OFFCURVE",
"387 152 CURVE SMOOTH",
"394 197 OFFCURVE",
"398 230 OFFCURVE",
"398 253 CURVE SMOOTH",
"398 258 OFFCURVE",
"397 263 OFFCURVE",
"396 267 CURVE SMOOTH",
"388 300 OFFCURVE",
"372 316 OFFCURVE",
"348 316 CURVE SMOOTH",
"342 316 OFFCURVE",
"337 315 OFFCURVE",
"332 313 CURVE",
"311 308 OFFCURVE",
"294 294 OFFCURVE",
"280 271 CURVE SMOOTH",
"272 260 OFFCURVE",
"261 236 OFFCURVE",
"248 199 CURVE",
"245 218 OFFCURVE",
"243 236 OFFCURVE",
"243 251 CURVE SMOOTH",
"243 266 OFFCURVE",
"244 282 OFFCURVE",
"247 297 CURVE",
"268 318 LINE",
"286 331 OFFCURVE",
"305 352 OFFCURVE",
"324 381 CURVE SMOOTH",
"347 416 OFFCURVE",
"362 446 OFFCURVE",
"370 477 CURVE SMOOTH",
"375 497 OFFCURVE",
"378 514 OFFCURVE",
"378 527 CURVE SMOOTH",
"378 562 OFFCURVE",
"366 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"328 579 OFFCURVE",
"313 571 OFFCURVE",
"297 554 CURVE SMOOTH",
"278 535 OFFCURVE",
"263 509 OFFCURVE",
"252 477 CURVE SMOOTH",
"241 448 OFFCURVE",
"233 415 OFFCURVE",
"226 378 CURVE SMOOTH",
"223 366 OFFCURVE",
"221 354 OFFCURVE",
"220 343 CURVE SMOOTH",
"218 331 OFFCURVE",
"216 319 OFFCURVE",
"213 306 CURVE",
"189 295 OFFCURVE",
"166 290 OFFCURVE",
"143 290 CURVE SMOOTH",
"131 290 OFFCURVE",
"119 291 OFFCURVE",
"104 295 CURVE",
"119 337 LINE",
"138 388 LINE SMOOTH",
"148 416 OFFCURVE",
"153 431 OFFCURVE",
"153 433 CURVE SMOOTH",
"153 437 OFFCURVE",
"151 441 OFFCURVE",
"146 446 CURVE SMOOTH",
"141 450 OFFCURVE",
"136 452 OFFCURVE",
"131 452 CURVE SMOOTH",
"126 452 OFFCURVE",
"122 449 OFFCURVE",
"120 444 CURVE SMOOTH",
"107 412 OFFCURVE",
"96 385 OFFCURVE",
"88 364 CURVE SMOOTH",
"69 313 LINE",
"38 337 OFFCURVE",
"21 368 OFFCURVE",
"13 408 CURVE SMOOTH",
"12 417 LINE",
"12 426 LINE SMOOTH",
"12 443 OFFCURVE",
"16 457 OFFCURVE",
"23 467 CURVE SMOOTH",
"33 478 OFFCURVE",
"46 484 OFFCURVE",
"62 484 CURVE SMOOTH",
"72 484 OFFCURVE",
"79 485 OFFCURVE",
"83 488 CURVE SMOOTH",
"86 490 OFFCURVE",
"88 493 OFFCURVE",
"88 496 CURVE SMOOTH",
"88 499 LINE SMOOTH",
"86 511 OFFCURVE",
"74 517 OFFCURVE",
"52 517 CURVE SMOOTH",
"31 517 OFFCURVE",
"14 509 OFFCURVE",
"0 492 CURVE SMOOTH",
"-15 477 OFFCURVE",
"-22 458 OFFCURVE",
"-22 435 CURVE SMOOTH",
"-21 426 LINE SMOOTH",
"-14 358 OFFCURVE",
"13 311 OFFCURVE",
"61 285 CURVE",
"45 232 OFFCURVE",
"37 187 OFFCURVE",
"37 151 CURVE SMOOTH",
"37 102 OFFCURVE",
"51 65 OFFCURVE",
"78 40 CURVE SMOOTH",
"95 25 OFFCURVE",
"111 18 OFFCURVE",
"126 18 CURVE SMOOTH",
"137 18 OFFCURVE",
"146 21 OFFCURVE",
"155 26 CURVE SMOOTH",
"160 29 OFFCURVE",
"166 34 OFFCURVE",
"174 43 CURVE SMOOTH",
"179 50 OFFCURVE",
"184 59 OFFCURVE",
"184 68 CURVE SMOOTH",
"184 72 OFFCURVE",
"183 74 OFFCURVE",
"181 74 CURVE SMOOTH",
"178 74 OFFCURVE",
"175 72 OFFCURVE",
"173 67 CURVE SMOOTH",
"164 50 OFFCURVE",
"152 41 OFFCURVE",
"138 41 CURVE SMOOTH",
"92 41 OFFCURVE",
"69 70 OFFCURVE",
"69 127 CURVE SMOOTH",
"69 164 OFFCURVE",
"78 212 OFFCURVE",
"97 273 CURVE",
"110 270 OFFCURVE",
"122 269 OFFCURVE",
"134 269 CURVE SMOOTH",
"160 269 OFFCURVE",
"186 274 OFFCURVE",
"212 285 CURVE",
"211 252 OFFCURVE",
"210 222 OFFCURVE",
"210 195 CURVE SMOOTH",
"210 121 LINE",
"211 113 LINE",
"212 97 LINE",
"213 87 LINE",
"213 79 LINE SMOOTH",
"213 76 OFFCURVE",
"213 74 OFFCURVE",
"214 73 CURVE",
"218 59 OFFCURVE",
"225 52 OFFCURVE",
"236 52 CURVE",
"244 54 LINE SMOOTH",
"245 54 OFFCURVE",
"246 65 OFFCURVE",
"248 87 CURVE SMOOTH",
"251 120 OFFCURVE",
"253 144 OFFCURVE",
"256 163 CURVE SMOOTH",
"261 198 OFFCURVE",
"270 226 OFFCURVE",
"281 250 CURVE SMOOTH",
"287 263 OFFCURVE",
"295 274 OFFCURVE",
"306 284 CURVE SMOOTH",
"319 296 OFFCURVE",
"331 302 OFFCURVE",
"341 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"361 294 OFFCURVE",
"366 278 CURVE SMOOTH",
"368 270 OFFCURVE",
"369 260 OFFCURVE",
"369 249 CURVE SMOOTH",
"369 230 OFFCURVE",
"367 207 OFFCURVE",
"360 178 CURVE SMOOTH",
"348 127 LINE SMOOTH",
"342 101 OFFCURVE",
"340 78 OFFCURVE",
"340 57 CURVE SMOOTH",
"340 25 OFFCURVE",
"346 -2 OFFCURVE",
"359 -23 CURVE SMOOTH",
"376 -52 OFFCURVE",
"401 -67 OFFCURVE",
"435 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 377 OFFCURVE",
"266 418 OFFCURVE",
"278 455 CURVE SMOOTH",
"290 490 OFFCURVE",
"302 514 OFFCURVE",
"314 526 CURVE SMOOTH",
"324 535 OFFCURVE",
"332 539 OFFCURVE",
"339 539 CURVE SMOOTH",
"352 539 OFFCURVE",
"356 528 OFFCURVE",
"356 509 CURVE SMOOTH",
"356 498 LINE SMOOTH",
"356 494 OFFCURVE",
"355 490 OFFCURVE",
"354 485 CURVE SMOOTH",
"348 455 OFFCURVE",
"336 426 OFFCURVE",
"317 398 CURVE SMOOTH",
"298 369 OFFCURVE",
"279 347 OFFCURVE",
"250 324 CURVE"
);
}
);
width = 404;
}
);
},
{
glyphname = ordfeminine;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"100.2 383.2 OFFCURVE",
"115.4 390.4 OFFCURVE",
"129 404 CURVE SMOOTH",
"144.2 419.2 OFFCURVE",
"152.2 439.2 OFFCURVE",
"154.6 462.4 CURVE SMOOTH",
"154.6 464.8 OFFCURVE",
"155.4 465.6 OFFCURVE",
"156.2 465.6 CURVE SMOOTH",
"157 465.6 OFFCURVE",
"157.8 464 OFFCURVE",
"158.6 461.6 CURVE",
"157.8 445.6 OFFCURVE",
"161 427.2 OFFCURVE",
"168.2 413.6 CURVE SMOOTH",
"172.2 404 OFFCURVE",
"182.6 400.8 OFFCURVE",
"192.2 400.8 CURVE SMOOTH",
"203.4 400.8 OFFCURVE",
"211.4 406.4 OFFCURVE",
"219.4 412.8 CURVE",
"238.6 432.8 OFFCURVE",
"252.2 460.8 OFFCURVE",
"264.2 486.4 CURVE SMOOTH",
"266.6 490.4 OFFCURVE",
"264.2 493.6 OFFCURVE",
"261.8 493.6 CURVE SMOOTH",
"260.2 493.6 OFFCURVE",
"258.6 492.8 OFFCURVE",
"257 489.6 CURVE SMOOTH",
"250.6 475.2 OFFCURVE",
"225.8 438.4 OFFCURVE",
"214.6 427.2 CURVE SMOOTH",
"209.8 422.4 OFFCURVE",
"205 420 OFFCURVE",
"199.4 420 CURVE SMOOTH",
"193.8 420 OFFCURVE",
"187.4 424 OFFCURVE",
"184.2 432.8 CURVE SMOOTH",
"180.2 443.2 OFFCURVE",
"178.6 457.6 OFFCURVE",
"178.6 474.4 CURVE SMOOTH",
"178.6 480 OFFCURVE",
"178.6 486.4 OFFCURVE",
"179.4 492 CURVE SMOOTH",
"180.2 497.6 OFFCURVE",
"180.2 503.2 OFFCURVE",
"180.2 508.8 CURVE",
"179.4 512.8 OFFCURVE",
"177 516 OFFCURVE",
"173.8 518.4 CURVE SMOOTH",
"169.8 520.8 OFFCURVE",
"165 522.4 OFFCURVE",
"160.2 522.4 CURVE SMOOTH",
"151.4 522.4 OFFCURVE",
"147.4 519.2 OFFCURVE",
"147.4 512 CURVE SMOOTH",
"147.4 474.4 OFFCURVE",
"144.2 449.6 OFFCURVE",
"132.2 427.2 CURVE SMOOTH",
"122.6 408.8 OFFCURVE",
"108.2 395.2 OFFCURVE",
"93 395.2 CURVE SMOOTH",
"70.6 395.2 OFFCURVE",
"63.4 419.2 OFFCURVE",
"63.4 437.6 CURVE SMOOTH",
"63.4 490.4 OFFCURVE",
"89.8 555.2 OFFCURVE",
"145 563.2 CURVE",
"146.6 564 OFFCURVE",
"149 564 OFFCURVE",
"151.4 564 CURVE SMOOTH",
"166.6 564 OFFCURVE",
"175.4 560.8 OFFCURVE",
"177.8 548.8 CURVE",
"177.8 544.8 OFFCURVE",
"180.2 542.4 OFFCURVE",
"184.2 542.4 CURVE SMOOTH",
"188.2 542.4 OFFCURVE",
"189.8 544.8 OFFCURVE",
"189.8 548.8 CURVE SMOOTH",
"189.8 570.4 OFFCURVE",
"177.8 584 OFFCURVE",
"154.6 588 CURVE",
"152.2 588 OFFCURVE",
"150.6 588 OFFCURVE",
"149 588.8 CURVE",
"142.6 588.8 LINE SMOOTH",
"77.8 588.8 OFFCURVE",
"33.8 521.6 OFFCURVE",
"33.8 457.6 CURVE SMOOTH",
"33.8 447.2 OFFCURVE",
"35.4 436.8 OFFCURVE",
"37.8 426.4 CURVE SMOOTH",
"45.8 397.6 OFFCURVE",
"61 383.2 OFFCURVE",
"84.2 383.2 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"100 383 OFFCURVE",
"115 390 OFFCURVE",
"129 404 CURVE SMOOTH",
"144 419 OFFCURVE",
"152 439 OFFCURVE",
"155 462 CURVE SMOOTH",
"155 465 OFFCURVE",
"155 466 OFFCURVE",
"156 466 CURVE SMOOTH",
"157 466 OFFCURVE",
"158 464 OFFCURVE",
"159 462 CURVE",
"158 446 OFFCURVE",
"161 427 OFFCURVE",
"168 414 CURVE SMOOTH",
"172 404 OFFCURVE",
"183 401 OFFCURVE",
"192 401 CURVE SMOOTH",
"203 401 OFFCURVE",
"211 406 OFFCURVE",
"219 413 CURVE SMOOTH",
"239 433 OFFCURVE",
"252 461 OFFCURVE",
"264 486 CURVE",
"267 490 OFFCURVE",
"264 494 OFFCURVE",
"262 494 CURVE SMOOTH",
"260 494 OFFCURVE",
"259 493 OFFCURVE",
"257 490 CURVE",
"251 475 OFFCURVE",
"226 438 OFFCURVE",
"215 427 CURVE SMOOTH",
"210 422 OFFCURVE",
"205 420 OFFCURVE",
"199 420 CURVE SMOOTH",
"194 420 OFFCURVE",
"187 424 OFFCURVE",
"184 433 CURVE SMOOTH",
"180 443 OFFCURVE",
"179 458 OFFCURVE",
"179 474 CURVE SMOOTH",
"179 492 LINE",
"180 498 OFFCURVE",
"180 503 OFFCURVE",
"180 509 CURVE",
"179 513 OFFCURVE",
"177 516 OFFCURVE",
"174 518 CURVE SMOOTH",
"170 521 OFFCURVE",
"165 522 OFFCURVE",
"160 522 CURVE SMOOTH",
"151 522 OFFCURVE",
"147 519 OFFCURVE",
"147 512 CURVE SMOOTH",
"147 474 OFFCURVE",
"144 450 OFFCURVE",
"132 427 CURVE SMOOTH",
"123 409 OFFCURVE",
"108 395 OFFCURVE",
"93 395 CURVE SMOOTH",
"71 395 OFFCURVE",
"63 419 OFFCURVE",
"63 438 CURVE SMOOTH",
"63 490 OFFCURVE",
"90 555 OFFCURVE",
"145 563 CURVE",
"147 564 OFFCURVE",
"149 564 OFFCURVE",
"151 564 CURVE SMOOTH",
"167 564 OFFCURVE",
"175 561 OFFCURVE",
"178 549 CURVE",
"178 545 OFFCURVE",
"180 542 OFFCURVE",
"184 542 CURVE SMOOTH",
"188 542 OFFCURVE",
"190 545 OFFCURVE",
"190 549 CURVE SMOOTH",
"190 570 OFFCURVE",
"178 584 OFFCURVE",
"155 588 CURVE",
"152 588 OFFCURVE",
"151 588 OFFCURVE",
"149 589 CURVE",
"143 589 LINE SMOOTH",
"78 589 OFFCURVE",
"34 522 OFFCURVE",
"34 458 CURVE SMOOTH",
"34 447 OFFCURVE",
"35 437 OFFCURVE",
"38 426 CURVE SMOOTH",
"46 398 OFFCURVE",
"61 383 OFFCURVE",
"84 383 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 48 170 48 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01258 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 39 165 39 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01242 1 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 269;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"131.2 391.2 OFFCURVE",
"154.4 400.8 OFFCURVE",
"173.6 420.8 CURVE SMOOTH",
"193.6 441.6 OFFCURVE",
"203.2 465.6 OFFCURVE",
"203.2 492.8 CURVE SMOOTH",
"203.2 516 OFFCURVE",
"195.2 537.6 OFFCURVE",
"180 556 CURVE SMOOTH",
"164 575.2 OFFCURVE",
"145.6 584.8 OFFCURVE",
"124 584.8 CURVE SMOOTH",
"118.4 584.8 OFFCURVE",
"113.6 584 OFFCURVE",
"108 583.2 CURVE SMOOTH",
"96 580 OFFCURVE",
"86.4 574.4 OFFCURVE",
"78.4 565.6 CURVE SMOOTH",
"71.2 556.8 OFFCURVE",
"67.2 547.2 OFFCURVE",
"67.2 537.6 CURVE SMOOTH",
"67.2 533.6 OFFCURVE",
"68 528.8 OFFCURVE",
"70.4 522.4 CURVE",
"56.8 518.4 OFFCURVE",
"46.4 511.2 OFFCURVE",
"39.2 499.2 CURVE SMOOTH",
"32 487.2 OFFCURVE",
"28 472 OFFCURVE",
"28 454.4 CURVE SMOOTH",
"28 435.2 OFFCURVE",
"36 420 OFFCURVE",
"51.2 408 CURVE SMOOTH",
"65.6 396.8 OFFCURVE",
"83.2 391.2 OFFCURVE",
"104 391.2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85.6 403.2 OFFCURVE",
"72 409.6 OFFCURVE",
"61.6 423.2 CURVE SMOOTH",
"52.8 434.4 OFFCURVE",
"48 448 OFFCURVE",
"48 464.8 CURVE SMOOTH",
"48 483.2 OFFCURVE",
"52.8 495.2 OFFCURVE",
"66.4 504 CURVE",
"76.8 480.8 OFFCURVE",
"88.8 471.2 OFFCURVE",
"104 471.2 CURVE SMOOTH",
"113.6 471.2 OFFCURVE",
"122.4 476.8 OFFCURVE",
"130.4 487.2 CURVE SMOOTH",
"131.2 488 OFFCURVE",
"132 489.6 OFFCURVE",
"132 491.2 CURVE",
"131.2 492 LINE",
"129.6 491.2 LINE",
"122.4 484.8 OFFCURVE",
"116 481.6 OFFCURVE",
"110.4 481.6 CURVE SMOOTH",
"108.8 481.6 LINE SMOOTH",
"100.8 481.6 OFFCURVE",
"94.4 485.6 OFFCURVE",
"89.6 493.6 CURVE SMOOTH",
"85.6 499.2 OFFCURVE",
"83.2 506.4 OFFCURVE",
"83.2 513.6 CURVE SMOOTH",
"83.2 528 OFFCURVE",
"87.2 539.2 OFFCURVE",
"96 548 CURVE SMOOTH",
"104 556 OFFCURVE",
"113.6 560 OFFCURVE",
"125.6 560 CURVE SMOOTH",
"141.6 560 OFFCURVE",
"155.2 552.8 OFFCURVE",
"165.6 537.6 CURVE SMOOTH",
"174.4 524.8 OFFCURVE",
"179.2 508.8 OFFCURVE",
"179.2 488.8 CURVE SMOOTH",
"179.2 466.4 OFFCURVE",
"172 447.2 OFFCURVE",
"157.6 430.4 CURVE SMOOTH",
"143.2 413.6 OFFCURVE",
"125.6 404 OFFCURVE",
"104 403.2 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"131 391 OFFCURVE",
"154 401 OFFCURVE",
"174 421 CURVE SMOOTH",
"194 442 OFFCURVE",
"203 466 OFFCURVE",
"203 493 CURVE SMOOTH",
"203 516 OFFCURVE",
"195 538 OFFCURVE",
"180 556 CURVE SMOOTH",
"164 575 OFFCURVE",
"146 585 OFFCURVE",
"124 585 CURVE SMOOTH",
"118 585 OFFCURVE",
"114 584 OFFCURVE",
"108 583 CURVE SMOOTH",
"96 580 OFFCURVE",
"86 574 OFFCURVE",
"78 566 CURVE SMOOTH",
"71 557 OFFCURVE",
"67 547 OFFCURVE",
"67 538 CURVE SMOOTH",
"67 534 OFFCURVE",
"68 529 OFFCURVE",
"70 522 CURVE",
"57 518 OFFCURVE",
"46 511 OFFCURVE",
"39 499 CURVE SMOOTH",
"32 487 OFFCURVE",
"28 472 OFFCURVE",
"28 454 CURVE SMOOTH",
"28 435 OFFCURVE",
"36 420 OFFCURVE",
"51 408 CURVE SMOOTH",
"66 397 OFFCURVE",
"83 391 OFFCURVE",
"104 391 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 403 OFFCURVE",
"72 410 OFFCURVE",
"62 423 CURVE SMOOTH",
"53 434 OFFCURVE",
"48 448 OFFCURVE",
"48 465 CURVE SMOOTH",
"48 483 OFFCURVE",
"53 495 OFFCURVE",
"66 504 CURVE",
"77 481 OFFCURVE",
"89 471 OFFCURVE",
"104 471 CURVE SMOOTH",
"114 471 OFFCURVE",
"122 477 OFFCURVE",
"130 487 CURVE SMOOTH",
"131 488 OFFCURVE",
"132 490 OFFCURVE",
"132 491 CURVE",
"131 492 LINE",
"130 491 LINE SMOOTH",
"122 485 OFFCURVE",
"116 482 OFFCURVE",
"110 482 CURVE SMOOTH",
"109 482 LINE SMOOTH",
"101 482 OFFCURVE",
"94 486 OFFCURVE",
"90 494 CURVE",
"86 499 OFFCURVE",
"83 506 OFFCURVE",
"83 514 CURVE SMOOTH",
"83 528 OFFCURVE",
"87 539 OFFCURVE",
"96 548 CURVE SMOOTH",
"104 556 OFFCURVE",
"114 560 OFFCURVE",
"126 560 CURVE SMOOTH",
"142 560 OFFCURVE",
"155 553 OFFCURVE",
"166 538 CURVE SMOOTH",
"174 525 OFFCURVE",
"179 509 OFFCURVE",
"179 489 CURVE SMOOTH",
"179 466 OFFCURVE",
"172 447 OFFCURVE",
"158 430 CURVE SMOOTH",
"143 414 OFFCURVE",
"126 404 OFFCURVE",
"104 403 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 24 170 24 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01250 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 50 165 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01244 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01254 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01236 1 46 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = zero;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"258 -15 OFFCURVE",
"325 74 OFFCURVE",
"325 180 CURVE SMOOTH",
"325 265 OFFCURVE",
"273 341 OFFCURVE",
"197 341 CURVE SMOOTH",
"168.333 341 OFFCURVE",
"144.667 328.333 OFFCURVE",
"126 303 CURVE SMOOTH",
"108.667 279.667 OFFCURVE",
"100 252.667 OFFCURVE",
"100 222 CURVE SMOOTH",
"100 170 OFFCURVE",
"133 130 OFFCURVE",
"180 130 CURVE SMOOTH",
"224 130 OFFCURVE",
"254 162 OFFCURVE",
"254 202 CURVE SMOOTH",
"254 231 OFFCURVE",
"236 253 OFFCURVE",
"208 253 CURVE SMOOTH",
"191.333 253 OFFCURVE",
"174 241 OFFCURVE",
"174 226 CURVE SMOOTH",
"174 219 OFFCURVE",
"176 216 OFFCURVE",
"179 216 CURVE SMOOTH",
"181 216 OFFCURVE",
"184 219 OFFCURVE",
"184 224 CURVE SMOOTH",
"184 234 OFFCURVE",
"193 240 OFFCURVE",
"204 240 CURVE SMOOTH",
"220 240 OFFCURVE",
"240 228 OFFCURVE",
"240 202 CURVE SMOOTH",
"240 173 OFFCURVE",
"219 148 OFFCURVE",
"180 148 CURVE SMOOTH",
"138 148 OFFCURVE",
"132 190 OFFCURVE",
"133 237 CURVE SMOOTH",
"139 294 OFFCURVE",
"170 329 OFFCURVE",
"207 329 CURVE SMOOTH",
"262 329 OFFCURVE",
"301 264 OFFCURVE",
"301 194 CURVE SMOOTH",
"301 138 OFFCURVE",
"283 81 OFFCURVE",
"248 41 CURVE SMOOTH",
"224 15 OFFCURVE",
"197.333 2 OFFCURVE",
"168 2 CURVE SMOOTH",
"91 2 OFFCURVE",
"55 75 OFFCURVE",
"55 157 CURVE SMOOTH",
"55 265 OFFCURVE",
"116 390 OFFCURVE",
"225 390 CURVE SMOOTH",
"258 390 OFFCURVE",
"265 369 OFFCURVE",
"255 357 CURVE SMOOTH",
"253 354 OFFCURVE",
"258 349 OFFCURVE",
"262 351 CURVE SMOOTH",
"268 354 OFFCURVE",
"273 361 OFFCURVE",
"273 369 CURVE SMOOTH",
"273 389 OFFCURVE",
"256 403 OFFCURVE",
"224 403 CURVE SMOOTH",
"91 403 OFFCURVE",
"18 275 OFFCURVE",
"18 160 CURVE SMOOTH",
"18 68 OFFCURVE",
"65 -15 OFFCURVE",
"166 -15 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"258 -15 OFFCURVE",
"325 74 OFFCURVE",
"325 180 CURVE SMOOTH",
"325 265 OFFCURVE",
"273 341 OFFCURVE",
"197 341 CURVE SMOOTH",
"168 341 OFFCURVE",
"145 328 OFFCURVE",
"126 303 CURVE SMOOTH",
"109 280 OFFCURVE",
"100 253 OFFCURVE",
"100 222 CURVE SMOOTH",
"100 170 OFFCURVE",
"133 130 OFFCURVE",
"180 130 CURVE SMOOTH",
"224 130 OFFCURVE",
"254 162 OFFCURVE",
"254 202 CURVE SMOOTH",
"254 231 OFFCURVE",
"236 253 OFFCURVE",
"208 253 CURVE SMOOTH",
"191 253 OFFCURVE",
"174 241 OFFCURVE",
"174 226 CURVE SMOOTH",
"174 219 OFFCURVE",
"176 216 OFFCURVE",
"179 216 CURVE SMOOTH",
"181 216 OFFCURVE",
"184 219 OFFCURVE",
"184 224 CURVE SMOOTH",
"184 234 OFFCURVE",
"193 240 OFFCURVE",
"204 240 CURVE SMOOTH",
"220 240 OFFCURVE",
"240 228 OFFCURVE",
"240 202 CURVE SMOOTH",
"240 173 OFFCURVE",
"219 148 OFFCURVE",
"180 148 CURVE SMOOTH",
"138 148 OFFCURVE",
"132 190 OFFCURVE",
"133 237 CURVE",
"139 294 OFFCURVE",
"170 329 OFFCURVE",
"207 329 CURVE SMOOTH",
"262 329 OFFCURVE",
"301 264 OFFCURVE",
"301 194 CURVE SMOOTH",
"301 138 OFFCURVE",
"283 81 OFFCURVE",
"248 41 CURVE SMOOTH",
"224 15 OFFCURVE",
"197 2 OFFCURVE",
"168 2 CURVE SMOOTH",
"91 2 OFFCURVE",
"55 75 OFFCURVE",
"55 157 CURVE SMOOTH",
"55 265 OFFCURVE",
"116 390 OFFCURVE",
"225 390 CURVE SMOOTH",
"249 390 OFFCURVE",
"259 379 OFFCURVE",
"259 368 CURVE SMOOTH",
"259 364 OFFCURVE",
"258 360 OFFCURVE",
"255 357 CURVE SMOOTH",
"253 354 OFFCURVE",
"257 351 OFFCURVE",
"260 351 CURVE SMOOTH",
"262 351 LINE",
"268 354 OFFCURVE",
"273 361 OFFCURVE",
"273 369 CURVE SMOOTH",
"273 389 OFFCURVE",
"256 403 OFFCURVE",
"224 403 CURVE SMOOTH",
"91 403 OFFCURVE",
"18 275 OFFCURVE",
"18 160 CURVE SMOOTH",
"18 68 OFFCURVE",
"65 -15 OFFCURVE",
"166 -15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 3 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 3 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 4 86 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01250 68 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01217 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 35 165 35 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 46 170 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012218 50 234 50 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 55 165 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 63 170 63 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01239 1 7 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1 31 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 1 13 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 1 65 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 342;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"26 -7 LINE",
"47.333 2.333 OFFCURVE",
"64 9 OFFCURVE",
"75 13.5 CURVE SMOOTH",
"94 21 LINE",
"97.333 19 OFFCURVE",
"99.667 18.333 OFFCURVE",
"101 19 CURVE SMOOTH",
"103 19.667 OFFCURVE",
"105 21.667 OFFCURVE",
"107 25 CURVE",
"146 38 OFFCURVE",
"167 34 OFFCURVE",
"220 29 CURVE SMOOTH",
"221.333 29 OFFCURVE",
"222.5 29.5 OFFCURVE",
"223.5 30.5 CURVE SMOOTH",
"224.5 31.5 OFFCURVE",
"225 34.667 OFFCURVE",
"225 40 CURVE SMOOTH",
"225 46.667 OFFCURVE",
"224.333 51.167 OFFCURVE",
"223 53.5 CURVE SMOOTH",
"221.667 55.833 OFFCURVE",
"220 57 OFFCURVE",
"217 58 CURVE SMOOTH",
"196 63 OFFCURVE",
"141 66 OFFCURVE",
"103 50 CURVE",
"101 145 OFFCURVE",
"183 318 OFFCURVE",
"246 422 CURVE SMOOTH",
"247 424 OFFCURVE",
"250 432 OFFCURVE",
"250 440 CURVE SMOOTH",
"250 446 OFFCURVE",
"245.667 447 OFFCURVE",
"241 447 CURVE SMOOTH",
"239 447 OFFCURVE",
"237 446 OFFCURVE",
"235 444 CURVE SMOOTH",
"172.333 382 OFFCURVE",
"122.667 341 OFFCURVE",
"86 321 CURVE",
"82 317.667 OFFCURVE",
"80 313.667 OFFCURVE",
"80 309 CURVE SMOOTH",
"80 305 OFFCURVE",
"81.333 303 OFFCURVE",
"84 303 CURVE SMOOTH",
"86.667 303 OFFCURVE",
"89.667 304.667 OFFCURVE",
"93 308 CURVE SMOOTH",
"111 322.667 OFFCURVE",
"128 333 OFFCURVE",
"142 342 CURVE SMOOTH",
"157.5 352 LINE",
"172 361 LINE",
"123 245 OFFCURVE",
"86 158 OFFCURVE",
"86 69 CURVE SMOOTH",
"86 59.667 OFFCURVE",
"86.667 52.333 OFFCURVE",
"88 43 CURVE",
"42.5 18.5 LINE",
"21 8 LINE SMOOTH",
"18 6 OFFCURVE",
"16 3.667 OFFCURVE",
"16 1 CURVE SMOOTH",
"16 -4.333 OFFCURVE",
"18.333 -7 OFFCURVE",
"23 -7 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"26 -7 LINE",
"75 14 LINE",
"94 21 LINE",
"97 19 OFFCURVE",
"100 18 OFFCURVE",
"101 19 CURVE SMOOTH",
"103 20 OFFCURVE",
"105 22 OFFCURVE",
"107 25 CURVE",
"127 32 OFFCURVE",
"142 34 OFFCURVE",
"158 34 CURVE SMOOTH",
"175 34 OFFCURVE",
"194 32 OFFCURVE",
"220 29 CURVE SMOOTH",
"221 29 OFFCURVE",
"223 30 OFFCURVE",
"224 31 CURVE SMOOTH",
"225 32 OFFCURVE",
"225 35 OFFCURVE",
"225 40 CURVE SMOOTH",
"225 47 OFFCURVE",
"224 51 OFFCURVE",
"223 54 CURVE SMOOTH",
"222 56 OFFCURVE",
"220 57 OFFCURVE",
"217 58 CURVE SMOOTH",
"208 60 OFFCURVE",
"192 62 OFFCURVE",
"174 62 CURVE SMOOTH",
"151 62 OFFCURVE",
"124 59 OFFCURVE",
"103 50 CURVE",
"101 145 OFFCURVE",
"183 318 OFFCURVE",
"246 422 CURVE SMOOTH",
"247 424 OFFCURVE",
"250 432 OFFCURVE",
"250 440 CURVE SMOOTH",
"250 446 OFFCURVE",
"246 447 OFFCURVE",
"241 447 CURVE SMOOTH",
"239 447 OFFCURVE",
"237 446 OFFCURVE",
"235 444 CURVE SMOOTH",
"172 382 OFFCURVE",
"123 341 OFFCURVE",
"86 321 CURVE",
"82 318 OFFCURVE",
"80 314 OFFCURVE",
"80 309 CURVE SMOOTH",
"80 305 OFFCURVE",
"81 303 OFFCURVE",
"84 303 CURVE SMOOTH",
"87 303 OFFCURVE",
"90 305 OFFCURVE",
"93 308 CURVE SMOOTH",
"111 323 OFFCURVE",
"128 333 OFFCURVE",
"142 342 CURVE SMOOTH",
"158 352 LINE",
"172 361 LINE",
"123 245 OFFCURVE",
"86 158 OFFCURVE",
"86 69 CURVE SMOOTH",
"86 60 OFFCURVE",
"87 52 OFFCURVE",
"88 43 CURVE",
"43 19 LINE",
"21 8 LINE SMOOTH",
"18 6 OFFCURVE",
"16 4 OFFCURVE",
"16 1 CURVE SMOOTH",
"16 -4 OFFCURVE",
"18 -7 OFFCURVE",
"23 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01211 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0128 23 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 246;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"349 -80 OFFCURVE",
"384.333 -68.667 OFFCURVE",
"409 -46 CURVE SMOOTH",
"429.667 -26 OFFCURVE",
"440 -2 OFFCURVE",
"440 26 CURVE SMOOTH",
"440 44.667 OFFCURVE",
"435 60.667 OFFCURVE",
"425 74 CURVE SMOOTH",
"415.667 87.333 OFFCURVE",
"403 94 OFFCURVE",
"387 94 CURVE SMOOTH",
"357.667 94 OFFCURVE",
"343 81.667 OFFCURVE",
"343 57 CURVE SMOOTH",
"343 51 OFFCURVE",
"346 26 OFFCURVE",
"356 26 CURVE SMOOTH",
"358.667 26 OFFCURVE",
"361 28 OFFCURVE",
"361 33 CURVE SMOOTH",
"360 50 OFFCURVE",
"365 79 OFFCURVE",
"387 79 CURVE SMOOTH",
"397.667 79 OFFCURVE",
"406.667 73.667 OFFCURVE",
"414 63 CURVE SMOOTH",
"422 51.667 OFFCURVE",
"426 39.333 OFFCURVE",
"426 26 CURVE SMOOTH",
"426 4 OFFCURVE",
"417 -13.333 OFFCURVE",
"399 -26 CURVE SMOOTH",
"377 -42 OFFCURVE",
"345 -50 OFFCURVE",
"303 -50 CURVE SMOOTH",
"237.667 -50 OFFCURVE",
"180 -31.667 OFFCURVE",
"120 11 CURVE",
"180.667 37.667 OFFCURVE",
"236.333 75 OFFCURVE",
"287 123 CURVE SMOOTH",
"347.667 179.667 OFFCURVE",
"378 231.667 OFFCURVE",
"378 279 CURVE SMOOTH",
"378 313.667 OFFCURVE",
"361 344 OFFCURVE",
"327 370 CURVE SMOOTH",
"295.667 394 OFFCURVE",
"262.333 406 OFFCURVE",
"227 406 CURVE SMOOTH",
"189.667 406 OFFCURVE",
"156.667 396.667 OFFCURVE",
"128 378 CURVE SMOOTH",
"92.667 354 OFFCURVE",
"75 320.333 OFFCURVE",
"75 277 CURVE SMOOTH",
"75 241 OFFCURVE",
"87.333 214.667 OFFCURVE",
"112 198 CURVE SMOOTH",
"132 185.333 OFFCURVE",
"156.667 179 OFFCURVE",
"186 179 CURVE SMOOTH",
"310 179 OFFCURVE",
"350 346 OFFCURVE",
"215 346 CURVE SMOOTH",
"198.333 346 OFFCURVE",
"183.333 340.333 OFFCURVE",
"170 329 CURVE SMOOTH",
"155.333 316.333 OFFCURVE",
"148 301 OFFCURVE",
"148 283 CURVE SMOOTH",
"148 279 OFFCURVE",
"149 274 OFFCURVE",
"153 274 CURVE SMOOTH",
"157 274 OFFCURVE",
"160 281 OFFCURVE",
"160 283 CURVE SMOOTH",
"160 297 OFFCURVE",
"165.667 309 OFFCURVE",
"177 319 CURVE SMOOTH",
"187.667 329 OFFCURVE",
"200.333 334 OFFCURVE",
"215 334 CURVE SMOOTH",
"306 334 OFFCURVE",
"274 194 OFFCURVE",
"186 194 CURVE SMOOTH",
"164 194 OFFCURVE",
"144.667 202 OFFCURVE",
"128 218 CURVE SMOOTH",
"86 258 OFFCURVE",
"100 318 OFFCURVE",
"142 357 CURVE SMOOTH",
"168 381 OFFCURVE",
"197.667 391 OFFCURVE",
"227 391 CURVE SMOOTH",
"257.667 391 OFFCURVE",
"283.667 381 OFFCURVE",
"305 361 CURVE SMOOTH",
"326.333 340.333 OFFCURVE",
"337 314.333 OFFCURVE",
"337 283 CURVE SMOOTH",
"337 235.667 OFFCURVE",
"309.333 185 OFFCURVE",
"254 131 CURVE SMOOTH",
"207.333 87 OFFCURVE",
"158.333 50.667 OFFCURVE",
"101 24 CURVE",
"86.333 31.333 OFFCURVE",
"72.667 35 OFFCURVE",
"60 35 CURVE SMOOTH",
"46 35 OFFCURVE",
"35.333 31.333 OFFCURVE",
"28 24 CURVE SMOOTH",
"22 18 OFFCURVE",
"19 10.667 OFFCURVE",
"19 2 CURVE SMOOTH",
"19 -12 OFFCURVE",
"24 -19 OFFCURVE",
"34 -19 CURVE SMOOTH",
"36.667 -19 OFFCURVE",
"38.333 -18.667 OFFCURVE",
"39 -18 CURVE",
"71 -7 LINE",
"100 3 LINE",
"149 -25 LINE SMOOTH",
"165 -34 OFFCURVE",
"181.333 -43.333 OFFCURVE",
"198 -52 CURVE SMOOTH",
"235.333 -72 OFFCURVE",
"269.667 -80 OFFCURVE",
"303 -80 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"349 -80 OFFCURVE",
"384 -69 OFFCURVE",
"409 -46 CURVE SMOOTH",
"430 -26 OFFCURVE",
"440 -2 OFFCURVE",
"440 26 CURVE SMOOTH",
"440 45 OFFCURVE",
"435 61 OFFCURVE",
"425 74 CURVE SMOOTH",
"416 87 OFFCURVE",
"403 94 OFFCURVE",
"387 94 CURVE SMOOTH",
"358 94 OFFCURVE",
"343 82 OFFCURVE",
"343 57 CURVE SMOOTH",
"343 51 OFFCURVE",
"346 26 OFFCURVE",
"356 26 CURVE SMOOTH",
"359 26 OFFCURVE",
"361 29 OFFCURVE",
"361 37 CURVE SMOOTH",
"361 54 OFFCURVE",
"367 79 OFFCURVE",
"387 79 CURVE SMOOTH",
"398 79 OFFCURVE",
"407 74 OFFCURVE",
"414 63 CURVE SMOOTH",
"422 52 OFFCURVE",
"426 39 OFFCURVE",
"426 26 CURVE SMOOTH",
"426 4 OFFCURVE",
"417 -13 OFFCURVE",
"399 -26 CURVE SMOOTH",
"377 -42 OFFCURVE",
"345 -50 OFFCURVE",
"303 -50 CURVE SMOOTH",
"238 -50 OFFCURVE",
"180 -32 OFFCURVE",
"120 11 CURVE",
"181 38 OFFCURVE",
"236 75 OFFCURVE",
"287 123 CURVE SMOOTH",
"348 180 OFFCURVE",
"378 232 OFFCURVE",
"378 279 CURVE SMOOTH",
"378 314 OFFCURVE",
"361 344 OFFCURVE",
"327 370 CURVE SMOOTH",
"296 394 OFFCURVE",
"262 406 OFFCURVE",
"227 406 CURVE SMOOTH",
"190 406 OFFCURVE",
"157 397 OFFCURVE",
"128 378 CURVE SMOOTH",
"93 354 OFFCURVE",
"75 320 OFFCURVE",
"75 277 CURVE SMOOTH",
"75 241 OFFCURVE",
"87 215 OFFCURVE",
"112 198 CURVE SMOOTH",
"132 185 OFFCURVE",
"157 179 OFFCURVE",
"186 179 CURVE SMOOTH",
"256 179 OFFCURVE",
"299 232 OFFCURVE",
"299 279 CURVE SMOOTH",
"299 314 OFFCURVE",
"274 346 OFFCURVE",
"215 346 CURVE SMOOTH",
"198 346 OFFCURVE",
"183 340 OFFCURVE",
"170 329 CURVE SMOOTH",
"155 316 OFFCURVE",
"148 301 OFFCURVE",
"148 283 CURVE SMOOTH",
"148 279 OFFCURVE",
"149 274 OFFCURVE",
"153 274 CURVE SMOOTH",
"157 274 OFFCURVE",
"160 281 OFFCURVE",
"160 283 CURVE SMOOTH",
"160 297 OFFCURVE",
"166 309 OFFCURVE",
"177 319 CURVE SMOOTH",
"188 329 OFFCURVE",
"200 334 OFFCURVE",
"215 334 CURVE SMOOTH",
"253 334 OFFCURVE",
"270 310 OFFCURVE",
"270 281 CURVE SMOOTH",
"270 242 OFFCURVE",
"237 194 OFFCURVE",
"186 194 CURVE SMOOTH",
"164 194 OFFCURVE",
"145 202 OFFCURVE",
"128 218 CURVE SMOOTH",
"110 235 OFFCURVE",
"103 255 OFFCURVE",
"103 276 CURVE SMOOTH",
"103 305 OFFCURVE",
"118 334 OFFCURVE",
"142 357 CURVE SMOOTH",
"168 381 OFFCURVE",
"198 391 OFFCURVE",
"227 391 CURVE SMOOTH",
"258 391 OFFCURVE",
"284 381 OFFCURVE",
"305 361 CURVE SMOOTH",
"326 340 OFFCURVE",
"337 314 OFFCURVE",
"337 283 CURVE SMOOTH",
"337 236 OFFCURVE",
"309 185 OFFCURVE",
"254 131 CURVE SMOOTH",
"207 87 OFFCURVE",
"158 51 OFFCURVE",
"101 24 CURVE",
"86 31 OFFCURVE",
"73 35 OFFCURVE",
"60 35 CURVE SMOOTH",
"46 35 OFFCURVE",
"35 31 OFFCURVE",
"28 24 CURVE SMOOTH",
"22 18 OFFCURVE",
"19 11 OFFCURVE",
"19 2 CURVE SMOOTH",
"19 -12 OFFCURVE",
"24 -19 OFFCURVE",
"34 -19 CURVE SMOOTH",
"37 -19 OFFCURVE",
"38 -19 OFFCURVE",
"39 -18 CURVE",
"100 3 LINE",
"149 -25 LINE SMOOTH",
"165 -34 OFFCURVE",
"181 -43 OFFCURVE",
"198 -52 CURVE SMOOTH",
"235 -72 OFFCURVE",
"270 -80 OFFCURVE",
"303 -80 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01236 3 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 3 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 4 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01252 59 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 28 170 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 36 165 36 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 44 170 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 27 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 52 229 52 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01287 75 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 94 170 94 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01290 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 1 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012112 1 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01240 1 71 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 447;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"276 -39 OFFCURVE",
"372 24 OFFCURVE",
"372 120 CURVE SMOOTH",
"372 178.667 OFFCURVE",
"345 217.667 OFFCURVE",
"281 243 CURVE",
"303 255 OFFCURVE",
"320.333 268.333 OFFCURVE",
"333 283 CURVE SMOOTH",
"394 346 OFFCURVE",
"337 430 OFFCURVE",
"240 430 CURVE SMOOTH",
"206 430 OFFCURVE",
"174 422 OFFCURVE",
"143 407 CURVE SMOOTH",
"109 390.333 OFFCURVE",
"92 369 OFFCURVE",
"92 343 CURVE SMOOTH",
"92 325.667 OFFCURVE",
"103.667 317 OFFCURVE",
"127 317 CURVE SMOOTH",
"140.333 317 OFFCURVE",
"152 319.333 OFFCURVE",
"162 324 CURVE SMOOTH",
"169 327 OFFCURVE",
"172 332 OFFCURVE",
"172 335 CURVE SMOOTH",
"172 338 OFFCURVE",
"170 340 OFFCURVE",
"166 340 CURVE SMOOTH",
"158 340 OFFCURVE",
"144 335 OFFCURVE",
"133 335 CURVE SMOOTH",
"104 335 OFFCURVE",
"105 372 OFFCURVE",
"159 396 CURVE SMOOTH",
"210 419 OFFCURVE",
"270 420 OFFCURVE",
"302 397 CURVE SMOOTH",
"317 386 OFFCURVE",
"322 369.667 OFFCURVE",
"322 351 CURVE SMOOTH",
"322 332.333 OFFCURVE",
"315.333 313.333 OFFCURVE",
"302 294 CURVE SMOOTH",
"286.667 274 OFFCURVE",
"268.667 259.667 OFFCURVE",
"248 251 CURVE",
"245 251 OFFCURVE",
"217 255 OFFCURVE",
"214 255 CURVE SMOOTH",
"205 256 OFFCURVE",
"196 257 OFFCURVE",
"188 250 CURVE SMOOTH",
"182 246 OFFCURVE",
"179 242.333 OFFCURVE",
"179 239 CURVE SMOOTH",
"179 234.333 OFFCURVE",
"187 229 OFFCURVE",
"202 228 CURVE SMOOTH",
"221 227 OFFCURVE",
"237.667 229.333 OFFCURVE",
"251 232 CURVE",
"303.667 219.333 OFFCURVE",
"330 183 OFFCURVE",
"330 123 CURVE SMOOTH",
"330 38 OFFCURVE",
"257 -21 OFFCURVE",
"171 -21 CURVE SMOOTH",
"95.667 -21 OFFCURVE",
"58 12 OFFCURVE",
"58 78 CURVE SMOOTH",
"58 108 OFFCURVE",
"64.333 131.667 OFFCURVE",
"77 149 CURVE SMOOTH",
"91.667 167.667 OFFCURVE",
"110.333 177 OFFCURVE",
"133 177 CURVE SMOOTH",
"153.667 177 OFFCURVE",
"171.667 168 OFFCURVE",
"187 150 CURVE SMOOTH",
"215 116 OFFCURVE",
"214 53 OFFCURVE",
"176 53 CURVE SMOOTH",
"149 53 OFFCURVE",
"142 89 OFFCURVE",
"156 109 CURVE SMOOTH",
"161 116 LINE SMOOTH",
"162 117 OFFCURVE",
"160 118 OFFCURVE",
"157 118 CURVE SMOOTH",
"155 118 OFFCURVE",
"150 115 OFFCURVE",
"148 113 CURVE SMOOTH",
"123 86 OFFCURVE",
"135 39 OFFCURVE",
"174 39 CURVE SMOOTH",
"226 39 OFFCURVE",
"237 111 OFFCURVE",
"198 159 CURVE SMOOTH",
"180.667 180.333 OFFCURVE",
"159 191 OFFCURVE",
"133 191 CURVE SMOOTH",
"103 191 OFFCURVE",
"78.667 180 OFFCURVE",
"60 158 CURVE SMOOTH",
"42 138 OFFCURVE",
"33 112.333 OFFCURVE",
"33 81 CURVE SMOOTH",
"33 41.667 OFFCURVE",
"46.333 11.333 OFFCURVE",
"73 -10 CURVE SMOOTH",
"98.333 -29.333 OFFCURVE",
"130.333 -39 OFFCURVE",
"169 -39 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"276 -39 OFFCURVE",
"372 24 OFFCURVE",
"372 120 CURVE SMOOTH",
"372 179 OFFCURVE",
"345 218 OFFCURVE",
"281 243 CURVE",
"303 255 OFFCURVE",
"320 268 OFFCURVE",
"333 283 CURVE SMOOTH",
"350 301 OFFCURVE",
"358 321 OFFCURVE",
"358 340 CURVE SMOOTH",
"358 387 OFFCURVE",
"309 430 OFFCURVE",
"240 430 CURVE SMOOTH",
"206 430 OFFCURVE",
"174 422 OFFCURVE",
"143 407 CURVE SMOOTH",
"109 390 OFFCURVE",
"92 369 OFFCURVE",
"92 343 CURVE SMOOTH",
"92 326 OFFCURVE",
"104 317 OFFCURVE",
"127 317 CURVE SMOOTH",
"140 317 OFFCURVE",
"152 319 OFFCURVE",
"162 324 CURVE SMOOTH",
"169 327 OFFCURVE",
"172 332 OFFCURVE",
"172 335 CURVE SMOOTH",
"172 338 OFFCURVE",
"170 340 OFFCURVE",
"166 340 CURVE SMOOTH",
"158 340 OFFCURVE",
"144 335 OFFCURVE",
"133 335 CURVE SMOOTH",
"121 335 OFFCURVE",
"114 341 OFFCURVE",
"114 351 CURVE SMOOTH",
"114 364 OFFCURVE",
"128 382 OFFCURVE",
"159 396 CURVE SMOOTH",
"185 408 OFFCURVE",
"213 414 OFFCURVE",
"239 414 CURVE SMOOTH",
"264 414 OFFCURVE",
"286 408 OFFCURVE",
"302 397 CURVE SMOOTH",
"317 386 OFFCURVE",
"322 370 OFFCURVE",
"322 351 CURVE SMOOTH",
"322 332 OFFCURVE",
"315 313 OFFCURVE",
"302 294 CURVE SMOOTH",
"287 274 OFFCURVE",
"269 260 OFFCURVE",
"248 251 CURVE",
"245 251 OFFCURVE",
"217 255 OFFCURVE",
"214 255 CURVE SMOOTH",
"205 256 OFFCURVE",
"196 257 OFFCURVE",
"188 250 CURVE SMOOTH",
"182 246 OFFCURVE",
"179 242 OFFCURVE",
"179 239 CURVE SMOOTH",
"179 233 OFFCURVE",
"190 228 OFFCURVE",
"211 228 CURVE SMOOTH",
"226 228 OFFCURVE",
"240 230 OFFCURVE",
"251 232 CURVE",
"304 219 OFFCURVE",
"330 183 OFFCURVE",
"330 123 CURVE SMOOTH",
"330 38 OFFCURVE",
"257 -21 OFFCURVE",
"171 -21 CURVE SMOOTH",
"96 -21 OFFCURVE",
"58 12 OFFCURVE",
"58 78 CURVE SMOOTH",
"58 108 OFFCURVE",
"64 132 OFFCURVE",
"77 149 CURVE SMOOTH",
"92 168 OFFCURVE",
"110 177 OFFCURVE",
"133 177 CURVE SMOOTH",
"154 177 OFFCURVE",
"172 168 OFFCURVE",
"187 150 CURVE SMOOTH",
"200 135 OFFCURVE",
"206 113 OFFCURVE",
"206 94 CURVE SMOOTH",
"206 72 OFFCURVE",
"197 53 OFFCURVE",
"176 53 CURVE SMOOTH",
"158 53 OFFCURVE",
"149 69 OFFCURVE",
"149 85 CURVE SMOOTH",
"149 94 OFFCURVE",
"151 102 OFFCURVE",
"156 109 CURVE SMOOTH",
"161 116 LINE SMOOTH",
"162 117 OFFCURVE",
"160 118 OFFCURVE",
"157 118 CURVE SMOOTH",
"155 118 OFFCURVE",
"150 115 OFFCURVE",
"148 113 CURVE SMOOTH",
"139 103 OFFCURVE",
"135 91 OFFCURVE",
"135 80 CURVE SMOOTH",
"135 59 OFFCURVE",
"149 39 OFFCURVE",
"174 39 CURVE SMOOTH",
"205 39 OFFCURVE",
"221 65 OFFCURVE",
"221 95 CURVE SMOOTH",
"221 116 OFFCURVE",
"214 140 OFFCURVE",
"198 159 CURVE SMOOTH",
"181 180 OFFCURVE",
"159 191 OFFCURVE",
"133 191 CURVE SMOOTH",
"103 191 OFFCURVE",
"79 180 OFFCURVE",
"60 158 CURVE SMOOTH",
"42 138 OFFCURVE",
"33 112 OFFCURVE",
"33 81 CURVE SMOOTH",
"33 42 OFFCURVE",
"46 11 OFFCURVE",
"73 -10 CURVE SMOOTH",
"98 -29 OFFCURVE",
"130 -39 OFFCURVE",
"169 -39 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01251 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 115 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 3 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01236 24 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01234 8 115 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 27 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 36 229 36 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012154 43 170 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 51 165 51 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 84 170 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 92 165 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012119 8 115 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012111 1 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1 47 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 377;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"265 -40 OFFCURVE",
"269 -35 OFFCURVE",
"268 -30 CURVE SMOOTH",
"265 -5 OFFCURVE",
"265 106 OFFCURVE",
"265 126 CURVE",
"275 126 OFFCURVE",
"298 127 OFFCURVE",
"311 128 CURVE SMOOTH",
"376 134 OFFCURVE",
"383 152 OFFCURVE",
"383 192 CURVE SMOOTH",
"383 202 OFFCURVE",
"381.667 212 OFFCURVE",
"379 222 CURVE SMOOTH",
"377.667 225.333 OFFCURVE",
"375.333 227 OFFCURVE",
"372 227 CURVE SMOOTH",
"366.667 227 OFFCURVE",
"364 224.667 OFFCURVE",
"364 220 CURVE SMOOTH",
"364 218.667 OFFCURVE",
"364.333 217.667 OFFCURVE",
"365 217 CURVE",
"367.667 206.333 OFFCURVE",
"369 199 OFFCURVE",
"369 191 CURVE SMOOTH",
"369 155 OFFCURVE",
"325 145 OFFCURVE",
"266 147 CURVE",
"266 178 OFFCURVE",
"296 279 OFFCURVE",
"311 323 CURVE",
"311 332 OFFCURVE",
"305 332 OFFCURVE",
"296 332 CURVE SMOOTH",
"286 332 OFFCURVE",
"280 330 OFFCURVE",
"276 322 CURVE SMOOTH",
"252 272 OFFCURVE",
"239 174 OFFCURVE",
"239 148 CURVE",
"203 151 OFFCURVE",
"125 158 OFFCURVE",
"97 162 CURVE",
"127 193 OFFCURVE",
"194 315 OFFCURVE",
"232 447 CURVE SMOOTH",
"232 448 OFFCURVE",
"238 462 OFFCURVE",
"238 465 CURVE SMOOTH",
"238 468 OFFCURVE",
"237 471 OFFCURVE",
"232 471 CURVE SMOOTH",
"230 471 OFFCURVE",
"225 470 OFFCURVE",
"224 467 CURVE SMOOTH",
"197 407 OFFCURVE",
"164 336 OFFCURVE",
"131 278 CURVE SMOOTH",
"117 254 OFFCURVE",
"72 197 OFFCURVE",
"45 176 CURVE SMOOTH",
"38 171 OFFCURVE",
"32 166 OFFCURVE",
"32 164 CURVE SMOOTH",
"32 153 OFFCURVE",
"32 139 OFFCURVE",
"58 131.5 CURVE SMOOTH",
"90 122 OFFCURVE",
"197 126 OFFCURVE",
"238 126 CURVE",
"238 89 OFFCURVE",
"242.333 -5.333 OFFCURVE",
"251 -34 CURVE SMOOTH",
"251.667 -38 OFFCURVE",
"255 -40 OFFCURVE",
"259 -40 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"264 -40 OFFCURVE",
"268 -36 OFFCURVE",
"268 -32 CURVE SMOOTH",
"268 -30 LINE SMOOTH",
"265 -5 OFFCURVE",
"265 106 OFFCURVE",
"265 126 CURVE",
"275 126 OFFCURVE",
"298 127 OFFCURVE",
"311 128 CURVE SMOOTH",
"376 134 OFFCURVE",
"383 152 OFFCURVE",
"383 192 CURVE SMOOTH",
"383 202 OFFCURVE",
"382 212 OFFCURVE",
"379 222 CURVE SMOOTH",
"378 225 OFFCURVE",
"375 227 OFFCURVE",
"372 227 CURVE SMOOTH",
"367 227 OFFCURVE",
"364 225 OFFCURVE",
"364 220 CURVE SMOOTH",
"364 219 OFFCURVE",
"364 218 OFFCURVE",
"365 217 CURVE",
"368 206 OFFCURVE",
"369 199 OFFCURVE",
"369 191 CURVE SMOOTH",
"369 155 OFFCURVE",
"325 145 OFFCURVE",
"266 147 CURVE",
"266 178 OFFCURVE",
"296 279 OFFCURVE",
"311 323 CURVE",
"311 332 OFFCURVE",
"305 332 OFFCURVE",
"296 332 CURVE SMOOTH",
"286 332 OFFCURVE",
"280 330 OFFCURVE",
"276 322 CURVE SMOOTH",
"252 272 OFFCURVE",
"239 174 OFFCURVE",
"239 148 CURVE",
"203 151 OFFCURVE",
"125 158 OFFCURVE",
"97 162 CURVE",
"127 193 OFFCURVE",
"194 315 OFFCURVE",
"232 447 CURVE",
"232 448 OFFCURVE",
"238 462 OFFCURVE",
"238 465 CURVE SMOOTH",
"238 468 OFFCURVE",
"237 471 OFFCURVE",
"232 471 CURVE SMOOTH",
"230 471 OFFCURVE",
"225 470 OFFCURVE",
"224 467 CURVE SMOOTH",
"197 407 OFFCURVE",
"164 336 OFFCURVE",
"131 278 CURVE SMOOTH",
"117 254 OFFCURVE",
"72 197 OFFCURVE",
"45 176 CURVE SMOOTH",
"38 171 OFFCURVE",
"32 166 OFFCURVE",
"32 164 CURVE SMOOTH",
"32 153 OFFCURVE",
"32 139 OFFCURVE",
"58 132 CURVE SMOOTH",
"75 126 OFFCURVE",
"115 125 OFFCURVE",
"154 125 CURVE SMOOTH",
"187 125 OFFCURVE",
"219 126 OFFCURVE",
"238 126 CURVE",
"238 89 OFFCURVE",
"242 -5 OFFCURVE",
"251 -34 CURVE SMOOTH",
"252 -38 OFFCURVE",
"255 -40 OFFCURVE",
"259 -40 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01265 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 65 170 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01262 1 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 374;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"135.667 -47 OFFCURVE",
"162.667 -43.333 OFFCURVE",
"192 -36 CURVE SMOOTH",
"242.667 -22 OFFCURVE",
"284 0 OFFCURVE",
"316 30 CURVE SMOOTH",
"354 64.667 OFFCURVE",
"373 106 OFFCURVE",
"373 154 CURVE SMOOTH",
"373 195.333 OFFCURVE",
"358.333 228.667 OFFCURVE",
"329 254 CURVE SMOOTH",
"301.667 278 OFFCURVE",
"266.667 290 OFFCURVE",
"224 290 CURVE SMOOTH",
"180.667 290 OFFCURVE",
"129 283 OFFCURVE",
"78 260 CURVE",
"80 273 OFFCURVE",
"90 308 OFFCURVE",
"90 326 CURVE SMOOTH",
"90 353 OFFCURVE",
"121.333 355 OFFCURVE",
"164 355 CURVE SMOOTH",
"186 355 OFFCURVE",
"207.667 353.333 OFFCURVE",
"229 350 CURVE SMOOTH",
"250.333 346.667 OFFCURVE",
"271.667 345 OFFCURVE",
"293 345 CURVE SMOOTH",
"314.333 345 OFFCURVE",
"331 349.333 OFFCURVE",
"343 358 CURVE SMOOTH",
"352.333 365.333 OFFCURVE",
"357 374.333 OFFCURVE",
"357 385 CURVE SMOOTH",
"357 397 OFFCURVE",
"351.667 408.333 OFFCURVE",
"341 419 CURVE SMOOTH",
"330.333 429.667 OFFCURVE",
"316.333 436 OFFCURVE",
"299 438 CURVE SMOOTH",
"293.667 438.667 OFFCURVE",
"291 436.333 OFFCURVE",
"291 431 CURVE SMOOTH",
"291 428.333 OFFCURVE",
"292.5 426 OFFCURVE",
"295.5 424 CURVE SMOOTH",
"298.5 422 OFFCURVE",
"304.667 420.333 OFFCURVE",
"314 419 CURVE SMOOTH",
"322 418.333 OFFCURVE",
"329.333 414.667 OFFCURVE",
"336 408 CURVE SMOOTH",
"341.333 401.333 OFFCURVE",
"344 394.667 OFFCURVE",
"344 388 CURVE SMOOTH",
"344 368.667 OFFCURVE",
"328.667 359 OFFCURVE",
"298 359 CURVE SMOOTH",
"256.956 359 OFFCURVE",
"182.081 376.487 OFFCURVE",
"131 385 CURVE SMOOTH",
"111.667 389 OFFCURVE",
"97 391 OFFCURVE",
"87 391 CURVE SMOOTH",
"66.333 391 OFFCURVE",
"56 383.333 OFFCURVE",
"56 368 CURVE SMOOTH",
"56 299 OFFCURVE",
"51 276 OFFCURVE",
"38 251 CURVE SMOOTH",
"36 248 OFFCURVE",
"35 245 OFFCURVE",
"35 244 CURVE SMOOTH",
"35 241 OFFCURVE",
"38 239 OFFCURVE",
"44 236 CURVE SMOOTH",
"50 232.667 OFFCURVE",
"56.333 231 OFFCURVE",
"63 231 CURVE SMOOTH",
"75 231 OFFCURVE",
"153 275 OFFCURVE",
"224 275 CURVE SMOOTH",
"261.333 275 OFFCURVE",
"288 265 OFFCURVE",
"304 245 CURVE SMOOTH",
"318 227 OFFCURVE",
"325 198.333 OFFCURVE",
"325 159 CURVE SMOOTH",
"325 99.667 OFFCURVE",
"300.333 51.333 OFFCURVE",
"251 14 CURVE SMOOTH",
"209.667 -17.333 OFFCURVE",
"164 -33 OFFCURVE",
"114 -33 CURVE SMOOTH",
"92 -33 OFFCURVE",
"75 -29.333 OFFCURVE",
"63 -22 CURVE SMOOTH",
"48.333 -13.333 OFFCURVE",
"41 -1.667 OFFCURVE",
"41 13 CURVE SMOOTH",
"41 39.667 OFFCURVE",
"53.333 62.667 OFFCURVE",
"78 82 CURVE SMOOTH",
"101.333 99.333 OFFCURVE",
"127 108 OFFCURVE",
"155 108 CURVE SMOOTH",
"173.667 108 OFFCURVE",
"183 100.333 OFFCURVE",
"183 85 CURVE SMOOTH",
"183 75.667 OFFCURVE",
"179 67.667 OFFCURVE",
"171 61 CURVE SMOOTH",
"160 53 OFFCURVE",
"144 51 OFFCURVE",
"127 51 CURVE",
"121.667 51 OFFCURVE",
"119 48.333 OFFCURVE",
"119 43 CURVE SMOOTH",
"119 37 OFFCURVE",
"124 35 OFFCURVE",
"141 35 CURVE SMOOTH",
"166 35 OFFCURVE",
"180.333 40.333 OFFCURVE",
"195 51 CURVE SMOOTH",
"207 61 OFFCURVE",
"213 72 OFFCURVE",
"213 84 CURVE SMOOTH",
"213 94 OFFCURVE",
"208.333 102.667 OFFCURVE",
"199 110 CURVE SMOOTH",
"189 118 OFFCURVE",
"174.333 122 OFFCURVE",
"155 122 CURVE SMOOTH",
"124.333 122 OFFCURVE",
"93.333 111.333 OFFCURVE",
"62 90 CURVE SMOOTH",
"28.667 66 OFFCURVE",
"12 38.333 OFFCURVE",
"12 7 CURVE SMOOTH",
"12 -9.667 OFFCURVE",
"21.333 -23 OFFCURVE",
"40 -33 CURVE SMOOTH",
"58.667 -42.333 OFFCURVE",
"82.333 -47 OFFCURVE",
"111 -47 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"136 -47 OFFCURVE",
"163 -43 OFFCURVE",
"192 -36 CURVE SMOOTH",
"243 -22 OFFCURVE",
"284 0 OFFCURVE",
"316 30 CURVE SMOOTH",
"354 65 OFFCURVE",
"373 106 OFFCURVE",
"373 154 CURVE SMOOTH",
"373 195 OFFCURVE",
"358 229 OFFCURVE",
"329 254 CURVE SMOOTH",
"302 278 OFFCURVE",
"267 290 OFFCURVE",
"224 290 CURVE SMOOTH",
"181 290 OFFCURVE",
"129 283 OFFCURVE",
"78 260 CURVE",
"80 273 OFFCURVE",
"90 308 OFFCURVE",
"90 326 CURVE SMOOTH",
"90 353 OFFCURVE",
"121 355 OFFCURVE",
"164 355 CURVE SMOOTH",
"186 355 OFFCURVE",
"208 353 OFFCURVE",
"229 350 CURVE SMOOTH",
"250 347 OFFCURVE",
"272 345 OFFCURVE",
"293 345 CURVE SMOOTH",
"314 345 OFFCURVE",
"331 349 OFFCURVE",
"343 358 CURVE SMOOTH",
"352 365 OFFCURVE",
"357 374 OFFCURVE",
"357 385 CURVE SMOOTH",
"357 397 OFFCURVE",
"352 408 OFFCURVE",
"341 419 CURVE SMOOTH",
"330 430 OFFCURVE",
"316 436 OFFCURVE",
"299 438 CURVE SMOOTH",
"294 439 OFFCURVE",
"291 436 OFFCURVE",
"291 431 CURVE SMOOTH",
"291 428 OFFCURVE",
"293 426 OFFCURVE",
"296 424 CURVE SMOOTH",
"299 422 OFFCURVE",
"305 420 OFFCURVE",
"314 419 CURVE SMOOTH",
"322 418 OFFCURVE",
"329 415 OFFCURVE",
"336 408 CURVE",
"341 401 OFFCURVE",
"344 395 OFFCURVE",
"344 388 CURVE SMOOTH",
"344 369 OFFCURVE",
"329 359 OFFCURVE",
"298 359 CURVE SMOOTH",
"257 359 OFFCURVE",
"182 376 OFFCURVE",
"131 385 CURVE SMOOTH",
"112 389 OFFCURVE",
"97 391 OFFCURVE",
"87 391 CURVE SMOOTH",
"66 391 OFFCURVE",
"56 383 OFFCURVE",
"56 368 CURVE SMOOTH",
"56 299 OFFCURVE",
"51 276 OFFCURVE",
"38 251 CURVE SMOOTH",
"36 248 OFFCURVE",
"35 245 OFFCURVE",
"35 244 CURVE SMOOTH",
"35 241 OFFCURVE",
"38 239 OFFCURVE",
"44 236 CURVE SMOOTH",
"50 233 OFFCURVE",
"56 231 OFFCURVE",
"63 231 CURVE SMOOTH",
"75 231 OFFCURVE",
"153 275 OFFCURVE",
"224 275 CURVE SMOOTH",
"261 275 OFFCURVE",
"288 265 OFFCURVE",
"304 245 CURVE SMOOTH",
"318 227 OFFCURVE",
"325 198 OFFCURVE",
"325 159 CURVE SMOOTH",
"325 100 OFFCURVE",
"300 51 OFFCURVE",
"251 14 CURVE SMOOTH",
"210 -17 OFFCURVE",
"164 -33 OFFCURVE",
"114 -33 CURVE SMOOTH",
"92 -33 OFFCURVE",
"75 -29 OFFCURVE",
"63 -22 CURVE SMOOTH",
"48 -13 OFFCURVE",
"41 -2 OFFCURVE",
"41 13 CURVE SMOOTH",
"41 40 OFFCURVE",
"53 63 OFFCURVE",
"78 82 CURVE SMOOTH",
"101 99 OFFCURVE",
"127 108 OFFCURVE",
"155 108 CURVE SMOOTH",
"174 108 OFFCURVE",
"183 100 OFFCURVE",
"183 85 CURVE SMOOTH",
"183 76 OFFCURVE",
"179 68 OFFCURVE",
"171 61 CURVE SMOOTH",
"160 53 OFFCURVE",
"144 51 OFFCURVE",
"127 51 CURVE SMOOTH",
"122 51 OFFCURVE",
"119 48 OFFCURVE",
"119 43 CURVE SMOOTH",
"119 37 OFFCURVE",
"124 35 OFFCURVE",
"141 35 CURVE SMOOTH",
"166 35 OFFCURVE",
"180 40 OFFCURVE",
"195 51 CURVE SMOOTH",
"207 61 OFFCURVE",
"213 72 OFFCURVE",
"213 84 CURVE SMOOTH",
"213 94 OFFCURVE",
"208 103 OFFCURVE",
"199 110 CURVE SMOOTH",
"189 118 OFFCURVE",
"174 122 OFFCURVE",
"155 122 CURVE SMOOTH",
"124 122 OFFCURVE",
"93 111 OFFCURVE",
"62 90 CURVE SMOOTH",
"29 66 OFFCURVE",
"12 38 OFFCURVE",
"12 7 CURVE SMOOTH",
"12 -10 OFFCURVE",
"21 -23 OFFCURVE",
"40 -33 CURVE SMOOTH",
"59 -42 OFFCURVE",
"82 -47 OFFCURVE",
"111 -47 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01235 3 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 4 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 35 170 35 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 41 165 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 49 170 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 104 22 104 38 104 54 104 70 104 86 104 102 104 118 104 134 104 150 104 166 104 182 104 198 104 214 104 230 104 246 104 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 104 22 104 38 104 54 104 70 104 86 104 102 104 118 104 134 104 150 104 166 104 182 104 198 104 214 104 230 104 246 104 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 104 22 104 38 104 54 104 70 104 86 104 102 104 118 104 134 104 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 104 165 104 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012107 67 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01245 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 1 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 1 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012109 1 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 405;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"204.667 -47 OFFCURVE",
"237 -38.667 OFFCURVE",
"265 -22 CURVE SMOOTH",
"301.667 0.667 OFFCURVE",
"320 35.333 OFFCURVE",
"320 82 CURVE SMOOTH",
"320 114 OFFCURVE",
"308.333 138.667 OFFCURVE",
"285 156 CURVE SMOOTH",
"264.333 172.667 OFFCURVE",
"238.667 181 OFFCURVE",
"208 181 CURVE SMOOTH",
"177.333 181 OFFCURVE",
"151.667 172.667 OFFCURVE",
"131 156 CURVE SMOOTH",
"108.333 138 OFFCURVE",
"97 113.333 OFFCURVE",
"97 82 CURVE SMOOTH",
"97 54.667 OFFCURVE",
"105.333 33.667 OFFCURVE",
"122 19 CURVE SMOOTH",
"138.667 5.667 OFFCURVE",
"157.667 -1 OFFCURVE",
"179 -1 CURVE SMOOTH",
"201.667 -1 OFFCURVE",
"222 9 OFFCURVE",
"234 25 CURVE SMOOTH",
"238 30 OFFCURVE",
"237 35 OFFCURVE",
"232 35 CURVE SMOOTH",
"230 35 OFFCURVE",
"227 34 OFFCURVE",
"224 31 CURVE SMOOTH",
"209.333 17.667 OFFCURVE",
"194.667 11 OFFCURVE",
"180 11 CURVE SMOOTH",
"149.333 11 OFFCURVE",
"135 36.667 OFFCURVE",
"135 82 CURVE SMOOTH",
"135 107.333 OFFCURVE",
"142.333 127 OFFCURVE",
"157 141 CURVE SMOOTH",
"169.667 153 OFFCURVE",
"186 159 OFFCURVE",
"206 159 CURVE SMOOTH",
"228.667 159 OFFCURVE",
"249.333 151.333 OFFCURVE",
"268 136 CURVE SMOOTH",
"287.333 120 OFFCURVE",
"297 99.333 OFFCURVE",
"297 74 CURVE SMOOTH",
"297 38 OFFCURVE",
"282 10.667 OFFCURVE",
"252 -8 CURVE SMOOTH",
"228 -24 OFFCURVE",
"200 -32 OFFCURVE",
"168 -32 CURVE SMOOTH",
"137.333 -32 OFFCURVE",
"111.667 -21.667 OFFCURVE",
"91 -1 CURVE SMOOTH",
"69 19.667 OFFCURVE",
"58 45.667 OFFCURVE",
"58 77 CURVE SMOOTH",
"58 205.667 OFFCURVE",
"146 304 OFFCURVE",
"310 370 CURVE SMOOTH",
"315 372 OFFCURVE",
"327 376 OFFCURVE",
"327 381 CURVE SMOOTH",
"327 382.667 OFFCURVE",
"325 385 OFFCURVE",
"322 385 CURVE SMOOTH",
"319 385 OFFCURVE",
"312 384 OFFCURVE",
"301 379 CURVE SMOOTH",
"225 351 OFFCURVE",
"161.667 316.667 OFFCURVE",
"115 278 CURVE SMOOTH",
"49.667 222.667 OFFCURVE",
"17 157 OFFCURVE",
"17 81 CURVE SMOOTH",
"17 45.667 OFFCURVE",
"34 15 OFFCURVE",
"68 -11 CURVE SMOOTH",
"100 -35 OFFCURVE",
"133.333 -47 OFFCURVE",
"168 -47 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"205 -47 OFFCURVE",
"237 -39 OFFCURVE",
"265 -22 CURVE SMOOTH",
"302 1 OFFCURVE",
"320 35 OFFCURVE",
"320 82 CURVE SMOOTH",
"320 114 OFFCURVE",
"308 139 OFFCURVE",
"285 156 CURVE SMOOTH",
"264 173 OFFCURVE",
"239 181 OFFCURVE",
"208 181 CURVE SMOOTH",
"177 181 OFFCURVE",
"152 173 OFFCURVE",
"131 156 CURVE SMOOTH",
"108 138 OFFCURVE",
"97 113 OFFCURVE",
"97 82 CURVE SMOOTH",
"97 55 OFFCURVE",
"105 34 OFFCURVE",
"122 19 CURVE SMOOTH",
"139 6 OFFCURVE",
"158 -1 OFFCURVE",
"179 -1 CURVE SMOOTH",
"202 -1 OFFCURVE",
"222 9 OFFCURVE",
"234 25 CURVE SMOOTH",
"238 30 OFFCURVE",
"237 35 OFFCURVE",
"232 35 CURVE SMOOTH",
"230 35 OFFCURVE",
"227 34 OFFCURVE",
"224 31 CURVE SMOOTH",
"209 18 OFFCURVE",
"195 11 OFFCURVE",
"180 11 CURVE SMOOTH",
"149 11 OFFCURVE",
"135 37 OFFCURVE",
"135 82 CURVE SMOOTH",
"135 107 OFFCURVE",
"142 127 OFFCURVE",
"157 141 CURVE SMOOTH",
"170 153 OFFCURVE",
"186 159 OFFCURVE",
"206 159 CURVE SMOOTH",
"229 159 OFFCURVE",
"249 151 OFFCURVE",
"268 136 CURVE SMOOTH",
"287 120 OFFCURVE",
"297 99 OFFCURVE",
"297 74 CURVE SMOOTH",
"297 38 OFFCURVE",
"282 11 OFFCURVE",
"252 -8 CURVE SMOOTH",
"228 -24 OFFCURVE",
"200 -32 OFFCURVE",
"168 -32 CURVE SMOOTH",
"137 -32 OFFCURVE",
"112 -22 OFFCURVE",
"91 -1 CURVE SMOOTH",
"69 20 OFFCURVE",
"58 46 OFFCURVE",
"58 77 CURVE SMOOTH",
"58 206 OFFCURVE",
"146 304 OFFCURVE",
"310 370 CURVE SMOOTH",
"315 372 OFFCURVE",
"327 376 OFFCURVE",
"327 381 CURVE SMOOTH",
"327 383 OFFCURVE",
"325 385 OFFCURVE",
"322 385 CURVE SMOOTH",
"319 385 OFFCURVE",
"312 384 OFFCURVE",
"301 379 CURVE SMOOTH",
"225 351 OFFCURVE",
"162 317 OFFCURVE",
"115 278 CURVE SMOOTH",
"50 223 OFFCURVE",
"17 157 OFFCURVE",
"17 81 CURVE SMOOTH",
"17 46 OFFCURVE",
"34 15 OFFCURVE",
"68 -11 CURVE SMOOTH",
"100 -35 OFFCURVE",
"133 -47 OFFCURVE",
"168 -47 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 4 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 4 35 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 4 165 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 20 165 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0128 1 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 1 31 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 2 16 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"164.667 -38 OFFCURVE",
"167 -35.333 OFFCURVE",
"167 -30 CURVE SMOOTH",
"167 -26.667 OFFCURVE",
"165 -25 OFFCURVE",
"161 -23 CURVE SMOOTH",
"150 -17 OFFCURVE",
"135 14 OFFCURVE",
"141 59 CURVE SMOOTH",
"145 83 OFFCURVE",
"151 109 OFFCURVE",
"161 137 CURVE SMOOTH",
"171 165 LINE",
"190 214 LINE",
"198 215 OFFCURVE",
"232 220 OFFCURVE",
"250 220 CURVE SMOOTH",
"278 220 OFFCURVE",
"263 235 OFFCURVE",
"218 233 CURVE SMOOTH",
"212 233 OFFCURVE",
"205 233 OFFCURVE",
"198 232 CURVE",
"224.667 282.667 OFFCURVE",
"260.333 331.333 OFFCURVE",
"307 386 CURVE SMOOTH",
"309 388 OFFCURVE",
"310 390.333 OFFCURVE",
"310 393 CURVE SMOOTH",
"310 397 OFFCURVE",
"308 399 OFFCURVE",
"304 399 CURVE SMOOTH",
"301.333 399 OFFCURVE",
"299.333 398.667 OFFCURVE",
"298 398 CURVE SMOOTH",
"266 375.333 OFFCURVE",
"207 360 OFFCURVE",
"123 348 CURVE SMOOTH",
"96 345 OFFCURVE",
"44 343 OFFCURVE",
"44 369 CURVE SMOOTH",
"44 393 OFFCURVE",
"63 398 OFFCURVE",
"83 401 CURVE SMOOTH",
"89.667 402.333 OFFCURVE",
"93.333 403 OFFCURVE",
"96 403 CURVE",
"98 404.333 OFFCURVE",
"98.333 405.667 OFFCURVE",
"97 407 CURVE SMOOTH",
"93 411 OFFCURVE",
"87.667 413 OFFCURVE",
"81 413 CURVE SMOOTH",
"54 413 OFFCURVE",
"21 396 OFFCURVE",
"21 361 CURVE SMOOTH",
"21 329 OFFCURVE",
"52 319 OFFCURVE",
"88 319 CURVE SMOOTH",
"126.667 319 OFFCURVE",
"173 329.333 OFFCURVE",
"241 356 CURVE",
"206.333 313.333 OFFCURVE",
"180.667 271.667 OFFCURVE",
"158 225 CURVE",
"120.667 215 OFFCURVE",
"96 201 OFFCURVE",
"86 185 CURVE",
"86 177 OFFCURVE",
"92 162 OFFCURVE",
"98 162 CURVE SMOOTH",
"101 162 OFFCURVE",
"130 195 OFFCURVE",
"150 205 CURVE",
"127.333 138.333 OFFCURVE",
"119 88.333 OFFCURVE",
"119 43 CURVE SMOOTH",
"119 -7 OFFCURVE",
"132 -33 OFFCURVE",
"160 -38 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"165 -38 OFFCURVE",
"167 -35 OFFCURVE",
"167 -30 CURVE SMOOTH",
"167 -27 OFFCURVE",
"165 -25 OFFCURVE",
"161 -23 CURVE SMOOTH",
"152 -18 OFFCURVE",
"140 5 OFFCURVE",
"140 39 CURVE SMOOTH",
"140 45 OFFCURVE",
"140 52 OFFCURVE",
"141 59 CURVE SMOOTH",
"145 83 OFFCURVE",
"151 109 OFFCURVE",
"161 137 CURVE SMOOTH",
"171 165 LINE",
"190 214 LINE",
"198 215 OFFCURVE",
"232 220 OFFCURVE",
"250 220 CURVE SMOOTH",
"260 220 OFFCURVE",
"264 222 OFFCURVE",
"264 224 CURVE SMOOTH",
"264 228 OFFCURVE",
"251 233 OFFCURVE",
"226 233 CURVE SMOOTH",
"218 233 LINE SMOOTH",
"212 233 OFFCURVE",
"205 233 OFFCURVE",
"198 232 CURVE",
"225 283 OFFCURVE",
"260 331 OFFCURVE",
"307 386 CURVE SMOOTH",
"309 388 OFFCURVE",
"310 390 OFFCURVE",
"310 393 CURVE SMOOTH",
"310 397 OFFCURVE",
"308 399 OFFCURVE",
"304 399 CURVE SMOOTH",
"301 399 OFFCURVE",
"299 399 OFFCURVE",
"298 398 CURVE SMOOTH",
"266 375 OFFCURVE",
"207 360 OFFCURVE",
"123 348 CURVE SMOOTH",
"115 347 OFFCURVE",
"105 346 OFFCURVE",
"94 346 CURVE SMOOTH",
"70 346 OFFCURVE",
"44 351 OFFCURVE",
"44 369 CURVE SMOOTH",
"44 393 OFFCURVE",
"63 398 OFFCURVE",
"83 401 CURVE SMOOTH",
"90 402 OFFCURVE",
"93 403 OFFCURVE",
"96 403 CURVE",
"98 404 OFFCURVE",
"98 406 OFFCURVE",
"97 407 CURVE SMOOTH",
"93 411 OFFCURVE",
"88 413 OFFCURVE",
"81 413 CURVE SMOOTH",
"54 413 OFFCURVE",
"21 396 OFFCURVE",
"21 361 CURVE SMOOTH",
"21 329 OFFCURVE",
"52 319 OFFCURVE",
"88 319 CURVE SMOOTH",
"127 319 OFFCURVE",
"173 329 OFFCURVE",
"241 356 CURVE",
"206 313 OFFCURVE",
"181 272 OFFCURVE",
"158 225 CURVE",
"121 215 OFFCURVE",
"96 201 OFFCURVE",
"86 185 CURVE",
"86 177 OFFCURVE",
"92 162 OFFCURVE",
"98 162 CURVE SMOOTH",
"101 162 OFFCURVE",
"130 195 OFFCURVE",
"150 205 CURVE",
"127 138 OFFCURVE",
"119 88 OFFCURVE",
"119 43 CURVE SMOOTH",
"119 -7 OFFCURVE",
"132 -33 OFFCURVE",
"160 -38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01223 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01277 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 77 165 77 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01266 57 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01254 57 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 290;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"182 -39 OFFCURVE",
"215 -27 OFFCURVE",
"244 -3 CURVE SMOOTH",
"272.667 21.667 OFFCURVE",
"287 50.333 OFFCURVE",
"287 83 CURVE SMOOTH",
"287 125.667 OFFCURVE",
"258 158 OFFCURVE",
"203 184 CURVE SMOOTH",
"166.5 201 LINE",
"146 210 LINE",
"151.333 218 OFFCURVE",
"155.667 223.667 OFFCURVE",
"159 227 CURVE",
"172.333 220.333 OFFCURVE",
"186.667 217 OFFCURVE",
"202 217 CURVE SMOOTH",
"291 217 OFFCURVE",
"338 312 OFFCURVE",
"276 360 CURVE",
"286.667 372 OFFCURVE",
"291 380.333 OFFCURVE",
"295 387 CURVE",
"296.333 388.333 OFFCURVE",
"297 389.667 OFFCURVE",
"297 391 CURVE SMOOTH",
"297 395.667 OFFCURVE",
"294.333 398 OFFCURVE",
"289 398 CURVE SMOOTH",
"285.667 398 OFFCURVE",
"283.667 396.667 OFFCURVE",
"283 394 CURVE",
"276.333 383.333 OFFCURVE",
"271.667 375.667 OFFCURVE",
"265 369 CURVE",
"244 383 OFFCURVE",
"220 393 OFFCURVE",
"191 393 CURVE SMOOTH",
"155.667 393 OFFCURVE",
"122.667 382.333 OFFCURVE",
"92 361 CURVE SMOOTH",
"60 339 OFFCURVE",
"44 313.333 OFFCURVE",
"44 284 CURVE SMOOTH",
"44 272.667 OFFCURVE",
"46.333 262.333 OFFCURVE",
"51 253 CURVE SMOOTH",
"57.667 237 OFFCURVE",
"74.333 220.667 OFFCURVE",
"105 202 CURVE",
"55 152.667 OFFCURVE",
"30 104.667 OFFCURVE",
"30 58 CURVE SMOOTH",
"31.333 30.667 OFFCURVE",
"43 7.667 OFFCURVE",
"65 -11 CURVE SMOOTH",
"87 -28 OFFCURVE",
"114 -39 OFFCURVE",
"147 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"122 -21 OFFCURVE",
"103 -14 OFFCURVE",
"86 -1 CURVE SMOOTH",
"68.667 13 OFFCURVE",
"60 32 OFFCURVE",
"60 56 CURVE SMOOTH",
"61.333 84 OFFCURVE",
"82.333 127.667 OFFCURVE",
"129 189 CURVE",
"163 174 LINE",
"187 163 LINE SMOOTH",
"232 142 OFFCURVE",
"254 113 OFFCURVE",
"254 77 CURVE SMOOTH",
"254 52.333 OFFCURVE",
"243 30 OFFCURVE",
"221 10 CURVE SMOOTH",
"199 -11 OFFCURVE",
"173 -21 OFFCURVE",
"144 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100.667 235.667 OFFCURVE",
"85 250 OFFCURVE",
"79 264 CURVE SMOOTH",
"75.667 270.667 OFFCURVE",
"74 279.333 OFFCURVE",
"74 290 CURVE SMOOTH",
"74 313.333 OFFCURVE",
"85.333 334 OFFCURVE",
"108 352 CURVE SMOOTH",
"130.667 369.333 OFFCURVE",
"157 378 OFFCURVE",
"187 378 CURVE SMOOTH",
"211 378 OFFCURVE",
"235 370 OFFCURVE",
"253 355 CURVE",
"231.667 331.667 OFFCURVE",
"213 312 OFFCURVE",
"197 295 CURVE SMOOTH",
"155 251 LINE",
"143 275 OFFCURVE",
"156 297 OFFCURVE",
"183 310 CURVE SMOOTH",
"187 312 OFFCURVE",
"191 315.333 OFFCURVE",
"191 318 CURVE SMOOTH",
"191 320 OFFCURVE",
"190.333 321 OFFCURVE",
"186 321 CURVE SMOOTH",
"152 321 OFFCURVE",
"119 273 OFFCURVE",
"145 240 CURVE",
"135 229.333 OFFCURVE",
"128.667 223 OFFCURVE",
"126 221 CURVE"
);
},
{
closed = 1;
nodes = (
"191.333 231 OFFCURVE",
"180.333 233.667 OFFCURVE",
"169 239 CURVE",
"223.5 299.5 LINE",
"263 344 LINE",
"295 308 OFFCURVE",
"266 231 OFFCURVE",
"202 231 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"182 -39 OFFCURVE",
"215 -27 OFFCURVE",
"244 -3 CURVE SMOOTH",
"273 22 OFFCURVE",
"287 50 OFFCURVE",
"287 83 CURVE SMOOTH",
"287 126 OFFCURVE",
"258 158 OFFCURVE",
"203 184 CURVE SMOOTH",
"167 201 LINE",
"146 210 LINE",
"151 218 OFFCURVE",
"156 224 OFFCURVE",
"159 227 CURVE",
"172 220 OFFCURVE",
"187 217 OFFCURVE",
"202 217 CURVE SMOOTH",
"263 217 OFFCURVE",
"304 262 OFFCURVE",
"304 305 CURVE SMOOTH",
"304 325 OFFCURVE",
"296 345 OFFCURVE",
"276 360 CURVE",
"287 372 OFFCURVE",
"291 380 OFFCURVE",
"295 387 CURVE",
"296 388 OFFCURVE",
"297 390 OFFCURVE",
"297 391 CURVE SMOOTH",
"297 396 OFFCURVE",
"294 398 OFFCURVE",
"289 398 CURVE SMOOTH",
"286 398 OFFCURVE",
"284 397 OFFCURVE",
"283 394 CURVE",
"276 383 OFFCURVE",
"272 376 OFFCURVE",
"265 369 CURVE",
"244 383 OFFCURVE",
"220 393 OFFCURVE",
"191 393 CURVE SMOOTH",
"156 393 OFFCURVE",
"123 382 OFFCURVE",
"92 361 CURVE SMOOTH",
"60 339 OFFCURVE",
"44 313 OFFCURVE",
"44 284 CURVE SMOOTH",
"44 273 OFFCURVE",
"46 262 OFFCURVE",
"51 253 CURVE SMOOTH",
"58 237 OFFCURVE",
"74 221 OFFCURVE",
"105 202 CURVE",
"55 153 OFFCURVE",
"30 105 OFFCURVE",
"30 58 CURVE SMOOTH",
"31 31 OFFCURVE",
"43 8 OFFCURVE",
"65 -11 CURVE SMOOTH",
"87 -28 OFFCURVE",
"114 -39 OFFCURVE",
"147 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"122 -21 OFFCURVE",
"103 -14 OFFCURVE",
"86 -1 CURVE SMOOTH",
"69 13 OFFCURVE",
"60 32 OFFCURVE",
"60 56 CURVE SMOOTH",
"61 84 OFFCURVE",
"82 128 OFFCURVE",
"129 189 CURVE",
"163 174 LINE",
"187 163 LINE SMOOTH",
"232 142 OFFCURVE",
"254 113 OFFCURVE",
"254 77 CURVE SMOOTH",
"254 52 OFFCURVE",
"243 30 OFFCURVE",
"221 10 CURVE SMOOTH",
"199 -11 OFFCURVE",
"173 -21 OFFCURVE",
"144 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"101 236 OFFCURVE",
"85 250 OFFCURVE",
"79 264 CURVE SMOOTH",
"76 271 OFFCURVE",
"74 279 OFFCURVE",
"74 290 CURVE SMOOTH",
"74 313 OFFCURVE",
"85 334 OFFCURVE",
"108 352 CURVE SMOOTH",
"131 369 OFFCURVE",
"157 378 OFFCURVE",
"187 378 CURVE SMOOTH",
"211 378 OFFCURVE",
"235 370 OFFCURVE",
"253 355 CURVE",
"232 332 OFFCURVE",
"213 312 OFFCURVE",
"197 295 CURVE SMOOTH",
"155 251 LINE",
"152 257 OFFCURVE",
"151 263 OFFCURVE",
"151 269 CURVE SMOOTH",
"151 286 OFFCURVE",
"163 300 OFFCURVE",
"183 310 CURVE SMOOTH",
"187 312 OFFCURVE",
"191 315 OFFCURVE",
"191 318 CURVE SMOOTH",
"191 320 OFFCURVE",
"190 321 OFFCURVE",
"186 321 CURVE SMOOTH",
"161 321 OFFCURVE",
"136 294 OFFCURVE",
"136 267 CURVE SMOOTH",
"136 258 OFFCURVE",
"138 248 OFFCURVE",
"145 240 CURVE",
"135 229 OFFCURVE",
"129 223 OFFCURVE",
"126 221 CURVE"
);
},
{
closed = 1;
nodes = (
"191 231 OFFCURVE",
"180 234 OFFCURVE",
"169 239 CURVE",
"224 300 LINE",
"263 344 LINE",
"272 334 OFFCURVE",
"276 321 OFFCURVE",
"276 307 CURVE SMOOTH",
"276 271 OFFCURVE",
"248 231 OFFCURVE",
"202 231 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 3 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 3 79 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 52 170 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01257 28 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 71 165 71 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 92 165 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01294 28 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012109 1 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 340;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"104 -65 OFFCURVE",
"105.667 -64.333 OFFCURVE",
"107 -63 CURVE",
"256 37 OFFCURVE",
"333 140 OFFCURVE",
"333 265 CURVE SMOOTH",
"333 339 OFFCURVE",
"279 402 OFFCURVE",
"193 402 CURVE SMOOTH",
"111 402 OFFCURVE",
"29 342 OFFCURVE",
"29 254 CURVE SMOOTH",
"29 187 OFFCURVE",
"73 141 OFFCURVE",
"139 141 CURVE SMOOTH",
"199 141 OFFCURVE",
"260 181 OFFCURVE",
"260 244 CURVE SMOOTH",
"260 289 OFFCURVE",
"235 332 OFFCURVE",
"185 332 CURVE SMOOTH",
"172 332 OFFCURVE",
"164 325 OFFCURVE",
"164 319 CURVE SMOOTH",
"164 315 OFFCURVE",
"168 311 OFFCURVE",
"175 311 CURVE SMOOTH",
"214 311 OFFCURVE",
"232 271 OFFCURVE",
"232 233 CURVE SMOOTH",
"232 190 OFFCURVE",
"195 160 OFFCURVE",
"150 160 CURVE SMOOTH",
"97 160 OFFCURVE",
"57 199 OFFCURVE",
"57 259 CURVE SMOOTH",
"57 327 OFFCURVE",
"115 385 OFFCURVE",
"182 385 CURVE SMOOTH",
"251 385 OFFCURVE",
"290 323 OFFCURVE",
"290 238 CURVE SMOOTH",
"290 133.333 OFFCURVE",
"225 35 OFFCURVE",
"95 -57 CURVE",
"94 -59 LINE",
"94 -63 OFFCURVE",
"96.667 -65 OFFCURVE",
"102 -65 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"104 -65 OFFCURVE",
"106 -64 OFFCURVE",
"107 -63 CURVE SMOOTH",
"256 37 OFFCURVE",
"333 140 OFFCURVE",
"333 265 CURVE SMOOTH",
"333 339 OFFCURVE",
"279 402 OFFCURVE",
"193 402 CURVE SMOOTH",
"111 402 OFFCURVE",
"29 342 OFFCURVE",
"29 254 CURVE SMOOTH",
"29 187 OFFCURVE",
"73 141 OFFCURVE",
"139 141 CURVE SMOOTH",
"199 141 OFFCURVE",
"260 181 OFFCURVE",
"260 244 CURVE SMOOTH",
"260 289 OFFCURVE",
"235 332 OFFCURVE",
"185 332 CURVE SMOOTH",
"172 332 OFFCURVE",
"164 325 OFFCURVE",
"164 319 CURVE SMOOTH",
"164 315 OFFCURVE",
"168 311 OFFCURVE",
"175 311 CURVE SMOOTH",
"214 311 OFFCURVE",
"232 271 OFFCURVE",
"232 233 CURVE SMOOTH",
"232 190 OFFCURVE",
"195 160 OFFCURVE",
"150 160 CURVE SMOOTH",
"97 160 OFFCURVE",
"57 199 OFFCURVE",
"57 259 CURVE SMOOTH",
"57 327 OFFCURVE",
"115 385 OFFCURVE",
"182 385 CURVE SMOOTH",
"251 385 OFFCURVE",
"290 323 OFFCURVE",
"290 238 CURVE SMOOTH",
"290 133 OFFCURVE",
"225 35 OFFCURVE",
"95 -57 CURVE",
"94 -59 LINE",
"94 -63 OFFCURVE",
"97 -65 OFFCURVE",
"102 -65 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 3 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 4 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 10 170 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 22 165 22 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 33 170 33 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01258 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 2 46 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 366;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = zero.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = zero;
}
);
};
components = (
{
name = zero;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 342;
}
);
},
{
glyphname = one.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = one;
}
);
};
components = (
{
name = one;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 246;
}
);
},
{
glyphname = two.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = two;
}
);
};
components = (
{
name = two;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 447;
}
);
},
{
glyphname = three.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = three;
}
);
};
components = (
{
name = three;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 377;
}
);
},
{
glyphname = four.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = four;
}
);
};
components = (
{
name = four;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 374;
}
);
},
{
glyphname = five.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = five;
}
);
};
components = (
{
name = five;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 405;
}
);
},
{
glyphname = six.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = six;
}
);
};
components = (
{
name = six;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 343;
}
);
},
{
glyphname = seven.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = seven;
}
);
};
components = (
{
name = seven;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 290;
}
);
},
{
glyphname = eight.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = eight;
}
);
};
components = (
{
name = eight;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 340;
}
);
},
{
glyphname = nine.lf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = nine;
}
);
};
components = (
{
name = nine;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 366;
}
);
},
{
glyphname = onesuperior;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"36 299 LINE",
"48 304 OFFCURVE",
"57 308 OFFCURVE",
"63 311 CURVE SMOOTH",
"73 315 LINE",
"75 314 OFFCURVE",
"77 313 OFFCURVE",
"78 314 CURVE",
"78 314 OFFCURVE",
"79 315 OFFCURVE",
"82 317 CURVE",
"102 324 OFFCURVE",
"113 322 OFFCURVE",
"143 319 CURVE",
"143 319 OFFCURVE",
"144 320 OFFCURVE",
"146 320 CURVE",
"146 323 OFFCURVE",
"146 322 OFFCURVE",
"146 327 CURVE SMOOTH",
"146 331 OFFCURVE",
"146 334 OFFCURVE",
"145 335 CURVE",
"145 337 OFFCURVE",
"144 338 OFFCURVE",
"143 338 CURVE",
"141 339 OFFCURVE",
"142 339 OFFCURVE",
"141 339 CURVE SMOOTH",
"129 342 OFFCURVE",
"100 343 OFFCURVE",
"79 335 CURVE",
"79 387 OFFCURVE",
"123 480 OFFCURVE",
"158 536 CURVE",
"158 537 LINE",
"158 537 OFFCURVE",
"158 536 OFFCURVE",
"158 538 CURVE",
"159 540 OFFCURVE",
"160 543 OFFCURVE",
"160 546 CURVE SMOOTH",
"160 550 OFFCURVE",
"158 552 OFFCURVE",
"154 552 CURVE SMOOTH",
"152 552 OFFCURVE",
"152 552 OFFCURVE",
"150 550 CURVE SMOOTH",
"113 514 OFFCURVE",
"88 493 OFFCURVE",
"69 483 CURVE",
"66 482 OFFCURVE",
"65 477 OFFCURVE",
"65 475 CURVE SMOOTH",
"65 471 OFFCURVE",
"66 469 OFFCURVE",
"68 469 CURVE SMOOTH",
"70 469 OFFCURVE",
"71 470 OFFCURVE",
"74 473 CURVE SMOOTH",
"83 480 OFFCURVE",
"92 486 OFFCURVE",
"101 491 CURVE SMOOTH",
"110 496 LINE",
"113 499 LINE",
"87 438 OFFCURVE",
"68 391 OFFCURVE",
"68 343 CURVE SMOOTH",
"68 340 OFFCURVE",
"68 338 OFFCURVE",
"69 336 CURVE",
"69 334 OFFCURVE",
"69 332 OFFCURVE",
"69 330 CURVE",
"45 318 LINE",
"33 312 LINE",
"32 310 OFFCURVE",
"33 312 OFFCURVE",
"31 309 CURVE",
"31 308 OFFCURVE",
"30 307 OFFCURVE",
"30 306 CURVE SMOOTH",
"30 303 OFFCURVE",
"31 299 OFFCURVE",
"34 299 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"36 299 LINE",
"48 304 OFFCURVE",
"57 308 OFFCURVE",
"63 311 CURVE SMOOTH",
"73 315 LINE",
"75 314 OFFCURVE",
"77 313 OFFCURVE",
"78 314 CURVE SMOOTH",
"82 317 LINE",
"92 321 OFFCURVE",
"100 322 OFFCURVE",
"109 322 CURVE SMOOTH",
"118 322 OFFCURVE",
"128 321 OFFCURVE",
"143 319 CURVE",
"143 319 OFFCURVE",
"144 320 OFFCURVE",
"146 320 CURVE",
"146 327 LINE SMOOTH",
"146 331 OFFCURVE",
"146 334 OFFCURVE",
"145 335 CURVE",
"145 337 OFFCURVE",
"144 338 OFFCURVE",
"143 338 CURVE",
"141 339 OFFCURVE",
"142 339 OFFCURVE",
"141 339 CURVE SMOOTH",
"136 340 OFFCURVE",
"128 341 OFFCURVE",
"118 341 CURVE SMOOTH",
"106 341 OFFCURVE",
"91 340 OFFCURVE",
"79 335 CURVE",
"79 387 OFFCURVE",
"123 480 OFFCURVE",
"158 536 CURVE",
"158 538 LINE",
"159 540 OFFCURVE",
"160 543 OFFCURVE",
"160 546 CURVE SMOOTH",
"160 550 OFFCURVE",
"158 552 OFFCURVE",
"154 552 CURVE SMOOTH",
"152 552 OFFCURVE",
"152 552 OFFCURVE",
"150 550 CURVE SMOOTH",
"113 514 OFFCURVE",
"88 493 OFFCURVE",
"69 483 CURVE",
"66 482 OFFCURVE",
"65 477 OFFCURVE",
"65 475 CURVE SMOOTH",
"65 471 OFFCURVE",
"66 469 OFFCURVE",
"68 469 CURVE SMOOTH",
"70 469 OFFCURVE",
"71 470 OFFCURVE",
"74 473 CURVE SMOOTH",
"83 480 OFFCURVE",
"92 486 OFFCURVE",
"101 491 CURVE SMOOTH",
"110 496 LINE",
"113 499 LINE",
"87 438 OFFCURVE",
"68 391 OFFCURVE",
"68 343 CURVE SMOOTH",
"68 340 OFFCURVE",
"68 338 OFFCURVE",
"69 336 CURVE",
"69 330 LINE",
"33 312 LINE",
"31 309 LINE",
"31 308 OFFCURVE",
"30 307 OFFCURVE",
"30 306 CURVE SMOOTH",
"30 303 OFFCURVE",
"31 299 OFFCURVE",
"34 299 CURVE SMOOTH"
);
}
);
width = 172;
}
);
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"200 285 OFFCURVE",
"220 291 OFFCURVE",
"235 304 CURVE SMOOTH",
"245 314 OFFCURVE",
"252 329 OFFCURVE",
"252 345 CURVE SMOOTH",
"252 355 OFFCURVE",
"249 365 OFFCURVE",
"243 372 CURVE SMOOTH",
"238 380 OFFCURVE",
"231 384 OFFCURVE",
"222 384 CURVE SMOOTH",
"205 384 OFFCURVE",
"197 377 OFFCURVE",
"197 362 CURVE SMOOTH",
"197 359 OFFCURVE",
"198 343 OFFCURVE",
"205 343 CURVE SMOOTH",
"207 343 OFFCURVE",
"208 345 OFFCURVE",
"208 349 CURVE SMOOTH",
"208 358 OFFCURVE",
"211 372 OFFCURVE",
"222 372 CURVE SMOOTH",
"228 372 OFFCURVE",
"233 369 OFFCURVE",
"235 364 CURVE",
"239 359 OFFCURVE",
"242 353 OFFCURVE",
"242 345 CURVE SMOOTH",
"242 335 OFFCURVE",
"238 326 OFFCURVE",
"227 318 CURVE SMOOTH",
"215 310 OFFCURVE",
"198 305 OFFCURVE",
"176 305 CURVE SMOOTH",
"141 305 OFFCURVE",
"110 315 OFFCURVE",
"78 337 CURVE",
"111 351 OFFCURVE",
"140 371 OFFCURVE",
"168 397 CURVE SMOOTH",
"200 427 OFFCURVE",
"218 457 OFFCURVE",
"218 484 CURVE SMOOTH",
"218 503 OFFCURVE",
"208 520 OFFCURVE",
"190 536 CURVE",
"173 548 OFFCURVE",
"155 555 OFFCURVE",
"134 555 CURVE SMOOTH",
"115 555 OFFCURVE",
"96 550 OFFCURVE",
"79 540 CURVE SMOOTH",
"60 527 OFFCURVE",
"50 507 OFFCURVE",
"50 483 CURVE SMOOTH",
"50 463 OFFCURVE",
"56 448 OFFCURVE",
"70 437 CURVE",
"82 430 OFFCURVE",
"96 427 OFFCURVE",
"111 427 CURVE SMOOTH",
"180 427 OFFCURVE",
"203 522 OFFCURVE",
"127 522 CURVE SMOOTH",
"117 522 OFFCURVE",
"109 518 OFFCURVE",
"102 513 CURVE SMOOTH",
"94 506 OFFCURVE",
"90 497 OFFCURVE",
"90 486 CURVE SMOOTH",
"90 482 OFFCURVE",
"91 479 OFFCURVE",
"93 479 CURVE SMOOTH",
"96 479 OFFCURVE",
"98 483 OFFCURVE",
"98 486 CURVE SMOOTH",
"98 493 OFFCURVE",
"101 498 OFFCURVE",
"107 504 CURVE SMOOTH",
"113 509 OFFCURVE",
"119 512 OFFCURVE",
"127 512 CURVE SMOOTH",
"175 512 OFFCURVE",
"159 439 OFFCURVE",
"111 439 CURVE SMOOTH",
"99 439 OFFCURVE",
"89 443 OFFCURVE",
"81 451 CURVE SMOOTH",
"58 473 OFFCURVE",
"65 504 OFFCURVE",
"88 526 CURVE SMOOTH",
"102 538 OFFCURVE",
"117 543 OFFCURVE",
"134 543 CURVE SMOOTH",
"152 543 OFFCURVE",
"165 538 OFFCURVE",
"176 528 CURVE SMOOTH",
"187 516 OFFCURVE",
"193 502 OFFCURVE",
"193 486 CURVE SMOOTH",
"193 461 OFFCURVE",
"179 434 OFFCURVE",
"148 404 CURVE SMOOTH",
"122 379 OFFCURVE",
"95 361 OFFCURVE",
"65 346 CURVE",
"58 350 OFFCURVE",
"50 352 OFFCURVE",
"42 352 CURVE SMOOTH",
"35 352 OFFCURVE",
"29 350 OFFCURVE",
"24 346 CURVE SMOOTH",
"20 343 OFFCURVE",
"19 337 OFFCURVE",
"19 332 CURVE SMOOTH",
"19 324 OFFCURVE",
"22 318 OFFCURVE",
"28 318 CURVE",
"28 320 LINE",
"30 320 OFFCURVE",
"30 320 OFFCURVE",
"31 321 CURVE",
"31 319 LINE",
"48 325 LINE",
"64 330 LINE",
"91 315 LINE SMOOTH",
"100 310 OFFCURVE",
"109 305 OFFCURVE",
"118 300 CURVE SMOOTH",
"138 289 OFFCURVE",
"157 285 OFFCURVE",
"176 285 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"200 285 OFFCURVE",
"220 291 OFFCURVE",
"235 304 CURVE SMOOTH",
"245 314 OFFCURVE",
"252 329 OFFCURVE",
"252 345 CURVE SMOOTH",
"252 355 OFFCURVE",
"249 365 OFFCURVE",
"243 372 CURVE SMOOTH",
"238 380 OFFCURVE",
"231 384 OFFCURVE",
"222 384 CURVE SMOOTH",
"205 384 OFFCURVE",
"197 377 OFFCURVE",
"197 362 CURVE SMOOTH",
"197 359 OFFCURVE",
"198 343 OFFCURVE",
"205 343 CURVE SMOOTH",
"207 343 OFFCURVE",
"208 345 OFFCURVE",
"208 349 CURVE SMOOTH",
"208 358 OFFCURVE",
"211 372 OFFCURVE",
"222 372 CURVE SMOOTH",
"228 372 OFFCURVE",
"233 369 OFFCURVE",
"235 364 CURVE",
"239 359 OFFCURVE",
"242 353 OFFCURVE",
"242 345 CURVE SMOOTH",
"242 335 OFFCURVE",
"238 326 OFFCURVE",
"227 318 CURVE SMOOTH",
"215 310 OFFCURVE",
"198 305 OFFCURVE",
"176 305 CURVE SMOOTH",
"141 305 OFFCURVE",
"110 315 OFFCURVE",
"78 337 CURVE",
"111 351 OFFCURVE",
"140 371 OFFCURVE",
"168 397 CURVE SMOOTH",
"200 427 OFFCURVE",
"218 457 OFFCURVE",
"218 484 CURVE SMOOTH",
"218 503 OFFCURVE",
"208 520 OFFCURVE",
"190 536 CURVE",
"173 548 OFFCURVE",
"155 555 OFFCURVE",
"134 555 CURVE SMOOTH",
"115 555 OFFCURVE",
"96 550 OFFCURVE",
"79 540 CURVE SMOOTH",
"60 527 OFFCURVE",
"50 507 OFFCURVE",
"50 483 CURVE SMOOTH",
"50 463 OFFCURVE",
"56 448 OFFCURVE",
"70 437 CURVE",
"82 430 OFFCURVE",
"96 427 OFFCURVE",
"111 427 CURVE SMOOTH",
"150 427 OFFCURVE",
"174 457 OFFCURVE",
"174 484 CURVE SMOOTH",
"174 504 OFFCURVE",
"160 522 OFFCURVE",
"127 522 CURVE SMOOTH",
"117 522 OFFCURVE",
"109 518 OFFCURVE",
"102 513 CURVE SMOOTH",
"94 506 OFFCURVE",
"90 497 OFFCURVE",
"90 486 CURVE SMOOTH",
"90 482 OFFCURVE",
"91 479 OFFCURVE",
"93 479 CURVE SMOOTH",
"96 479 OFFCURVE",
"98 483 OFFCURVE",
"98 486 CURVE SMOOTH",
"98 493 OFFCURVE",
"101 498 OFFCURVE",
"107 504 CURVE SMOOTH",
"113 509 OFFCURVE",
"119 512 OFFCURVE",
"127 512 CURVE SMOOTH",
"147 512 OFFCURVE",
"156 499 OFFCURVE",
"156 484 CURVE SMOOTH",
"156 464 OFFCURVE",
"139 439 OFFCURVE",
"111 439 CURVE SMOOTH",
"99 439 OFFCURVE",
"89 443 OFFCURVE",
"81 451 CURVE SMOOTH",
"71 460 OFFCURVE",
"67 471 OFFCURVE",
"67 483 CURVE SMOOTH",
"67 498 OFFCURVE",
"75 513 OFFCURVE",
"88 526 CURVE SMOOTH",
"102 538 OFFCURVE",
"117 543 OFFCURVE",
"134 543 CURVE SMOOTH",
"152 543 OFFCURVE",
"165 538 OFFCURVE",
"176 528 CURVE SMOOTH",
"187 516 OFFCURVE",
"193 502 OFFCURVE",
"193 486 CURVE SMOOTH",
"193 461 OFFCURVE",
"179 434 OFFCURVE",
"148 404 CURVE SMOOTH",
"122 379 OFFCURVE",
"95 361 OFFCURVE",
"65 346 CURVE",
"58 350 OFFCURVE",
"50 352 OFFCURVE",
"42 352 CURVE SMOOTH",
"35 352 OFFCURVE",
"29 350 OFFCURVE",
"24 346 CURVE SMOOTH",
"20 343 OFFCURVE",
"19 337 OFFCURVE",
"19 332 CURVE SMOOTH",
"19 324 OFFCURVE",
"22 318 OFFCURVE",
"28 318 CURVE",
"28 320 LINE",
"30 320 OFFCURVE",
"30 320 OFFCURVE",
"31 321 CURVE",
"31 319 LINE",
"48 325 LINE",
"64 330 LINE",
"118 300 LINE SMOOTH",
"138 289 OFFCURVE",
"157 285 OFFCURVE",
"176 285 CURVE SMOOTH"
);
}
);
width = 271;
}
);
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"158 292 OFFCURVE",
"212 328 OFFCURVE",
"212 381 CURVE SMOOTH",
"212 414 OFFCURVE",
"197 436 OFFCURVE",
"165 449 CURVE",
"174 454 OFFCURVE",
"183 461 OFFCURVE",
"191 470 CURVE SMOOTH",
"224 504 OFFCURVE",
"194 553 OFFCURVE",
"139 553 CURVE SMOOTH",
"120 553 OFFCURVE",
"103 549 OFFCURVE",
"86 541 CURVE SMOOTH",
"68 532 OFFCURVE",
"57 520 OFFCURVE",
"57 504 CURVE SMOOTH",
"57 493 OFFCURVE",
"63 487 OFFCURVE",
"77 487 CURVE SMOOTH",
"84 487 OFFCURVE",
"90 489 OFFCURVE",
"96 491 CURVE SMOOTH",
"100 493 OFFCURVE",
"102 496 OFFCURVE",
"102 499 CURVE SMOOTH",
"102 502 OFFCURVE",
"101 504 OFFCURVE",
"98 504 CURVE SMOOTH",
"96 504 OFFCURVE",
"93 503 OFFCURVE",
"90 503 CURVE",
"87 502 OFFCURVE",
"83 501 OFFCURVE",
"80 501 CURVE SMOOTH",
"62 501 OFFCURVE",
"70 520 OFFCURVE",
"94 531 CURVE SMOOTH",
"122 543 OFFCURVE",
"156 544 OFFCURVE",
"172 531 CURVE SMOOTH",
"179 526 OFFCURVE",
"183 520 OFFCURVE",
"183 508 CURVE SMOOTH",
"183 499 OFFCURVE",
"180 489 OFFCURVE",
"172 478 CURVE SMOOTH",
"165 468 OFFCURVE",
"155 460 OFFCURVE",
"143 455 CURVE",
"142 455 OFFCURVE",
"138 455 OFFCURVE",
"134 456 CURVE",
"129 456 OFFCURVE",
"125 457 OFFCURVE",
"124 457 CURVE",
"118 459 OFFCURVE",
"114 458 OFFCURVE",
"109 455 CURVE",
"107 453 OFFCURVE",
"104 449 OFFCURVE",
"104 447 CURVE SMOOTH",
"104 442 OFFCURVE",
"110 439 OFFCURVE",
"118 439 CURVE SMOOTH",
"127 438 OFFCURVE",
"137 439 OFFCURVE",
"145 441 CURVE",
"173 434 OFFCURVE",
"187 416 OFFCURVE",
"187 383 CURVE SMOOTH",
"187 339 OFFCURVE",
"149 306 OFFCURVE",
"101 306 CURVE SMOOTH",
"61 306 OFFCURVE",
"40 323 OFFCURVE",
"40 358 CURVE SMOOTH",
"40 375 OFFCURVE",
"43 387 OFFCURVE",
"50 396 CURVE SMOOTH",
"59 407 OFFCURVE",
"68 411 OFFCURVE",
"80 411 CURVE SMOOTH",
"91 411 OFFCURVE",
"100 407 OFFCURVE",
"109 397 CURVE SMOOTH",
"124 378 OFFCURVE",
"123 347 OFFCURVE",
"104 347 CURVE SMOOTH",
"91 347 OFFCURVE",
"86 363 OFFCURVE",
"94 374 CURVE",
"96 378 LINE",
"98 380 OFFCURVE",
"97 382 OFFCURVE",
"93 382 CURVE SMOOTH",
"91 382 OFFCURVE",
"89 381 OFFCURVE",
"87 379 CURVE SMOOTH",
"74 364 OFFCURVE",
"80 335 OFFCURVE",
"103 335 CURVE SMOOTH",
"131 335 OFFCURVE",
"139 376 OFFCURVE",
"117 404 CURVE SMOOTH",
"106 416 OFFCURVE",
"94 422 OFFCURVE",
"80 422 CURVE SMOOTH",
"64 422 OFFCURVE",
"50 416 OFFCURVE",
"39 403 CURVE SMOOTH",
"29 392 OFFCURVE",
"24 377 OFFCURVE",
"24 360 CURVE SMOOTH",
"24 339 OFFCURVE",
"31 321 OFFCURVE",
"46 308 CURVE SMOOTH",
"62 297 OFFCURVE",
"80 292 OFFCURVE",
"100 292 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"158 292 OFFCURVE",
"212 328 OFFCURVE",
"212 381 CURVE SMOOTH",
"212 414 OFFCURVE",
"197 436 OFFCURVE",
"165 449 CURVE",
"174 454 OFFCURVE",
"183 461 OFFCURVE",
"191 470 CURVE SMOOTH",
"200 480 OFFCURVE",
"205 491 OFFCURVE",
"205 501 CURVE SMOOTH",
"205 528 OFFCURVE",
"178 553 OFFCURVE",
"139 553 CURVE SMOOTH",
"120 553 OFFCURVE",
"103 549 OFFCURVE",
"86 541 CURVE SMOOTH",
"68 532 OFFCURVE",
"57 520 OFFCURVE",
"57 504 CURVE SMOOTH",
"57 493 OFFCURVE",
"63 487 OFFCURVE",
"77 487 CURVE SMOOTH",
"84 487 OFFCURVE",
"90 489 OFFCURVE",
"96 491 CURVE SMOOTH",
"100 493 OFFCURVE",
"102 496 OFFCURVE",
"102 499 CURVE SMOOTH",
"102 502 OFFCURVE",
"101 504 OFFCURVE",
"98 504 CURVE SMOOTH",
"96 504 OFFCURVE",
"93 503 OFFCURVE",
"90 503 CURVE",
"87 502 OFFCURVE",
"83 501 OFFCURVE",
"80 501 CURVE SMOOTH",
"73 501 OFFCURVE",
"70 504 OFFCURVE",
"70 508 CURVE SMOOTH",
"70 514 OFFCURVE",
"79 524 OFFCURVE",
"94 531 CURVE SMOOTH",
"108 537 OFFCURVE",
"124 540 OFFCURVE",
"138 540 CURVE SMOOTH",
"152 540 OFFCURVE",
"164 537 OFFCURVE",
"172 531 CURVE SMOOTH",
"179 526 OFFCURVE",
"183 520 OFFCURVE",
"183 508 CURVE SMOOTH",
"183 499 OFFCURVE",
"180 489 OFFCURVE",
"172 478 CURVE SMOOTH",
"165 468 OFFCURVE",
"155 460 OFFCURVE",
"143 455 CURVE",
"142 455 OFFCURVE",
"138 455 OFFCURVE",
"134 456 CURVE",
"129 456 OFFCURVE",
"125 457 OFFCURVE",
"124 457 CURVE",
"118 459 OFFCURVE",
"114 458 OFFCURVE",
"109 455 CURVE",
"107 453 OFFCURVE",
"104 449 OFFCURVE",
"104 447 CURVE SMOOTH",
"104 441 OFFCURVE",
"114 439 OFFCURVE",
"125 439 CURVE SMOOTH",
"132 439 OFFCURVE",
"139 440 OFFCURVE",
"145 441 CURVE",
"173 434 OFFCURVE",
"187 416 OFFCURVE",
"187 383 CURVE SMOOTH",
"187 339 OFFCURVE",
"149 306 OFFCURVE",
"101 306 CURVE SMOOTH",
"61 306 OFFCURVE",
"40 323 OFFCURVE",
"40 358 CURVE SMOOTH",
"40 375 OFFCURVE",
"43 387 OFFCURVE",
"50 396 CURVE SMOOTH",
"59 407 OFFCURVE",
"68 411 OFFCURVE",
"80 411 CURVE SMOOTH",
"91 411 OFFCURVE",
"100 407 OFFCURVE",
"109 397 CURVE SMOOTH",
"116 388 OFFCURVE",
"119 377 OFFCURVE",
"119 368 CURVE SMOOTH",
"119 356 OFFCURVE",
"114 347 OFFCURVE",
"104 347 CURVE SMOOTH",
"95 347 OFFCURVE",
"90 354 OFFCURVE",
"90 362 CURVE SMOOTH",
"90 366 OFFCURVE",
"91 370 OFFCURVE",
"94 374 CURVE SMOOTH",
"96 378 LINE",
"98 380 OFFCURVE",
"97 382 OFFCURVE",
"93 382 CURVE SMOOTH",
"91 382 OFFCURVE",
"89 381 OFFCURVE",
"87 379 CURVE SMOOTH",
"82 374 OFFCURVE",
"80 367 OFFCURVE",
"80 360 CURVE SMOOTH",
"80 347 OFFCURVE",
"88 335 OFFCURVE",
"103 335 CURVE SMOOTH",
"120 335 OFFCURVE",
"130 350 OFFCURVE",
"130 368 CURVE SMOOTH",
"130 380 OFFCURVE",
"126 393 OFFCURVE",
"117 404 CURVE SMOOTH",
"106 416 OFFCURVE",
"94 422 OFFCURVE",
"80 422 CURVE SMOOTH",
"64 422 OFFCURVE",
"50 416 OFFCURVE",
"39 403 CURVE SMOOTH",
"29 392 OFFCURVE",
"24 377 OFFCURVE",
"24 360 CURVE SMOOTH",
"24 339 OFFCURVE",
"31 321 OFFCURVE",
"46 308 CURVE SMOOTH",
"62 297 OFFCURVE",
"80 292 OFFCURVE",
"100 292 CURVE SMOOTH"
);
}
);
width = 236;
}
);
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 288 OFFCURVE",
"148 293 OFFCURVE",
"146 296 CURVE",
"145 308 OFFCURVE",
"145 364 OFFCURVE",
"145 379 CURVE",
"147 379 OFFCURVE",
"151 379 OFFCURVE",
"155 379 CURVE SMOOTH",
"160 380 OFFCURVE",
"165 380 OFFCURVE",
"169 380 CURVE SMOOTH",
"201 383 OFFCURVE",
"209 390 OFFCURVE",
"209 417 CURVE SMOOTH",
"209 423 OFFCURVE",
"209 428 OFFCURVE",
"207 434 CURVE",
"207 437 OFFCURVE",
"204 438 OFFCURVE",
"202 438 CURVE SMOOTH",
"199 438 OFFCURVE",
"197 436 OFFCURVE",
"197 433 CURVE",
"198 433 LINE",
"198 432 OFFCURVE",
"198 432 OFFCURVE",
"199 431 CURVE",
"198 431 LINE",
"198 429 OFFCURVE",
"199 428 OFFCURVE",
"199 426 CURVE SMOOTH",
"199 422 OFFCURVE",
"200 420 OFFCURVE",
"200 417 CURVE SMOOTH",
"200 401 OFFCURVE",
"180 393 OFFCURVE",
"145 395 CURVE",
"146 413 OFFCURVE",
"162 465 OFFCURVE",
"170 489 CURVE",
"170 496 OFFCURVE",
"166 496 OFFCURVE",
"161 496 CURVE SMOOTH",
"154 496 OFFCURVE",
"151 494 OFFCURVE",
"149 490 CURVE SMOOTH",
"137 463 OFFCURVE",
"130 412 OFFCURVE",
"129 395 CURVE",
"124 396 OFFCURVE",
"119 396 OFFCURVE",
"112 397 CURVE SMOOTH",
"92 399 OFFCURVE",
"68 401 OFFCURVE",
"55 403 CURVE",
"72 423 OFFCURVE",
"107 488 OFFCURVE",
"127 557 CURVE",
"127 556 OFFCURVE",
"127 557 OFFCURVE",
"128 560 CURVE SMOOTH",
"129 563 OFFCURVE",
"130 565 OFFCURVE",
"130 567 CURVE SMOOTH",
"130 570 OFFCURVE",
"129 572 OFFCURVE",
"126 572 CURVE SMOOTH",
"123 572 OFFCURVE",
"121 571 OFFCURVE",
"120 569 CURVE SMOOTH",
"105 536 OFFCURVE",
"87 497 OFFCURVE",
"69 465 CURVE SMOOTH",
"62 452 OFFCURVE",
"38 422 OFFCURVE",
"22 410 CURVE SMOOTH",
"19 408 OFFCURVE",
"15 404 OFFCURVE",
"15 402 CURVE SMOOTH",
"15 396 OFFCURVE",
"15 386 OFFCURVE",
"30 382 CURVE SMOOTH",
"45 378 OFFCURVE",
"85 378 OFFCURVE",
"112 379 CURVE SMOOTH",
"118 379 OFFCURVE",
"124 379 OFFCURVE",
"128 379 CURVE",
"128 358 OFFCURVE",
"130 308 OFFCURVE",
"135 292 CURVE SMOOTH",
"136 290 OFFCURVE",
"137 288 OFFCURVE",
"140 288 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"144 288 OFFCURVE",
"147 291 OFFCURVE",
"147 294 CURVE SMOOTH",
"147 295 OFFCURVE",
"146 295 OFFCURVE",
"146 296 CURVE SMOOTH",
"145 308 OFFCURVE",
"145 364 OFFCURVE",
"145 379 CURVE",
"155 379 LINE",
"160 380 OFFCURVE",
"165 380 OFFCURVE",
"169 380 CURVE SMOOTH",
"201 383 OFFCURVE",
"209 390 OFFCURVE",
"209 417 CURVE SMOOTH",
"209 423 OFFCURVE",
"209 428 OFFCURVE",
"207 434 CURVE",
"207 437 OFFCURVE",
"204 438 OFFCURVE",
"202 438 CURVE SMOOTH",
"199 438 OFFCURVE",
"197 436 OFFCURVE",
"197 433 CURVE",
"198 433 LINE",
"198 432 OFFCURVE",
"198 432 OFFCURVE",
"199 431 CURVE",
"198 431 LINE",
"198 429 OFFCURVE",
"199 428 OFFCURVE",
"199 426 CURVE SMOOTH",
"199 422 OFFCURVE",
"200 420 OFFCURVE",
"200 417 CURVE SMOOTH",
"200 401 OFFCURVE",
"180 393 OFFCURVE",
"145 395 CURVE",
"146 413 OFFCURVE",
"162 465 OFFCURVE",
"170 489 CURVE",
"170 496 OFFCURVE",
"166 496 OFFCURVE",
"161 496 CURVE SMOOTH",
"154 496 OFFCURVE",
"151 494 OFFCURVE",
"149 490 CURVE SMOOTH",
"137 463 OFFCURVE",
"130 412 OFFCURVE",
"129 395 CURVE",
"124 396 OFFCURVE",
"119 396 OFFCURVE",
"112 397 CURVE SMOOTH",
"92 399 OFFCURVE",
"68 401 OFFCURVE",
"55 403 CURVE",
"72 423 OFFCURVE",
"107 488 OFFCURVE",
"127 557 CURVE",
"127 556 OFFCURVE",
"127 557 OFFCURVE",
"128 560 CURVE SMOOTH",
"129 563 OFFCURVE",
"130 565 OFFCURVE",
"130 567 CURVE SMOOTH",
"130 570 OFFCURVE",
"129 572 OFFCURVE",
"126 572 CURVE SMOOTH",
"123 572 OFFCURVE",
"121 571 OFFCURVE",
"120 569 CURVE SMOOTH",
"105 536 OFFCURVE",
"87 497 OFFCURVE",
"69 465 CURVE SMOOTH",
"62 452 OFFCURVE",
"38 422 OFFCURVE",
"22 410 CURVE SMOOTH",
"19 408 OFFCURVE",
"15 404 OFFCURVE",
"15 402 CURVE SMOOTH",
"15 396 OFFCURVE",
"15 386 OFFCURVE",
"30 382 CURVE SMOOTH",
"45 378 OFFCURVE",
"85 378 OFFCURVE",
"112 379 CURVE SMOOTH",
"128 379 LINE",
"128 358 OFFCURVE",
"130 308 OFFCURVE",
"135 292 CURVE SMOOTH",
"136 290 OFFCURVE",
"137 288 OFFCURVE",
"140 288 CURVE SMOOTH"
);
}
);
width = 229;
}
);
unicode = 2074;
},
{
glyphname = fraction;
lastChange = "2021-10-08 08:44:31 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"27.32 76.082 OFFCURVE",
"28.997 76.082 OFFCURVE",
"29.836 76.953 CURVE",
"33.19 77.825 OFFCURVE",
"36.544 79.568 OFFCURVE",
"39.06 83.926 CURVE SMOOTH",
"40.737 86.54 LINE",
"48.285 100.485 LINE SMOOTH",
"82.668 162.365 OFFCURVE",
"114.535 216.401 OFFCURVE",
"144.725 263.465 CURVE SMOOTH",
"155.627 280.896 OFFCURVE",
"174.076 304.428 OFFCURVE",
"199.235 334.061 CURVE SMOOTH",
"224.393 363.693 OFFCURVE",
"242.004 386.354 OFFCURVE",
"253.744 403.785 CURVE SMOOTH",
"256.26 408.142 OFFCURVE",
"255.422 413.372 OFFCURVE",
"251.229 420.344 CURVE SMOOTH",
"248.713 423.83 OFFCURVE",
"244.52 425.573 OFFCURVE",
"237.811 425.573 CURVE",
"232.779 423.83 OFFCURVE",
"224.393 412.5 OFFCURVE",
"211.814 392.454 CURVE SMOOTH",
"200.912 376.767 LINE",
"186.656 352.363 LINE",
"171.561 327.96 LINE",
"160.659 310.529 LINE",
"93.57 205.943 LINE",
"54.155 144.934 LINE",
"25.642 100.485 LINE SMOOTH",
"21.449 94.384 OFFCURVE",
"19.772 89.155 OFFCURVE",
"19.772 84.797 CURVE SMOOTH",
"19.772 83.054 OFFCURVE",
"19.772 82.183 OFFCURVE",
"20.611 80.44 CURVE SMOOTH",
"21.449 77.825 OFFCURVE",
"23.965 76.082 OFFCURVE",
"26.481 76.082 CURVE SMOOTH"
);
}
);
width = 275;
}
);
unicode = 2044;
},
{
glyphname = onehalf;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 55, 2}";
},
{
name = twosuperior;
transform = "{1, 0, 0, 1, 218, -293}";
},
{
name = onesuperior;
}
);
};
components = (
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 55, 2}";
},
{
name = twosuperior;
transform = "{1, 0, 0, 1, 218, -293}";
},
{
name = onesuperior;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 593;
}
);
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2021-10-08 06:08:01 +0000";
layers = (
{
background = {
components = (
{
name = foursuperior;
transform = "{1, 0, 0, 1, 217, -288}";
},
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 55, 2}";
},
{
name = onesuperior;
}
);
};
components = (
{
alignment = -1;
name = foursuperior;
transform = "{1, 0, 0, 1, 209, -241}";
},
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 55, 2}";
},
{
name = onesuperior;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 503;
}
);
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2021-10-08 06:08:09 +0000";
layers = (
{
background = {
components = (
{
name = threesuperior;
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 273, -288}";
},
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 111, 2}";
}
);
};
components = (
{
name = threesuperior;
},
{
alignment = -1;
name = foursuperior;
transform = "{1, 0, 0, 1, 263, -260}";
},
{
name = divisionslash;
transform = "{0.83861, 0, 0, 0.87155, 111, 2}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 502;
}
);
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"89 30 OFFCURVE",
"97 39 OFFCURVE",
"97 55 CURVE SMOOTH",
"97 65 OFFCURVE",
"90 71 OFFCURVE",
"80 71 CURVE SMOOTH",
"63 71 OFFCURVE",
"55 64 OFFCURVE",
"55 51 CURVE SMOOTH",
"55 37 OFFCURVE",
"61 30 OFFCURVE",
"73 30 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"89 30 OFFCURVE",
"97 39 OFFCURVE",
"97 55 CURVE SMOOTH",
"97 65 OFFCURVE",
"90 71 OFFCURVE",
"80 71 CURVE SMOOTH",
"63 71 OFFCURVE",
"55 64 OFFCURVE",
"55 51 CURVE SMOOTH",
"55 37 OFFCURVE",
"61 30 OFFCURVE",
"73 30 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 4 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0127 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 151 9 167 9 183 9 199 9 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012214 9 230 9 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 147;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"40 -56 OFFCURVE",
"41 -60 OFFCURVE",
"57 -60 CURVE SMOOTH",
"103 -60 OFFCURVE",
"127 1 OFFCURVE",
"127 35 CURVE SMOOTH",
"127 58 OFFCURVE",
"117 76 OFFCURVE",
"94 76 CURVE SMOOTH",
"76 76 OFFCURVE",
"66 62 OFFCURVE",
"66 49 CURVE SMOOTH",
"66 32 OFFCURVE",
"85 22 OFFCURVE",
"107 32 CURVE",
"110 15 OFFCURVE",
"101 -14 OFFCURVE",
"84 -31 CURVE SMOOTH",
"71 -44 OFFCURVE",
"59 -45 OFFCURVE",
"48 -45 CURVE SMOOTH",
"45 -45 OFFCURVE",
"40 -47 OFFCURVE",
"40 -52 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"103 -60 OFFCURVE",
"127 1 OFFCURVE",
"127 35 CURVE SMOOTH",
"127 58 OFFCURVE",
"117 76 OFFCURVE",
"94 76 CURVE SMOOTH",
"76 76 OFFCURVE",
"66 62 OFFCURVE",
"66 49 CURVE SMOOTH",
"66 37 OFFCURVE",
"76 28 OFFCURVE",
"90 28 CURVE SMOOTH",
"95 28 OFFCURVE",
"101 29 OFFCURVE",
"107 32 CURVE",
"110 15 OFFCURVE",
"101 -14 OFFCURVE",
"84 -31 CURVE SMOOTH",
"71 -44 OFFCURVE",
"59 -45 OFFCURVE",
"48 -45 CURVE SMOOTH",
"45 -45 OFFCURVE",
"40 -47 OFFCURVE",
"40 -52 CURVE SMOOTH",
"40 -56 OFFCURVE",
"41 -60 OFFCURVE",
"57 -60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01215 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 15 170 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 20 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01218 20 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 147;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"114.667 164 OFFCURVE",
"120.667 166.333 OFFCURVE",
"126 171 CURVE SMOOTH",
"132 177 OFFCURVE",
"135 183 OFFCURVE",
"135 189 CURVE SMOOTH",
"135 195.667 OFFCURVE",
"132 200.667 OFFCURVE",
"126 204 CURVE SMOOTH",
"122 207.333 OFFCURVE",
"116 209 OFFCURVE",
"108 209 CURVE SMOOTH",
"101.333 209 OFFCURVE",
"96 206.667 OFFCURVE",
"92 202 CURVE SMOOTH",
"87.333 198 OFFCURVE",
"85 192.333 OFFCURVE",
"85 185 CURVE SMOOTH",
"85 171 OFFCURVE",
"92.667 164 OFFCURVE",
"108 164 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"111.667 1 OFFCURVE",
"117.667 3.667 OFFCURVE",
"123 9 CURVE SMOOTH",
"129 13.667 OFFCURVE",
"132 19.333 OFFCURVE",
"132 26 CURVE SMOOTH",
"132 32.667 OFFCURVE",
"129 37.667 OFFCURVE",
"123 41 CURVE SMOOTH",
"119 44.333 OFFCURVE",
"113 46 OFFCURVE",
"105 46 CURVE SMOOTH",
"98.333 46 OFFCURVE",
"93 44 OFFCURVE",
"89 40 CURVE SMOOTH",
"84.333 35.333 OFFCURVE",
"82 29.333 OFFCURVE",
"82 22 CURVE SMOOTH",
"82 8 OFFCURVE",
"89.667 1 OFFCURVE",
"105 1 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"115 164 OFFCURVE",
"121 166 OFFCURVE",
"126 171 CURVE SMOOTH",
"132 177 OFFCURVE",
"135 183 OFFCURVE",
"135 189 CURVE SMOOTH",
"135 196 OFFCURVE",
"132 201 OFFCURVE",
"126 204 CURVE SMOOTH",
"122 207 OFFCURVE",
"116 209 OFFCURVE",
"108 209 CURVE SMOOTH",
"101 209 OFFCURVE",
"96 207 OFFCURVE",
"92 202 CURVE",
"87 198 OFFCURVE",
"85 192 OFFCURVE",
"85 185 CURVE SMOOTH",
"85 171 OFFCURVE",
"93 164 OFFCURVE",
"108 164 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"112 1 OFFCURVE",
"118 4 OFFCURVE",
"123 9 CURVE SMOOTH",
"129 14 OFFCURVE",
"132 19 OFFCURVE",
"132 26 CURVE SMOOTH",
"132 33 OFFCURVE",
"129 38 OFFCURVE",
"123 41 CURVE SMOOTH",
"119 44 OFFCURVE",
"113 46 OFFCURVE",
"105 46 CURVE SMOOTH",
"98 46 OFFCURVE",
"93 44 OFFCURVE",
"89 40 CURVE SMOOTH",
"84 35 OFFCURVE",
"82 29 OFFCURVE",
"82 22 CURVE SMOOTH",
"82 8 OFFCURVE",
"90 1 OFFCURVE",
"105 1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01214 4 20 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 14 165 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01224 18 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 4 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 165;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"68 -67 LINE SMOOTH",
"86.667 -67 OFFCURVE",
"103.667 -58.333 OFFCURVE",
"119 -41 CURVE SMOOTH",
"133.667 -25.667 OFFCURVE",
"141 -8.333 OFFCURVE",
"141 11 CURVE SMOOTH",
"141 49.667 OFFCURVE",
"129.333 66 OFFCURVE",
"108 66 CURVE SMOOTH",
"101.333 66 OFFCURVE",
"96 64 OFFCURVE",
"92 60 CURVE SMOOTH",
"87.333 55.333 OFFCURVE",
"85 49.667 OFFCURVE",
"85 43 CURVE SMOOTH",
"85 28.333 OFFCURVE",
"92.333 21 OFFCURVE",
"107 21 CURVE SMOOTH",
"111.667 21 OFFCURVE",
"117.333 23 OFFCURVE",
"124 27 CURVE",
"125.333 23 OFFCURVE",
"126 20 OFFCURVE",
"126 18 CURVE SMOOTH",
"126 13 LINE SMOOTH",
"126 -3.667 OFFCURVE",
"120 -18.333 OFFCURVE",
"108 -31 CURVE SMOOTH",
"96 -45 OFFCURVE",
"82.667 -52 OFFCURVE",
"68 -52 CURVE SMOOTH",
"64.5 -51.5 LINE",
"61 -51 LINE SMOOTH",
"56.333 -51 OFFCURVE",
"54 -53.667 OFFCURVE",
"54 -59 CURVE SMOOTH",
"54 -63.667 OFFCURVE",
"56 -66.333 OFFCURVE",
"60 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114.667 164 OFFCURVE",
"120.667 166.667 OFFCURVE",
"126 172 CURVE SMOOTH",
"132 176.667 OFFCURVE",
"135 182.333 OFFCURVE",
"135 189 CURVE SMOOTH",
"135 195.667 OFFCURVE",
"132 200.667 OFFCURVE",
"126 204 CURVE SMOOTH",
"122 207.333 OFFCURVE",
"116 209 OFFCURVE",
"108 209 CURVE SMOOTH",
"101.333 209 OFFCURVE",
"96 206.667 OFFCURVE",
"92 202 CURVE SMOOTH",
"87.333 198 OFFCURVE",
"85 192.333 OFFCURVE",
"85 185 CURVE SMOOTH",
"85 171 OFFCURVE",
"92.667 164 OFFCURVE",
"108 164 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"68 -67 LINE SMOOTH",
"87 -67 OFFCURVE",
"104 -58 OFFCURVE",
"119 -41 CURVE SMOOTH",
"134 -26 OFFCURVE",
"141 -8 OFFCURVE",
"141 11 CURVE SMOOTH",
"141 50 OFFCURVE",
"129 66 OFFCURVE",
"108 66 CURVE SMOOTH",
"101 66 OFFCURVE",
"96 64 OFFCURVE",
"92 60 CURVE SMOOTH",
"87 55 OFFCURVE",
"85 50 OFFCURVE",
"85 43 CURVE SMOOTH",
"85 28 OFFCURVE",
"92 21 OFFCURVE",
"107 21 CURVE SMOOTH",
"112 21 OFFCURVE",
"117 23 OFFCURVE",
"124 27 CURVE",
"125 23 OFFCURVE",
"126 20 OFFCURVE",
"126 18 CURVE SMOOTH",
"126 13 LINE SMOOTH",
"126 -4 OFFCURVE",
"120 -18 OFFCURVE",
"108 -31 CURVE SMOOTH",
"96 -45 OFFCURVE",
"83 -52 OFFCURVE",
"68 -52 CURVE",
"61 -51 LINE SMOOTH",
"56 -51 OFFCURVE",
"54 -54 OFFCURVE",
"54 -59 CURVE SMOOTH",
"54 -64 OFFCURVE",
"56 -66 OFFCURVE",
"60 -67 CURVE"
);
},
{
closed = 1;
nodes = (
"115 164 OFFCURVE",
"121 167 OFFCURVE",
"126 172 CURVE SMOOTH",
"132 177 OFFCURVE",
"135 182 OFFCURVE",
"135 189 CURVE SMOOTH",
"135 196 OFFCURVE",
"132 201 OFFCURVE",
"126 204 CURVE SMOOTH",
"122 207 OFFCURVE",
"116 209 OFFCURVE",
"108 209 CURVE SMOOTH",
"101 209 OFFCURVE",
"96 207 OFFCURVE",
"92 202 CURVE",
"87 198 OFFCURVE",
"85 192 OFFCURVE",
"85 185 CURVE SMOOTH",
"85 171 OFFCURVE",
"93 164 OFFCURVE",
"108 164 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01230 3 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 30 170 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01226 1 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 4 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0127 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012214 41 230 41 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 162;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"410 25 OFFCURVE",
"423 38.333 OFFCURVE",
"423 53 CURVE SMOOTH",
"423 67.667 OFFCURVE",
"410 81 OFFCURVE",
"394 81 CURVE SMOOTH",
"379.333 81 OFFCURVE",
"366 67.667 OFFCURVE",
"366 53 CURVE SMOOTH",
"366 38.333 OFFCURVE",
"379.333 25 OFFCURVE",
"394 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"92.667 25 OFFCURVE",
"106 38.333 OFFCURVE",
"106 53 CURVE SMOOTH",
"106 67.667 OFFCURVE",
"93 81 OFFCURVE",
"77 81 CURVE SMOOTH",
"62.333 81 OFFCURVE",
"49 67.667 OFFCURVE",
"49 53 CURVE SMOOTH",
"49 38.333 OFFCURVE",
"62 25 OFFCURVE",
"78 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257.667 25 OFFCURVE",
"271 38.333 OFFCURVE",
"271 53 CURVE SMOOTH",
"271 67.667 OFFCURVE",
"258 81 OFFCURVE",
"242 81 CURVE SMOOTH",
"227.333 81 OFFCURVE",
"214 67.667 OFFCURVE",
"214 53 CURVE SMOOTH",
"214 38.333 OFFCURVE",
"227 25 OFFCURVE",
"243 25 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"410 25 OFFCURVE",
"423 38 OFFCURVE",
"423 53 CURVE SMOOTH",
"423 68 OFFCURVE",
"410 81 OFFCURVE",
"394 81 CURVE SMOOTH",
"379 81 OFFCURVE",
"366 68 OFFCURVE",
"366 53 CURVE SMOOTH",
"366 38 OFFCURVE",
"379 25 OFFCURVE",
"394 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 25 OFFCURVE",
"106 38 OFFCURVE",
"106 53 CURVE SMOOTH",
"106 68 OFFCURVE",
"93 81 OFFCURVE",
"77 81 CURVE SMOOTH",
"62 81 OFFCURVE",
"49 68 OFFCURVE",
"49 53 CURVE SMOOTH",
"49 38 OFFCURVE",
"62 25 OFFCURVE",
"78 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 25 OFFCURVE",
"271 38 OFFCURVE",
"271 53 CURVE SMOOTH",
"271 68 OFFCURVE",
"258 81 OFFCURVE",
"242 81 CURVE SMOOTH",
"227 81 OFFCURVE",
"214 68 OFFCURVE",
"214 53 CURVE SMOOTH",
"214 38 OFFCURVE",
"227 25 OFFCURVE",
"243 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01230 4 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 4 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 0 165 0 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 18 170 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 30 170 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0127 9 23 9 39 9 55 9 71 9 87 9 103 9 119 9 135 9 151 9 167 9 183 9 199 9 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012214 9 230 9 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 465;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"111.333 111 OFFCURVE",
"113.333 112.333 OFFCURVE",
"114 115 CURVE",
"162 207 OFFCURVE",
"193.333 271.667 OFFCURVE",
"212 313 CURVE SMOOTH",
"236.667 370.333 OFFCURVE",
"249 412.333 OFFCURVE",
"249 439 CURVE SMOOTH",
"249 452.333 OFFCURVE",
"247.333 463.333 OFFCURVE",
"244 472 CURVE SMOOTH",
"241.333 482.667 OFFCURVE",
"234.333 488 OFFCURVE",
"223 488 CURVE SMOOTH",
"215.667 488 OFFCURVE",
"212 485 OFFCURVE",
"212 479 CURVE",
"213 477 LINE",
"213.5 468 LINE",
"214 459 LINE SMOOTH",
"214 440.333 OFFCURVE",
"210 418 OFFCURVE",
"202 392 CURVE SMOOTH",
"181 329 LINE SMOOTH",
"162.333 274.333 OFFCURVE",
"146.5 229.833 OFFCURVE",
"133.5 195.5 CURVE SMOOTH",
"120.5 161.167 OFFCURVE",
"109.667 136.667 OFFCURVE",
"101 122 CURVE SMOOTH",
"100.333 121.333 OFFCURVE",
"100 120 OFFCURVE",
"100 118 CURVE SMOOTH",
"100 113.333 OFFCURVE",
"102.667 111 OFFCURVE",
"108 111 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"92.667 25 OFFCURVE",
"106 38.333 OFFCURVE",
"106 53 CURVE SMOOTH",
"106 67.667 OFFCURVE",
"93 81 OFFCURVE",
"77 81 CURVE SMOOTH",
"62.333 81 OFFCURVE",
"49 67.667 OFFCURVE",
"49 53 CURVE SMOOTH",
"49 38.333 OFFCURVE",
"62 25 OFFCURVE",
"78 25 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"111 111 OFFCURVE",
"113 112 OFFCURVE",
"114 115 CURVE",
"162 207 OFFCURVE",
"193 272 OFFCURVE",
"212 313 CURVE SMOOTH",
"237 370 OFFCURVE",
"249 412 OFFCURVE",
"249 439 CURVE SMOOTH",
"249 452 OFFCURVE",
"247 463 OFFCURVE",
"244 472 CURVE SMOOTH",
"241 483 OFFCURVE",
"234 488 OFFCURVE",
"223 488 CURVE SMOOTH",
"216 488 OFFCURVE",
"212 485 OFFCURVE",
"212 479 CURVE",
"213 477 LINE",
"214 459 LINE SMOOTH",
"214 440 OFFCURVE",
"210 418 OFFCURVE",
"202 392 CURVE SMOOTH",
"181 329 LINE SMOOTH",
"162 274 OFFCURVE",
"147 230 OFFCURVE",
"134 196 CURVE SMOOTH",
"121 161 OFFCURVE",
"110 137 OFFCURVE",
"101 122 CURVE",
"100 121 OFFCURVE",
"100 120 OFFCURVE",
"100 118 CURVE SMOOTH",
"100 113 OFFCURVE",
"103 111 OFFCURVE",
"108 111 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 25 OFFCURVE",
"106 38 OFFCURVE",
"106 53 CURVE SMOOTH",
"106 68 OFFCURVE",
"93 81 OFFCURVE",
"77 81 CURVE SMOOTH",
"62 81 OFFCURVE",
"49 68 OFFCURVE",
"49 53 CURVE SMOOTH",
"49 38 OFFCURVE",
"62 25 OFFCURVE",
"78 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01217 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 4 34 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 28 165 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 17 170 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0127 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012214 37 230 37 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 245;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"79.667 2 OFFCURVE",
"83 5 OFFCURVE",
"83 11 CURVE SMOOTH",
"83 13 LINE",
"82 22 LINE",
"82 31 LINE SMOOTH",
"82 49.667 OFFCURVE",
"85 71.333 OFFCURVE",
"93 98 CURVE SMOOTH",
"96.333 108.667 OFFCURVE",
"100 119 OFFCURVE",
"104 129 CURVE SMOOTH",
"108 139 OFFCURVE",
"111.667 149.667 OFFCURVE",
"115 161 CURVE SMOOTH",
"151.667 271 OFFCURVE",
"178 340 OFFCURVE",
"194 368 CURVE",
"195.333 369.333 OFFCURVE",
"196 370.333 OFFCURVE",
"196 371 CURVE SMOOTH",
"196 376.333 OFFCURVE",
"193 379 OFFCURVE",
"187 379 CURVE SMOOTH",
"185.667 379 OFFCURVE",
"183.667 377.667 OFFCURVE",
"181 375 CURVE",
"134.333 283 OFFCURVE",
"101.667 218.333 OFFCURVE",
"83 177 CURVE SMOOTH",
"58.333 119 OFFCURVE",
"46 76.667 OFFCURVE",
"46 50 CURVE SMOOTH",
"46 40 OFFCURVE",
"47.667 29 OFFCURVE",
"51 17 CURVE SMOOTH",
"53.667 7 OFFCURVE",
"61 2 OFFCURVE",
"73 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"232.667 409 OFFCURVE",
"246 421 OFFCURVE",
"246 437 CURVE SMOOTH",
"246 451.667 OFFCURVE",
"232.667 464 OFFCURVE",
"218 464 CURVE SMOOTH",
"202 464 OFFCURVE",
"190 451.667 OFFCURVE",
"190 437 CURVE SMOOTH",
"190 421 OFFCURVE",
"202 409 OFFCURVE",
"218 409 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"80 2 OFFCURVE",
"83 5 OFFCURVE",
"83 11 CURVE SMOOTH",
"83 13 LINE",
"82 22 LINE",
"82 31 LINE SMOOTH",
"82 50 OFFCURVE",
"85 71 OFFCURVE",
"93 98 CURVE SMOOTH",
"96 109 OFFCURVE",
"100 119 OFFCURVE",
"104 129 CURVE SMOOTH",
"108 139 OFFCURVE",
"112 150 OFFCURVE",
"115 161 CURVE SMOOTH",
"152 271 OFFCURVE",
"178 340 OFFCURVE",
"194 368 CURVE",
"195 369 OFFCURVE",
"196 370 OFFCURVE",
"196 371 CURVE SMOOTH",
"196 376 OFFCURVE",
"193 379 OFFCURVE",
"187 379 CURVE SMOOTH",
"186 379 OFFCURVE",
"184 378 OFFCURVE",
"181 375 CURVE",
"134 283 OFFCURVE",
"102 218 OFFCURVE",
"83 177 CURVE SMOOTH",
"58 119 OFFCURVE",
"46 77 OFFCURVE",
"46 50 CURVE SMOOTH",
"46 40 OFFCURVE",
"48 29 OFFCURVE",
"51 17 CURVE SMOOTH",
"54 7 OFFCURVE",
"61 2 OFFCURVE",
"73 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"233 409 OFFCURVE",
"246 421 OFFCURVE",
"246 437 CURVE SMOOTH",
"246 452 OFFCURVE",
"233 464 OFFCURVE",
"218 464 CURVE SMOOTH",
"202 464 OFFCURVE",
"190 452 OFFCURVE",
"190 437 CURVE SMOOTH",
"190 421 OFFCURVE",
"202 409 OFFCURVE",
"218 409 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 4 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 4 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 6 170 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 22 165 22 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"152.333 92 OFFCURVE",
"163.667 98 OFFCURVE",
"173 110 CURVE",
"174.333 110.667 OFFCURVE",
"175 112 OFFCURVE",
"175 114 CURVE SMOOTH",
"175 119.333 OFFCURVE",
"172.333 122 OFFCURVE",
"167 122 CURVE SMOOTH",
"164.333 122 OFFCURVE",
"162.667 121 OFFCURVE",
"162 119 CURVE",
"155.333 111 OFFCURVE",
"148.333 107 OFFCURVE",
"141 107 CURVE SMOOTH",
"135 107 OFFCURVE",
"129.333 110.333 OFFCURVE",
"124 117 CURVE SMOOTH",
"120 123 OFFCURVE",
"118 130.333 OFFCURVE",
"118 139 CURVE SMOOTH",
"118 160.333 OFFCURVE",
"126.667 178 OFFCURVE",
"144 192 CURVE SMOOTH",
"157.333 203.333 OFFCURVE",
"176.333 213 OFFCURVE",
"201 221 CURVE SMOOTH",
"229.5 230.5 LINE",
"258 240 LINE SMOOTH",
"311.333 260.667 OFFCURVE",
"344.667 294.333 OFFCURVE",
"358 341 CURVE SMOOTH",
"362 354 OFFCURVE",
"364 367 OFFCURVE",
"364 379 CURVE SMOOTH",
"364 406 OFFCURVE",
"355 431 OFFCURVE",
"338 455 CURVE SMOOTH",
"314 490 OFFCURVE",
"270 507 OFFCURVE",
"225 507 CURVE SMOOTH",
"183 507 OFFCURVE",
"141 493 OFFCURVE",
"113 466 CURVE SMOOTH",
"86.333 442 OFFCURVE",
"73 415 OFFCURVE",
"73 385 CURVE SMOOTH",
"73 369 OFFCURVE",
"77.667 355.667 OFFCURVE",
"87 345 CURVE SMOOTH",
"97 333.667 OFFCURVE",
"111 327.667 OFFCURVE",
"129 327 CURVE SMOOTH",
"136.333 327 OFFCURVE",
"140 328.667 OFFCURVE",
"140 332 CURVE SMOOTH",
"140 334 OFFCURVE",
"138.333 336 OFFCURVE",
"135 338 CURVE SMOOTH",
"114.333 348.667 OFFCURVE",
"104 366 OFFCURVE",
"104 390 CURVE SMOOTH",
"104 420.667 OFFCURVE",
"118 446 OFFCURVE",
"146 466 CURVE SMOOTH",
"167 482 OFFCURVE",
"195 490 OFFCURVE",
"222 490 CURVE SMOOTH",
"252 490 OFFCURVE",
"281 480 OFFCURVE",
"300 458 CURVE SMOOTH",
"320.667 435.333 OFFCURVE",
"331 409 OFFCURVE",
"331 379 CURVE SMOOTH",
"331 325 OFFCURVE",
"298 284.333 OFFCURVE",
"232 257 CURVE SMOOTH",
"209.333 249 OFFCURVE",
"189.333 241.333 OFFCURVE",
"168 232 CURVE SMOOTH",
"145.333 221.333 OFFCURVE",
"128.667 210 OFFCURVE",
"118 198 CURVE SMOOTH",
"104.667 182.667 OFFCURVE",
"98 163 OFFCURVE",
"98 139 CURVE SMOOTH",
"98 125 OFFCURVE",
"102 113.667 OFFCURVE",
"110 105 CURVE SMOOTH",
"118.667 96.333 OFFCURVE",
"128.333 92 OFFCURVE",
"139 92 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"99.667 -2 OFFCURVE",
"113 11.333 OFFCURVE",
"113 26 CURVE SMOOTH",
"113 42 OFFCURVE",
"99.667 54 OFFCURVE",
"85 54 CURVE SMOOTH",
"69 54 OFFCURVE",
"57 42 OFFCURVE",
"57 26 CURVE SMOOTH",
"57 11.333 OFFCURVE",
"69 -2 OFFCURVE",
"85 -2 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"152 92 OFFCURVE",
"164 98 OFFCURVE",
"173 110 CURVE SMOOTH",
"174 111 OFFCURVE",
"175 112 OFFCURVE",
"175 114 CURVE SMOOTH",
"175 119 OFFCURVE",
"172 122 OFFCURVE",
"167 122 CURVE SMOOTH",
"164 122 OFFCURVE",
"163 121 OFFCURVE",
"162 119 CURVE",
"155 111 OFFCURVE",
"148 107 OFFCURVE",
"141 107 CURVE SMOOTH",
"135 107 OFFCURVE",
"129 110 OFFCURVE",
"124 117 CURVE SMOOTH",
"120 123 OFFCURVE",
"118 130 OFFCURVE",
"118 139 CURVE SMOOTH",
"118 160 OFFCURVE",
"127 178 OFFCURVE",
"144 192 CURVE SMOOTH",
"157 203 OFFCURVE",
"176 213 OFFCURVE",
"201 221 CURVE SMOOTH",
"258 240 LINE SMOOTH",
"311 261 OFFCURVE",
"345 294 OFFCURVE",
"358 341 CURVE SMOOTH",
"362 354 OFFCURVE",
"364 367 OFFCURVE",
"364 379 CURVE SMOOTH",
"364 406 OFFCURVE",
"355 431 OFFCURVE",
"338 455 CURVE SMOOTH",
"314 490 OFFCURVE",
"270 507 OFFCURVE",
"225 507 CURVE SMOOTH",
"183 507 OFFCURVE",
"141 493 OFFCURVE",
"113 466 CURVE SMOOTH",
"86 442 OFFCURVE",
"73 415 OFFCURVE",
"73 385 CURVE SMOOTH",
"73 369 OFFCURVE",
"78 356 OFFCURVE",
"87 345 CURVE SMOOTH",
"97 334 OFFCURVE",
"111 328 OFFCURVE",
"129 327 CURVE SMOOTH",
"136 327 OFFCURVE",
"140 329 OFFCURVE",
"140 332 CURVE SMOOTH",
"140 334 OFFCURVE",
"138 336 OFFCURVE",
"135 338 CURVE SMOOTH",
"114 349 OFFCURVE",
"104 366 OFFCURVE",
"104 390 CURVE SMOOTH",
"104 421 OFFCURVE",
"118 446 OFFCURVE",
"146 466 CURVE SMOOTH",
"167 482 OFFCURVE",
"195 490 OFFCURVE",
"222 490 CURVE SMOOTH",
"252 490 OFFCURVE",
"281 480 OFFCURVE",
"300 458 CURVE SMOOTH",
"321 435 OFFCURVE",
"331 409 OFFCURVE",
"331 379 CURVE SMOOTH",
"331 325 OFFCURVE",
"298 284 OFFCURVE",
"232 257 CURVE SMOOTH",
"209 249 OFFCURVE",
"189 241 OFFCURVE",
"168 232 CURVE SMOOTH",
"145 221 OFFCURVE",
"129 210 OFFCURVE",
"118 198 CURVE SMOOTH",
"105 183 OFFCURVE",
"98 163 OFFCURVE",
"98 139 CURVE SMOOTH",
"98 125 OFFCURVE",
"102 114 OFFCURVE",
"110 105 CURVE SMOOTH",
"119 96 OFFCURVE",
"128 92 OFFCURVE",
"139 92 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 -2 OFFCURVE",
"113 11 OFFCURVE",
"113 26 CURVE SMOOTH",
"113 42 OFFCURVE",
"100 54 OFFCURVE",
"85 54 CURVE SMOOTH",
"69 54 OFFCURVE",
"57 42 OFFCURVE",
"57 26 CURVE SMOOTH",
"57 11 OFFCURVE",
"69 -2 OFFCURVE",
"85 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 4 56 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 46 165 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01274 68 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 1 23 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"232 15 OFFCURVE",
"204 7 OFFCURVE",
"177 7 CURVE SMOOTH",
"148 7 OFFCURVE",
"120 17 OFFCURVE",
"100 39 CURVE SMOOTH",
"80 61.667 OFFCURVE",
"70 88 OFFCURVE",
"70 118 CURVE SMOOTH",
"70 172.667 OFFCURVE",
"103 213 OFFCURVE",
"169 239 CURVE SMOOTH",
"200.5 252 LINE",
"232 265 LINE SMOOTH",
"254 274.333 OFFCURVE",
"271 285.667 OFFCURVE",
"283 299 CURVE SMOOTH",
"296.333 315.667 OFFCURVE",
"303 335.333 OFFCURVE",
"303 358 CURVE SMOOTH",
"303 372 OFFCURVE",
"298.667 383.333 OFFCURVE",
"290 392 CURVE SMOOTH",
"282 400.667 OFFCURVE",
"272.333 405 OFFCURVE",
"261 405 CURVE SMOOTH",
"248.333 405 OFFCURVE",
"237 399 OFFCURVE",
"227 387 CURVE SMOOTH",
"225.667 385.667 OFFCURVE",
"225 384.333 OFFCURVE",
"225 383 CURVE SMOOTH",
"225 377.667 OFFCURVE",
"227.667 375 OFFCURVE",
"233 375 CURVE SMOOTH",
"235 375 OFFCURVE",
"237 376 OFFCURVE",
"239 378 CURVE SMOOTH",
"245.667 386 OFFCURVE",
"252.333 390 OFFCURVE",
"259 390 CURVE SMOOTH",
"265.667 390 OFFCURVE",
"271.333 386.667 OFFCURVE",
"276 380 CURVE SMOOTH",
"280 374 OFFCURVE",
"282 366.667 OFFCURVE",
"282 358 CURVE SMOOTH",
"282 337.333 OFFCURVE",
"273.333 319.333 OFFCURVE",
"256 304 CURVE SMOOTH",
"242.667 293.333 OFFCURVE",
"224.333 284 OFFCURVE",
"199 276 CURVE SMOOTH",
"171 266.5 LINE",
"143 257 LINE SMOOTH",
"89.667 236.333 OFFCURVE",
"56.333 202.667 OFFCURVE",
"43 156 CURVE SMOOTH",
"39 143 OFFCURVE",
"37 130 OFFCURVE",
"37 117 CURVE SMOOTH",
"37 91 OFFCURVE",
"46 66 OFFCURVE",
"63 42 CURVE SMOOTH",
"87 7 OFFCURVE",
"132 -10 OFFCURVE",
"176 -10 CURVE SMOOTH",
"218 -10 OFFCURVE",
"260 4 OFFCURVE",
"288 31 CURVE SMOOTH",
"314 55 OFFCURVE",
"327 82 OFFCURVE",
"327 112 CURVE SMOOTH",
"327 128 OFFCURVE",
"322.333 141.333 OFFCURVE",
"313 152 CURVE SMOOTH",
"303 162.667 OFFCURVE",
"289 168.667 OFFCURVE",
"271 170 CURVE SMOOTH",
"263.667 170 OFFCURVE",
"260 168.333 OFFCURVE",
"260 165 CURVE SMOOTH",
"260 162.333 OFFCURVE",
"262 160.333 OFFCURVE",
"266 159 CURVE",
"286 147.667 OFFCURVE",
"296 130.333 OFFCURVE",
"296 107 CURVE SMOOTH",
"296 76.333 OFFCURVE",
"282 51 OFFCURVE",
"254 31 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"330.667 443 OFFCURVE",
"344 455 OFFCURVE",
"344 471 CURVE SMOOTH",
"344 485.667 OFFCURVE",
"330.667 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"300 498 OFFCURVE",
"287 485.667 OFFCURVE",
"287 471 CURVE SMOOTH",
"287 455 OFFCURVE",
"300 443 OFFCURVE",
"316 443 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"218 -10 OFFCURVE",
"260 4 OFFCURVE",
"288 31 CURVE SMOOTH",
"314 55 OFFCURVE",
"327 82 OFFCURVE",
"327 112 CURVE SMOOTH",
"327 128 OFFCURVE",
"322 141 OFFCURVE",
"313 152 CURVE SMOOTH",
"303 163 OFFCURVE",
"289 169 OFFCURVE",
"271 170 CURVE SMOOTH",
"264 170 OFFCURVE",
"260 168 OFFCURVE",
"260 165 CURVE SMOOTH",
"260 162 OFFCURVE",
"262 160 OFFCURVE",
"266 159 CURVE",
"286 148 OFFCURVE",
"296 130 OFFCURVE",
"296 107 CURVE SMOOTH",
"296 76 OFFCURVE",
"282 51 OFFCURVE",
"254 31 CURVE SMOOTH",
"232 15 OFFCURVE",
"204 7 OFFCURVE",
"177 7 CURVE SMOOTH",
"148 7 OFFCURVE",
"120 17 OFFCURVE",
"100 39 CURVE SMOOTH",
"80 62 OFFCURVE",
"70 88 OFFCURVE",
"70 118 CURVE SMOOTH",
"70 173 OFFCURVE",
"103 213 OFFCURVE",
"169 239 CURVE SMOOTH",
"232 265 LINE SMOOTH",
"254 274 OFFCURVE",
"271 286 OFFCURVE",
"283 299 CURVE SMOOTH",
"296 316 OFFCURVE",
"303 335 OFFCURVE",
"303 358 CURVE SMOOTH",
"303 372 OFFCURVE",
"299 383 OFFCURVE",
"290 392 CURVE SMOOTH",
"282 401 OFFCURVE",
"272 405 OFFCURVE",
"261 405 CURVE SMOOTH",
"248 405 OFFCURVE",
"237 399 OFFCURVE",
"227 387 CURVE SMOOTH",
"226 386 OFFCURVE",
"225 384 OFFCURVE",
"225 383 CURVE SMOOTH",
"225 378 OFFCURVE",
"228 375 OFFCURVE",
"233 375 CURVE SMOOTH",
"235 375 OFFCURVE",
"237 376 OFFCURVE",
"239 378 CURVE SMOOTH",
"246 386 OFFCURVE",
"252 390 OFFCURVE",
"259 390 CURVE SMOOTH",
"266 390 OFFCURVE",
"271 387 OFFCURVE",
"276 380 CURVE SMOOTH",
"280 374 OFFCURVE",
"282 367 OFFCURVE",
"282 358 CURVE SMOOTH",
"282 337 OFFCURVE",
"273 319 OFFCURVE",
"256 304 CURVE SMOOTH",
"243 293 OFFCURVE",
"224 284 OFFCURVE",
"199 276 CURVE SMOOTH",
"143 257 LINE SMOOTH",
"90 236 OFFCURVE",
"56 203 OFFCURVE",
"43 156 CURVE SMOOTH",
"39 143 OFFCURVE",
"37 130 OFFCURVE",
"37 117 CURVE SMOOTH",
"37 91 OFFCURVE",
"46 66 OFFCURVE",
"63 42 CURVE SMOOTH",
"87 7 OFFCURVE",
"132 -10 OFFCURVE",
"176 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 443 OFFCURVE",
"344 455 OFFCURVE",
"344 471 CURVE SMOOTH",
"344 486 OFFCURVE",
"331 498 OFFCURVE",
"316 498 CURVE SMOOTH",
"300 498 OFFCURVE",
"287 486 OFFCURVE",
"287 471 CURVE SMOOTH",
"287 455 OFFCURVE",
"300 443 OFFCURVE",
"316 443 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01267 4 12 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 67 170 67 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 1 35 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = period;
transform = "{1, 0, 0, 1, -2, 130}";
}
);
};
components = (
{
name = period;
transform = "{1, 0, 0, 1, -2, 130}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 147;
}
);
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"206.333 12 OFFCURVE",
"238.333 25.333 OFFCURVE",
"265 52 CURVE SMOOTH",
"291 78 OFFCURVE",
"304 110 OFFCURVE",
"304 148 CURVE SMOOTH",
"304 184.667 OFFCURVE",
"291 216.667 OFFCURVE",
"265 244 CURVE SMOOTH",
"239 270 OFFCURVE",
"207 283 OFFCURVE",
"169 283 CURVE SMOOTH",
"131 283 OFFCURVE",
"99 270 OFFCURVE",
"73 244 CURVE SMOOTH",
"47 216.667 OFFCURVE",
"34 184.667 OFFCURVE",
"34 148 CURVE SMOOTH",
"34 110 OFFCURVE",
"47 78 OFFCURVE",
"73 52 CURVE SMOOTH",
"99.667 25.333 OFFCURVE",
"131.667 12 OFFCURVE",
"169 12 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"206 12 OFFCURVE",
"238 25 OFFCURVE",
"265 52 CURVE SMOOTH",
"291 78 OFFCURVE",
"304 110 OFFCURVE",
"304 148 CURVE SMOOTH",
"304 185 OFFCURVE",
"291 217 OFFCURVE",
"265 244 CURVE SMOOTH",
"239 270 OFFCURVE",
"207 283 OFFCURVE",
"169 283 CURVE SMOOTH",
"131 283 OFFCURVE",
"99 270 OFFCURVE",
"73 244 CURVE SMOOTH",
"47 217 OFFCURVE",
"34 185 OFFCURVE",
"34 148 CURVE SMOOTH",
"34 110 OFFCURVE",
"47 78 OFFCURVE",
"73 52 CURVE SMOOTH",
"100 25 OFFCURVE",
"132 12 OFFCURVE",
"169 12 CURVE SMOOTH"
);
}
);
width = 335;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"121 128 OFFCURVE",
"122.667 128.667 OFFCURVE",
"124 130 CURVE SMOOTH",
"149.333 151.333 OFFCURVE",
"169.333 173 OFFCURVE",
"188 201 CURVE",
"198.667 190.333 OFFCURVE",
"209.333 182 OFFCURVE",
"224 174 CURVE SMOOTH",
"242 163.333 OFFCURVE",
"255 154 OFFCURVE",
"263 146 CURVE",
"268 144 LINE",
"273.333 144 OFFCURVE",
"276 146.667 OFFCURVE",
"276 152 CURVE SMOOTH",
"276 154 OFFCURVE",
"275 156 OFFCURVE",
"273 158 CURVE SMOOTH",
"253.667 172.667 OFFCURVE",
"238.667 183.667 OFFCURVE",
"228 191 CURVE",
"217.333 203 OFFCURVE",
"210.333 212.333 OFFCURVE",
"205 223 CURVE",
"225.5 223 LINE SMOOTH",
"231.833 223 OFFCURVE",
"238.667 222.667 OFFCURVE",
"246 222 CURVE SMOOTH",
"283 222 LINE SMOOTH",
"288.333 222 OFFCURVE",
"291 224.667 OFFCURVE",
"291 230 CURVE SMOOTH",
"291 234.667 OFFCURVE",
"288.333 237 OFFCURVE",
"283 237 CURVE SMOOTH",
"249 237 LINE SMOOTH",
"237 236.333 OFFCURVE",
"224.333 236.333 OFFCURVE",
"211 237 CURVE",
"228.333 270.333 OFFCURVE",
"238.667 290.333 OFFCURVE",
"244 305 CURVE",
"245.333 306.333 OFFCURVE",
"246 308 OFFCURVE",
"246 310 CURVE SMOOTH",
"246 315.333 OFFCURVE",
"243.333 318 OFFCURVE",
"238 318 CURVE SMOOTH",
"236.667 318 OFFCURVE",
"234.667 316.667 OFFCURVE",
"232 314 CURVE",
"184 243 LINE",
"178.667 267 OFFCURVE",
"161.667 289.333 OFFCURVE",
"127 320 CURVE SMOOTH",
"125.667 321.333 OFFCURVE",
"124 322 OFFCURVE",
"122 322 CURVE SMOOTH",
"116.667 322 OFFCURVE",
"114 319.333 OFFCURVE",
"114 314 CURVE SMOOTH",
"114 312 OFFCURVE",
"115 310 OFFCURVE",
"117 308 CURVE SMOOTH",
"125 302 OFFCURVE",
"133 292 OFFCURVE",
"141 278 CURVE SMOOTH",
"164 239 LINE",
"128 239 OFFCURVE",
"103.333 238.333 OFFCURVE",
"82 237 CURVE SMOOTH",
"78 237 OFFCURVE",
"76 234.333 OFFCURVE",
"76 229 CURVE SMOOTH",
"76 219.667 OFFCURVE",
"79.667 215 OFFCURVE",
"87 215 CURVE SMOOTH",
"103 215 OFFCURVE",
"118 216 OFFCURVE",
"132 216 CURVE SMOOTH",
"145 216 OFFCURVE",
"157 215 OFFCURVE",
"168 215 CURVE",
"142.667 174.333 OFFCURVE",
"125 150 OFFCURVE",
"115 142 CURVE SMOOTH",
"113 140.667 OFFCURVE",
"112 138.667 OFFCURVE",
"112 136 CURVE SMOOTH",
"112 130.667 OFFCURVE",
"114.333 128 OFFCURVE",
"119 128 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"121 128 OFFCURVE",
"123 129 OFFCURVE",
"124 130 CURVE SMOOTH",
"149 151 OFFCURVE",
"169 173 OFFCURVE",
"188 201 CURVE",
"199 190 OFFCURVE",
"209 182 OFFCURVE",
"224 174 CURVE SMOOTH",
"242 163 OFFCURVE",
"255 154 OFFCURVE",
"263 146 CURVE",
"268 144 LINE",
"273 144 OFFCURVE",
"276 147 OFFCURVE",
"276 152 CURVE SMOOTH",
"276 154 OFFCURVE",
"275 156 OFFCURVE",
"273 158 CURVE SMOOTH",
"254 173 OFFCURVE",
"239 184 OFFCURVE",
"228 191 CURVE",
"217 203 OFFCURVE",
"210 212 OFFCURVE",
"205 223 CURVE",
"226 223 LINE SMOOTH",
"232 223 OFFCURVE",
"239 223 OFFCURVE",
"246 222 CURVE",
"283 222 LINE SMOOTH",
"288 222 OFFCURVE",
"291 225 OFFCURVE",
"291 230 CURVE SMOOTH",
"291 235 OFFCURVE",
"288 237 OFFCURVE",
"283 237 CURVE SMOOTH",
"249 237 LINE SMOOTH",
"237 236 OFFCURVE",
"224 236 OFFCURVE",
"211 237 CURVE",
"228 270 OFFCURVE",
"239 290 OFFCURVE",
"244 305 CURVE",
"245 306 OFFCURVE",
"246 308 OFFCURVE",
"246 310 CURVE SMOOTH",
"246 315 OFFCURVE",
"243 318 OFFCURVE",
"238 318 CURVE SMOOTH",
"237 318 OFFCURVE",
"235 317 OFFCURVE",
"232 314 CURVE",
"184 243 LINE",
"179 267 OFFCURVE",
"162 289 OFFCURVE",
"127 320 CURVE SMOOTH",
"126 321 OFFCURVE",
"124 322 OFFCURVE",
"122 322 CURVE SMOOTH",
"117 322 OFFCURVE",
"114 319 OFFCURVE",
"114 314 CURVE SMOOTH",
"114 312 OFFCURVE",
"115 310 OFFCURVE",
"117 308 CURVE SMOOTH",
"125 302 OFFCURVE",
"133 292 OFFCURVE",
"141 278 CURVE SMOOTH",
"164 239 LINE",
"128 239 OFFCURVE",
"103 238 OFFCURVE",
"82 237 CURVE SMOOTH",
"78 237 OFFCURVE",
"76 234 OFFCURVE",
"76 229 CURVE SMOOTH",
"76 220 OFFCURVE",
"80 215 OFFCURVE",
"87 215 CURVE SMOOTH",
"103 215 OFFCURVE",
"118 216 OFFCURVE",
"132 216 CURVE SMOOTH",
"145 216 OFFCURVE",
"157 215 OFFCURVE",
"168 215 CURVE",
"143 174 OFFCURVE",
"125 150 OFFCURVE",
"115 142 CURVE",
"113 141 OFFCURVE",
"112 139 OFFCURVE",
"112 136 CURVE SMOOTH",
"112 131 OFFCURVE",
"114 128 OFFCURVE",
"119 128 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01261 47 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 61 229 61 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0126 47 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01233 47 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 47 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01254 47 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 47 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01268 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 346;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"321.667 12.667 OFFCURVE",
"324 13.333 OFFCURVE",
"324 16 CURVE SMOOTH",
"324.667 24.667 OFFCURVE",
"335.667 73.667 OFFCURVE",
"357 163 CURVE",
"380 164 OFFCURVE",
"425 165 OFFCURVE",
"461 165 CURVE SMOOTH",
"484 165 OFFCURVE",
"503 165 OFFCURVE",
"508 163 CURVE SMOOTH",
"514.667 160.333 OFFCURVE",
"517 165.333 OFFCURVE",
"517 172 CURVE SMOOTH",
"517 176 OFFCURVE",
"515.333 179 OFFCURVE",
"512 181 CURVE SMOOTH",
"508 182.333 OFFCURVE",
"493.667 183.333 OFFCURVE",
"469 184 CURVE SMOOTH",
"444.333 184.667 OFFCURVE",
"408.667 185 OFFCURVE",
"362 185 CURVE",
"370 218.333 OFFCURVE",
"377.667 249.667 OFFCURVE",
"387 283 CURVE",
"404 283 OFFCURVE",
"442 284 OFFCURVE",
"474 284 CURVE SMOOTH",
"499 284 OFFCURVE",
"520 283 OFFCURVE",
"524 282 CURVE SMOOTH",
"530.667 279.333 OFFCURVE",
"534 284.333 OFFCURVE",
"534 291 CURVE SMOOTH",
"534 295.667 OFFCURVE",
"532 298.667 OFFCURVE",
"528 300 CURVE SMOOTH",
"524.667 301.333 OFFCURVE",
"511.667 302.333 OFFCURVE",
"489 303 CURVE SMOOTH",
"466.333 303.667 OFFCURVE",
"434 304 OFFCURVE",
"392 304 CURVE",
"408.5 365 LINE",
"425 425 LINE",
"426 430 OFFCURVE",
"422 435 OFFCURVE",
"415 435 CURVE SMOOTH",
"412 435 OFFCURVE",
"409 434 OFFCURVE",
"407 432 CURVE SMOOTH",
"405 428.667 OFFCURVE",
"400.833 416.5 OFFCURVE",
"394.5 395.5 CURVE SMOOTH",
"388.167 374.5 OFFCURVE",
"379.667 344 OFFCURVE",
"369 304 CURVE",
"277 304 LINE",
"284 337 OFFCURVE",
"312 453 OFFCURVE",
"312 430 CURVE SMOOTH",
"312 433 OFFCURVE",
"309 435 OFFCURVE",
"304 436 CURVE",
"299.333 438 OFFCURVE",
"296 437 OFFCURVE",
"294 433 CURVE SMOOTH",
"290 427 OFFCURVE",
"277 384 OFFCURVE",
"255 304 CURVE",
"156.5 302.5 LINE SMOOTH",
"132.833 302.167 OFFCURVE",
"118 301.333 OFFCURVE",
"112 300 CURVE SMOOTH",
"104.667 298.667 OFFCURVE",
"101 291.667 OFFCURVE",
"101 279 CURVE SMOOTH",
"101 274.333 OFFCURVE",
"102.333 272.333 OFFCURVE",
"105 273 CURVE SMOOTH",
"113.667 273.667 OFFCURVE",
"161.333 275.667 OFFCURVE",
"248 279 CURVE",
"245.333 264.333 OFFCURVE",
"241 249.667 OFFCURVE",
"237 235 CURVE SMOOTH",
"224 184 LINE",
"149.333 184 OFFCURVE",
"106.667 183 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 179.667 OFFCURVE",
"84 172.667 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155.333 OFFCURVE",
"85.667 153 OFFCURVE",
"89 153 CURVE SMOOTH",
"217 159 LINE",
"195.5 71.5 LINE",
"186 32 LINE",
"185.333 24.667 OFFCURVE",
"191.333 19 OFFCURVE",
"204 15 CURVE",
"208.667 14.333 OFFCURVE",
"211 15.333 OFFCURVE",
"211 18 CURVE",
"220 59.5 LINE",
"243 160 LINE",
"274 160.5 LINE",
"331 162 LINE",
"309 72 LINE",
"299 30 LINE SMOOTH",
"297.667 22 OFFCURVE",
"303.667 16.667 OFFCURVE",
"317 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 205.333 OFFCURVE",
"261.667 240.333 OFFCURVE",
"271 279 CURVE",
"280.333 279.667 OFFCURVE",
"293.167 280.167 OFFCURVE",
"309.5 280.5 CURVE SMOOTH",
"363 282 LINE",
"357 259 LINE",
"350 233 LINE",
"337 185 LINE",
"276 185 LINE SMOOTH",
"266.667 185 OFFCURVE",
"257.667 184.667 OFFCURVE",
"249 184 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"322 13 OFFCURVE",
"324 13 OFFCURVE",
"324 16 CURVE SMOOTH",
"325 25 OFFCURVE",
"336 74 OFFCURVE",
"357 163 CURVE",
"380 164 OFFCURVE",
"425 165 OFFCURVE",
"461 165 CURVE SMOOTH",
"484 165 OFFCURVE",
"503 165 OFFCURVE",
"508 163 CURVE SMOOTH",
"515 160 OFFCURVE",
"517 165 OFFCURVE",
"517 172 CURVE SMOOTH",
"517 176 OFFCURVE",
"515 179 OFFCURVE",
"512 181 CURVE",
"508 182 OFFCURVE",
"494 183 OFFCURVE",
"469 184 CURVE SMOOTH",
"444 185 OFFCURVE",
"409 185 OFFCURVE",
"362 185 CURVE",
"370 218 OFFCURVE",
"378 250 OFFCURVE",
"387 283 CURVE",
"404 283 OFFCURVE",
"442 284 OFFCURVE",
"474 284 CURVE SMOOTH",
"499 284 OFFCURVE",
"520 283 OFFCURVE",
"524 282 CURVE SMOOTH",
"531 279 OFFCURVE",
"534 284 OFFCURVE",
"534 291 CURVE SMOOTH",
"534 296 OFFCURVE",
"532 299 OFFCURVE",
"528 300 CURVE SMOOTH",
"525 301 OFFCURVE",
"512 302 OFFCURVE",
"489 303 CURVE SMOOTH",
"466 304 OFFCURVE",
"434 304 OFFCURVE",
"392 304 CURVE",
"409 365 LINE",
"425 425 LINE SMOOTH",
"426 430 OFFCURVE",
"422 435 OFFCURVE",
"415 435 CURVE SMOOTH",
"412 435 OFFCURVE",
"409 434 OFFCURVE",
"407 432 CURVE SMOOTH",
"405 429 OFFCURVE",
"401 417 OFFCURVE",
"395 396 CURVE SMOOTH",
"388 375 OFFCURVE",
"380 344 OFFCURVE",
"369 304 CURVE",
"277 304 LINE",
"283 334 OFFCURVE",
"307 433 OFFCURVE",
"311 433 CURVE SMOOTH",
"314 433 OFFCURVE",
"309 437 OFFCURVE",
"300 437 CURVE SMOOTH",
"297 437 OFFCURVE",
"295 436 OFFCURVE",
"294 433 CURVE",
"290 427 OFFCURVE",
"277 384 OFFCURVE",
"255 304 CURVE",
"157 303 LINE SMOOTH",
"133 302 OFFCURVE",
"118 301 OFFCURVE",
"112 300 CURVE SMOOTH",
"105 299 OFFCURVE",
"101 292 OFFCURVE",
"101 279 CURVE SMOOTH",
"101 274 OFFCURVE",
"102 272 OFFCURVE",
"105 273 CURVE",
"114 274 OFFCURVE",
"161 276 OFFCURVE",
"248 279 CURVE",
"245 264 OFFCURVE",
"241 250 OFFCURVE",
"237 235 CURVE SMOOTH",
"224 184 LINE",
"149 184 OFFCURVE",
"107 183 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 153 OFFCURVE",
"89 153 CURVE SMOOTH",
"217 159 LINE",
"196 72 LINE",
"186 32 LINE SMOOTH",
"185 25 OFFCURVE",
"191 19 OFFCURVE",
"204 15 CURVE SMOOTH",
"209 14 OFFCURVE",
"211 15 OFFCURVE",
"211 18 CURVE",
"220 60 LINE",
"243 160 LINE",
"274 161 LINE",
"331 162 LINE",
"309 72 LINE",
"299 30 LINE",
"298 22 OFFCURVE",
"304 17 OFFCURVE",
"317 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 205 OFFCURVE",
"262 240 OFFCURVE",
"271 279 CURVE",
"280 280 OFFCURVE",
"293 280 OFFCURVE",
"310 281 CURVE SMOOTH",
"363 282 LINE",
"357 259 LINE",
"350 233 LINE",
"337 185 LINE",
"276 185 LINE SMOOTH",
"267 185 OFFCURVE",
"258 185 OFFCURVE",
"249 184 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01241 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012102 2 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 2 96 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"25.667 -28 OFFCURVE",
"27 -27.667 OFFCURVE",
"27 -27 CURVE",
"56.333 31 OFFCURVE",
"103.333 100.667 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 256.5 LINE",
"345 397 LINE SMOOTH",
"415.667 481 OFFCURVE",
"464.667 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"494.667 589.667 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598.333 OFFCURVE",
"492.333 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 599.667 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554.333 OFFCURVE",
"402.333 492.667 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"168.667 232.333 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"24.667 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1.333 -14.667 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25.333 OFFCURVE",
"17.667 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"26 -28 OFFCURVE",
"27 -28 OFFCURVE",
"27 -27 CURVE",
"56 31 OFFCURVE",
"103 101 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 257 LINE",
"345 397 LINE SMOOTH",
"416 481 OFFCURVE",
"465 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"495 590 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598 OFFCURVE",
"492 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 600 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554 OFFCURVE",
"402 493 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"169 232 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"25 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1 -15 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25 OFFCURVE",
"18 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 503;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"307.333 -51 OFFCURVE",
"312 -48 OFFCURVE",
"316 -42 CURVE SMOOTH",
"319.333 -35.333 OFFCURVE",
"321 -29.333 OFFCURVE",
"321 -24 CURVE SMOOTH",
"321 5.333 OFFCURVE",
"284.333 72.667 OFFCURVE",
"211 178 CURVE SMOOTH",
"143.667 273.333 OFFCURVE",
"93 336 OFFCURVE",
"59 366 CURVE SMOOTH",
"57 368 OFFCURVE",
"54.333 369 OFFCURVE",
"51 369 CURVE SMOOTH",
"47 369 OFFCURVE",
"43 368 OFFCURVE",
"39 366 CURVE SMOOTH",
"33 364 OFFCURVE",
"30 361.333 OFFCURVE",
"30 358 CURVE SMOOTH",
"30 356.667 OFFCURVE",
"30.667 356 OFFCURVE",
"32 356 CURVE",
"72 313.333 OFFCURVE",
"124 250.667 OFFCURVE",
"188 168 CURVE SMOOTH",
"265.333 65.333 OFFCURVE",
"304 1.333 OFFCURVE",
"304 -24 CURVE",
"302 -35 LINE",
"300 -40.333 OFFCURVE",
"299 -44 OFFCURVE",
"299 -46 CURVE SMOOTH",
"299 -49.333 OFFCURVE",
"300 -51 OFFCURVE",
"302 -51 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"307 -51 OFFCURVE",
"312 -48 OFFCURVE",
"316 -42 CURVE",
"319 -35 OFFCURVE",
"321 -29 OFFCURVE",
"321 -24 CURVE SMOOTH",
"321 5 OFFCURVE",
"284 73 OFFCURVE",
"211 178 CURVE SMOOTH",
"144 273 OFFCURVE",
"93 336 OFFCURVE",
"59 366 CURVE SMOOTH",
"57 368 OFFCURVE",
"54 369 OFFCURVE",
"51 369 CURVE SMOOTH",
"47 369 OFFCURVE",
"43 368 OFFCURVE",
"39 366 CURVE SMOOTH",
"33 364 OFFCURVE",
"30 361 OFFCURVE",
"30 358 CURVE SMOOTH",
"30 357 OFFCURVE",
"31 356 OFFCURVE",
"32 356 CURVE",
"72 313 OFFCURVE",
"124 251 OFFCURVE",
"188 168 CURVE SMOOTH",
"265 65 OFFCURVE",
"304 1 OFFCURVE",
"304 -24 CURVE",
"302 -35 LINE",
"300 -40 OFFCURVE",
"299 -44 OFFCURVE",
"299 -46 CURVE SMOOTH",
"299 -49 OFFCURVE",
"300 -51 OFFCURVE",
"302 -51 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 10 170 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 10 25 10 41 10 57 10 73 10 89 10 105 10 121 10 137 10 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 334;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = periodcentered.loclCAT.case;
lastChange = "2021-10-08 06:43:11 +0000";
layers = (
{
components = (
{
name = periodcentered.loclCAT;
transform = "{1, 0, 0, 1, -49, 40}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 22;
}
);
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2021-10-08 06:42:33 +0000";
layers = (
{
background = {
components = (
{
name = period;
transform = "{1, 0, 0, 1, -45, 138}";
}
);
};
components = (
{
name = period;
transform = "{1, 0, 0, 1, -45, 138}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 52;
}
);
},
{
glyphname = parenleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"147.667 -58 OFFCURVE",
"152.667 -56.333 OFFCURVE",
"158 -53 CURVE SMOOTH",
"162.667 -49.667 OFFCURVE",
"165 -46.667 OFFCURVE",
"165 -44 CURVE",
"164 -42 LINE",
"86 10.667 OFFCURVE",
"47 84 OFFCURVE",
"47 178 CURVE SMOOTH",
"47 259.333 OFFCURVE",
"63.667 330.333 OFFCURVE",
"97 391 CURVE SMOOTH",
"128.333 449 OFFCURVE",
"178.667 501.667 OFFCURVE",
"248 549 CURVE SMOOTH",
"256.667 555 OFFCURVE",
"261 560.333 OFFCURVE",
"261 565 CURVE SMOOTH",
"261 567 OFFCURVE",
"259.333 568 OFFCURVE",
"256 568 CURVE SMOOTH",
"251.333 568 OFFCURVE",
"245.667 566 OFFCURVE",
"239 562 CURVE SMOOTH",
"165.667 511.333 OFFCURVE",
"112.333 458 OFFCURVE",
"75 398 CURVE SMOOTH",
"36.333 333.333 OFFCURVE",
"17 259.667 OFFCURVE",
"17 177 CURVE SMOOTH",
"17 119.667 OFFCURVE",
"29.667 69.333 OFFCURVE",
"55 26 CURVE SMOOTH",
"76.333 -10 OFFCURVE",
"104 -37.667 OFFCURVE",
"138 -57 CURVE",
"138.667 -57.667 OFFCURVE",
"140.333 -58 OFFCURVE",
"143 -58 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"148 -58 OFFCURVE",
"153 -56 OFFCURVE",
"158 -53 CURVE SMOOTH",
"163 -50 OFFCURVE",
"165 -47 OFFCURVE",
"165 -44 CURVE",
"164 -42 LINE",
"86 11 OFFCURVE",
"47 84 OFFCURVE",
"47 178 CURVE SMOOTH",
"47 259 OFFCURVE",
"64 330 OFFCURVE",
"97 391 CURVE SMOOTH",
"128 449 OFFCURVE",
"179 502 OFFCURVE",
"248 549 CURVE SMOOTH",
"257 555 OFFCURVE",
"261 560 OFFCURVE",
"261 565 CURVE SMOOTH",
"261 567 OFFCURVE",
"259 568 OFFCURVE",
"256 568 CURVE SMOOTH",
"251 568 OFFCURVE",
"246 566 OFFCURVE",
"239 562 CURVE SMOOTH",
"166 511 OFFCURVE",
"112 458 OFFCURVE",
"75 398 CURVE SMOOTH",
"36 333 OFFCURVE",
"17 260 OFFCURVE",
"17 177 CURVE SMOOTH",
"17 120 OFFCURVE",
"30 69 OFFCURVE",
"55 26 CURVE SMOOTH",
"76 -10 OFFCURVE",
"104 -38 OFFCURVE",
"138 -57 CURVE",
"139 -58 OFFCURVE",
"140 -58 OFFCURVE",
"143 -58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0126 3 20 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 6 165 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 205;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"59.333 -67 OFFCURVE",
"60.333 -66.667 OFFCURVE",
"61 -66 CURVE",
"97.667 -52.667 OFFCURVE",
"129 -30 OFFCURVE",
"155 2 CURVE SMOOTH",
"187.667 41.333 OFFCURVE",
"208.333 89.333 OFFCURVE",
"217 146 CURVE SMOOTH",
"221 170.667 OFFCURVE",
"223 195.333 OFFCURVE",
"223 220 CURVE SMOOTH",
"223 342 OFFCURVE",
"167.333 455.667 OFFCURVE",
"56 561 CURVE SMOOTH",
"48.667 567 OFFCURVE",
"43 570 OFFCURVE",
"39 570 CURVE SMOOTH",
"36.333 570 OFFCURVE",
"35 569 OFFCURVE",
"35 567 CURVE SMOOTH",
"35 562.333 OFFCURVE",
"38.667 556.667 OFFCURVE",
"46 550 CURVE SMOOTH",
"144 456.667 OFFCURVE",
"193 351.667 OFFCURVE",
"193 235 CURVE SMOOTH",
"193 208.333 OFFCURVE",
"191.333 181.333 OFFCURVE",
"186 152 CURVE SMOOTH",
"172 59.333 OFFCURVE",
"122.333 -7 OFFCURVE",
"37 -47 CURVE",
"36.333 -47.667 OFFCURVE",
"36 -48.667 OFFCURVE",
"36 -50 CURVE SMOOTH",
"36 -52.667 OFFCURVE",
"38.333 -56 OFFCURVE",
"43 -60 CURVE SMOOTH",
"48.333 -64.667 OFFCURVE",
"53.333 -67 OFFCURVE",
"58 -67 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"59 -67 OFFCURVE",
"60 -67 OFFCURVE",
"61 -66 CURVE",
"98 -53 OFFCURVE",
"129 -30 OFFCURVE",
"155 2 CURVE SMOOTH",
"188 41 OFFCURVE",
"208 89 OFFCURVE",
"217 146 CURVE SMOOTH",
"221 171 OFFCURVE",
"223 195 OFFCURVE",
"223 220 CURVE SMOOTH",
"223 342 OFFCURVE",
"167 456 OFFCURVE",
"56 561 CURVE SMOOTH",
"49 567 OFFCURVE",
"43 570 OFFCURVE",
"39 570 CURVE SMOOTH",
"36 570 OFFCURVE",
"35 569 OFFCURVE",
"35 567 CURVE SMOOTH",
"35 562 OFFCURVE",
"39 557 OFFCURVE",
"46 550 CURVE SMOOTH",
"144 457 OFFCURVE",
"193 352 OFFCURVE",
"193 235 CURVE SMOOTH",
"193 208 OFFCURVE",
"191 181 OFFCURVE",
"186 152 CURVE SMOOTH",
"172 59 OFFCURVE",
"122 -7 OFFCURVE",
"37 -47 CURVE",
"36 -48 OFFCURVE",
"36 -49 OFFCURVE",
"36 -50 CURVE SMOOTH",
"36 -53 OFFCURVE",
"38 -56 OFFCURVE",
"43 -60 CURVE SMOOTH",
"48 -65 OFFCURVE",
"53 -67 OFFCURVE",
"58 -67 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01219 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 19 170 19 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 271;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"139 -34 LINE SMOOTH",
"142.333 -34 OFFCURVE",
"146.667 -32 OFFCURVE",
"152 -28 CURVE",
"156.667 -22 OFFCURVE",
"159 -17.667 OFFCURVE",
"159 -15 CURVE SMOOTH",
"159 -13 OFFCURVE",
"158 -12 OFFCURVE",
"156 -12 CURVE",
"118.5 -1.5 LINE",
"98 5 LINE",
"73.333 16.333 OFFCURVE",
"61 29.667 OFFCURVE",
"61 45 CURVE SMOOTH",
"61 50.333 OFFCURVE",
"62.667 59 OFFCURVE",
"66 71 CURVE SMOOTH",
"68.667 83 OFFCURVE",
"70 91.333 OFFCURVE",
"70 98 CURVE SMOOTH",
"70 110 OFFCURVE",
"65 126 OFFCURVE",
"57 146 CURVE SMOOTH",
"48.333 165.333 OFFCURVE",
"44 179.333 OFFCURVE",
"44 188 CURVE SMOOTH",
"44 196.667 OFFCURVE",
"49.667 213 OFFCURVE",
"61 237 CURVE SMOOTH",
"72.333 261.667 OFFCURVE",
"78 281 OFFCURVE",
"78 295 CURVE SMOOTH",
"78 304.333 OFFCURVE",
"76.667 312.333 OFFCURVE",
"74 323 CURVE",
"88 339 OFFCURVE",
"109.333 350.667 OFFCURVE",
"138 358 CURVE SMOOTH",
"146.5 359.5 LINE",
"154 361 LINE SMOOTH",
"160.667 363 OFFCURVE",
"164 366.333 OFFCURVE",
"164 371 CURVE SMOOTH",
"164 375.667 OFFCURVE",
"162 378 OFFCURVE",
"158 378 CURVE SMOOTH",
"129.333 378 OFFCURVE",
"105.333 372.667 OFFCURVE",
"86 362 CURVE SMOOTH",
"60 348.667 OFFCURVE",
"47 329.333 OFFCURVE",
"47 304 CURVE SMOOTH",
"47 282 LINE SMOOTH",
"47 236 OFFCURVE",
"40 209 OFFCURVE",
"26 201 CURVE",
"22 199.667 OFFCURVE",
"18.667 199 OFFCURVE",
"16 199 CURVE",
"12.667 197.667 OFFCURVE",
"11 196 OFFCURVE",
"11 194 CURVE SMOOTH",
"11 192 OFFCURVE",
"12.667 190.333 OFFCURVE",
"16 189 CURVE",
"20.667 188.333 OFFCURVE",
"27.667 173.667 OFFCURVE",
"37 145 CURVE SMOOTH",
"46.5 112 LINE SMOOTH",
"48.833 103.333 OFFCURVE",
"50 97 OFFCURVE",
"50 93 CURVE SMOOTH",
"50 88.333 OFFCURVE",
"49 81 OFFCURVE",
"47 71 CURVE SMOOTH",
"45.667 60.333 OFFCURVE",
"45 54.333 OFFCURVE",
"45 49 CURVE SMOOTH",
"45 7 OFFCURVE",
"75.667 -20.667 OFFCURVE",
"137 -34 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"139 -34 LINE SMOOTH",
"142 -34 OFFCURVE",
"147 -32 OFFCURVE",
"152 -28 CURVE",
"157 -22 OFFCURVE",
"159 -18 OFFCURVE",
"159 -15 CURVE SMOOTH",
"159 -13 OFFCURVE",
"158 -12 OFFCURVE",
"156 -12 CURVE",
"119 -2 LINE",
"98 5 LINE SMOOTH",
"73 16 OFFCURVE",
"61 30 OFFCURVE",
"61 45 CURVE SMOOTH",
"61 50 OFFCURVE",
"63 59 OFFCURVE",
"66 71 CURVE SMOOTH",
"69 83 OFFCURVE",
"70 91 OFFCURVE",
"70 98 CURVE SMOOTH",
"70 110 OFFCURVE",
"65 126 OFFCURVE",
"57 146 CURVE SMOOTH",
"48 165 OFFCURVE",
"44 179 OFFCURVE",
"44 188 CURVE SMOOTH",
"44 197 OFFCURVE",
"50 213 OFFCURVE",
"61 237 CURVE SMOOTH",
"72 262 OFFCURVE",
"78 281 OFFCURVE",
"78 295 CURVE SMOOTH",
"78 304 OFFCURVE",
"77 312 OFFCURVE",
"74 323 CURVE",
"88 339 OFFCURVE",
"109 351 OFFCURVE",
"138 358 CURVE SMOOTH",
"147 360 LINE",
"154 361 LINE SMOOTH",
"161 363 OFFCURVE",
"164 366 OFFCURVE",
"164 371 CURVE SMOOTH",
"164 376 OFFCURVE",
"162 378 OFFCURVE",
"158 378 CURVE SMOOTH",
"129 378 OFFCURVE",
"105 373 OFFCURVE",
"86 362 CURVE SMOOTH",
"60 349 OFFCURVE",
"47 329 OFFCURVE",
"47 304 CURVE SMOOTH",
"47 282 LINE SMOOTH",
"47 236 OFFCURVE",
"40 209 OFFCURVE",
"26 201 CURVE",
"22 200 OFFCURVE",
"19 199 OFFCURVE",
"16 199 CURVE",
"13 198 OFFCURVE",
"11 196 OFFCURVE",
"11 194 CURVE SMOOTH",
"11 192 OFFCURVE",
"13 190 OFFCURVE",
"16 189 CURVE SMOOTH",
"21 188 OFFCURVE",
"28 174 OFFCURVE",
"37 145 CURVE SMOOTH",
"47 112 LINE SMOOTH",
"49 103 OFFCURVE",
"50 97 OFFCURVE",
"50 93 CURVE SMOOTH",
"50 88 OFFCURVE",
"49 81 OFFCURVE",
"47 71 CURVE SMOOTH",
"46 60 OFFCURVE",
"45 54 OFFCURVE",
"45 49 CURVE SMOOTH",
"45 7 OFFCURVE",
"76 -21 OFFCURVE",
"137 -34 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 194;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"82.333 -34 OFFCURVE",
"103.667 -26 OFFCURVE",
"123 -10 CURVE SMOOTH",
"143 6 OFFCURVE",
"153 25.667 OFFCURVE",
"153 49 CURVE SMOOTH",
"153 54.333 OFFCURVE",
"152.333 60.333 OFFCURVE",
"151 71 CURVE SMOOTH",
"149.667 76.333 OFFCURVE",
"149 80.667 OFFCURVE",
"149 84 CURVE SMOOTH",
"149 93 LINE SMOOTH",
"149 102.333 OFFCURVE",
"152 118.333 OFFCURVE",
"160 145 CURVE SMOOTH",
"169.333 173.667 OFFCURVE",
"176.667 188.333 OFFCURVE",
"182 189 CURVE",
"185.333 190.333 OFFCURVE",
"187 192 OFFCURVE",
"187 194 CURVE SMOOTH",
"187 196 OFFCURVE",
"185 197.667 OFFCURVE",
"181 199 CURVE SMOOTH",
"172 201 LINE",
"158 209 OFFCURVE",
"151 236 OFFCURVE",
"151 282 CURVE SMOOTH",
"151 304 LINE SMOOTH",
"151 329.333 OFFCURVE",
"138 348.667 OFFCURVE",
"112 362 CURVE SMOOTH",
"91.333 372.667 OFFCURVE",
"67.333 378 OFFCURVE",
"40 378 CURVE SMOOTH",
"35.333 378 OFFCURVE",
"33 375.667 OFFCURVE",
"33 371 CURVE SMOOTH",
"33 367 OFFCURVE",
"35.667 364 OFFCURVE",
"41 362 CURVE SMOOTH",
"45.667 360.667 OFFCURVE",
"49.5 359.833 OFFCURVE",
"52.5 359.5 CURVE SMOOTH",
"60 358 LINE SMOOTH",
"89.333 350 OFFCURVE",
"110.667 338.333 OFFCURVE",
"124 323 CURVE",
"121.333 312.333 OFFCURVE",
"120 304.333 OFFCURVE",
"120 295 CURVE SMOOTH",
"120 281 OFFCURVE",
"125.667 261.667 OFFCURVE",
"137 237 CURVE SMOOTH",
"147.667 215 OFFCURVE",
"153 198.667 OFFCURVE",
"153 188 CURVE SMOOTH",
"153 180 OFFCURVE",
"149 166 OFFCURVE",
"141 146 CURVE SMOOTH",
"132.333 126.667 OFFCURVE",
"128 110.667 OFFCURVE",
"128 98 CURVE SMOOTH",
"128 91.333 OFFCURVE",
"129.333 83 OFFCURVE",
"132 71 CURVE SMOOTH",
"135.333 59 OFFCURVE",
"137 50.333 OFFCURVE",
"137 45 CURVE SMOOTH",
"137 29.667 OFFCURVE",
"124.667 16.333 OFFCURVE",
"100 5 CURVE",
"79.5 -1.5 LINE",
"42 -12 LINE",
"40 -12 OFFCURVE",
"39 -13 OFFCURVE",
"39 -15 CURVE SMOOTH",
"39 -19 OFFCURVE",
"41.333 -23.333 OFFCURVE",
"46 -28 CURVE SMOOTH",
"50.667 -32 OFFCURVE",
"55 -34 OFFCURVE",
"59 -34 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"82 -34 OFFCURVE",
"104 -26 OFFCURVE",
"123 -10 CURVE SMOOTH",
"143 6 OFFCURVE",
"153 26 OFFCURVE",
"153 49 CURVE SMOOTH",
"153 54 OFFCURVE",
"152 60 OFFCURVE",
"151 71 CURVE SMOOTH",
"150 76 OFFCURVE",
"149 81 OFFCURVE",
"149 84 CURVE SMOOTH",
"149 93 LINE SMOOTH",
"149 102 OFFCURVE",
"152 118 OFFCURVE",
"160 145 CURVE SMOOTH",
"169 174 OFFCURVE",
"177 188 OFFCURVE",
"182 189 CURVE SMOOTH",
"185 190 OFFCURVE",
"187 192 OFFCURVE",
"187 194 CURVE SMOOTH",
"187 196 OFFCURVE",
"185 198 OFFCURVE",
"181 199 CURVE SMOOTH",
"172 201 LINE",
"158 209 OFFCURVE",
"151 236 OFFCURVE",
"151 282 CURVE SMOOTH",
"151 304 LINE SMOOTH",
"151 329 OFFCURVE",
"138 349 OFFCURVE",
"112 362 CURVE SMOOTH",
"91 373 OFFCURVE",
"67 378 OFFCURVE",
"40 378 CURVE SMOOTH",
"35 378 OFFCURVE",
"33 376 OFFCURVE",
"33 371 CURVE SMOOTH",
"33 367 OFFCURVE",
"36 364 OFFCURVE",
"41 362 CURVE SMOOTH",
"46 361 OFFCURVE",
"50 360 OFFCURVE",
"53 360 CURVE",
"60 358 LINE SMOOTH",
"89 350 OFFCURVE",
"111 338 OFFCURVE",
"124 323 CURVE",
"121 312 OFFCURVE",
"120 304 OFFCURVE",
"120 295 CURVE SMOOTH",
"120 281 OFFCURVE",
"126 262 OFFCURVE",
"137 237 CURVE SMOOTH",
"148 215 OFFCURVE",
"153 199 OFFCURVE",
"153 188 CURVE SMOOTH",
"153 180 OFFCURVE",
"149 166 OFFCURVE",
"141 146 CURVE SMOOTH",
"132 127 OFFCURVE",
"128 111 OFFCURVE",
"128 98 CURVE SMOOTH",
"128 91 OFFCURVE",
"129 83 OFFCURVE",
"132 71 CURVE SMOOTH",
"135 59 OFFCURVE",
"137 50 OFFCURVE",
"137 45 CURVE SMOOTH",
"137 30 OFFCURVE",
"125 16 OFFCURVE",
"100 5 CURVE SMOOTH",
"80 -2 LINE",
"42 -12 LINE",
"40 -12 OFFCURVE",
"39 -13 OFFCURVE",
"39 -15 CURVE SMOOTH",
"39 -19 OFFCURVE",
"41 -23 OFFCURVE",
"46 -28 CURVE SMOOTH",
"51 -32 OFFCURVE",
"55 -34 OFFCURVE",
"59 -34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01241 4 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 194;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"139 -34 LINE SMOOTH",
"142.333 -34 OFFCURVE",
"146.667 -32 OFFCURVE",
"152 -28 CURVE",
"156.667 -22 OFFCURVE",
"159 -17.667 OFFCURVE",
"159 -15 CURVE SMOOTH",
"159 -13 OFFCURVE",
"158 -12 OFFCURVE",
"156 -12 CURVE",
"134 -5.333 OFFCURVE",
"100.333 -1 OFFCURVE",
"55 1 CURVE",
"61.667 13 OFFCURVE",
"66 24.667 OFFCURVE",
"68 36 CURVE SMOOTH",
"72 62 OFFCURVE",
"74 94.333 OFFCURVE",
"74 133 CURVE SMOOTH",
"74 151.5 LINE",
"73 177 LINE",
"73 221 LINE SMOOTH",
"73 273 OFFCURVE",
"76.667 314 OFFCURVE",
"86 342 CURVE",
"133 356 LINE SMOOTH",
"136.333 357.333 OFFCURVE",
"139.5 358.167 OFFCURVE",
"142.5 358.5 CURVE SMOOTH",
"145.5 358.833 OFFCURVE",
"148.667 359.667 OFFCURVE",
"152 361 CURVE SMOOTH",
"160 363 OFFCURVE",
"164 366.333 OFFCURVE",
"164 371 CURVE SMOOTH",
"164 375.667 OFFCURVE",
"162 378 OFFCURVE",
"158 378 CURVE SMOOTH",
"151.333 378 OFFCURVE",
"141 375.667 OFFCURVE",
"127 371 CURVE SMOOTH",
"106 364.5 LINE SMOOTH",
"100.667 362.833 OFFCURVE",
"96.333 362 OFFCURVE",
"93 362 CURVE",
"98.333 371.333 OFFCURVE",
"101 376.667 OFFCURVE",
"101 378 CURVE SMOOTH",
"101 382.667 OFFCURVE",
"96 385 OFFCURVE",
"86 385 CURVE SMOOTH",
"80.667 385 OFFCURVE",
"76.667 384 OFFCURVE",
"74 382 CURVE",
"67 379 LINE",
"62 377 LINE",
"58 371.667 OFFCURVE",
"54.667 358.667 OFFCURVE",
"52 338 CURVE SMOOTH",
"48 310 OFFCURVE",
"46 286.667 OFFCURVE",
"46 268 CURVE SMOOTH",
"46 250 OFFCURVE",
"47 223 OFFCURVE",
"49 187 CURVE SMOOTH",
"51 151 OFFCURVE",
"52 124 OFFCURVE",
"52 106 CURVE SMOOTH",
"52 57.333 OFFCURVE",
"46.667 22.667 OFFCURVE",
"36 2 CURVE",
"19.333 2.667 OFFCURVE",
"11 1.667 OFFCURVE",
"11 -1 CURVE SMOOTH",
"11 -5 OFFCURVE",
"22.667 -9.333 OFFCURVE",
"46 -14 CURVE SMOOTH",
"71.5 -18.5 LINE SMOOTH",
"78.5 -19.5 OFFCURVE",
"84 -20.667 OFFCURVE",
"88 -22 CURVE SMOOTH",
"112 -27.333 OFFCURVE",
"127.667 -31.333 OFFCURVE",
"137 -34 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"139 -34 LINE SMOOTH",
"142 -34 OFFCURVE",
"147 -32 OFFCURVE",
"152 -28 CURVE",
"157 -22 OFFCURVE",
"159 -18 OFFCURVE",
"159 -15 CURVE SMOOTH",
"159 -13 OFFCURVE",
"158 -12 OFFCURVE",
"156 -12 CURVE",
"134 -5 OFFCURVE",
"100 -1 OFFCURVE",
"55 1 CURVE",
"62 13 OFFCURVE",
"66 25 OFFCURVE",
"68 36 CURVE SMOOTH",
"72 62 OFFCURVE",
"74 94 OFFCURVE",
"74 133 CURVE SMOOTH",
"74 152 LINE",
"73 177 LINE",
"73 221 LINE SMOOTH",
"73 273 OFFCURVE",
"77 314 OFFCURVE",
"86 342 CURVE",
"133 356 LINE",
"143 359 LINE",
"146 359 OFFCURVE",
"149 360 OFFCURVE",
"152 361 CURVE SMOOTH",
"160 363 OFFCURVE",
"164 366 OFFCURVE",
"164 371 CURVE SMOOTH",
"164 376 OFFCURVE",
"162 378 OFFCURVE",
"158 378 CURVE SMOOTH",
"151 378 OFFCURVE",
"141 376 OFFCURVE",
"127 371 CURVE SMOOTH",
"106 365 LINE SMOOTH",
"101 363 OFFCURVE",
"96 362 OFFCURVE",
"93 362 CURVE",
"98 371 OFFCURVE",
"101 377 OFFCURVE",
"101 378 CURVE SMOOTH",
"101 383 OFFCURVE",
"96 385 OFFCURVE",
"86 385 CURVE SMOOTH",
"81 385 OFFCURVE",
"77 384 OFFCURVE",
"74 382 CURVE SMOOTH",
"67 379 LINE",
"62 377 LINE",
"58 372 OFFCURVE",
"55 359 OFFCURVE",
"52 338 CURVE SMOOTH",
"48 310 OFFCURVE",
"46 287 OFFCURVE",
"46 268 CURVE SMOOTH",
"46 250 OFFCURVE",
"47 223 OFFCURVE",
"49 187 CURVE SMOOTH",
"51 151 OFFCURVE",
"52 124 OFFCURVE",
"52 106 CURVE SMOOTH",
"52 57 OFFCURVE",
"47 23 OFFCURVE",
"36 2 CURVE",
"19 3 OFFCURVE",
"11 2 OFFCURVE",
"11 -1 CURVE SMOOTH",
"11 -5 OFFCURVE",
"23 -9 OFFCURVE",
"46 -14 CURVE SMOOTH",
"72 -19 LINE SMOOTH",
"79 -20 OFFCURVE",
"84 -21 OFFCURVE",
"88 -22 CURVE SMOOTH",
"112 -27 OFFCURVE",
"128 -31 OFFCURVE",
"137 -34 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 3 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01217 42 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 194;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"53 -34 LINE",
"89 -25.5 LINE",
"112 -20 LINE SMOOTH",
"123.333 -16.667 OFFCURVE",
"135 -14.667 OFFCURVE",
"147 -14 CURVE",
"171 -9.333 OFFCURVE",
"183 -5 OFFCURVE",
"183 -1 CURVE SMOOTH",
"183 1 OFFCURVE",
"177.333 2 OFFCURVE",
"166 2 CURVE SMOOTH",
"158 2 LINE",
"152.667 16 OFFCURVE",
"150 30.667 OFFCURVE",
"150 46 CURVE SMOOTH",
"150 78 OFFCURVE",
"157 131 OFFCURVE",
"169 203 CURVE SMOOTH",
"178.333 251 OFFCURVE",
"182 286.333 OFFCURVE",
"182 313 CURVE SMOOTH",
"182 350.333 OFFCURVE",
"179.333 371.667 OFFCURVE",
"174 377 CURVE SMOOTH",
"172.667 378.333 OFFCURVE",
"171.333 379.167 OFFCURVE",
"170 379.5 CURVE SMOOTH",
"167 381 LINE SMOOTH",
"163.667 383.667 OFFCURVE",
"158.667 385 OFFCURVE",
"152 385 CURVE SMOOTH",
"141.333 385 OFFCURVE",
"136 382.333 OFFCURVE",
"136 377 CURVE SMOOTH",
"136 379 OFFCURVE",
"138 374 OFFCURVE",
"142 362 CURVE",
"139.333 362 OFFCURVE",
"135.5 362.833 OFFCURVE",
"130.5 364.5 CURVE SMOOTH",
"110 371 LINE SMOOTH",
"96 375.667 OFFCURVE",
"86 378 OFFCURVE",
"80 378 CURVE SMOOTH",
"75.333 378 OFFCURVE",
"73 375.333 OFFCURVE",
"73 370 CURVE SMOOTH",
"73 366.667 OFFCURVE",
"75 364 OFFCURVE",
"79 362 CURVE",
"102 356 LINE SMOOTH",
"124.667 349.333 OFFCURVE",
"139 344.667 OFFCURVE",
"147 342 CURVE",
"149.667 327.333 OFFCURVE",
"151 310.667 OFFCURVE",
"151 292 CURVE SMOOTH",
"151 265.333 OFFCURVE",
"148 225.667 OFFCURVE",
"140 171 CURVE SMOOTH",
"133.333 116.333 OFFCURVE",
"129 76.667 OFFCURVE",
"129 50 CURVE SMOOTH",
"129 32.667 OFFCURVE",
"132.333 16.333 OFFCURVE",
"139 1 CURVE",
"91 -1 OFFCURVE",
"57 -5.333 OFFCURVE",
"37 -12 CURVE",
"35 -12 OFFCURVE",
"34 -13.333 OFFCURVE",
"34 -16 CURVE SMOOTH",
"34 -20 OFFCURVE",
"36 -24 OFFCURVE",
"40 -28 CURVE SMOOTH",
"44 -32 OFFCURVE",
"47.667 -34 OFFCURVE",
"51 -34 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"53 -34 LINE",
"112 -20 LINE SMOOTH",
"123 -17 OFFCURVE",
"135 -15 OFFCURVE",
"147 -14 CURVE",
"171 -9 OFFCURVE",
"183 -5 OFFCURVE",
"183 -1 CURVE SMOOTH",
"183 1 OFFCURVE",
"177 2 OFFCURVE",
"166 2 CURVE SMOOTH",
"158 2 LINE",
"153 16 OFFCURVE",
"150 31 OFFCURVE",
"150 46 CURVE SMOOTH",
"150 78 OFFCURVE",
"157 131 OFFCURVE",
"169 203 CURVE SMOOTH",
"178 251 OFFCURVE",
"182 286 OFFCURVE",
"182 313 CURVE SMOOTH",
"182 350 OFFCURVE",
"179 372 OFFCURVE",
"174 377 CURVE SMOOTH",
"170 380 LINE",
"167 381 LINE",
"164 384 OFFCURVE",
"159 385 OFFCURVE",
"152 385 CURVE SMOOTH",
"141 385 OFFCURVE",
"136 382 OFFCURVE",
"136 377 CURVE SMOOTH",
"136 379 OFFCURVE",
"138 374 OFFCURVE",
"142 362 CURVE",
"139 362 OFFCURVE",
"136 363 OFFCURVE",
"131 365 CURVE SMOOTH",
"110 371 LINE SMOOTH",
"96 376 OFFCURVE",
"86 378 OFFCURVE",
"80 378 CURVE SMOOTH",
"75 378 OFFCURVE",
"73 375 OFFCURVE",
"73 370 CURVE SMOOTH",
"73 367 OFFCURVE",
"75 364 OFFCURVE",
"79 362 CURVE",
"102 356 LINE SMOOTH",
"125 349 OFFCURVE",
"139 345 OFFCURVE",
"147 342 CURVE",
"150 327 OFFCURVE",
"151 311 OFFCURVE",
"151 292 CURVE SMOOTH",
"151 265 OFFCURVE",
"148 226 OFFCURVE",
"140 171 CURVE SMOOTH",
"133 116 OFFCURVE",
"129 77 OFFCURVE",
"129 50 CURVE SMOOTH",
"129 33 OFFCURVE",
"132 16 OFFCURVE",
"139 1 CURVE",
"91 -1 OFFCURVE",
"57 -5 OFFCURVE",
"37 -12 CURVE",
"35 -12 OFFCURVE",
"34 -13 OFFCURVE",
"34 -16 CURVE SMOOTH",
"34 -20 OFFCURVE",
"36 -24 OFFCURVE",
"40 -28 CURVE SMOOTH",
"44 -32 OFFCURVE",
"48 -34 OFFCURVE",
"51 -34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01246 3 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 46 170 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 194;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 161 OFFCURVE",
"178.667 165 OFFCURVE",
"190 165 CURVE SMOOTH",
"196.667 165 OFFCURVE",
"202 164.333 OFFCURVE",
"206 163 CURVE",
"206.667 162.333 OFFCURVE",
"207.667 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"213.667 162 OFFCURVE",
"216 165.333 OFFCURVE",
"216 172 CURVE SMOOTH",
"216 176 OFFCURVE",
"214 179 OFFCURVE",
"210 181 CURVE SMOOTH",
"202.667 183.667 OFFCURVE",
"184 185 OFFCURVE",
"154 185 CURVE SMOOTH",
"121.5 183.5 LINE SMOOTH",
"111.833 183.167 OFFCURVE",
"103.333 182.333 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 179.667 OFFCURVE",
"84 172.667 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155.333 OFFCURVE",
"85.667 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"145 161 OFFCURVE",
"179 165 OFFCURVE",
"190 165 CURVE SMOOTH",
"197 165 OFFCURVE",
"202 164 OFFCURVE",
"206 163 CURVE",
"207 162 OFFCURVE",
"208 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"214 162 OFFCURVE",
"216 165 OFFCURVE",
"216 172 CURVE SMOOTH",
"216 176 OFFCURVE",
"214 179 OFFCURVE",
"210 181 CURVE SMOOTH",
"203 184 OFFCURVE",
"184 185 OFFCURVE",
"154 185 CURVE SMOOTH",
"122 184 LINE",
"96 181 LINE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\0120 10 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 0 229 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 233;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
lastChange = "2021-10-08 08:45:09 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"130 160 OFFCURVE",
"158 165 OFFCURVE",
"169 165 CURVE SMOOTH",
"176 165 OFFCURVE",
"181 164 OFFCURVE",
"185 163 CURVE",
"186 162 OFFCURVE",
"187 162 OFFCURVE",
"188 162 CURVE SMOOTH",
"193 162 OFFCURVE",
"195 165 OFFCURVE",
"195 172 CURVE SMOOTH",
"195 176 OFFCURVE",
"193 179 OFFCURVE",
"189 181 CURVE SMOOTH",
"175 187 OFFCURVE",
"121 185 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 152 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
width = 212;
}
);
unicode = 00AD;
},
{
glyphname = endash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"145 161 OFFCURVE",
"207.333 165 OFFCURVE",
"276 165 CURVE SMOOTH",
"287.333 165 OFFCURVE",
"295.667 164.333 OFFCURVE",
"301 163 CURVE SMOOTH",
"303 162 LINE",
"307.667 162 OFFCURVE",
"310 165.333 OFFCURVE",
"310 172 CURVE SMOOTH",
"310 176 OFFCURVE",
"308.333 179 OFFCURVE",
"305 181 CURVE",
"297 183.667 OFFCURVE",
"262.667 185 OFFCURVE",
"202 185 CURVE SMOOTH",
"133.5 183.5 LINE SMOOTH",
"115.833 183.167 OFFCURVE",
"103.333 182.333 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 179.667 OFFCURVE",
"84 172.667 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155.333 OFFCURVE",
"85.667 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"145 161 OFFCURVE",
"207 165 OFFCURVE",
"276 165 CURVE SMOOTH",
"287 165 OFFCURVE",
"296 164 OFFCURVE",
"301 163 CURVE",
"303 162 LINE",
"308 162 OFFCURVE",
"310 165 OFFCURVE",
"310 172 CURVE SMOOTH",
"310 176 OFFCURVE",
"308 179 OFFCURVE",
"305 181 CURVE",
"297 184 OFFCURVE",
"263 185 OFFCURVE",
"202 185 CURVE SMOOTH",
"134 184 LINE SMOOTH",
"116 183 OFFCURVE",
"103 182 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"107.667 155.667 OFFCURVE",
"157.5 157.5 OFFCURVE",
"219.5 159.5 CURVE SMOOTH",
"317.5 162 LINE SMOOTH",
"373.943 163.096 OFFCURVE",
"458.919 163.932 OFFCURVE",
"501.5 164.5 CURVE SMOOTH",
"556 165 LINE SMOOTH",
"567.333 165 OFFCURVE",
"575.667 164.333 OFFCURVE",
"581 163 CURVE",
"581 162.333 OFFCURVE",
"581.667 162 OFFCURVE",
"583 162 CURVE SMOOTH",
"587.667 162 OFFCURVE",
"590 165.333 OFFCURVE",
"590 172 CURVE SMOOTH",
"590 176 OFFCURVE",
"588.333 179 OFFCURVE",
"585 181 CURVE SMOOTH",
"579.125 183.937 OFFCURVE",
"533.574 182.992 OFFCURVE",
"495 183.5 CURVE SMOOTH",
"412.5 184 LINE SMOOTH",
"363.261 184 OFFCURVE",
"288.563 185 OFFCURVE",
"250.5 185 CURVE SMOOTH",
"202 185 LINE",
"133.5 183.5 LINE SMOOTH",
"115.833 183.167 OFFCURVE",
"103.333 182.333 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 179.667 OFFCURVE",
"84 172.667 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155.333 OFFCURVE",
"85.667 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"108 156 OFFCURVE",
"158 158 OFFCURVE",
"220 160 CURVE SMOOTH",
"318 162 LINE",
"502 165 LINE",
"556 165 LINE SMOOTH",
"567 165 OFFCURVE",
"576 164 OFFCURVE",
"581 163 CURVE",
"581 162 OFFCURVE",
"582 162 OFFCURVE",
"583 162 CURVE SMOOTH",
"588 162 OFFCURVE",
"590 165 OFFCURVE",
"590 172 CURVE SMOOTH",
"590 176 OFFCURVE",
"588 179 OFFCURVE",
"585 181 CURVE SMOOTH",
"579 184 OFFCURVE",
"534 183 OFFCURVE",
"495 184 CURVE SMOOTH",
"413 184 LINE SMOOTH",
"363 184 OFFCURVE",
"289 185 OFFCURVE",
"251 185 CURVE SMOOTH",
"202 185 LINE",
"134 184 LINE SMOOTH",
"116 183 OFFCURVE",
"103 182 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 153 OFFCURVE",
"89 153 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01227 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 599;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = hyphentwo;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = hyphen;
}
);
};
components = (
{
name = hyphen;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 233;
}
);
unicode = 2010;
},
{
glyphname = underscore;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"279 -20 LINE SMOOTH",
"289 -19.333 OFFCURVE",
"299.167 -19 OFFCURVE",
"309.5 -19 CURVE SMOOTH",
"340 -19 LINE SMOOTH",
"366 -19 OFFCURVE",
"379 -16.667 OFFCURVE",
"379 -12 CURVE SMOOTH",
"379 -10 OFFCURVE",
"370.333 -8.333 OFFCURVE",
"353 -7 CURVE SMOOTH",
"335 -5 OFFCURVE",
"319 -4 OFFCURVE",
"305 -4 CURVE SMOOTH",
"241 -2.667 OFFCURVE",
"174.667 -2 OFFCURVE",
"100 -2 CURVE SMOOTH",
"62 -2 OFFCURVE",
"40 -3 OFFCURVE",
"34 -5 CURVE SMOOTH",
"19.333 -9.667 OFFCURVE",
"12 -15 OFFCURVE",
"12 -21 CURVE SMOOTH",
"12 -24.333 OFFCURVE",
"16 -26 OFFCURVE",
"24 -26 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"279 -20 LINE SMOOTH",
"289 -19 OFFCURVE",
"299 -19 OFFCURVE",
"310 -19 CURVE SMOOTH",
"340 -19 LINE SMOOTH",
"366 -19 OFFCURVE",
"379 -17 OFFCURVE",
"379 -12 CURVE SMOOTH",
"379 -10 OFFCURVE",
"370 -8 OFFCURVE",
"353 -7 CURVE SMOOTH",
"335 -5 OFFCURVE",
"319 -4 OFFCURVE",
"305 -4 CURVE SMOOTH",
"241 -3 OFFCURVE",
"175 -2 OFFCURVE",
"100 -2 CURVE SMOOTH",
"62 -2 OFFCURVE",
"40 -3 OFFCURVE",
"34 -5 CURVE SMOOTH",
"19 -10 OFFCURVE",
"12 -15 OFFCURVE",
"12 -21 CURVE SMOOTH",
"12 -24 OFFCURVE",
"16 -26 OFFCURVE",
"24 -26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01215 1 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
layers = (
{
components = (
{
name = comma;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 147;
}
);
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2021-10-08 08:50:27 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 92, 0}";
},
{
name = comma;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 239;
}
);
unicode = 201E;
},
{
glyphname = quotedblleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"173 455 OFFCURVE",
"178.333 457.333 OFFCURVE",
"183 462 CURVE SMOOTH",
"187.667 466.667 OFFCURVE",
"190 472.333 OFFCURVE",
"190 479 CURVE SMOOTH",
"190 493.667 OFFCURVE",
"182.667 501 OFFCURVE",
"168 501 CURVE SMOOTH",
"162.667 501 OFFCURVE",
"157.667 500.333 OFFCURVE",
"151 495 CURVE",
"148.333 503 OFFCURVE",
"148 506 OFFCURVE",
"148 510 CURVE SMOOTH",
"148 525.333 OFFCURVE",
"154 540 OFFCURVE",
"166 554 CURVE SMOOTH",
"178.667 568.667 OFFCURVE",
"192 576 OFFCURVE",
"206 576 CURVE SMOOTH",
"210 575.5 LINE",
"214 575 LINE SMOOTH",
"218.667 575 OFFCURVE",
"221 577.667 OFFCURVE",
"221 583 CURVE SMOOTH",
"221 587.667 OFFCURVE",
"218.667 590.333 OFFCURVE",
"214 591 CURVE SMOOTH",
"206 591 LINE SMOOTH",
"187.333 591 OFFCURVE",
"170.667 582.333 OFFCURVE",
"156 565 CURVE SMOOTH",
"140.667 549 OFFCURVE",
"133 531.333 OFFCURVE",
"133 512 CURVE SMOOTH",
"133 472 OFFCURVE",
"144.333 455 OFFCURVE",
"167 455 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 455 OFFCURVE",
"90.333 457.333 OFFCURVE",
"95 462 CURVE SMOOTH",
"99.667 466 OFFCURVE",
"102 471.667 OFFCURVE",
"102 479 CURVE SMOOTH",
"102 493.667 OFFCURVE",
"94.667 501 OFFCURVE",
"80 501 CURVE SMOOTH",
"74.667 501 OFFCURVE",
"69.667 500.333 OFFCURVE",
"63 495 CURVE",
"61.667 499 OFFCURVE",
"61 502 OFFCURVE",
"61 504 CURVE SMOOTH",
"61 510 LINE SMOOTH",
"61 526 OFFCURVE",
"67 540.667 OFFCURVE",
"79 554 CURVE SMOOTH",
"91.667 568.667 OFFCURVE",
"104.667 576 OFFCURVE",
"118 576 CURVE SMOOTH",
"122 575.5 LINE",
"126 575 LINE SMOOTH",
"130.667 575 OFFCURVE",
"133 577.667 OFFCURVE",
"133 583 CURVE SMOOTH",
"133 587.667 OFFCURVE",
"130.667 590.333 OFFCURVE",
"126 591 CURVE SMOOTH",
"118 591 LINE SMOOTH",
"99.333 591 OFFCURVE",
"82.667 582.333 OFFCURVE",
"68 565 CURVE SMOOTH",
"52.667 547.667 OFFCURVE",
"45 530 OFFCURVE",
"45 512 CURVE SMOOTH",
"45 472 OFFCURVE",
"56.333 455 OFFCURVE",
"79 455 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"173 455 OFFCURVE",
"178 457 OFFCURVE",
"183 462 CURVE SMOOTH",
"188 467 OFFCURVE",
"190 472 OFFCURVE",
"190 479 CURVE SMOOTH",
"190 494 OFFCURVE",
"183 501 OFFCURVE",
"168 501 CURVE SMOOTH",
"163 501 OFFCURVE",
"158 500 OFFCURVE",
"151 495 CURVE",
"148 503 OFFCURVE",
"148 506 OFFCURVE",
"148 510 CURVE SMOOTH",
"148 525 OFFCURVE",
"154 540 OFFCURVE",
"166 554 CURVE SMOOTH",
"179 569 OFFCURVE",
"192 576 OFFCURVE",
"206 576 CURVE SMOOTH",
"214 575 LINE SMOOTH",
"219 575 OFFCURVE",
"221 578 OFFCURVE",
"221 583 CURVE SMOOTH",
"221 588 OFFCURVE",
"219 590 OFFCURVE",
"214 591 CURVE",
"206 591 LINE SMOOTH",
"187 591 OFFCURVE",
"171 582 OFFCURVE",
"156 565 CURVE SMOOTH",
"141 549 OFFCURVE",
"133 531 OFFCURVE",
"133 512 CURVE SMOOTH",
"133 472 OFFCURVE",
"144 455 OFFCURVE",
"167 455 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 455 OFFCURVE",
"90 457 OFFCURVE",
"95 462 CURVE SMOOTH",
"100 466 OFFCURVE",
"102 472 OFFCURVE",
"102 479 CURVE SMOOTH",
"102 494 OFFCURVE",
"95 501 OFFCURVE",
"80 501 CURVE SMOOTH",
"75 501 OFFCURVE",
"70 500 OFFCURVE",
"63 495 CURVE",
"62 499 OFFCURVE",
"61 502 OFFCURVE",
"61 504 CURVE SMOOTH",
"61 510 LINE SMOOTH",
"61 526 OFFCURVE",
"67 541 OFFCURVE",
"79 554 CURVE SMOOTH",
"92 569 OFFCURVE",
"105 576 OFFCURVE",
"118 576 CURVE SMOOTH",
"126 575 LINE SMOOTH",
"131 575 OFFCURVE",
"133 578 OFFCURVE",
"133 583 CURVE SMOOTH",
"133 588 OFFCURVE",
"131 590 OFFCURVE",
"126 591 CURVE",
"118 591 LINE SMOOTH",
"99 591 OFFCURVE",
"83 582 OFFCURVE",
"68 565 CURVE SMOOTH",
"53 548 OFFCURVE",
"45 530 OFFCURVE",
"45 512 CURVE SMOOTH",
"45 472 OFFCURVE",
"56 455 OFFCURVE",
"79 455 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 24 170 24 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 40 165 40 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01215 21 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 1 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01212 21 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01243 21 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 235;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"157 454 OFFCURVE",
"173.667 462.667 OFFCURVE",
"189 480 CURVE SMOOTH",
"204.333 498.667 OFFCURVE",
"212 516.667 OFFCURVE",
"212 534 CURVE SMOOTH",
"212 574 OFFCURVE",
"200.667 591 OFFCURVE",
"178 591 CURVE SMOOTH",
"172 591 OFFCURVE",
"166.667 588.667 OFFCURVE",
"162 584 CURVE SMOOTH",
"157.333 579.333 OFFCURVE",
"155 573.333 OFFCURVE",
"155 566 CURVE SMOOTH",
"155 552 OFFCURVE",
"162.333 545 OFFCURVE",
"177 545 CURVE SMOOTH",
"182.333 545 OFFCURVE",
"188 546.667 OFFCURVE",
"194 550 CURVE",
"195.333 546.667 OFFCURVE",
"196 543.833 OFFCURVE",
"196 541.5 CURVE SMOOTH",
"196 536 LINE SMOOTH",
"196 520 OFFCURVE",
"190 505 OFFCURVE",
"178 491 CURVE SMOOTH",
"166 477 OFFCURVE",
"153 470 OFFCURVE",
"139 470 CURVE SMOOTH",
"131 470 LINE SMOOTH",
"126.333 470 OFFCURVE",
"124 467.333 OFFCURVE",
"124 462 CURVE SMOOTH",
"124 457.333 OFFCURVE",
"126 455 OFFCURVE",
"130 455 CURVE",
"132 454.333 OFFCURVE",
"135 454 OFFCURVE",
"139 454 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 454 OFFCURVE",
"85.667 462.667 OFFCURVE",
"101 480 CURVE SMOOTH",
"116.333 497.333 OFFCURVE",
"124 515.333 OFFCURVE",
"124 534 CURVE SMOOTH",
"124 574 OFFCURVE",
"112.667 591 OFFCURVE",
"90 591 CURVE SMOOTH",
"84 591 OFFCURVE",
"78.667 588.667 OFFCURVE",
"74 584 CURVE SMOOTH",
"69.333 578 OFFCURVE",
"67 572 OFFCURVE",
"67 566 CURVE SMOOTH",
"67 552 OFFCURVE",
"74.333 545 OFFCURVE",
"89 545 CURVE SMOOTH",
"94.333 545 OFFCURVE",
"100 546.667 OFFCURVE",
"106 550 CURVE",
"108 542.667 OFFCURVE",
"109 538 OFFCURVE",
"109 536 CURVE SMOOTH",
"109 521.333 OFFCURVE",
"103 506.333 OFFCURVE",
"91 491 CURVE SMOOTH",
"79 477 OFFCURVE",
"65.667 470 OFFCURVE",
"51 470 CURVE SMOOTH",
"43 470 LINE SMOOTH",
"38.333 470 OFFCURVE",
"36 467.333 OFFCURVE",
"36 462 CURVE SMOOTH",
"36 457.333 OFFCURVE",
"38.333 455 OFFCURVE",
"43 455 CURVE",
"44.333 454.333 OFFCURVE",
"47 454 OFFCURVE",
"51 454 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"157 454 OFFCURVE",
"174 463 OFFCURVE",
"189 480 CURVE SMOOTH",
"204 499 OFFCURVE",
"212 517 OFFCURVE",
"212 534 CURVE SMOOTH",
"212 574 OFFCURVE",
"201 591 OFFCURVE",
"178 591 CURVE SMOOTH",
"172 591 OFFCURVE",
"167 589 OFFCURVE",
"162 584 CURVE SMOOTH",
"157 579 OFFCURVE",
"155 573 OFFCURVE",
"155 566 CURVE SMOOTH",
"155 552 OFFCURVE",
"162 545 OFFCURVE",
"177 545 CURVE SMOOTH",
"182 545 OFFCURVE",
"188 547 OFFCURVE",
"194 550 CURVE",
"195 547 OFFCURVE",
"196 544 OFFCURVE",
"196 542 CURVE SMOOTH",
"196 536 LINE SMOOTH",
"196 520 OFFCURVE",
"190 505 OFFCURVE",
"178 491 CURVE SMOOTH",
"166 477 OFFCURVE",
"153 470 OFFCURVE",
"139 470 CURVE SMOOTH",
"131 470 LINE SMOOTH",
"126 470 OFFCURVE",
"124 467 OFFCURVE",
"124 462 CURVE SMOOTH",
"124 457 OFFCURVE",
"126 455 OFFCURVE",
"130 455 CURVE",
"132 454 OFFCURVE",
"135 454 OFFCURVE",
"139 454 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 454 OFFCURVE",
"86 463 OFFCURVE",
"101 480 CURVE SMOOTH",
"116 497 OFFCURVE",
"124 515 OFFCURVE",
"124 534 CURVE SMOOTH",
"124 574 OFFCURVE",
"113 591 OFFCURVE",
"90 591 CURVE SMOOTH",
"84 591 OFFCURVE",
"79 589 OFFCURVE",
"74 584 CURVE SMOOTH",
"69 578 OFFCURVE",
"67 572 OFFCURVE",
"67 566 CURVE SMOOTH",
"67 552 OFFCURVE",
"74 545 OFFCURVE",
"89 545 CURVE SMOOTH",
"94 545 OFFCURVE",
"100 547 OFFCURVE",
"106 550 CURVE",
"108 543 OFFCURVE",
"109 538 OFFCURVE",
"109 536 CURVE SMOOTH",
"109 521 OFFCURVE",
"103 506 OFFCURVE",
"91 491 CURVE SMOOTH",
"79 477 OFFCURVE",
"66 470 OFFCURVE",
"51 470 CURVE SMOOTH",
"43 470 LINE SMOOTH",
"38 470 OFFCURVE",
"36 467 OFFCURVE",
"36 462 CURVE SMOOTH",
"36 457 OFFCURVE",
"38 455 OFFCURVE",
"43 455 CURVE",
"44 454 OFFCURVE",
"47 454 OFFCURVE",
"51 454 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 15 170 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01229 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 29 165 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 20 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01218 20 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 235;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"113 413 LINE SMOOTH",
"94 413 OFFCURVE",
"77 404 OFFCURVE",
"63 387 CURVE SMOOTH",
"47 370 OFFCURVE",
"40 352 OFFCURVE",
"40 333 CURVE SMOOTH",
"40 295 OFFCURVE",
"51 276 OFFCURVE",
"74 276 CURVE SMOOTH",
"78 276 OFFCURVE",
"84 278 OFFCURVE",
"90 283 CURVE",
"94 289 OFFCURVE",
"97 295 OFFCURVE",
"97 301 CURVE SMOOTH",
"97 316 OFFCURVE",
"89 323 OFFCURVE",
"75 323 CURVE SMOOTH",
"71 323 OFFCURVE",
"65 321 OFFCURVE",
"58 317 CURVE",
"56 324 OFFCURVE",
"55 329 OFFCURVE",
"55 332 CURVE SMOOTH",
"55 346 OFFCURVE",
"61 361 OFFCURVE",
"73 376 CURVE SMOOTH",
"85 391 OFFCURVE",
"99 398 OFFCURVE",
"113 398 CURVE SMOOTH",
"114 398 OFFCURVE",
"115 398 OFFCURVE",
"117 397 CURVE",
"121 397 LINE SMOOTH",
"125 397 OFFCURVE",
"128 400 OFFCURVE",
"128 405 CURVE SMOOTH",
"128 410 OFFCURVE",
"125 412 OFFCURVE",
"121 413 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"78 276 OFFCURVE",
"84 278 OFFCURVE",
"90 283 CURVE",
"94 289 OFFCURVE",
"97 295 OFFCURVE",
"97 301 CURVE SMOOTH",
"97 316 OFFCURVE",
"89 323 OFFCURVE",
"75 323 CURVE SMOOTH",
"71 323 OFFCURVE",
"65 321 OFFCURVE",
"58 317 CURVE",
"56 324 OFFCURVE",
"55 329 OFFCURVE",
"55 332 CURVE SMOOTH",
"55 346 OFFCURVE",
"61 361 OFFCURVE",
"73 376 CURVE SMOOTH",
"85 391 OFFCURVE",
"99 398 OFFCURVE",
"113 398 CURVE SMOOTH",
"114 398 OFFCURVE",
"115 398 OFFCURVE",
"117 397 CURVE",
"121 397 LINE SMOOTH",
"125 397 OFFCURVE",
"128 400 OFFCURVE",
"128 405 CURVE SMOOTH",
"128 410 OFFCURVE",
"125 412 OFFCURVE",
"121 413 CURVE",
"113 413 LINE SMOOTH",
"94 413 OFFCURVE",
"77 404 OFFCURVE",
"63 387 CURVE SMOOTH",
"47 370 OFFCURVE",
"40 352 OFFCURVE",
"40 333 CURVE SMOOTH",
"40 295 OFFCURVE",
"51 276 OFFCURVE",
"74 276 CURVE SMOOTH"
);
}
);
width = 168;
}
);
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"51 290 CURVE SMOOTH",
"97 290 OFFCURVE",
"125 344 OFFCURVE",
"125 384 CURVE SMOOTH",
"125 408 OFFCURVE",
"115 427 OFFCURVE",
"93 427 CURVE SMOOTH",
"75 427 OFFCURVE",
"66 414 OFFCURVE",
"66 401 CURVE SMOOTH",
"66 390 OFFCURVE",
"73 380 OFFCURVE",
"89 380 CURVE SMOOTH",
"93 380 OFFCURVE",
"99 382 OFFCURVE",
"106 386 CURVE",
"107 381 OFFCURVE",
"108 376 OFFCURVE",
"108 372 CURVE SMOOTH",
"108 338 OFFCURVE",
"80 303 OFFCURVE",
"51 303 CURVE SMOOTH",
"44 303 OFFCURVE",
"38 301 OFFCURVE",
"38 297 CURVE SMOOTH",
"38 293 OFFCURVE",
"39 290 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"97 290 OFFCURVE",
"125 344 OFFCURVE",
"125 384 CURVE SMOOTH",
"125 408 OFFCURVE",
"115 427 OFFCURVE",
"93 427 CURVE SMOOTH",
"75 427 OFFCURVE",
"66 414 OFFCURVE",
"66 401 CURVE SMOOTH",
"66 390 OFFCURVE",
"73 380 OFFCURVE",
"89 380 CURVE SMOOTH",
"93 380 OFFCURVE",
"99 382 OFFCURVE",
"106 386 CURVE",
"107 381 OFFCURVE",
"108 376 OFFCURVE",
"108 372 CURVE SMOOTH",
"108 338 OFFCURVE",
"80 303 OFFCURVE",
"51 303 CURVE SMOOTH",
"44 303 OFFCURVE",
"38 301 OFFCURVE",
"38 297 CURVE SMOOTH",
"38 293 OFFCURVE",
"39 290 OFFCURVE",
"51 290 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01216 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 16 170 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0129 1 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 20 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 147;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemotleft;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"302 37 OFFCURVE",
"305 38 OFFCURVE",
"305 41 CURVE SMOOTH",
"305 44 OFFCURVE",
"301 51 OFFCURVE",
"292 60 CURVE SMOOTH",
"282.667 68 OFFCURVE",
"260.333 94.667 OFFCURVE",
"239 120 CURVE SMOOTH",
"227 134.667 OFFCURVE",
"213.667 150.333 OFFCURVE",
"199 167 CURVE",
"238 210 LINE",
"268 243 LINE",
"289 266 LINE SMOOTH",
"297 274 OFFCURVE",
"301 280 OFFCURVE",
"301 283 CURVE SMOOTH",
"301 284 OFFCURVE",
"300 284 OFFCURVE",
"300 284.5 CURVE SMOOTH",
"298 286.833 OFFCURVE",
"295.667 287.333 OFFCURVE",
"293 286 CURVE SMOOTH",
"266.252 271.14 OFFCURVE",
"198.613 205.613 OFFCURVE",
"175 182 CURVE SMOOTH",
"168 175 OFFCURVE",
"165 169 OFFCURVE",
"165 162 CURVE SMOOTH",
"165 158 OFFCURVE",
"166 154 OFFCURVE",
"170 150 CURVE SMOOTH",
"191.194 128.806 OFFCURVE",
"269.554 51.754 OFFCURVE",
"296 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183.333 64 OFFCURVE",
"176.167 71.833 OFFCURVE",
"166.5 83.5 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 134.667 OFFCURVE",
"110.667 150.333 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"164 243 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 284.5 CURVE SMOOTH",
"194 286.833 OFFCURVE",
"191.667 287.333 OFFCURVE",
"189 286 CURVE SMOOTH",
"164.23 272.239 OFFCURVE",
"94.294 205.294 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85.467 130.533 OFFCURVE",
"169.51 49.996 OFFCURVE",
"192 40 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"302 37 OFFCURVE",
"305 38 OFFCURVE",
"305 41 CURVE SMOOTH",
"305 44 OFFCURVE",
"301 51 OFFCURVE",
"292 60 CURVE SMOOTH",
"283 68 OFFCURVE",
"260 95 OFFCURVE",
"239 120 CURVE SMOOTH",
"227 135 OFFCURVE",
"214 150 OFFCURVE",
"199 167 CURVE",
"289 266 LINE SMOOTH",
"297 274 OFFCURVE",
"301 280 OFFCURVE",
"301 283 CURVE SMOOTH",
"301 284 OFFCURVE",
"300 284 OFFCURVE",
"300 285 CURVE",
"298 287 OFFCURVE",
"296 287 OFFCURVE",
"293 286 CURVE",
"266 271 OFFCURVE",
"199 206 OFFCURVE",
"175 182 CURVE SMOOTH",
"168 175 OFFCURVE",
"165 169 OFFCURVE",
"165 162 CURVE SMOOTH",
"165 158 OFFCURVE",
"166 154 OFFCURVE",
"170 150 CURVE SMOOTH",
"191 129 OFFCURVE",
"270 52 OFFCURVE",
"296 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183 64 OFFCURVE",
"176 72 OFFCURVE",
"167 84 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 135 OFFCURVE",
"111 150 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 285 CURVE",
"194 287 OFFCURVE",
"192 287 OFFCURVE",
"189 286 CURVE",
"164 272 OFFCURVE",
"94 205 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85 131 OFFCURVE",
"170 50 OFFCURVE",
"192 40 CURVE SMOOTH"
);
}
);
width = 324;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"198.402 49.068 OFFCURVE",
"277.508 125.508 OFFCURVE",
"296 144 CURVE SMOOTH",
"302 150 OFFCURVE",
"306 157 OFFCURVE",
"306 163 CURVE SMOOTH",
"306 168 OFFCURVE",
"305 172 OFFCURVE",
"301 176 CURVE SMOOTH",
"277.535 199.465 OFFCURVE",
"200.808 271.662 OFFCURVE",
"175 286 CURVE SMOOTH",
"169 289 OFFCURVE",
"166 288 OFFCURVE",
"166 285 CURVE SMOOTH",
"166 282 OFFCURVE",
"170 275 OFFCURVE",
"179 266 CURVE SMOOTH",
"200 242 LINE",
"231 206 LINE SMOOTH",
"243 191.333 OFFCURVE",
"256.333 175.667 OFFCURVE",
"271 159 CURVE",
"232 116 LINE",
"202.5 82.5 LINE",
"182 60 LINE SMOOTH",
"174 52 OFFCURVE",
"170 46 OFFCURVE",
"170 43 CURVE SMOOTH",
"170 42 OFFCURVE",
"171 42 OFFCURVE",
"171 41.5 CURVE SMOOTH",
"173 39.167 OFFCURVE",
"175.333 38.667 OFFCURVE",
"178 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89.402 49.068 OFFCURVE",
"168.508 125.508 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"168.535 199.465 OFFCURVE",
"91.808 271.662 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191.333 OFFCURVE",
"147.333 175.667 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"93.5 82.5 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 41.5 CURVE SMOOTH",
"64 39.167 OFFCURVE",
"66.333 38.667 OFFCURVE",
"69 40 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"198 49 OFFCURVE",
"278 126 OFFCURVE",
"296 144 CURVE SMOOTH",
"302 150 OFFCURVE",
"306 157 OFFCURVE",
"306 163 CURVE SMOOTH",
"306 168 OFFCURVE",
"305 172 OFFCURVE",
"301 176 CURVE SMOOTH",
"278 199 OFFCURVE",
"201 272 OFFCURVE",
"175 286 CURVE SMOOTH",
"169 289 OFFCURVE",
"166 288 OFFCURVE",
"166 285 CURVE SMOOTH",
"166 282 OFFCURVE",
"170 275 OFFCURVE",
"179 266 CURVE SMOOTH",
"200 242 LINE",
"231 206 LINE SMOOTH",
"243 191 OFFCURVE",
"256 176 OFFCURVE",
"271 159 CURVE",
"232 116 LINE",
"203 83 LINE",
"182 60 LINE SMOOTH",
"174 52 OFFCURVE",
"170 46 OFFCURVE",
"170 43 CURVE SMOOTH",
"170 42 OFFCURVE",
"171 42 OFFCURVE",
"171 42 CURVE",
"173 39 OFFCURVE",
"175 39 OFFCURVE",
"178 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89 49 OFFCURVE",
"169 126 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"169 199 OFFCURVE",
"92 272 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191 OFFCURVE",
"147 176 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"94 83 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 42 CURVE",
"64 39 OFFCURVE",
"66 39 OFFCURVE",
"69 40 CURVE SMOOTH"
);
}
);
width = 329;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = less;
}
);
};
components = (
{
name = less;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 233;
}
);
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = greater;
}
);
};
components = (
{
name = greater;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 233;
}
);
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"72 409 OFFCURVE",
"74 411.333 OFFCURVE",
"74 416 CURVE",
"77 434.5 LINE",
"83 474 LINE SMOOTH",
"85.667 496.667 OFFCURVE",
"88 517 OFFCURVE",
"88 533 CURVE SMOOTH",
"88 539.667 OFFCURVE",
"85 543 OFFCURVE",
"73 543 CURVE SMOOTH",
"65.667 543 OFFCURVE",
"62 540.667 OFFCURVE",
"62 536 CURVE SMOOTH",
"60 502 OFFCURVE",
"59 474 OFFCURVE",
"59 450 CURVE SMOOTH",
"59 439 OFFCURVE",
"60 428 OFFCURVE",
"60 418 CURVE SMOOTH",
"60 412 OFFCURVE",
"62.667 409 OFFCURVE",
"68 409 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"138 409 OFFCURVE",
"140.333 411.333 OFFCURVE",
"141 416 CURVE SMOOTH",
"143 434.5 LINE",
"149 474 LINE SMOOTH",
"151.667 496.667 OFFCURVE",
"154 517 OFFCURVE",
"154 533 CURVE",
"155.333 539.667 OFFCURVE",
"150.333 543 OFFCURVE",
"139 543 CURVE SMOOTH",
"131.667 543 OFFCURVE",
"128 540.667 OFFCURVE",
"128 536 CURVE SMOOTH",
"126.667 510.667 OFFCURVE",
"126 488.333 OFFCURVE",
"126 469 CURVE SMOOTH",
"126 418 LINE SMOOTH",
"126 412 OFFCURVE",
"128.667 409 OFFCURVE",
"134 409 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"72 409 OFFCURVE",
"74 411 OFFCURVE",
"74 416 CURVE",
"77 435 LINE",
"83 474 LINE SMOOTH",
"86 497 OFFCURVE",
"88 517 OFFCURVE",
"88 533 CURVE SMOOTH",
"88 540 OFFCURVE",
"85 543 OFFCURVE",
"73 543 CURVE SMOOTH",
"66 543 OFFCURVE",
"62 541 OFFCURVE",
"62 536 CURVE SMOOTH",
"60 502 OFFCURVE",
"59 474 OFFCURVE",
"59 450 CURVE SMOOTH",
"59 439 OFFCURVE",
"60 428 OFFCURVE",
"60 418 CURVE SMOOTH",
"60 412 OFFCURVE",
"63 409 OFFCURVE",
"68 409 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"138 409 OFFCURVE",
"140 411 OFFCURVE",
"141 416 CURVE SMOOTH",
"143 435 LINE",
"149 474 LINE SMOOTH",
"152 497 OFFCURVE",
"154 517 OFFCURVE",
"154 533 CURVE",
"155 540 OFFCURVE",
"150 543 OFFCURVE",
"139 543 CURVE SMOOTH",
"132 543 OFFCURVE",
"128 541 OFFCURVE",
"128 536 CURVE SMOOTH",
"127 511 OFFCURVE",
"126 488 OFFCURVE",
"126 469 CURVE SMOOTH",
"126 418 LINE SMOOTH",
"126 412 OFFCURVE",
"129 409 OFFCURVE",
"134 409 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 13 170 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01217 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 17 165 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01215 8 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 198;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"78 398 OFFCURVE",
"80 400.333 OFFCURVE",
"80 405 CURVE",
"83 423.5 LINE",
"88 463 LINE SMOOTH",
"92 485.667 OFFCURVE",
"94 505.333 OFFCURVE",
"94 522 CURVE SMOOTH",
"94 528.667 OFFCURVE",
"91 532 OFFCURVE",
"79 532 CURVE SMOOTH",
"69.667 532 OFFCURVE",
"68.333 529 OFFCURVE",
"67 525 CURVE",
"65.667 474.333 OFFCURVE",
"65 436.333 OFFCURVE",
"65 407 CURVE SMOOTH",
"65 401 OFFCURVE",
"68 398 OFFCURVE",
"74 398 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"78 398 OFFCURVE",
"80 400 OFFCURVE",
"80 405 CURVE",
"83 424 LINE",
"88 463 LINE SMOOTH",
"92 486 OFFCURVE",
"94 505 OFFCURVE",
"94 522 CURVE SMOOTH",
"94 529 OFFCURVE",
"91 532 OFFCURVE",
"79 532 CURVE SMOOTH",
"70 532 OFFCURVE",
"68 529 OFFCURVE",
"67 525 CURVE",
"66 474 OFFCURVE",
"65 436 OFFCURVE",
"65 407 CURVE SMOOTH",
"65 401 OFFCURVE",
"68 398 OFFCURVE",
"74 398 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 7 233 7 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 7 24 7 40 7 56 7 72 7 88 7 104 7 120 7 136 7 152 7 168 7 184 7 200 7 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 147;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"168 -18 OFFCURVE",
"171 -17 OFFCURVE",
"171 -11 CURVE SMOOTH",
"171 -4 OFFCURVE",
"167 9 OFFCURVE",
"160 25 CURVE",
"155 32 OFFCURVE",
"149 47 OFFCURVE",
"142 70 CURVE",
"115 137 LINE SMOOTH",
"105 165 OFFCURVE",
"94 193 OFFCURVE",
"81 225 CURVE",
"113 306 LINE SMOOTH",
"122 327 OFFCURVE",
"131 347 OFFCURVE",
"139 368 CURVE SMOOTH",
"157 411 LINE SMOOTH",
"165 430 OFFCURVE",
"168 441 OFFCURVE",
"167 447 CURVE",
"165 450 OFFCURVE",
"163 450 OFFCURVE",
"161 448 CURVE SMOOTH",
"139 422 OFFCURVE",
"79 297 OFFCURVE",
"59 253 CURVE SMOOTH",
"54 241 OFFCURVE",
"50 229 OFFCURVE",
"50 217 CURVE SMOOTH",
"50 209 OFFCURVE",
"52 201 OFFCURVE",
"55 193 CURVE SMOOTH",
"71 158 OFFCURVE",
"144 6 OFFCURVE",
"163 -13 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"168 -18 OFFCURVE",
"171 -17 OFFCURVE",
"171 -11 CURVE SMOOTH",
"171 -4 OFFCURVE",
"167 9 OFFCURVE",
"160 25 CURVE",
"155 32 OFFCURVE",
"149 47 OFFCURVE",
"142 70 CURVE",
"115 137 LINE SMOOTH",
"105 165 OFFCURVE",
"94 193 OFFCURVE",
"81 225 CURVE",
"113 306 LINE SMOOTH",
"122 327 OFFCURVE",
"131 347 OFFCURVE",
"139 368 CURVE SMOOTH",
"157 411 LINE SMOOTH",
"165 430 OFFCURVE",
"168 441 OFFCURVE",
"167 447 CURVE",
"165 450 OFFCURVE",
"163 450 OFFCURVE",
"161 448 CURVE SMOOTH",
"139 422 OFFCURVE",
"79 297 OFFCURVE",
"59 253 CURVE SMOOTH",
"54 241 OFFCURVE",
"50 229 OFFCURVE",
"50 217 CURVE SMOOTH",
"50 209 OFFCURVE",
"52 201 OFFCURVE",
"55 193 CURVE SMOOTH",
"71 158 OFFCURVE",
"144 6 OFFCURVE",
"163 -13 CURVE SMOOTH"
);
}
);
width = 221;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"77 6 OFFCURVE",
"150 158 OFFCURVE",
"166 193 CURVE SMOOTH",
"169 201 OFFCURVE",
"171 209 OFFCURVE",
"171 217 CURVE SMOOTH",
"171 229 OFFCURVE",
"167 241 OFFCURVE",
"162 253 CURVE SMOOTH",
"142 297 OFFCURVE",
"82 422 OFFCURVE",
"60 448 CURVE SMOOTH",
"58 450 OFFCURVE",
"56 450 OFFCURVE",
"54 447 CURVE",
"53 441 OFFCURVE",
"56 430 OFFCURVE",
"64 411 CURVE SMOOTH",
"82 368 LINE SMOOTH",
"90 347 OFFCURVE",
"99 327 OFFCURVE",
"108 306 CURVE SMOOTH",
"140 225 LINE",
"127 193 OFFCURVE",
"116 165 OFFCURVE",
"106 137 CURVE SMOOTH",
"79 70 LINE",
"72 47 OFFCURVE",
"66 32 OFFCURVE",
"61 25 CURVE",
"54 9 OFFCURVE",
"50 -4 OFFCURVE",
"50 -11 CURVE SMOOTH",
"50 -17 OFFCURVE",
"53 -18 OFFCURVE",
"58 -13 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"77 6 OFFCURVE",
"150 158 OFFCURVE",
"166 193 CURVE SMOOTH",
"169 201 OFFCURVE",
"171 209 OFFCURVE",
"171 217 CURVE SMOOTH",
"171 229 OFFCURVE",
"167 241 OFFCURVE",
"162 253 CURVE SMOOTH",
"142 297 OFFCURVE",
"82 422 OFFCURVE",
"60 448 CURVE SMOOTH",
"58 450 OFFCURVE",
"56 450 OFFCURVE",
"54 447 CURVE",
"53 441 OFFCURVE",
"56 430 OFFCURVE",
"64 411 CURVE SMOOTH",
"82 368 LINE SMOOTH",
"90 347 OFFCURVE",
"99 327 OFFCURVE",
"108 306 CURVE SMOOTH",
"140 225 LINE",
"127 193 OFFCURVE",
"116 165 OFFCURVE",
"106 137 CURVE SMOOTH",
"79 70 LINE",
"72 47 OFFCURVE",
"66 32 OFFCURVE",
"61 25 CURVE",
"54 9 OFFCURVE",
"50 -4 OFFCURVE",
"50 -11 CURVE SMOOTH",
"50 -17 OFFCURVE",
"53 -18 OFFCURVE",
"58 -13 CURVE SMOOTH"
);
}
);
width = 221;
}
);
unicode = 27E9;
},
{
glyphname = nonbreakingspace;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = Euro;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"339 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE SMOOTH",
"449 135 OFFCURVE",
"446 140 OFFCURVE",
"441 140 CURVE SMOOTH",
"438 140 OFFCURVE",
"433 136 OFFCURVE",
"431 128 CURVE SMOOTH",
"415 67 OFFCURVE",
"327.715 14.91 OFFCURVE",
"259 20 CURVE SMOOTH",
"176.324 25.512 OFFCURVE",
"109 101.412 OFFCURVE",
"109 194 CURVE",
"131.517 195.407 OFFCURVE",
"239.296 197 OFFCURVE",
"279 197 CURVE SMOOTH",
"293.667 197 OFFCURVE",
"304 195 OFFCURVE",
"311 195 CURVE SMOOTH",
"314 195 LINE SMOOTH",
"320 195 OFFCURVE",
"323 197.667 OFFCURVE",
"323 203 CURVE SMOOTH",
"323 207 OFFCURVE",
"320.667 209.333 OFFCURVE",
"316 210 CURVE SMOOTH",
"299.905 214.024 OFFCURVE",
"190.636 216 OFFCURVE",
"148 216 CURVE SMOOTH",
"128.5 216 LINE SMOOTH",
"122.167 216 OFFCURVE",
"116.333 215.667 OFFCURVE",
"111 215 CURVE",
"112.333 231 OFFCURVE",
"113 247 OFFCURVE",
"118 259 CURVE SMOOTH",
"120 264 LINE",
"142.605 265.256 OFFCURVE",
"265.437 268 OFFCURVE",
"310 268 CURVE SMOOTH",
"326 268 OFFCURVE",
"336.667 267.333 OFFCURVE",
"342 266 CURVE",
"345 266 LINE SMOOTH",
"351.667 266 OFFCURVE",
"355 268.667 OFFCURVE",
"355 274 CURVE SMOOTH",
"355 278 OFFCURVE",
"352.667 280.333 OFFCURVE",
"348 281 CURVE SMOOTH",
"330.775 285.306 OFFCURVE",
"222 288 OFFCURVE",
"179 287 CURVE SMOOTH",
"151.5 286.5 LINE",
"127 286 LINE",
"142 339 OFFCURVE",
"170 369 OFFCURVE",
"204 393 CURVE SMOOTH",
"233 411 OFFCURVE",
"275 422 OFFCURVE",
"314 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"396 409 OFFCURVE",
"414 375 CURVE SMOOTH",
"416 371 OFFCURVE",
"419 369 OFFCURVE",
"422 369 CURVE SMOOTH",
"426 369 OFFCURVE",
"428 373 OFFCURVE",
"428 378 CURVE SMOOTH",
"428 380 OFFCURVE",
"428 382 OFFCURVE",
"427 383 CURVE SMOOTH",
"407 425 OFFCURVE",
"359 442 OFFCURVE",
"308 442 CURVE SMOOTH",
"267 442 OFFCURVE",
"225 431 OFFCURVE",
"194 414 CURVE SMOOTH",
"149 389 OFFCURVE",
"102 339 OFFCURVE",
"83 283 CURVE",
"68 283 OFFCURVE",
"60 282 OFFCURVE",
"53 281 CURVE SMOOTH",
"44 280 OFFCURVE",
"38 276 OFFCURVE",
"38 264 CURVE SMOOTH",
"38 260 OFFCURVE",
"40 258 OFFCURVE",
"44 258 CURVE SMOOTH",
"60 260 LINE",
"76 261 LINE",
"73 252 OFFCURVE",
"72 244 OFFCURVE",
"71 237 CURVE SMOOTH",
"67 213 LINE",
"22 210 LINE SMOOTH",
"12 209 OFFCURVE",
"7 204 OFFCURVE",
"7 193 CURVE SMOOTH",
"7 189 OFFCURVE",
"9 187 OFFCURVE",
"13 187 CURVE SMOOTH",
"22 188 OFFCURVE",
"30 190 OFFCURVE",
"39 190 CURVE SMOOTH",
"66 191 LINE",
"66 82 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"339 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE",
"449 135 OFFCURVE",
"446 140 OFFCURVE",
"441 140 CURVE SMOOTH",
"438 140 OFFCURVE",
"433 136 OFFCURVE",
"431 128 CURVE SMOOTH",
"416 70 OFFCURVE",
"335 20 OFFCURVE",
"268 20 CURVE SMOOTH",
"181 20 OFFCURVE",
"109 98 OFFCURVE",
"109 194 CURVE",
"132 195 OFFCURVE",
"239 197 OFFCURVE",
"279 197 CURVE SMOOTH",
"294 197 OFFCURVE",
"304 195 OFFCURVE",
"311 195 CURVE SMOOTH",
"314 195 LINE SMOOTH",
"320 195 OFFCURVE",
"323 198 OFFCURVE",
"323 203 CURVE SMOOTH",
"323 207 OFFCURVE",
"321 209 OFFCURVE",
"316 210 CURVE SMOOTH",
"300 214 OFFCURVE",
"191 216 OFFCURVE",
"148 216 CURVE SMOOTH",
"129 216 LINE SMOOTH",
"122 216 OFFCURVE",
"116 216 OFFCURVE",
"111 215 CURVE",
"112 231 OFFCURVE",
"113 247 OFFCURVE",
"118 259 CURVE SMOOTH",
"120 264 LINE",
"143 265 OFFCURVE",
"265 268 OFFCURVE",
"310 268 CURVE SMOOTH",
"326 268 OFFCURVE",
"337 267 OFFCURVE",
"342 266 CURVE SMOOTH",
"345 266 LINE SMOOTH",
"352 266 OFFCURVE",
"355 269 OFFCURVE",
"355 274 CURVE SMOOTH",
"355 278 OFFCURVE",
"353 280 OFFCURVE",
"348 281 CURVE SMOOTH",
"331 285 OFFCURVE",
"222 288 OFFCURVE",
"179 287 CURVE SMOOTH",
"127 286 LINE",
"142 339 OFFCURVE",
"170 369 OFFCURVE",
"204 393 CURVE SMOOTH",
"233 411 OFFCURVE",
"275 422 OFFCURVE",
"314 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"396 409 OFFCURVE",
"414 375 CURVE SMOOTH",
"416 371 OFFCURVE",
"419 369 OFFCURVE",
"422 369 CURVE SMOOTH",
"426 369 OFFCURVE",
"428 373 OFFCURVE",
"428 378 CURVE SMOOTH",
"428 380 OFFCURVE",
"428 382 OFFCURVE",
"427 383 CURVE",
"407 425 OFFCURVE",
"359 442 OFFCURVE",
"308 442 CURVE SMOOTH",
"267 442 OFFCURVE",
"225 431 OFFCURVE",
"194 414 CURVE SMOOTH",
"149 389 OFFCURVE",
"102 339 OFFCURVE",
"83 283 CURVE",
"68 283 OFFCURVE",
"60 282 OFFCURVE",
"53 281 CURVE SMOOTH",
"44 280 OFFCURVE",
"38 276 OFFCURVE",
"38 264 CURVE SMOOTH",
"38 260 OFFCURVE",
"40 258 OFFCURVE",
"44 258 CURVE SMOOTH",
"60 260 LINE",
"76 261 LINE",
"73 252 OFFCURVE",
"72 244 OFFCURVE",
"71 237 CURVE SMOOTH",
"67 213 LINE",
"22 210 LINE SMOOTH",
"12 209 OFFCURVE",
"7 204 OFFCURVE",
"7 193 CURVE SMOOTH",
"7 189 OFFCURVE",
"9 187 OFFCURVE",
"13 187 CURVE SMOOTH",
"22 188 OFFCURVE",
"30 190 OFFCURVE",
"39 190 CURVE SMOOTH",
"66 191 LINE",
"66 82 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01276 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01279 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01298 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01298 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012101 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012106 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01238 2 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 2 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 216 2 232 2 248 2 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 451;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = cedi;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"339 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE SMOOTH",
"450 144 OFFCURVE",
"435 144 OFFCURVE",
"431 128 CURVE SMOOTH",
"415 67 OFFCURVE",
"339 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101.412 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"426 351 OFFCURVE",
"439 358 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"212 -68 OFFCURVE",
"216 -69 OFFCURVE",
"220 -65 CURVE SMOOTH",
"224 -63 OFFCURVE",
"227 -59 OFFCURVE",
"228 -52 CURVE SMOOTH",
"229 -48 LINE",
"232 -25 LINE SMOOTH",
"248 76 OFFCURVE",
"263 166 OFFCURVE",
"279 244 CURVE SMOOTH",
"285 273 OFFCURVE",
"297 313 OFFCURVE",
"314 364 CURVE SMOOTH",
"332 416 OFFCURVE",
"343 454 OFFCURVE",
"350 484 CURVE SMOOTH",
"351 491 OFFCURVE",
"348 498 OFFCURVE",
"340 507 CURVE SMOOTH",
"336 512 OFFCURVE",
"331 513 OFFCURVE",
"323 511 CURVE",
"318 507 OFFCURVE",
"313 487 OFFCURVE",
"306 454 CURVE SMOOTH",
"300 428 LINE",
"293 387 LINE",
"285 347 LINE",
"279 318 LINE",
"243 144 LINE",
"222 42 LINE",
"206 -32 LINE SMOOTH",
"203 -47 OFFCURVE",
"204 -57 OFFCURVE",
"208 -63 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"339 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE",
"449 136 OFFCURVE",
"446 140 OFFCURVE",
"442 140 CURVE SMOOTH",
"438 140 OFFCURVE",
"433 136 OFFCURVE",
"431 128 CURVE SMOOTH",
"415 67 OFFCURVE",
"339 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"422 359 OFFCURVE",
"425 357 OFFCURVE",
"428 357 CURVE SMOOTH",
"432 357 OFFCURVE",
"435 360 OFFCURVE",
"435 365 CURVE SMOOTH",
"435 367 OFFCURVE",
"434 369 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 -67 OFFCURVE",
"218 -67 OFFCURVE",
"220 -65 CURVE",
"224 -63 OFFCURVE",
"227 -59 OFFCURVE",
"228 -52 CURVE SMOOTH",
"229 -48 LINE",
"232 -25 LINE SMOOTH",
"248 76 OFFCURVE",
"263 166 OFFCURVE",
"279 244 CURVE SMOOTH",
"285 273 OFFCURVE",
"297 313 OFFCURVE",
"314 364 CURVE SMOOTH",
"332 416 OFFCURVE",
"343 454 OFFCURVE",
"350 484 CURVE SMOOTH",
"351 491 OFFCURVE",
"348 498 OFFCURVE",
"340 507 CURVE SMOOTH",
"337 510 OFFCURVE",
"334 512 OFFCURVE",
"330 512 CURVE SMOOTH",
"328 512 OFFCURVE",
"326 512 OFFCURVE",
"323 511 CURVE",
"318 507 OFFCURVE",
"313 487 OFFCURVE",
"306 454 CURVE SMOOTH",
"300 428 LINE",
"293 387 LINE",
"285 347 LINE",
"243 144 LINE",
"222 42 LINE",
"206 -32 LINE SMOOTH",
"205 -38 OFFCURVE",
"204 -43 OFFCURVE",
"204 -47 CURVE SMOOTH",
"204 -54 OFFCURVE",
"206 -59 OFFCURVE",
"208 -63 CURVE SMOOTH",
"210 -66 OFFCURVE",
"213 -67 OFFCURVE",
"215 -67 CURVE SMOOTH"
);
}
);
width = 476;
}
);
unicode = 20B5;
},
{
glyphname = cent;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"61 -61 OFFCURVE",
"64.667 -58.333 OFFCURVE",
"68 -53 CURVE SMOOTH",
"77.333 -33 OFFCURVE",
"86.667 -10 OFFCURVE",
"96 18 CURVE",
"131.333 18 OFFCURVE",
"158 31.667 OFFCURVE",
"176 59 CURVE SMOOTH",
"178 63 OFFCURVE",
"179 66.667 OFFCURVE",
"179 70 CURVE SMOOTH",
"179 72.667 OFFCURVE",
"178.333 74 OFFCURVE",
"177 74 CURVE SMOOTH",
"174.333 74 OFFCURVE",
"172 72 OFFCURVE",
"170 68 CURVE",
"162 57 LINE SMOOTH",
"148.667 41.667 OFFCURVE",
"129.667 34 OFFCURVE",
"105 34 CURVE SMOOTH",
"83.667 34 OFFCURVE",
"67.667 40 OFFCURVE",
"57 52 CURVE SMOOTH",
"45 64 OFFCURVE",
"39 80.333 OFFCURVE",
"39 101 CURVE SMOOTH",
"39 135.667 OFFCURVE",
"53.333 163 OFFCURVE",
"82 183 CURVE",
"77.333 173.667 OFFCURVE",
"75 165.667 OFFCURVE",
"75 159 CURVE SMOOTH",
"75 139 OFFCURVE",
"84 129 OFFCURVE",
"102 129 CURVE SMOOTH",
"113.333 129 OFFCURVE",
"125.667 134.333 OFFCURVE",
"139 145 CURVE SMOOTH",
"152.333 155 OFFCURVE",
"159 165.333 OFFCURVE",
"159 176 CURVE SMOOTH",
"159 185.333 OFFCURVE",
"154.333 193 OFFCURVE",
"145 199 CURVE SMOOTH",
"137.667 203.667 OFFCURVE",
"128.333 206 OFFCURVE",
"117 206 CURVE SMOOTH",
"113 206 LINE",
"113.667 210 OFFCURVE",
"118.667 225 OFFCURVE",
"128 251 CURVE SMOOTH",
"136 271.667 OFFCURVE",
"140 285 OFFCURVE",
"140 291 CURVE SMOOTH",
"140 297 OFFCURVE",
"136.333 300 OFFCURVE",
"129 300 CURVE SMOOTH",
"125 300 OFFCURVE",
"122 297.667 OFFCURVE",
"120 293 CURVE",
"117.333 278.333 OFFCURVE",
"115.333 269.333 OFFCURVE",
"114 264 CURVE SMOOTH",
"110 246.667 OFFCURVE",
"105 227 OFFCURVE",
"97 203 CURVE",
"73 197.667 OFFCURVE",
"53.333 184.333 OFFCURVE",
"38 163 CURVE SMOOTH",
"22.667 141.667 OFFCURVE",
"15 119 OFFCURVE",
"15 95 CURVE SMOOTH",
"15 76.333 OFFCURVE",
"20.667 60.333 OFFCURVE",
"32 47 CURVE SMOOTH",
"42.667 33 OFFCURVE",
"57 24 OFFCURVE",
"75 20 CURVE",
"60 -29.5 LINE SMOOTH",
"56.667 -41.167 OFFCURVE",
"54.333 -48.333 OFFCURVE",
"53 -51 CURVE SMOOTH",
"52.333 -52.333 OFFCURVE",
"52 -53.667 OFFCURVE",
"52 -55 CURVE SMOOTH",
"52 -59 OFFCURVE",
"53.667 -61 OFFCURVE",
"57 -61 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96.667 139 OFFCURVE",
"95 141 OFFCURVE",
"95 145 CURVE SMOOTH",
"95 151 OFFCURVE",
"97 159 OFFCURVE",
"101 169 CURVE SMOOTH",
"107 181 OFFCURVE",
"110 189 OFFCURVE",
"110 193 CURVE",
"116 193 LINE SMOOTH",
"122 193 OFFCURVE",
"128 192 OFFCURVE",
"134 190 CURVE",
"136 188 OFFCURVE",
"137 185 OFFCURVE",
"137 181 CURVE SMOOTH",
"137 173.667 OFFCURVE",
"132.667 164.667 OFFCURVE",
"124 154 CURVE SMOOTH",
"114.667 144 OFFCURVE",
"106.667 139 OFFCURVE",
"100 139 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"61 -61 OFFCURVE",
"65 -58 OFFCURVE",
"68 -53 CURVE SMOOTH",
"77 -33 OFFCURVE",
"87 -10 OFFCURVE",
"96 18 CURVE",
"131 18 OFFCURVE",
"158 32 OFFCURVE",
"176 59 CURVE SMOOTH",
"178 63 OFFCURVE",
"179 67 OFFCURVE",
"179 70 CURVE SMOOTH",
"179 73 OFFCURVE",
"178 74 OFFCURVE",
"177 74 CURVE SMOOTH",
"174 74 OFFCURVE",
"172 72 OFFCURVE",
"170 68 CURVE",
"162 57 LINE SMOOTH",
"149 42 OFFCURVE",
"130 34 OFFCURVE",
"105 34 CURVE SMOOTH",
"84 34 OFFCURVE",
"68 40 OFFCURVE",
"57 52 CURVE SMOOTH",
"45 64 OFFCURVE",
"39 80 OFFCURVE",
"39 101 CURVE SMOOTH",
"39 136 OFFCURVE",
"53 163 OFFCURVE",
"82 183 CURVE",
"77 174 OFFCURVE",
"75 166 OFFCURVE",
"75 159 CURVE SMOOTH",
"75 139 OFFCURVE",
"84 129 OFFCURVE",
"102 129 CURVE SMOOTH",
"113 129 OFFCURVE",
"126 134 OFFCURVE",
"139 145 CURVE SMOOTH",
"152 155 OFFCURVE",
"159 165 OFFCURVE",
"159 176 CURVE SMOOTH",
"159 185 OFFCURVE",
"154 193 OFFCURVE",
"145 199 CURVE SMOOTH",
"138 204 OFFCURVE",
"128 206 OFFCURVE",
"117 206 CURVE SMOOTH",
"113 206 LINE",
"114 210 OFFCURVE",
"119 225 OFFCURVE",
"128 251 CURVE SMOOTH",
"136 272 OFFCURVE",
"140 285 OFFCURVE",
"140 291 CURVE SMOOTH",
"140 297 OFFCURVE",
"136 300 OFFCURVE",
"129 300 CURVE SMOOTH",
"125 300 OFFCURVE",
"122 298 OFFCURVE",
"120 293 CURVE",
"114 264 LINE SMOOTH",
"110 247 OFFCURVE",
"105 227 OFFCURVE",
"97 203 CURVE",
"73 198 OFFCURVE",
"53 184 OFFCURVE",
"38 163 CURVE SMOOTH",
"23 142 OFFCURVE",
"15 119 OFFCURVE",
"15 95 CURVE SMOOTH",
"15 76 OFFCURVE",
"21 60 OFFCURVE",
"32 47 CURVE SMOOTH",
"43 33 OFFCURVE",
"57 24 OFFCURVE",
"75 20 CURVE",
"60 -30 LINE SMOOTH",
"57 -41 OFFCURVE",
"54 -48 OFFCURVE",
"53 -51 CURVE",
"52 -52 OFFCURVE",
"52 -54 OFFCURVE",
"52 -55 CURVE SMOOTH",
"52 -59 OFFCURVE",
"54 -61 OFFCURVE",
"57 -61 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 139 OFFCURVE",
"95 141 OFFCURVE",
"95 145 CURVE SMOOTH",
"95 151 OFFCURVE",
"97 159 OFFCURVE",
"101 169 CURVE SMOOTH",
"107 181 OFFCURVE",
"110 189 OFFCURVE",
"110 193 CURVE",
"116 193 LINE SMOOTH",
"122 193 OFFCURVE",
"128 192 OFFCURVE",
"134 190 CURVE",
"136 188 OFFCURVE",
"137 185 OFFCURVE",
"137 181 CURVE SMOOTH",
"137 174 OFFCURVE",
"133 165 OFFCURVE",
"124 154 CURVE SMOOTH",
"115 144 OFFCURVE",
"107 139 OFFCURVE",
"100 139 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01265 3 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 3 16 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 65 170 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 74 165 74 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01251 16 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 53 165 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01239 1 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01276 1 47 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"340 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE SMOOTH",
"450 144 OFFCURVE",
"435 144 OFFCURVE",
"431 128 CURVE SMOOTH",
"415 67 OFFCURVE",
"339 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101.412 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"426 351 OFFCURVE",
"439 358 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 -68 OFFCURVE",
"169 -69 OFFCURVE",
"173 -65 CURVE SMOOTH",
"177 -63 OFFCURVE",
"179 -59 OFFCURVE",
"181 -52 CURVE SMOOTH",
"182 -48 LINE",
"185 -25 LINE SMOOTH",
"204 123 OFFCURVE",
"238 257 OFFCURVE",
"267 364 CURVE SMOOTH",
"281 416 OFFCURVE",
"296 454 OFFCURVE",
"303 484 CURVE SMOOTH",
"304 491 OFFCURVE",
"301 498 OFFCURVE",
"293 507 CURVE SMOOTH",
"289 512 OFFCURVE",
"284 513 OFFCURVE",
"276 511 CURVE",
"271 507 OFFCURVE",
"267 487 OFFCURVE",
"259 454 CURVE SMOOTH",
"253 428 LINE",
"246 387 LINE",
"159 -32 LINE SMOOTH",
"156 -47 OFFCURVE",
"157 -57 OFFCURVE",
"161 -63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 -68 OFFCURVE",
"251 -69 OFFCURVE",
"255 -65 CURVE SMOOTH",
"259 -63 OFFCURVE",
"261 -59 OFFCURVE",
"263 -52 CURVE SMOOTH",
"264 -48 LINE",
"267 -25 LINE SMOOTH",
"283 94 OFFCURVE",
"318 247 OFFCURVE",
"349 364 CURVE SMOOTH",
"363 417 OFFCURVE",
"378 454 OFFCURVE",
"385 484 CURVE SMOOTH",
"386 491 OFFCURVE",
"383 498 OFFCURVE",
"375 507 CURVE SMOOTH",
"371 512 OFFCURVE",
"366 513 OFFCURVE",
"358 511 CURVE",
"353 507 OFFCURVE",
"349 487 OFFCURVE",
"341 454 CURVE SMOOTH",
"335 428 LINE",
"328 387 LINE",
"257 42 LINE",
"241 -32 LINE SMOOTH",
"238 -47 OFFCURVE",
"239 -57 OFFCURVE",
"243 -63 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"340 -2 OFFCURVE",
"428 42 OFFCURVE",
"448 127 CURVE",
"449 136 OFFCURVE",
"446 140 OFFCURVE",
"442 140 CURVE SMOOTH",
"438 140 OFFCURVE",
"433 136 OFFCURVE",
"431 128 CURVE SMOOTH",
"415 67 OFFCURVE",
"339 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"422 359 OFFCURVE",
"425 357 OFFCURVE",
"428 357 CURVE SMOOTH",
"432 357 OFFCURVE",
"435 360 OFFCURVE",
"435 365 CURVE SMOOTH",
"435 367 OFFCURVE",
"434 369 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 -67 OFFCURVE",
"171 -67 OFFCURVE",
"173 -65 CURVE",
"177 -63 OFFCURVE",
"179 -59 OFFCURVE",
"181 -52 CURVE SMOOTH",
"182 -48 LINE",
"185 -25 LINE SMOOTH",
"204 123 OFFCURVE",
"238 257 OFFCURVE",
"267 364 CURVE SMOOTH",
"281 416 OFFCURVE",
"296 454 OFFCURVE",
"303 484 CURVE SMOOTH",
"304 491 OFFCURVE",
"301 498 OFFCURVE",
"293 507 CURVE SMOOTH",
"290 510 OFFCURVE",
"287 512 OFFCURVE",
"283 512 CURVE SMOOTH",
"281 512 OFFCURVE",
"279 512 OFFCURVE",
"276 511 CURVE",
"271 507 OFFCURVE",
"267 487 OFFCURVE",
"259 454 CURVE SMOOTH",
"253 428 LINE",
"246 387 LINE",
"159 -32 LINE SMOOTH",
"158 -38 OFFCURVE",
"157 -43 OFFCURVE",
"157 -47 CURVE SMOOTH",
"157 -54 OFFCURVE",
"159 -59 OFFCURVE",
"161 -63 CURVE SMOOTH",
"163 -66 OFFCURVE",
"166 -67 OFFCURVE",
"168 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"252 -67 OFFCURVE",
"253 -67 OFFCURVE",
"255 -65 CURVE",
"259 -63 OFFCURVE",
"261 -59 OFFCURVE",
"263 -52 CURVE SMOOTH",
"264 -48 LINE",
"267 -25 LINE SMOOTH",
"283 94 OFFCURVE",
"318 247 OFFCURVE",
"349 364 CURVE SMOOTH",
"363 417 OFFCURVE",
"378 454 OFFCURVE",
"385 484 CURVE SMOOTH",
"386 491 OFFCURVE",
"383 498 OFFCURVE",
"375 507 CURVE SMOOTH",
"372 510 OFFCURVE",
"369 512 OFFCURVE",
"365 512 CURVE SMOOTH",
"363 512 OFFCURVE",
"361 512 OFFCURVE",
"358 511 CURVE",
"353 507 OFFCURVE",
"349 487 OFFCURVE",
"341 454 CURVE SMOOTH",
"335 428 LINE",
"328 387 LINE",
"257 42 LINE",
"241 -32 LINE SMOOTH",
"240 -38 OFFCURVE",
"239 -43 OFFCURVE",
"239 -47 CURVE SMOOTH",
"239 -54 OFFCURVE",
"241 -59 OFFCURVE",
"243 -63 CURVE SMOOTH",
"245 -66 OFFCURVE",
"248 -67 OFFCURVE",
"250 -67 CURVE SMOOTH"
);
}
);
width = 476;
}
);
unicode = 20A1;
},
{
glyphname = currency;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"225 499 OFFCURVE",
"219 499 CURVE SMOOTH",
"209 499 OFFCURVE",
"199 490 OFFCURVE",
"177 471 CURVE",
"164 484 OFFCURVE",
"147 490 OFFCURVE",
"128 490 CURVE SMOOTH",
"107 490 OFFCURVE",
"85 483 OFFCURVE",
"66 468 CURVE",
"41 490 OFFCURVE",
"33 498 OFFCURVE",
"22 498 CURVE SMOOTH",
"16 498 OFFCURVE",
"11 496 OFFCURVE",
"6 491 CURVE",
"2 486 OFFCURVE",
"3 481 OFFCURVE",
"8 477 CURVE SMOOTH",
"45 445 LINE",
"34 428 OFFCURVE",
"22 402 OFFCURVE",
"22 377 CURVE SMOOTH",
"22 362 OFFCURVE",
"25 348 OFFCURVE",
"33 336 CURVE SMOOTH",
"35 333 LINE",
"17 314 OFFCURVE",
"-5 291 OFFCURVE",
"-5 280 CURVE SMOOTH",
"-5 278 OFFCURVE",
"-4 276 OFFCURVE",
"-3 275 CURVE SMOOTH",
"0 272 OFFCURVE",
"2 271 OFFCURVE",
"5 271 CURVE SMOOTH",
"11 271 OFFCURVE",
"45 310 OFFCURVE",
"53 318 CURVE",
"75 301 OFFCURVE",
"135 298 OFFCURVE",
"165 333 CURVE",
"177 320 OFFCURVE",
"190 307 OFFCURVE",
"201 297 CURVE SMOOTH",
"210 290 OFFCURVE",
"216 287 OFFCURVE",
"220 287 CURVE SMOOTH",
"222 287 OFFCURVE",
"225 288 OFFCURVE",
"227 290 CURVE",
"230 294 OFFCURVE",
"232 302 OFFCURVE",
"225 310 CURVE SMOOTH",
"218 318 OFFCURVE",
"188 349 OFFCURVE",
"183 355 CURVE",
"199 381 OFFCURVE",
"203 415 OFFCURVE",
"194 444 CURVE",
"232 477 OFFCURVE",
"238 479 OFFCURVE",
"237 486 CURVE SMOOTH",
"237 493 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"56 296 OFFCURVE",
"56 380 CURVE SMOOTH",
"56 479 OFFCURVE",
"165 502 OFFCURVE",
"165 408 CURVE SMOOTH",
"165 320 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"11 -24 OFFCURVE",
"45 15 OFFCURVE",
"53 23 CURVE",
"63 16 OFFCURVE",
"80 11 OFFCURVE",
"98 11 CURVE SMOOTH",
"122 11 OFFCURVE",
"148 18 OFFCURVE",
"165 38 CURVE",
"177 25 OFFCURVE",
"190 12 OFFCURVE",
"201 2 CURVE SMOOTH",
"210 -5 OFFCURVE",
"216 -8 OFFCURVE",
"220 -8 CURVE SMOOTH",
"222 -8 OFFCURVE",
"225 -7 OFFCURVE",
"227 -5 CURVE SMOOTH",
"229 -3 OFFCURVE",
"230 0 OFFCURVE",
"230 4 CURVE SMOOTH",
"230 7 OFFCURVE",
"229 11 OFFCURVE",
"225 15 CURVE SMOOTH",
"218 23 OFFCURVE",
"188 54 OFFCURVE",
"183 60 CURVE",
"193 77 OFFCURVE",
"199 97 OFFCURVE",
"199 117 CURVE SMOOTH",
"199 128 OFFCURVE",
"197 139 OFFCURVE",
"194 149 CURVE",
"230 180 OFFCURVE",
"237 184 OFFCURVE",
"237 190 CURVE SMOOTH",
"237 197 OFFCURVE",
"225 204 OFFCURVE",
"219 204 CURVE SMOOTH",
"209 204 OFFCURVE",
"199 195 OFFCURVE",
"177 176 CURVE",
"164 189 OFFCURVE",
"147 195 OFFCURVE",
"128 195 CURVE SMOOTH",
"107 195 OFFCURVE",
"85 188 OFFCURVE",
"66 173 CURVE",
"41 195 OFFCURVE",
"33 203 OFFCURVE",
"22 203 CURVE SMOOTH",
"16 203 OFFCURVE",
"11 201 OFFCURVE",
"6 196 CURVE SMOOTH",
"2 191 OFFCURVE",
"3 186 OFFCURVE",
"8 182 CURVE SMOOTH",
"45 150 LINE",
"34 133 OFFCURVE",
"22 107 OFFCURVE",
"22 82 CURVE SMOOTH",
"22 67 OFFCURVE",
"25 53 OFFCURVE",
"33 41 CURVE SMOOTH",
"35 38 LINE",
"17 19 OFFCURVE",
"-5 -4 OFFCURVE",
"-5 -15 CURVE SMOOTH",
"-5 -17 OFFCURVE",
"-4 -19 OFFCURVE",
"-3 -20 CURVE SMOOTH",
"0 -23 OFFCURVE",
"2 -24 OFFCURVE",
"5 -24 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 33 OFFCURVE",
"56 49 OFFCURVE",
"56 85 CURVE SMOOTH",
"56 141 OFFCURVE",
"91 173 OFFCURVE",
"121 173 CURVE SMOOTH",
"144 173 OFFCURVE",
"165 154 OFFCURVE",
"165 113 CURVE SMOOTH",
"165 62 OFFCURVE",
"129 33 OFFCURVE",
"98 33 CURVE SMOOTH"
);
}
);
width = 209;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"110 -124 OFFCURVE",
"114 -123 OFFCURVE",
"117 -120 CURVE",
"122 -112 OFFCURVE",
"129 -95 OFFCURVE",
"137 -67 CURVE SMOOTH",
"144 -44 OFFCURVE",
"147 -25 OFFCURVE",
"150 -11 CURVE",
"158 -11 LINE SMOOTH",
"265 -11 OFFCURVE",
"326 53 OFFCURVE",
"326 129 CURVE SMOOTH",
"326 173 OFFCURVE",
"305 221 OFFCURVE",
"261 263 CURVE SMOOTH",
"207 315 OFFCURVE",
"161 342 OFFCURVE",
"161 389 CURVE SMOOTH",
"161 427 OFFCURVE",
"188 452 OFFCURVE",
"234 452 CURVE SMOOTH",
"270 452 OFFCURVE",
"290 423 OFFCURVE",
"290 399 CURVE SMOOTH",
"290 381 OFFCURVE",
"279 365 OFFCURVE",
"256 365 CURVE SMOOTH",
"253 365 OFFCURVE",
"249 355 OFFCURVE",
"256 355 CURVE SMOOTH",
"295 355 OFFCURVE",
"313 376 OFFCURVE",
"313 400 CURVE SMOOTH",
"313 426 OFFCURVE",
"293 454 OFFCURVE",
"253 462 CURVE",
"260 500 OFFCURVE",
"264 523 OFFCURVE",
"266 530 CURVE",
"272 542 LINE",
"272 543 OFFCURVE",
"272 543 OFFCURVE",
"273 543 CURVE",
"274 547 OFFCURVE",
"271 551 OFFCURVE",
"265 551 CURVE SMOOTH",
"262 551 OFFCURVE",
"260 550 OFFCURVE",
"259 549 CURVE SMOOTH",
"255 544 OFFCURVE",
"248 530 OFFCURVE",
"242 508 CURVE SMOOTH",
"236 485 LINE",
"231 466 LINE",
"183 471 OFFCURVE",
"131 446 OFFCURVE",
"131 389 CURVE SMOOTH",
"131 327 OFFCURVE",
"166 327 OFFCURVE",
"248 235 CURVE SMOOTH",
"274 206 OFFCURVE",
"286 171 OFFCURVE",
"286 137 CURVE SMOOTH",
"286 69 OFFCURVE",
"239 5 OFFCURVE",
"165 5 CURVE SMOOTH",
"96 5 OFFCURVE",
"68 57 OFFCURVE",
"68 109 CURVE SMOOTH",
"68 162 OFFCURVE",
"97 216 OFFCURVE",
"137 216 CURVE SMOOTH",
"184 216 OFFCURVE",
"216 186 OFFCURVE",
"216 141 CURVE SMOOTH",
"216 119 OFFCURVE",
"209 102 OFFCURVE",
"197 89 CURVE SMOOTH",
"186 78 OFFCURVE",
"173 72 OFFCURVE",
"159 72 CURVE SMOOTH",
"153 72 OFFCURVE",
"145 74 OFFCURVE",
"135 83 CURVE SMOOTH",
"128 90 OFFCURVE",
"126 79 OFFCURVE",
"131 75 CURVE SMOOTH",
"142 66 OFFCURVE",
"152 61 OFFCURVE",
"161 61 CURVE SMOOTH",
"182 59 OFFCURVE",
"199 66 OFFCURVE",
"213 81 CURVE SMOOTH",
"228 96 OFFCURVE",
"235 116 OFFCURVE",
"235 140 CURVE SMOOTH",
"235 190 OFFCURVE",
"195 227 OFFCURVE",
"137 227 CURVE SMOOTH",
"69 227 OFFCURVE",
"33 170 OFFCURVE",
"33 112 CURVE SMOOTH",
"33 60 OFFCURVE",
"63 6 OFFCURVE",
"124 -5 CURVE",
"113 -65 LINE",
"107 -95 LINE SMOOTH",
"106 -102 OFFCURVE",
"104 -107 OFFCURVE",
"101 -110 CURVE SMOOTH",
"100 -111 LINE",
"99 -113 LINE SMOOTH",
"97 -117 OFFCURVE",
"100 -120 OFFCURVE",
"107 -122 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"110 -124 OFFCURVE",
"114 -123 OFFCURVE",
"117 -120 CURVE",
"122 -112 OFFCURVE",
"129 -95 OFFCURVE",
"137 -67 CURVE SMOOTH",
"144 -44 OFFCURVE",
"147 -25 OFFCURVE",
"150 -11 CURVE",
"158 -11 LINE SMOOTH",
"265 -11 OFFCURVE",
"326 53 OFFCURVE",
"326 129 CURVE SMOOTH",
"326 173 OFFCURVE",
"305 221 OFFCURVE",
"261 263 CURVE SMOOTH",
"207 315 OFFCURVE",
"161 342 OFFCURVE",
"161 389 CURVE SMOOTH",
"161 427 OFFCURVE",
"188 452 OFFCURVE",
"234 452 CURVE SMOOTH",
"270 452 OFFCURVE",
"290 423 OFFCURVE",
"290 399 CURVE SMOOTH",
"290 381 OFFCURVE",
"279 365 OFFCURVE",
"256 365 CURVE SMOOTH",
"253 365 OFFCURVE",
"249 355 OFFCURVE",
"256 355 CURVE SMOOTH",
"295 355 OFFCURVE",
"313 376 OFFCURVE",
"313 400 CURVE SMOOTH",
"313 426 OFFCURVE",
"293 454 OFFCURVE",
"253 462 CURVE",
"260 500 OFFCURVE",
"264 523 OFFCURVE",
"266 530 CURVE",
"272 542 LINE",
"272 543 OFFCURVE",
"272 543 OFFCURVE",
"273 543 CURVE",
"274 547 OFFCURVE",
"271 551 OFFCURVE",
"265 551 CURVE SMOOTH",
"262 551 OFFCURVE",
"260 550 OFFCURVE",
"259 549 CURVE SMOOTH",
"255 544 OFFCURVE",
"248 530 OFFCURVE",
"242 508 CURVE SMOOTH",
"236 485 LINE",
"231 466 LINE",
"183 471 OFFCURVE",
"131 446 OFFCURVE",
"131 389 CURVE SMOOTH",
"131 327 OFFCURVE",
"166 327 OFFCURVE",
"248 235 CURVE SMOOTH",
"274 206 OFFCURVE",
"286 171 OFFCURVE",
"286 137 CURVE SMOOTH",
"286 69 OFFCURVE",
"239 5 OFFCURVE",
"165 5 CURVE SMOOTH",
"96 5 OFFCURVE",
"68 57 OFFCURVE",
"68 109 CURVE SMOOTH",
"68 162 OFFCURVE",
"97 216 OFFCURVE",
"137 216 CURVE SMOOTH",
"184 216 OFFCURVE",
"216 186 OFFCURVE",
"216 141 CURVE SMOOTH",
"216 119 OFFCURVE",
"209 102 OFFCURVE",
"197 89 CURVE SMOOTH",
"186 78 OFFCURVE",
"173 72 OFFCURVE",
"159 72 CURVE SMOOTH",
"153 72 OFFCURVE",
"145 74 OFFCURVE",
"135 83 CURVE SMOOTH",
"128 90 OFFCURVE",
"126 79 OFFCURVE",
"131 75 CURVE SMOOTH",
"142 66 OFFCURVE",
"152 61 OFFCURVE",
"161 61 CURVE SMOOTH",
"182 59 OFFCURVE",
"199 66 OFFCURVE",
"213 81 CURVE SMOOTH",
"228 96 OFFCURVE",
"235 116 OFFCURVE",
"235 140 CURVE SMOOTH",
"235 190 OFFCURVE",
"195 227 OFFCURVE",
"137 227 CURVE SMOOTH",
"69 227 OFFCURVE",
"33 170 OFFCURVE",
"33 112 CURVE SMOOTH",
"33 60 OFFCURVE",
"63 6 OFFCURVE",
"124 -5 CURVE",
"113 -65 LINE",
"107 -95 LINE SMOOTH",
"106 -102 OFFCURVE",
"104 -107 OFFCURVE",
"101 -110 CURVE SMOOTH",
"100 -111 LINE",
"99 -113 LINE SMOOTH",
"97 -117 OFFCURVE",
"100 -120 OFFCURVE",
"107 -122 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01238 3 120 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 4 45 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01296 3 81 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 3 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 72 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 113 170 113 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 38 165 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 96 170 96 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 105 96 121 96 137 96 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 105 22 105 38 105 54 105 70 105 86 105 102 105 118 105 134 105 150 105 166 105 182 105 198 105 214 105 230 105 246 105 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 105 22 105 38 105 54 105 70 105 86 105 102 105 118 105 134 105 150 105 166 105 182 105 198 105 214 105 230 105 246 105 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 105 22 105 38 105 54 105 70 105 86 105 102 105 118 105 134 105 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 105 165 105 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01292 1 85 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 1 100 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 386;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
lastChange = "2021-10-08 05:53:43 +0000";
layers = (
{
background = {
components = (
{
name = dcroat;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 35, 54}";
}
);
};
components = (
{
name = dcroat;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 261;
}
);
unicode = 20AB;
},
{
glyphname = florin;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -34, 135}";
}
);
paths = (
{
closed = 1;
nodes = (
"71 -152 OFFCURVE",
"118 7 OFFCURVE",
"118 168 CURVE SMOOTH",
"118 189.5 LINE",
"117 223 LINE",
"118 362 OFFCURVE",
"118 387 OFFCURVE",
"131 463 CURVE SMOOTH",
"137 495 OFFCURVE",
"147.667 519 OFFCURVE",
"163 535 CURVE SMOOTH",
"175.667 549.667 OFFCURVE",
"190.667 557 OFFCURVE",
"208 557 CURVE SMOOTH",
"221.333 557 OFFCURVE",
"232.333 552.667 OFFCURVE",
"241 544 CURVE SMOOTH",
"250.333 535.333 OFFCURVE",
"255 523.333 OFFCURVE",
"255 508 CURVE SMOOTH",
"255 470 OFFCURVE",
"233 451 OFFCURVE",
"196 433 CURVE SMOOTH",
"194 432 LINE",
"193 432 LINE",
"193 431 LINE SMOOTH",
"193 425.667 OFFCURVE",
"197 423 OFFCURVE",
"205 423 CURVE",
"207 423.5 LINE",
"209 424 LINE SMOOTH",
"250 434 OFFCURVE",
"270 464.667 OFFCURVE",
"270 508 CURVE SMOOTH",
"270 528 OFFCURVE",
"262.667 544.333 OFFCURVE",
"248 557 CURVE SMOOTH",
"233.333 569.667 OFFCURVE",
"216 576 OFFCURVE",
"196 576 CURVE SMOOTH",
"174 576 OFFCURVE",
"155 567.667 OFFCURVE",
"139 551 CURVE SMOOTH",
"120.333 532.333 OFFCURVE",
"108 503.667 OFFCURVE",
"102 465 CURVE SMOOTH",
"99.333 447.667 OFFCURVE",
"97 425 OFFCURVE",
"97 396 CURVE SMOOTH",
"96 282 LINE SMOOTH",
"94 61 OFFCURVE",
"72 -110 OFFCURVE",
"-49 -110 CURVE SMOOTH",
"-80 -110 OFFCURVE",
"-114.667 -100.333 OFFCURVE",
"-116 -79 CURVE SMOOTH",
"-116.667 -73 OFFCURVE",
"-117.833 -69 OFFCURVE",
"-119.5 -67 CURVE SMOOTH",
"-121.167 -65 OFFCURVE",
"-123.333 -64 OFFCURVE",
"-126 -64 CURVE SMOOTH",
"-134 -64 OFFCURVE",
"-135 -78 OFFCURVE",
"-135 -85 CURVE SMOOTH",
"-135 -113 OFFCURVE",
"-100 -152 OFFCURVE",
"-49 -152 CURVE SMOOTH"
);
}
);
};
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -34, 135}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"71 -152 OFFCURVE",
"118 7 OFFCURVE",
"118 168 CURVE SMOOTH",
"118 190 LINE",
"117 223 LINE SMOOTH",
"118 362 OFFCURVE",
"118 387 OFFCURVE",
"131 463 CURVE SMOOTH",
"137 495 OFFCURVE",
"148 519 OFFCURVE",
"163 535 CURVE SMOOTH",
"176 550 OFFCURVE",
"191 557 OFFCURVE",
"208 557 CURVE SMOOTH",
"221 557 OFFCURVE",
"232 553 OFFCURVE",
"241 544 CURVE SMOOTH",
"250 535 OFFCURVE",
"255 523 OFFCURVE",
"255 508 CURVE SMOOTH",
"255 470 OFFCURVE",
"233 451 OFFCURVE",
"196 433 CURVE SMOOTH",
"194 432 LINE",
"193 432 LINE",
"193 431 LINE SMOOTH",
"193 426 OFFCURVE",
"197 423 OFFCURVE",
"205 423 CURVE",
"209 424 LINE SMOOTH",
"250 434 OFFCURVE",
"270 465 OFFCURVE",
"270 508 CURVE SMOOTH",
"270 528 OFFCURVE",
"263 544 OFFCURVE",
"248 557 CURVE SMOOTH",
"233 570 OFFCURVE",
"216 576 OFFCURVE",
"196 576 CURVE SMOOTH",
"174 576 OFFCURVE",
"155 568 OFFCURVE",
"139 551 CURVE SMOOTH",
"120 532 OFFCURVE",
"108 504 OFFCURVE",
"102 465 CURVE SMOOTH",
"99 448 OFFCURVE",
"97 425 OFFCURVE",
"97 396 CURVE SMOOTH",
"96 282 LINE SMOOTH",
"94 61 OFFCURVE",
"72 -110 OFFCURVE",
"-49 -110 CURVE SMOOTH",
"-80 -110 OFFCURVE",
"-115 -100 OFFCURVE",
"-116 -79 CURVE SMOOTH",
"-117 -73 OFFCURVE",
"-118 -69 OFFCURVE",
"-120 -67 CURVE",
"-121 -65 OFFCURVE",
"-123 -64 OFFCURVE",
"-126 -64 CURVE SMOOTH",
"-134 -64 OFFCURVE",
"-135 -78 OFFCURVE",
"-135 -85 CURVE SMOOTH",
"-135 -113 OFFCURVE",
"-100 -152 OFFCURVE",
"-49 -152 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01296 4 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 3 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 13 170 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 13 25 13 41 13 57 13 73 13 89 13 105 13 121 13 137 13 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 61 165 61 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 55 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 96 22 96 38 96 54 96 70 96 86 96 102 96 118 96 134 96 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 96 165 96 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012112 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01250 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01253 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01282 1 91 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012112 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01217 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 17 24 17 40 17 56 17 72 17 88 17 104 17 120 17 136 17 152 17 168 17 184 17 200 17 216 17 232 17 248 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 17 24 17 40 17 56 17 72 17 88 17 104 17 120 17 136 17 152 17 168 17 184 17 200 17 216 17 232 17 248 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 17 24 17 40 17 56 17 72 17 88 17 104 17 120 17 136 17 152 17 168 17 184 17 200 17 216 17 232 17 248 17 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01264 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 64 23 64 39 64 55 64 71 64 87 64 103 64 119 64 135 64 151 64 167 64 183 64 199 64 215 64 231 64 247 64 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 64 23 64 39 64 55 64 71 64 87 64 103 64 119 64 135 64 151 64 167 64 183 64 199 64 215 64 231 64 247 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 64 23 64 39 64 55 64 71 64 87 64 103 64 119 64 135 64 151 64 167 64 183 64 199 64 215 64 231 64 247 64 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 50 112 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 190;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"551 411 OFFCURVE",
"547 422 OFFCURVE",
"543 422 CURVE SMOOTH",
"538 422 OFFCURVE",
"538 418 OFFCURVE",
"539 412 CURVE SMOOTH",
"551 365 OFFCURVE",
"404 411 OFFCURVE",
"344 425 CURVE",
"349 434 OFFCURVE",
"329 438 OFFCURVE",
"327 430 CURVE",
"288 442 OFFCURVE",
"227 460 OFFCURVE",
"171 466 CURVE SMOOTH",
"65 477 OFFCURVE",
"13 422 OFFCURVE",
"10 354 CURVE SMOOTH",
"5 237 OFFCURVE",
"155 222 OFFCURVE",
"170 330 CURVE SMOOTH",
"173 342 OFFCURVE",
"167 342 OFFCURVE",
"164 332 CURVE SMOOTH",
"142 250 OFFCURVE",
"31 263 OFFCURVE",
"31 345 CURVE SMOOTH",
"31 407 OFFCURVE",
"84 444 OFFCURVE",
"169 439 CURVE SMOOTH",
"218 436 OFFCURVE",
"277 430 OFFCURVE",
"322 417 CURVE",
"308 379 OFFCURVE",
"296 144 OFFCURVE",
"251 61 CURVE SMOOTH",
"223 9 OFFCURVE",
"148 -45 OFFCURVE",
"80 30 CURVE SMOOTH",
"71 40 OFFCURVE",
"59 29 OFFCURVE",
"68 18 CURVE SMOOTH",
"120 -57 OFFCURVE",
"244 -25 OFFCURVE",
"286 58 CURVE SMOOTH",
"339 164 OFFCURVE",
"323 349 OFFCURVE",
"339 410 CURVE",
"391 396 OFFCURVE",
"427 379 OFFCURVE",
"498 372 CURVE SMOOTH",
"535 368 OFFCURVE",
"559 381 OFFCURVE",
"552 408 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 225 OFFCURVE",
"393 227 OFFCURVE",
"461 227 CURVE SMOOTH",
"475 227 OFFCURVE",
"480 230 OFFCURVE",
"480 234 CURVE SMOOTH",
"480 238 OFFCURVE",
"475 241 OFFCURVE",
"463 243 CURVE SMOOTH",
"443 246 OFFCURVE",
"345 247 OFFCURVE",
"301 247 CURVE SMOOTH",
"277 247 OFFCURVE",
"245 246 OFFCURVE",
"221 243 CURVE SMOOTH",
"209 242 OFFCURVE",
"204 238 OFFCURVE",
"204 225 CURVE SMOOTH",
"204 220 OFFCURVE",
"207 217 OFFCURVE",
"211 218 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 123 OFFCURVE",
"293 125 OFFCURVE",
"348 125 CURVE SMOOTH",
"356 125 OFFCURVE",
"359 128 OFFCURVE",
"359 132 CURVE SMOOTH",
"359 136 OFFCURVE",
"356 139 OFFCURVE",
"349 141 CURVE SMOOTH",
"337 144 OFFCURVE",
"280 145 OFFCURVE",
"254 145 CURVE SMOOTH",
"240 145 OFFCURVE",
"221 144 OFFCURVE",
"207 141 CURVE SMOOTH",
"200 140 OFFCURVE",
"197 136 OFFCURVE",
"197 123 CURVE SMOOTH",
"197 118 OFFCURVE",
"199 115 OFFCURVE",
"201 116 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"204 -24 OFFCURVE",
"260 7 OFFCURVE",
"286 58 CURVE SMOOTH",
"339 164 OFFCURVE",
"323 349 OFFCURVE",
"339 410 CURVE",
"391 396 OFFCURVE",
"427 379 OFFCURVE",
"498 372 CURVE SMOOTH",
"531 368 OFFCURVE",
"553 378 OFFCURVE",
"553 399 CURVE SMOOTH",
"553 402 OFFCURVE",
"553 405 OFFCURVE",
"552 408 CURVE SMOOTH",
"551 411 OFFCURVE",
"547 422 OFFCURVE",
"543 422 CURVE SMOOTH",
"537 422 OFFCURVE",
"540 416 OFFCURVE",
"540 407 CURVE SMOOTH",
"540 396 OFFCURVE",
"527 391 OFFCURVE",
"509 391 CURVE SMOOTH",
"465 391 OFFCURVE",
"385 416 OFFCURVE",
"344 425 CURVE",
"347 431 OFFCURVE",
"340 434 OFFCURVE",
"335 434 CURVE SMOOTH",
"331 434 OFFCURVE",
"328 433 OFFCURVE",
"327 430 CURVE",
"282 444 OFFCURVE",
"208 467 OFFCURVE",
"146 467 CURVE SMOOTH",
"54 467 OFFCURVE",
"10 412 OFFCURVE",
"10 348 CURVE SMOOTH",
"10 288 OFFCURVE",
"51 257 OFFCURVE",
"93 257 CURVE SMOOTH",
"128 257 OFFCURVE",
"163 281 OFFCURVE",
"170 330 CURVE",
"172 336 OFFCURVE",
"171 339 OFFCURVE",
"169 339 CURVE SMOOTH",
"168 339 OFFCURVE",
"165 337 OFFCURVE",
"164 332 CURVE SMOOTH",
"154 294 OFFCURVE",
"125 277 OFFCURVE",
"96 277 CURVE SMOOTH",
"63 277 OFFCURVE",
"31 301 OFFCURVE",
"31 345 CURVE SMOOTH",
"31 407 OFFCURVE",
"84 444 OFFCURVE",
"169 439 CURVE SMOOTH",
"218 436 OFFCURVE",
"277 430 OFFCURVE",
"322 417 CURVE",
"308 379 OFFCURVE",
"296 144 OFFCURVE",
"251 61 CURVE SMOOTH",
"233 27 OFFCURVE",
"195 -7 OFFCURVE",
"153 -7 CURVE SMOOTH",
"129 -7 OFFCURVE",
"104 3 OFFCURVE",
"80 30 CURVE SMOOTH",
"77 33 OFFCURVE",
"75 34 OFFCURVE",
"72 34 CURVE SMOOTH",
"68 34 OFFCURVE",
"65 30 OFFCURVE",
"65 26 CURVE SMOOTH",
"65 24 OFFCURVE",
"66 21 OFFCURVE",
"68 18 CURVE SMOOTH",
"88 -11 OFFCURVE",
"120 -24 OFFCURVE",
"153 -24 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 123 OFFCURVE",
"293 125 OFFCURVE",
"348 125 CURVE SMOOTH",
"356 125 OFFCURVE",
"359 128 OFFCURVE",
"359 132 CURVE SMOOTH",
"359 136 OFFCURVE",
"356 139 OFFCURVE",
"349 141 CURVE SMOOTH",
"337 144 OFFCURVE",
"280 145 OFFCURVE",
"254 145 CURVE SMOOTH",
"240 145 OFFCURVE",
"221 144 OFFCURVE",
"207 141 CURVE SMOOTH",
"200 140 OFFCURVE",
"197 136 OFFCURVE",
"197 123 CURVE SMOOTH",
"197 118 OFFCURVE",
"199 115 OFFCURVE",
"201 116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"211 218 LINE SMOOTH",
"238 225 OFFCURVE",
"393 227 OFFCURVE",
"461 227 CURVE SMOOTH",
"475 227 OFFCURVE",
"480 230 OFFCURVE",
"480 234 CURVE SMOOTH",
"480 238 OFFCURVE",
"475 241 OFFCURVE",
"463 243 CURVE SMOOTH",
"443 246 OFFCURVE",
"345 247 OFFCURVE",
"301 247 CURVE SMOOTH",
"277 247 OFFCURVE",
"245 246 OFFCURVE",
"221 243 CURVE SMOOTH",
"209 242 OFFCURVE",
"204 238 OFFCURVE",
"204 225 CURVE SMOOTH",
"204 221 OFFCURVE",
"206 218 OFFCURVE",
"210 218 CURVE SMOOTH"
);
}
);
width = 467;
}
);
unicode = 20A3;
},
{
glyphname = guarani;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"380 -2 OFFCURVE",
"451 86 OFFCURVE",
"468 196 CURVE SMOOTH",
"470 205 OFFCURVE",
"453 204 OFFCURVE",
"451 197 CURVE SMOOTH",
"433 97 OFFCURVE",
"367 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101.412 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"426 351 OFFCURVE",
"439 358 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"218 -68 OFFCURVE",
"222 -69 OFFCURVE",
"226 -65 CURVE SMOOTH",
"230 -63 OFFCURVE",
"232 -59 OFFCURVE",
"234 -52 CURVE SMOOTH",
"235 -48 LINE",
"238 -25 LINE SMOOTH",
"257 123 OFFCURVE",
"291 257 OFFCURVE",
"320 364 CURVE SMOOTH",
"334 416 OFFCURVE",
"349 454 OFFCURVE",
"356 484 CURVE SMOOTH",
"357 491 OFFCURVE",
"354 498 OFFCURVE",
"346 507 CURVE SMOOTH",
"342 512 OFFCURVE",
"337 513 OFFCURVE",
"329 511 CURVE",
"324 507 OFFCURVE",
"320 487 OFFCURVE",
"312 454 CURVE SMOOTH",
"306 428 LINE",
"299 387 LINE",
"212 -32 LINE SMOOTH",
"209 -47 OFFCURVE",
"210 -57 OFFCURVE",
"214 -63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"292 187 OFFCURVE",
"416 189 OFFCURVE",
"471 189 CURVE SMOOTH",
"482 189 OFFCURVE",
"486 192 OFFCURVE",
"486 196 CURVE SMOOTH",
"486 200 OFFCURVE",
"482 203 OFFCURVE",
"472 205 CURVE SMOOTH",
"456 208 OFFCURVE",
"378 209 OFFCURVE",
"342 209 CURVE SMOOTH",
"323 209 OFFCURVE",
"297 208 OFFCURVE",
"278 205 CURVE SMOOTH",
"268 204 OFFCURVE",
"264 200 OFFCURVE",
"264 187 CURVE SMOOTH",
"264 182 OFFCURVE",
"267 179 OFFCURVE",
"270 180 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"380 -2 OFFCURVE",
"451 86 OFFCURVE",
"468 196 CURVE SMOOTH",
"469 201 OFFCURVE",
"465 203 OFFCURVE",
"461 203 CURVE SMOOTH",
"457 203 OFFCURVE",
"452 201 OFFCURVE",
"451 197 CURVE SMOOTH",
"433 97 OFFCURVE",
"367 20 OFFCURVE",
"259 20 CURVE SMOOTH",
"176 20 OFFCURVE",
"109 101 OFFCURVE",
"109 194 CURVE SMOOTH",
"109 320 OFFCURVE",
"179 422 OFFCURVE",
"296 422 CURVE SMOOTH",
"355 422 OFFCURVE",
"402 397 OFFCURVE",
"420 363 CURVE SMOOTH",
"422 359 OFFCURVE",
"425 357 OFFCURVE",
"428 357 CURVE SMOOTH",
"432 357 OFFCURVE",
"435 360 OFFCURVE",
"435 365 CURVE SMOOTH",
"435 367 OFFCURVE",
"434 369 OFFCURVE",
"433 371 CURVE SMOOTH",
"413 413 OFFCURVE",
"359 442 OFFCURVE",
"296 442 CURVE SMOOTH",
"169 442 OFFCURVE",
"66 328 OFFCURVE",
"66 191 CURVE SMOOTH",
"66 88 OFFCURVE",
"149 -2 OFFCURVE",
"270 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"223 -67 OFFCURVE",
"224 -67 OFFCURVE",
"226 -65 CURVE",
"230 -63 OFFCURVE",
"232 -59 OFFCURVE",
"234 -52 CURVE SMOOTH",
"235 -48 LINE",
"238 -25 LINE SMOOTH",
"257 123 OFFCURVE",
"291 257 OFFCURVE",
"320 364 CURVE SMOOTH",
"334 416 OFFCURVE",
"349 454 OFFCURVE",
"356 484 CURVE SMOOTH",
"357 491 OFFCURVE",
"354 498 OFFCURVE",
"346 507 CURVE SMOOTH",
"343 510 OFFCURVE",
"340 512 OFFCURVE",
"336 512 CURVE SMOOTH",
"334 512 OFFCURVE",
"332 512 OFFCURVE",
"329 511 CURVE",
"324 507 OFFCURVE",
"320 487 OFFCURVE",
"312 454 CURVE SMOOTH",
"306 428 LINE",
"299 387 LINE",
"212 -32 LINE SMOOTH",
"211 -38 OFFCURVE",
"210 -43 OFFCURVE",
"210 -47 CURVE SMOOTH",
"210 -54 OFFCURVE",
"212 -59 OFFCURVE",
"214 -63 CURVE SMOOTH",
"216 -66 OFFCURVE",
"219 -67 OFFCURVE",
"221 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"270 180 LINE",
"292 187 OFFCURVE",
"416 189 OFFCURVE",
"471 189 CURVE SMOOTH",
"482 189 OFFCURVE",
"486 192 OFFCURVE",
"486 196 CURVE SMOOTH",
"486 200 OFFCURVE",
"482 203 OFFCURVE",
"472 205 CURVE SMOOTH",
"456 208 OFFCURVE",
"378 209 OFFCURVE",
"342 209 CURVE SMOOTH",
"323 209 OFFCURVE",
"297 208 OFFCURVE",
"278 205 CURVE SMOOTH",
"268 204 OFFCURVE",
"264 200 OFFCURVE",
"264 187 CURVE SMOOTH",
"264 183 OFFCURVE",
"266 180 OFFCURVE",
"269 180 CURVE SMOOTH"
);
}
);
width = 513;
}
);
unicode = 20B2;
},
{
glyphname = kip;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"477 -40 OFFCURVE",
"530 -40 CURVE SMOOTH",
"536 -40 OFFCURVE",
"542 -36 OFFCURVE",
"547 -28 CURVE",
"488 22 OFFCURVE",
"439 134 OFFCURVE",
"386 186 CURVE SMOOTH",
"369 201 OFFCURVE",
"351 211 OFFCURVE",
"327 218 CURVE",
"351 233 OFFCURVE",
"373 265 OFFCURVE",
"397 296 CURVE SMOOTH",
"413 318 OFFCURVE",
"426 336 OFFCURVE",
"436 347 CURVE SMOOTH",
"456 370 LINE SMOOTH",
"477 395 OFFCURVE",
"500 408 OFFCURVE",
"520 410 CURVE SMOOTH",
"531 411 OFFCURVE",
"537 415 OFFCURVE",
"537 422 CURVE SMOOTH",
"537 427 OFFCURVE",
"532 432 OFFCURVE",
"519 432 CURVE SMOOTH",
"517 432 LINE SMOOTH",
"493 432 OFFCURVE",
"470 418 OFFCURVE",
"448 394 CURVE SMOOTH",
"436 382 OFFCURVE",
"417 356 OFFCURVE",
"391 317 CURVE SMOOTH",
"367 281 OFFCURVE",
"347 249 OFFCURVE",
"325 232 CURVE",
"327 260 OFFCURVE",
"329 295 OFFCURVE",
"329 324 CURVE SMOOTH",
"329 346 LINE",
"328 375 LINE SMOOTH",
"328 385 OFFCURVE",
"327 394 OFFCURVE",
"327 401 CURVE SMOOTH",
"327 436 LINE",
"328 438 OFFCURVE",
"327 442 OFFCURVE",
"325 444 CURVE",
"322 445 OFFCURVE",
"318 446 OFFCURVE",
"309 446 CURVE SMOOTH",
"297 446 OFFCURVE",
"292 443 OFFCURVE",
"291 437 CURVE SMOOTH",
"290 428 OFFCURVE",
"288 416 OFFCURVE",
"288 404 CURVE SMOOTH",
"288 391 OFFCURVE",
"290 366 OFFCURVE",
"293 330 CURVE SMOOTH",
"296 276 OFFCURVE",
"297 253 OFFCURVE",
"297 195 CURVE SMOOTH",
"297 67 OFFCURVE",
"223 -6 OFFCURVE",
"139 -6 CURVE SMOOTH",
"33 -6 OFFCURVE",
"1 116 OFFCURVE",
"99 175 CURVE SMOOTH",
"108 181 OFFCURVE",
"102 195 OFFCURVE",
"91 188 CURVE SMOOTH",
"-26 123 OFFCURVE",
"17 -21 OFFCURVE",
"137 -22 CURVE SMOOTH",
"243 -22 OFFCURVE",
"322 67 OFFCURVE",
"325 202 CURVE",
"412 185 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"271 190 LINE",
"349 192 LINE SMOOTH",
"393 193 OFFCURVE",
"459 195 OFFCURVE",
"493 195 CURVE SMOOTH",
"535 195 LINE SMOOTH",
"544 195 OFFCURVE",
"551 194 OFFCURVE",
"554 193 CURVE",
"554 192 OFFCURVE",
"555 192 OFFCURVE",
"556 192 CURVE SMOOTH",
"560 192 OFFCURVE",
"562 195 OFFCURVE",
"562 201 CURVE SMOOTH",
"562 205 OFFCURVE",
"560 208 OFFCURVE",
"558 210 CURVE SMOOTH",
"553 213 OFFCURVE",
"518 213 OFFCURVE",
"487 213 CURVE SMOOTH",
"423 213 LINE SMOOTH",
"384 213 OFFCURVE",
"326 214 OFFCURVE",
"296 214 CURVE SMOOTH",
"257 214 LINE",
"204 213 LINE SMOOTH",
"190 213 OFFCURVE",
"179 211 OFFCURVE",
"175 210 CURVE SMOOTH",
"168 209 OFFCURVE",
"165 202 OFFCURVE",
"165 190 CURVE SMOOTH",
"165 185 OFFCURVE",
"166 183 OFFCURVE",
"169 183 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"536 -40 OFFCURVE",
"542 -36 OFFCURVE",
"547 -28 CURVE",
"488 22 OFFCURVE",
"439 134 OFFCURVE",
"386 186 CURVE SMOOTH",
"369 201 OFFCURVE",
"351 211 OFFCURVE",
"327 218 CURVE",
"351 233 OFFCURVE",
"373 265 OFFCURVE",
"397 296 CURVE SMOOTH",
"413 318 OFFCURVE",
"426 336 OFFCURVE",
"436 347 CURVE SMOOTH",
"456 370 LINE SMOOTH",
"477 395 OFFCURVE",
"500 408 OFFCURVE",
"520 410 CURVE SMOOTH",
"531 411 OFFCURVE",
"537 415 OFFCURVE",
"537 422 CURVE SMOOTH",
"537 427 OFFCURVE",
"532 432 OFFCURVE",
"519 432 CURVE SMOOTH",
"517 432 LINE SMOOTH",
"493 432 OFFCURVE",
"470 418 OFFCURVE",
"448 394 CURVE SMOOTH",
"436 382 OFFCURVE",
"417 356 OFFCURVE",
"391 317 CURVE SMOOTH",
"367 281 OFFCURVE",
"347 249 OFFCURVE",
"325 232 CURVE",
"327 260 OFFCURVE",
"329 295 OFFCURVE",
"329 324 CURVE SMOOTH",
"329 346 LINE",
"328 375 LINE SMOOTH",
"328 385 OFFCURVE",
"327 394 OFFCURVE",
"327 401 CURVE SMOOTH",
"327 436 LINE",
"328 438 OFFCURVE",
"327 442 OFFCURVE",
"325 444 CURVE",
"322 445 OFFCURVE",
"318 446 OFFCURVE",
"309 446 CURVE SMOOTH",
"297 446 OFFCURVE",
"292 443 OFFCURVE",
"291 437 CURVE SMOOTH",
"290 428 OFFCURVE",
"288 416 OFFCURVE",
"288 404 CURVE SMOOTH",
"288 391 OFFCURVE",
"290 366 OFFCURVE",
"293 330 CURVE SMOOTH",
"296 276 OFFCURVE",
"297 253 OFFCURVE",
"297 195 CURVE SMOOTH",
"297 67 OFFCURVE",
"223 -6 OFFCURVE",
"139 -6 CURVE SMOOTH",
"77 -6 OFFCURVE",
"40 36 OFFCURVE",
"40 83 CURVE SMOOTH",
"40 115 OFFCURVE",
"58 151 OFFCURVE",
"99 175 CURVE SMOOTH",
"102 177 OFFCURVE",
"103 180 OFFCURVE",
"103 183 CURVE SMOOTH",
"103 187 OFFCURVE",
"101 190 OFFCURVE",
"97 190 CURVE SMOOTH",
"95 190 OFFCURVE",
"93 189 OFFCURVE",
"91 188 CURVE SMOOTH",
"43 161 OFFCURVE",
"22 122 OFFCURVE",
"22 84 CURVE SMOOTH",
"22 29 OFFCURVE",
"66 -21 OFFCURVE",
"137 -22 CURVE SMOOTH",
"243 -22 OFFCURVE",
"322 67 OFFCURVE",
"325 202 CURVE",
"412 185 OFFCURVE",
"477 -40 OFFCURVE",
"530 -40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"271 190 LINE",
"349 192 LINE SMOOTH",
"393 193 OFFCURVE",
"459 195 OFFCURVE",
"493 195 CURVE SMOOTH",
"535 195 LINE SMOOTH",
"544 195 OFFCURVE",
"551 194 OFFCURVE",
"554 193 CURVE",
"554 192 OFFCURVE",
"555 192 OFFCURVE",
"556 192 CURVE SMOOTH",
"560 192 OFFCURVE",
"562 195 OFFCURVE",
"562 201 CURVE SMOOTH",
"562 205 OFFCURVE",
"560 208 OFFCURVE",
"558 210 CURVE",
"553 213 OFFCURVE",
"518 213 OFFCURVE",
"487 213 CURVE SMOOTH",
"423 213 LINE SMOOTH",
"384 213 OFFCURVE",
"326 214 OFFCURVE",
"296 214 CURVE SMOOTH",
"257 214 LINE",
"204 213 LINE SMOOTH",
"190 213 OFFCURVE",
"179 211 OFFCURVE",
"175 210 CURVE SMOOTH",
"168 209 OFFCURVE",
"165 202 OFFCURVE",
"165 190 CURVE SMOOTH",
"165 185 OFFCURVE",
"166 183 OFFCURVE",
"169 183 CURVE SMOOTH"
);
}
);
width = 562;
}
);
unicode = 20AD;
},
{
glyphname = lira;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"437 -16 OFFCURVE",
"484 10 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 97 OFFCURVE",
"450 121 OFFCURVE",
"416 121 CURVE SMOOTH",
"390 121 OFFCURVE",
"368 107 OFFCURVE",
"368 86 CURVE SMOOTH",
"368 76 OFFCURVE",
"374 65 OFFCURVE",
"387 54 CURVE",
"397 48 OFFCURVE",
"412 54 OFFCURVE",
"400 63 CURVE SMOOTH",
"389 71 OFFCURVE",
"383 80 OFFCURVE",
"383 85 CURVE SMOOTH",
"383 94 OFFCURVE",
"400 99 OFFCURVE",
"414 99 CURVE SMOOTH",
"442 99 OFFCURVE",
"464 89 OFFCURVE",
"464 61 CURVE SMOOTH",
"464 23 OFFCURVE",
"425 7 OFFCURVE",
"387 7 CURVE SMOOTH",
"323 7 OFFCURVE",
"275 35 OFFCURVE",
"147 77 CURVE",
"208 170 OFFCURVE",
"274 434 OFFCURVE",
"363 434 CURVE SMOOTH",
"391 434 OFFCURVE",
"392 386 OFFCURVE",
"377 341 CURVE SMOOTH",
"369 318 OFFCURVE",
"360 283 OFFCURVE",
"368 283 CURVE SMOOTH",
"383 283 OFFCURVE",
"394 308 OFFCURVE",
"402 330 CURVE SMOOTH",
"422 383 OFFCURVE",
"414 455 OFFCURVE",
"347 455 CURVE SMOOTH",
"272 455 OFFCURVE",
"229 360 OFFCURVE",
"195 252 CURVE SMOOTH",
"173 183 OFFCURVE",
"169 162 OFFCURVE",
"135 84 CURVE",
"108 94 OFFCURVE",
"86 101 OFFCURVE",
"63 104 CURVE",
"57 104 OFFCURVE",
"54 105 OFFCURVE",
"47 105 CURVE SMOOTH",
"28 105 OFFCURVE",
"9 102 OFFCURVE",
"-6 92 CURVE SMOOTH",
"-23 79 OFFCURVE",
"-27 63 OFFCURVE",
"-27 47 CURVE SMOOTH",
"-27 22 OFFCURVE",
"-10 9 OFFCURVE",
"23 9 CURVE SMOOTH",
"55 9 OFFCURVE",
"93 24 OFFCURVE",
"113 42 CURVE SMOOTH",
"131 59 LINE",
"225 31 OFFCURVE",
"298 -16 OFFCURVE",
"387 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 21 OFFCURVE",
"-14 31 OFFCURVE",
"-14 51 CURVE SMOOTH",
"-14 59 OFFCURVE",
"-8 67 OFFCURVE",
"5 72 CURVE SMOOTH",
"16 76 OFFCURVE",
"30 78 OFFCURVE",
"45 78 CURVE SMOOTH",
"51 78 OFFCURVE",
"58 78 OFFCURVE",
"63 77 CURVE",
"82 74 OFFCURVE",
"101 69 OFFCURVE",
"119 63 CURVE",
"114 57 OFFCURVE",
"111 53 OFFCURVE",
"108 50 CURVE SMOOTH",
"98 41 OFFCURVE",
"87 35 OFFCURVE",
"72 30 CURVE SMOOTH",
"58 24 OFFCURVE",
"44 21 OFFCURVE",
"30 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 236 OFFCURVE",
"244 238 OFFCURVE",
"296 238 CURVE SMOOTH",
"307 238 OFFCURVE",
"310 241 OFFCURVE",
"310 245 CURVE SMOOTH",
"311 249 OFFCURVE",
"307 252 OFFCURVE",
"298 254 CURVE SMOOTH",
"282 257 OFFCURVE",
"208 258 OFFCURVE",
"175 258 CURVE SMOOTH",
"156 258 OFFCURVE",
"132 257 OFFCURVE",
"113 254 CURVE SMOOTH",
"104 253 OFFCURVE",
"100 249 OFFCURVE",
"100 236 CURVE SMOOTH",
"100 231 OFFCURVE",
"102 228 OFFCURVE",
"105 229 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 161 OFFCURVE",
"228 163 OFFCURVE",
"280 163 CURVE SMOOTH",
"291 163 OFFCURVE",
"294 166 OFFCURVE",
"294 170 CURVE SMOOTH",
"295 174 OFFCURVE",
"291 177 OFFCURVE",
"282 179 CURVE SMOOTH",
"266 182 OFFCURVE",
"192 183 OFFCURVE",
"159 183 CURVE SMOOTH",
"140 183 OFFCURVE",
"116 182 OFFCURVE",
"97 179 CURVE SMOOTH",
"88 178 OFFCURVE",
"84 174 OFFCURVE",
"84 161 CURVE SMOOTH",
"84 156 OFFCURVE",
"86 153 OFFCURVE",
"89 154 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"437 -16 OFFCURVE",
"484 10 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 97 OFFCURVE",
"450 121 OFFCURVE",
"416 121 CURVE SMOOTH",
"390 121 OFFCURVE",
"368 107 OFFCURVE",
"368 86 CURVE SMOOTH",
"368 76 OFFCURVE",
"374 65 OFFCURVE",
"387 54 CURVE",
"390 53 OFFCURVE",
"393 52 OFFCURVE",
"395 52 CURVE SMOOTH",
"400 52 OFFCURVE",
"404 54 OFFCURVE",
"404 57 CURVE SMOOTH",
"404 58 OFFCURVE",
"403 61 OFFCURVE",
"400 63 CURVE SMOOTH",
"389 71 OFFCURVE",
"383 80 OFFCURVE",
"383 85 CURVE SMOOTH",
"383 94 OFFCURVE",
"400 99 OFFCURVE",
"414 99 CURVE SMOOTH",
"442 99 OFFCURVE",
"464 89 OFFCURVE",
"464 61 CURVE SMOOTH",
"464 23 OFFCURVE",
"425 7 OFFCURVE",
"387 7 CURVE SMOOTH",
"323 7 OFFCURVE",
"275 35 OFFCURVE",
"147 77 CURVE",
"208 170 OFFCURVE",
"274 434 OFFCURVE",
"363 434 CURVE SMOOTH",
"379 434 OFFCURVE",
"387 417 OFFCURVE",
"387 394 CURVE SMOOTH",
"387 378 OFFCURVE",
"383 359 OFFCURVE",
"377 341 CURVE SMOOTH",
"369 318 OFFCURVE",
"360 283 OFFCURVE",
"368 283 CURVE SMOOTH",
"383 283 OFFCURVE",
"394 308 OFFCURVE",
"402 330 CURVE SMOOTH",
"408 346 OFFCURVE",
"412 364 OFFCURVE",
"412 381 CURVE SMOOTH",
"412 420 OFFCURVE",
"394 455 OFFCURVE",
"347 455 CURVE SMOOTH",
"272 455 OFFCURVE",
"229 360 OFFCURVE",
"195 252 CURVE SMOOTH",
"173 183 OFFCURVE",
"169 162 OFFCURVE",
"135 84 CURVE",
"108 94 OFFCURVE",
"86 101 OFFCURVE",
"63 104 CURVE",
"57 104 OFFCURVE",
"54 105 OFFCURVE",
"47 105 CURVE SMOOTH",
"28 105 OFFCURVE",
"9 102 OFFCURVE",
"-6 92 CURVE SMOOTH",
"-23 79 OFFCURVE",
"-27 63 OFFCURVE",
"-27 47 CURVE SMOOTH",
"-27 22 OFFCURVE",
"-10 9 OFFCURVE",
"23 9 CURVE SMOOTH",
"55 9 OFFCURVE",
"93 24 OFFCURVE",
"113 42 CURVE SMOOTH",
"131 59 LINE",
"225 31 OFFCURVE",
"298 -16 OFFCURVE",
"387 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 21 OFFCURVE",
"-14 31 OFFCURVE",
"-14 51 CURVE SMOOTH",
"-14 59 OFFCURVE",
"-8 67 OFFCURVE",
"5 72 CURVE SMOOTH",
"16 76 OFFCURVE",
"30 78 OFFCURVE",
"45 78 CURVE SMOOTH",
"51 78 OFFCURVE",
"58 78 OFFCURVE",
"63 77 CURVE SMOOTH",
"82 74 OFFCURVE",
"101 69 OFFCURVE",
"119 63 CURVE",
"114 57 OFFCURVE",
"111 53 OFFCURVE",
"108 50 CURVE SMOOTH",
"98 41 OFFCURVE",
"87 35 OFFCURVE",
"72 30 CURVE SMOOTH",
"58 24 OFFCURVE",
"44 21 OFFCURVE",
"30 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89 154 LINE",
"110 161 OFFCURVE",
"228 163 OFFCURVE",
"280 163 CURVE SMOOTH",
"292 163 OFFCURVE",
"294 167 OFFCURVE",
"294 171 CURVE SMOOTH",
"294 175 OFFCURVE",
"290 177 OFFCURVE",
"282 179 CURVE SMOOTH",
"266 182 OFFCURVE",
"192 183 OFFCURVE",
"159 183 CURVE SMOOTH",
"140 183 OFFCURVE",
"116 182 OFFCURVE",
"97 179 CURVE SMOOTH",
"88 178 OFFCURVE",
"84 174 OFFCURVE",
"84 161 CURVE SMOOTH",
"84 157 OFFCURVE",
"86 154 OFFCURVE",
"88 154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 229 LINE",
"126 236 OFFCURVE",
"244 238 OFFCURVE",
"296 238 CURVE SMOOTH",
"308 238 OFFCURVE",
"310 242 OFFCURVE",
"310 246 CURVE SMOOTH",
"310 250 OFFCURVE",
"306 252 OFFCURVE",
"298 254 CURVE SMOOTH",
"282 257 OFFCURVE",
"208 258 OFFCURVE",
"175 258 CURVE SMOOTH",
"156 258 OFFCURVE",
"132 257 OFFCURVE",
"113 254 CURVE SMOOTH",
"104 253 OFFCURVE",
"100 249 OFFCURVE",
"100 236 CURVE SMOOTH",
"100 232 OFFCURVE",
"102 229 OFFCURVE",
"104 229 CURVE SMOOTH"
);
}
);
width = 484;
}
);
unicode = 20A4;
},
{
glyphname = liraTurkish;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"251 111 OFFCURVE",
"148 0 OFFCURVE",
"54 11 CURVE",
"40 28 OFFCURVE",
"46 120 OFFCURVE",
"49 141 CURVE",
"72 153 OFFCURVE",
"87 159 OFFCURVE",
"95 162 CURVE SMOOTH",
"102 165 OFFCURVE",
"108 167 OFFCURVE",
"113 168 CURVE",
"114 167 OFFCURVE",
"115 168 OFFCURVE",
"116 168 CURVE",
"120 169 OFFCURVE",
"122 171 OFFCURVE",
"122 173 CURVE SMOOTH",
"122 175 OFFCURVE",
"122 176 OFFCURVE",
"121 178 CURVE SMOOTH",
"120 181 OFFCURVE",
"117 182 OFFCURVE",
"113 182 CURVE SMOOTH",
"104 181 OFFCURVE",
"85 175 OFFCURVE",
"54 164 CURVE",
"58 179 OFFCURVE",
"65 206 OFFCURVE",
"66 215 CURVE",
"95 228 LINE SMOOTH",
"102 231 OFFCURVE",
"108 231 OFFCURVE",
"113 232 CURVE SMOOTH",
"114 232 OFFCURVE",
"115 233 OFFCURVE",
"116 233 CURVE",
"120 234 OFFCURVE",
"122 236 OFFCURVE",
"122 239 CURVE SMOOTH",
"122 241 OFFCURVE",
"122 242 OFFCURVE",
"121 244 CURVE SMOOTH",
"120 247 OFFCURVE",
"117 248 OFFCURVE",
"113 248 CURVE SMOOTH",
"105 247 OFFCURVE",
"92 242 OFFCURVE",
"72 235 CURVE",
"83 277 LINE",
"103 353 LINE SMOOTH",
"106 364 OFFCURVE",
"107 373 OFFCURVE",
"108 383 CURVE SMOOTH",
"109 388 OFFCURVE",
"109 394 OFFCURVE",
"109 399 CURVE SMOOTH",
"109 409 OFFCURVE",
"108 418 OFFCURVE",
"105 425 CURVE",
"100 435 OFFCURVE",
"95 441 OFFCURVE",
"90 441 CURVE SMOOTH",
"78 441 OFFCURVE",
"70 428 OFFCURVE",
"65 405 CURVE SMOOTH",
"57 371 OFFCURVE",
"46 308 OFFCURVE",
"33 220 CURVE",
"15 213 LINE",
"-12 200 LINE SMOOTH",
"-17 197 OFFCURVE",
"-21 193 OFFCURVE",
"-21 188 CURVE SMOOTH",
"-21 186 OFFCURVE",
"-20 183 OFFCURVE",
"-19 180 CURVE SMOOTH",
"-18 176 OFFCURVE",
"-16 176 OFFCURVE",
"-12 177 CURVE",
"29 197 LINE",
"23 151 LINE",
"15 148 LINE",
"-12 134 LINE SMOOTH",
"-17 132 OFFCURVE",
"-21 128 OFFCURVE",
"-21 122 CURVE SMOOTH",
"-21 120 OFFCURVE",
"-20 117 OFFCURVE",
"-19 114 CURVE SMOOTH",
"-18 111 OFFCURVE",
"-16 111 OFFCURVE",
"-12 112 CURVE",
"-1 117 OFFCURVE",
"10 122 OFFCURVE",
"19 127 CURVE",
"15 101 OFFCURVE",
"11 28 OFFCURVE",
"20 -1 CURVE SMOOTH",
"23 -11 OFFCURVE",
"40 -12 OFFCURVE",
"57 -11 CURVE SMOOTH",
"168 -5 OFFCURVE",
"268 89 OFFCURVE",
"271 232 CURVE SMOOTH",
"271 247 OFFCURVE",
"269 259 OFFCURVE",
"259 259 CURVE SMOOTH",
"252 259 OFFCURVE",
"251 250 OFFCURVE",
"251 230 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"57 -11 LINE SMOOTH",
"168 -5 OFFCURVE",
"268 89 OFFCURVE",
"271 232 CURVE SMOOTH",
"271 247 OFFCURVE",
"269 259 OFFCURVE",
"259 259 CURVE SMOOTH",
"252 259 OFFCURVE",
"251 250 OFFCURVE",
"251 230 CURVE SMOOTH",
"251 116 OFFCURVE",
"157 10 OFFCURVE",
"67 10 CURVE SMOOTH",
"63 10 OFFCURVE",
"58 10 OFFCURVE",
"54 11 CURVE",
"47 19 OFFCURVE",
"45 45 OFFCURVE",
"45 72 CURVE SMOOTH",
"45 101 OFFCURVE",
"47 130 OFFCURVE",
"49 141 CURVE",
"72 153 OFFCURVE",
"87 159 OFFCURVE",
"95 162 CURVE SMOOTH",
"102 165 OFFCURVE",
"108 167 OFFCURVE",
"113 168 CURVE",
"114 167 OFFCURVE",
"115 168 OFFCURVE",
"116 168 CURVE SMOOTH",
"120 169 OFFCURVE",
"122 171 OFFCURVE",
"122 173 CURVE SMOOTH",
"122 175 OFFCURVE",
"122 176 OFFCURVE",
"121 178 CURVE SMOOTH",
"120 181 OFFCURVE",
"117 182 OFFCURVE",
"113 182 CURVE SMOOTH",
"104 181 OFFCURVE",
"85 175 OFFCURVE",
"54 164 CURVE",
"58 179 OFFCURVE",
"65 206 OFFCURVE",
"66 215 CURVE",
"95 228 LINE SMOOTH",
"102 231 OFFCURVE",
"108 231 OFFCURVE",
"113 232 CURVE SMOOTH",
"114 232 OFFCURVE",
"115 233 OFFCURVE",
"116 233 CURVE SMOOTH",
"120 234 OFFCURVE",
"122 236 OFFCURVE",
"122 239 CURVE SMOOTH",
"122 241 OFFCURVE",
"122 242 OFFCURVE",
"121 244 CURVE SMOOTH",
"120 247 OFFCURVE",
"117 248 OFFCURVE",
"113 248 CURVE SMOOTH",
"105 247 OFFCURVE",
"92 242 OFFCURVE",
"72 235 CURVE",
"83 277 LINE",
"103 353 LINE SMOOTH",
"106 364 OFFCURVE",
"107 373 OFFCURVE",
"108 383 CURVE SMOOTH",
"109 388 OFFCURVE",
"109 394 OFFCURVE",
"109 399 CURVE SMOOTH",
"109 409 OFFCURVE",
"108 418 OFFCURVE",
"105 425 CURVE SMOOTH",
"100 435 OFFCURVE",
"95 441 OFFCURVE",
"90 441 CURVE SMOOTH",
"78 441 OFFCURVE",
"70 428 OFFCURVE",
"65 405 CURVE SMOOTH",
"57 371 OFFCURVE",
"46 308 OFFCURVE",
"33 220 CURVE",
"15 213 LINE",
"-12 200 LINE SMOOTH",
"-17 197 OFFCURVE",
"-21 193 OFFCURVE",
"-21 188 CURVE SMOOTH",
"-21 186 OFFCURVE",
"-20 183 OFFCURVE",
"-19 180 CURVE SMOOTH",
"-18 176 OFFCURVE",
"-16 176 OFFCURVE",
"-12 177 CURVE",
"29 197 LINE",
"23 151 LINE",
"15 148 LINE",
"-12 134 LINE SMOOTH",
"-17 132 OFFCURVE",
"-21 128 OFFCURVE",
"-21 122 CURVE SMOOTH",
"-21 120 OFFCURVE",
"-20 117 OFFCURVE",
"-19 114 CURVE SMOOTH",
"-18 111 OFFCURVE",
"-16 111 OFFCURVE",
"-12 112 CURVE",
"-1 117 OFFCURVE",
"10 122 OFFCURVE",
"19 127 CURVE",
"17 113 OFFCURVE",
"15 84 OFFCURVE",
"15 56 CURVE SMOOTH",
"15 34 OFFCURVE",
"16 12 OFFCURVE",
"20 -1 CURVE SMOOTH",
"22 -9 OFFCURVE",
"34 -11 OFFCURVE",
"48 -11 CURVE SMOOTH"
);
}
);
width = 271;
}
);
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"342 434 CURVE SMOOTH",
"169 434 OFFCURVE",
"97 244 OFFCURVE",
"26 11 CURVE SMOOTH",
"18 -14 OFFCURVE",
"54 -15 OFFCURVE",
"58 0 CURVE SMOOTH",
"109 208 OFFCURVE",
"218 411 OFFCURVE",
"335 411 CURVE SMOOTH",
"414 411 OFFCURVE",
"477 341 OFFCURVE",
"493 204 CURVE SMOOTH",
"499 143 OFFCURVE",
"495 94 OFFCURVE",
"495 21 CURVE SMOOTH",
"495 0 OFFCURVE",
"528 -27 OFFCURVE",
"527 13 CURVE SMOOTH",
"528 77 OFFCURVE",
"527 143 OFFCURVE",
"521 204 CURVE SMOOTH",
"505 361 OFFCURVE",
"456 434 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"292 7 OFFCURVE",
"302 18 OFFCURVE",
"302 28 CURVE SMOOTH",
"303 98 OFFCURVE",
"331 303 OFFCURVE",
"342 374 CURVE SMOOTH",
"351 428 OFFCURVE",
"362 464 OFFCURVE",
"366 494 CURVE SMOOTH",
"366 501 OFFCURVE",
"362 508 OFFCURVE",
"353 517 CURVE SMOOTH",
"349 522 OFFCURVE",
"344 523 OFFCURVE",
"336 521 CURVE",
"331 517 OFFCURVE",
"329 497 OFFCURVE",
"325 464 CURVE SMOOTH",
"322 438 LINE",
"319 397 LINE",
"278 48 LINE SMOOTH",
"276 33 OFFCURVE",
"278 23 OFFCURVE",
"283 17 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"49 -10 OFFCURVE",
"56 -6 OFFCURVE",
"58 0 CURVE SMOOTH",
"109 208 OFFCURVE",
"218 411 OFFCURVE",
"335 411 CURVE SMOOTH",
"414 411 OFFCURVE",
"477 341 OFFCURVE",
"493 204 CURVE SMOOTH",
"496 178 OFFCURVE",
"496 154 OFFCURVE",
"496 129 CURVE SMOOTH",
"496 97 OFFCURVE",
"495 63 OFFCURVE",
"495 21 CURVE SMOOTH",
"495 8 OFFCURVE",
"508 -8 OFFCURVE",
"517 -8 CURVE SMOOTH",
"523 -8 OFFCURVE",
"527 -3 OFFCURVE",
"527 11 CURVE SMOOTH",
"527 55 LINE SMOOTH",
"527 105 OFFCURVE",
"526 156 OFFCURVE",
"521 204 CURVE SMOOTH",
"505 361 OFFCURVE",
"456 434 OFFCURVE",
"342 434 CURVE SMOOTH",
"169 434 OFFCURVE",
"97 244 OFFCURVE",
"26 11 CURVE SMOOTH",
"21 -3 OFFCURVE",
"31 -10 OFFCURVE",
"41 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 13 OFFCURVE",
"302 21 OFFCURVE",
"302 28 CURVE SMOOTH",
"303 98 OFFCURVE",
"331 303 OFFCURVE",
"342 374 CURVE SMOOTH",
"351 428 OFFCURVE",
"362 464 OFFCURVE",
"366 494 CURVE",
"366 501 OFFCURVE",
"362 508 OFFCURVE",
"353 517 CURVE SMOOTH",
"350 520 OFFCURVE",
"347 522 OFFCURVE",
"343 522 CURVE SMOOTH",
"341 522 OFFCURVE",
"339 522 OFFCURVE",
"336 521 CURVE",
"331 517 OFFCURVE",
"329 497 OFFCURVE",
"325 464 CURVE SMOOTH",
"322 438 LINE",
"319 397 LINE",
"278 48 LINE SMOOTH",
"276 33 OFFCURVE",
"278 23 OFFCURVE",
"283 17 CURVE SMOOTH",
"286 14 OFFCURVE",
"288 13 OFFCURVE",
"291 13 CURVE SMOOTH"
);
}
);
width = 547;
}
);
unicode = 20BC;
},
{
glyphname = naira;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"152 217 OFFCURVE",
"245 4 OFFCURVE",
"291 0 CURVE",
"428 27 OFFCURVE",
"469 524 OFFCURVE",
"365 456 CURVE SMOOTH",
"358 455 OFFCURVE",
"369 448 OFFCURVE",
"376 424 CURVE SMOOTH",
"387 386 OFFCURVE",
"389 305 OFFCURVE",
"386 270 CURVE SMOOTH",
"377 175 OFFCURVE",
"349 34 OFFCURVE",
"298 23 CURVE",
"256 46 OFFCURVE",
"170 327 OFFCURVE",
"148 421 CURVE SMOOTH",
"144 432 OFFCURVE",
"139 439 OFFCURVE",
"120 425 CURVE SMOOTH",
"108 413 OFFCURVE",
"76 257 OFFCURVE",
"42 53 CURVE SMOOTH",
"31 -16 OFFCURVE",
"59 -7 OFFCURVE",
"62 17 CURVE SMOOTH",
"77 114 OFFCURVE",
"107 303 OFFCURVE",
"140 397 CURVE"
);
},
{
closed = 1;
nodes = (
"85 293 OFFCURVE",
"333 295 OFFCURVE",
"443 295 CURVE SMOOTH",
"465 295 OFFCURVE",
"473 298 OFFCURVE",
"473 302 CURVE SMOOTH",
"474 306 OFFCURVE",
"466 309 OFFCURVE",
"446 311 CURVE SMOOTH",
"414 314 OFFCURVE",
"257 315 OFFCURVE",
"187 315 CURVE SMOOTH",
"148 315 OFFCURVE",
"97 314 OFFCURVE",
"58 311 CURVE SMOOTH",
"39 310 OFFCURVE",
"31 306 OFFCURVE",
"30 293 CURVE SMOOTH",
"30 288 OFFCURVE",
"35 285 OFFCURVE",
"41 286 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 218 OFFCURVE",
"330 220 OFFCURVE",
"440 220 CURVE SMOOTH",
"462 220 OFFCURVE",
"470 223 OFFCURVE",
"470 227 CURVE SMOOTH",
"470 231 OFFCURVE",
"462 234 OFFCURVE",
"442 236 CURVE SMOOTH",
"411 239 OFFCURVE",
"254 240 OFFCURVE",
"184 240 CURVE SMOOTH",
"145 240 OFFCURVE",
"94 239 OFFCURVE",
"54 236 CURVE SMOOTH",
"35 235 OFFCURVE",
"27 231 OFFCURVE",
"26 218 CURVE SMOOTH",
"26 213 OFFCURVE",
"31 210 OFFCURVE",
"37 211 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"55 -1 OFFCURVE",
"61 7 OFFCURVE",
"62 17 CURVE SMOOTH",
"77 114 OFFCURVE",
"107 303 OFFCURVE",
"140 397 CURVE",
"152 217 OFFCURVE",
"245 4 OFFCURVE",
"291 0 CURVE",
"375 16 OFFCURVE",
"423 212 OFFCURVE",
"423 343 CURVE SMOOTH",
"423 411 OFFCURVE",
"410 462 OFFCURVE",
"383 462 CURVE SMOOTH",
"378 462 OFFCURVE",
"372 460 OFFCURVE",
"365 456 CURVE",
"358 455 OFFCURVE",
"369 448 OFFCURVE",
"376 424 CURVE SMOOTH",
"384 396 OFFCURVE",
"387 346 OFFCURVE",
"387 307 CURVE SMOOTH",
"387 292 OFFCURVE",
"387 279 OFFCURVE",
"386 270 CURVE SMOOTH",
"377 175 OFFCURVE",
"349 34 OFFCURVE",
"298 23 CURVE",
"256 46 OFFCURVE",
"170 327 OFFCURVE",
"148 421 CURVE SMOOTH",
"146 428 OFFCURVE",
"143 433 OFFCURVE",
"137 433 CURVE SMOOTH",
"133 433 OFFCURVE",
"128 431 OFFCURVE",
"120 425 CURVE",
"108 413 OFFCURVE",
"76 257 OFFCURVE",
"42 53 CURVE SMOOTH",
"40 42 OFFCURVE",
"40 32 OFFCURVE",
"40 25 CURVE SMOOTH",
"40 6 OFFCURVE",
"44 -1 OFFCURVE",
"50 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"37 211 LINE SMOOTH",
"81 218 OFFCURVE",
"330 220 OFFCURVE",
"440 220 CURVE SMOOTH",
"462 220 OFFCURVE",
"470 223 OFFCURVE",
"470 227 CURVE SMOOTH",
"470 231 OFFCURVE",
"462 234 OFFCURVE",
"442 236 CURVE SMOOTH",
"411 239 OFFCURVE",
"254 240 OFFCURVE",
"184 240 CURVE SMOOTH",
"145 240 OFFCURVE",
"94 239 OFFCURVE",
"54 236 CURVE SMOOTH",
"35 235 OFFCURVE",
"27 231 OFFCURVE",
"26 218 CURVE SMOOTH",
"26 214 OFFCURVE",
"30 211 OFFCURVE",
"35 211 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41 286 LINE SMOOTH",
"85 293 OFFCURVE",
"333 295 OFFCURVE",
"443 295 CURVE SMOOTH",
"465 295 OFFCURVE",
"473 298 OFFCURVE",
"473 302 CURVE SMOOTH",
"474 306 OFFCURVE",
"466 309 OFFCURVE",
"446 311 CURVE SMOOTH",
"414 314 OFFCURVE",
"257 315 OFFCURVE",
"187 315 CURVE SMOOTH",
"148 315 OFFCURVE",
"97 314 OFFCURVE",
"58 311 CURVE SMOOTH",
"39 310 OFFCURVE",
"31 306 OFFCURVE",
"30 293 CURVE SMOOTH",
"30 289 OFFCURVE",
"34 286 OFFCURVE",
"39 286 CURVE SMOOTH"
);
}
);
width = 473;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"156 341 OFFCURVE",
"131 185 OFFCURVE",
"131 80 CURVE SMOOTH",
"131 38 OFFCURVE",
"135 4 OFFCURVE",
"145 -13 CURVE SMOOTH",
"157 -34 OFFCURVE",
"166 -41 OFFCURVE",
"173 -41 CURVE SMOOTH",
"179 -41 OFFCURVE",
"182 -34 OFFCURVE",
"182 -26 CURVE SMOOTH",
"182 -19 OFFCURVE",
"180 -12 OFFCURVE",
"176 -5 CURVE SMOOTH",
"160 21 OFFCURVE",
"154 56 OFFCURVE",
"154 96 CURVE SMOOTH",
"154 206 OFFCURVE",
"201 348 OFFCURVE",
"219 394 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 435 OFFCURVE",
"386 367 OFFCURVE",
"386 299 CURVE SMOOTH",
"386 231 OFFCURVE",
"327 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"199 162 OFFCURVE",
"196 159 OFFCURVE",
"196 157 CURVE SMOOTH",
"196 153 OFFCURVE",
"201 149 OFFCURVE",
"208 149 CURVE SMOOTH",
"346 145 OFFCURVE",
"423 229 OFFCURVE",
"423 309 CURVE SMOOTH",
"423 378 OFFCURVE",
"367 443 OFFCURVE",
"245 448 CURVE SMOOTH",
"176 450 OFFCURVE",
"104 439 OFFCURVE",
"50 424 CURVE SMOOTH",
"42 421 OFFCURVE",
"33 409 OFFCURVE",
"33 402 CURVE SMOOTH",
"33 399 OFFCURVE",
"34 397 OFFCURVE",
"38 397 CURVE SMOOTH",
"41 397 OFFCURVE",
"45 398 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 268 OFFCURVE",
"352 270 OFFCURVE",
"462 270 CURVE SMOOTH",
"484 270 OFFCURVE",
"492 273 OFFCURVE",
"492 277 CURVE SMOOTH",
"493 281 OFFCURVE",
"485 284 OFFCURVE",
"465 286 CURVE SMOOTH",
"433 289 OFFCURVE",
"276 290 OFFCURVE",
"206 290 CURVE SMOOTH",
"167 290 OFFCURVE",
"116 289 OFFCURVE",
"77 286 CURVE SMOOTH",
"58 285 OFFCURVE",
"50 281 OFFCURVE",
"49 268 CURVE SMOOTH",
"49 264 OFFCURVE",
"53 261 OFFCURVE",
"58 261 CURVE SMOOTH",
"58 261 OFFCURVE",
"59 261 OFFCURVE",
"60 261 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"346 145 OFFCURVE",
"423 229 OFFCURVE",
"423 309 CURVE SMOOTH",
"423 381 OFFCURVE",
"362 448 OFFCURVE",
"229 448 CURVE SMOOTH",
"165 448 OFFCURVE",
"100 438 OFFCURVE",
"50 424 CURVE SMOOTH",
"42 421 OFFCURVE",
"33 409 OFFCURVE",
"33 402 CURVE SMOOTH",
"33 399 OFFCURVE",
"34 397 OFFCURVE",
"38 397 CURVE SMOOTH",
"41 397 OFFCURVE",
"45 398 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH",
"328 435 OFFCURVE",
"386 367 OFFCURVE",
"386 299 CURVE SMOOTH",
"386 231 OFFCURVE",
"327 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"199 162 OFFCURVE",
"196 159 OFFCURVE",
"196 157 CURVE SMOOTH",
"196 153 OFFCURVE",
"201 149 OFFCURVE",
"208 149 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 -41 OFFCURVE",
"182 -34 OFFCURVE",
"182 -26 CURVE SMOOTH",
"182 -19 OFFCURVE",
"180 -12 OFFCURVE",
"176 -5 CURVE SMOOTH",
"160 21 OFFCURVE",
"154 56 OFFCURVE",
"154 96 CURVE SMOOTH",
"154 206 OFFCURVE",
"201 348 OFFCURVE",
"219 394 CURVE SMOOTH",
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"156 341 OFFCURVE",
"131 185 OFFCURVE",
"131 80 CURVE SMOOTH",
"131 38 OFFCURVE",
"135 4 OFFCURVE",
"145 -13 CURVE SMOOTH",
"157 -34 OFFCURVE",
"166 -41 OFFCURVE",
"173 -41 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 261 LINE SMOOTH",
"104 268 OFFCURVE",
"352 270 OFFCURVE",
"462 270 CURVE SMOOTH",
"484 270 OFFCURVE",
"492 273 OFFCURVE",
"492 277 CURVE SMOOTH",
"493 281 OFFCURVE",
"485 284 OFFCURVE",
"465 286 CURVE SMOOTH",
"433 289 OFFCURVE",
"276 290 OFFCURVE",
"206 290 CURVE SMOOTH",
"167 290 OFFCURVE",
"116 289 OFFCURVE",
"77 286 CURVE SMOOTH",
"58 285 OFFCURVE",
"50 281 OFFCURVE",
"49 268 CURVE SMOOTH",
"49 264 OFFCURVE",
"53 261 OFFCURVE",
"58 261 CURVE SMOOTH"
);
}
);
width = 532;
}
);
unicode = 20A7;
},
{
glyphname = peso;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"156 341 OFFCURVE",
"131 185 OFFCURVE",
"131 80 CURVE SMOOTH",
"131 38 OFFCURVE",
"135 4 OFFCURVE",
"145 -13 CURVE SMOOTH",
"157 -34 OFFCURVE",
"166 -41 OFFCURVE",
"173 -41 CURVE SMOOTH",
"179 -41 OFFCURVE",
"182 -34 OFFCURVE",
"182 -26 CURVE SMOOTH",
"182 -19 OFFCURVE",
"180 -12 OFFCURVE",
"176 -5 CURVE SMOOTH",
"160 21 OFFCURVE",
"154 56 OFFCURVE",
"154 96 CURVE SMOOTH",
"154 206 OFFCURVE",
"201 348 OFFCURVE",
"219 394 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 435 OFFCURVE",
"386 367 OFFCURVE",
"386 299 CURVE SMOOTH",
"386 231 OFFCURVE",
"327 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"199 162 OFFCURVE",
"196 159 OFFCURVE",
"196 157 CURVE SMOOTH",
"196 153 OFFCURVE",
"201 149 OFFCURVE",
"208 149 CURVE SMOOTH",
"346 145 OFFCURVE",
"423 229 OFFCURVE",
"423 309 CURVE SMOOTH",
"423 378 OFFCURVE",
"367 443 OFFCURVE",
"245 448 CURVE SMOOTH",
"176 450 OFFCURVE",
"104 439 OFFCURVE",
"50 424 CURVE SMOOTH",
"42 421 OFFCURVE",
"33 409 OFFCURVE",
"33 402 CURVE SMOOTH",
"33 399 OFFCURVE",
"34 397 OFFCURVE",
"38 397 CURVE SMOOTH",
"41 397 OFFCURVE",
"45 398 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 315 OFFCURVE",
"352 317 OFFCURVE",
"462 317 CURVE SMOOTH",
"484 317 OFFCURVE",
"492 320 OFFCURVE",
"492 324 CURVE SMOOTH",
"493 328 OFFCURVE",
"485 331 OFFCURVE",
"465 333 CURVE SMOOTH",
"433 336 OFFCURVE",
"276 337 OFFCURVE",
"206 337 CURVE SMOOTH",
"167 337 OFFCURVE",
"116 336 OFFCURVE",
"77 333 CURVE SMOOTH",
"58 332 OFFCURVE",
"50 328 OFFCURVE",
"49 315 CURVE SMOOTH",
"49 311 OFFCURVE",
"53 308 OFFCURVE",
"58 308 CURVE SMOOTH",
"58 308 OFFCURVE",
"59 308 OFFCURVE",
"60 308 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 241 OFFCURVE",
"352 243 OFFCURVE",
"462 243 CURVE SMOOTH",
"484 243 OFFCURVE",
"492 246 OFFCURVE",
"492 250 CURVE SMOOTH",
"493 254 OFFCURVE",
"485 257 OFFCURVE",
"465 259 CURVE SMOOTH",
"433 262 OFFCURVE",
"276 263 OFFCURVE",
"206 263 CURVE SMOOTH",
"167 263 OFFCURVE",
"116 262 OFFCURVE",
"77 259 CURVE SMOOTH",
"58 258 OFFCURVE",
"50 254 OFFCURVE",
"49 241 CURVE SMOOTH",
"49 237 OFFCURVE",
"53 234 OFFCURVE",
"58 234 CURVE SMOOTH",
"58 234 OFFCURVE",
"59 234 OFFCURVE",
"60 234 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"346 145 OFFCURVE",
"423 229 OFFCURVE",
"423 309 CURVE SMOOTH",
"423 381 OFFCURVE",
"362 448 OFFCURVE",
"229 448 CURVE SMOOTH",
"165 448 OFFCURVE",
"100 438 OFFCURVE",
"50 424 CURVE SMOOTH",
"42 421 OFFCURVE",
"33 409 OFFCURVE",
"33 402 CURVE SMOOTH",
"33 399 OFFCURVE",
"34 397 OFFCURVE",
"38 397 CURVE SMOOTH",
"41 397 OFFCURVE",
"45 398 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH",
"328 435 OFFCURVE",
"386 367 OFFCURVE",
"386 299 CURVE SMOOTH",
"386 231 OFFCURVE",
"327 162 OFFCURVE",
"209 162 CURVE SMOOTH",
"199 162 OFFCURVE",
"196 159 OFFCURVE",
"196 157 CURVE SMOOTH",
"196 153 OFFCURVE",
"201 149 OFFCURVE",
"208 149 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 -41 OFFCURVE",
"182 -34 OFFCURVE",
"182 -26 CURVE SMOOTH",
"182 -19 OFFCURVE",
"180 -12 OFFCURVE",
"176 -5 CURVE SMOOTH",
"160 21 OFFCURVE",
"154 56 OFFCURVE",
"154 96 CURVE SMOOTH",
"154 206 OFFCURVE",
"201 348 OFFCURVE",
"219 394 CURVE SMOOTH",
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"156 341 OFFCURVE",
"131 185 OFFCURVE",
"131 80 CURVE SMOOTH",
"131 38 OFFCURVE",
"135 4 OFFCURVE",
"145 -13 CURVE SMOOTH",
"157 -34 OFFCURVE",
"166 -41 OFFCURVE",
"173 -41 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 234 LINE SMOOTH",
"104 241 OFFCURVE",
"352 243 OFFCURVE",
"462 243 CURVE SMOOTH",
"484 243 OFFCURVE",
"492 246 OFFCURVE",
"492 250 CURVE SMOOTH",
"493 254 OFFCURVE",
"485 257 OFFCURVE",
"465 259 CURVE SMOOTH",
"433 262 OFFCURVE",
"276 263 OFFCURVE",
"206 263 CURVE SMOOTH",
"167 263 OFFCURVE",
"116 262 OFFCURVE",
"77 259 CURVE SMOOTH",
"58 258 OFFCURVE",
"50 254 OFFCURVE",
"49 241 CURVE SMOOTH",
"49 237 OFFCURVE",
"53 234 OFFCURVE",
"58 234 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 308 LINE SMOOTH",
"104 315 OFFCURVE",
"352 317 OFFCURVE",
"462 317 CURVE SMOOTH",
"484 317 OFFCURVE",
"492 320 OFFCURVE",
"492 324 CURVE SMOOTH",
"493 328 OFFCURVE",
"485 331 OFFCURVE",
"465 333 CURVE SMOOTH",
"433 336 OFFCURVE",
"276 337 OFFCURVE",
"206 337 CURVE SMOOTH",
"167 337 OFFCURVE",
"116 336 OFFCURVE",
"77 333 CURVE SMOOTH",
"58 332 OFFCURVE",
"50 328 OFFCURVE",
"49 315 CURVE SMOOTH",
"49 311 OFFCURVE",
"53 308 OFFCURVE",
"58 308 CURVE SMOOTH"
);
}
);
width = 555;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"176 450 OFFCURVE",
"104 439 OFFCURVE",
"50 424 CURVE SMOOTH",
"35 419 OFFCURVE",
"19 386 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH",
"325 435 OFFCURVE",
"382 371 OFFCURVE",
"385 304 CURVE SMOOTH",
"390 207 OFFCURVE",
"309 169 OFFCURVE",
"206 169 CURVE SMOOTH",
"160 169 LINE",
"172 262 OFFCURVE",
"204 358 OFFCURVE",
"219 394 CURVE SMOOTH",
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"162 361 OFFCURVE",
"144 259 OFFCURVE",
"136 168 CURVE",
"47 165 LINE SMOOTH",
"28 164 OFFCURVE",
"20 160 OFFCURVE",
"19 147 CURVE SMOOTH",
"19 142 OFFCURVE",
"24 139 OFFCURVE",
"30 140 CURVE SMOOTH",
"45 142 OFFCURVE",
"98 145 OFFCURVE",
"134 146 CURVE",
"129 75 OFFCURVE",
"131 13 OFFCURVE",
"145 -13 CURVE SMOOTH",
"176 -67 OFFCURVE",
"191 -30 OFFCURVE",
"176 -5 CURVE SMOOTH",
"154 31 OFFCURVE",
"151 87 OFFCURVE",
"157 147 CURVE",
"318 142 OFFCURVE",
"421 176 OFFCURVE",
"423 307 CURVE SMOOTH",
"424 376 OFFCURVE",
"368 443 OFFCURVE",
"245 448 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 46 OFFCURVE",
"197 48 OFFCURVE",
"249 48 CURVE SMOOTH",
"260 48 OFFCURVE",
"263 51 OFFCURVE",
"263 55 CURVE SMOOTH",
"264 59 OFFCURVE",
"260 62 OFFCURVE",
"251 64 CURVE SMOOTH",
"235 67 OFFCURVE",
"161 68 OFFCURVE",
"128 68 CURVE SMOOTH",
"109 68 OFFCURVE",
"85 67 OFFCURVE",
"66 64 CURVE SMOOTH",
"57 63 OFFCURVE",
"53 59 OFFCURVE",
"53 46 CURVE SMOOTH",
"53 41 OFFCURVE",
"55 38 OFFCURVE",
"58 39 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"179 -41 OFFCURVE",
"182 -34 OFFCURVE",
"182 -26 CURVE SMOOTH",
"182 -19 OFFCURVE",
"180 -12 OFFCURVE",
"176 -5 CURVE SMOOTH",
"160 21 OFFCURVE",
"154 56 OFFCURVE",
"154 97 CURVE SMOOTH",
"154 113 OFFCURVE",
"155 130 OFFCURVE",
"157 147 CURVE",
"319 142 OFFCURVE",
"423 177 OFFCURVE",
"423 309 CURVE SMOOTH",
"423 380 OFFCURVE",
"362 448 OFFCURVE",
"229 448 CURVE SMOOTH",
"165 448 OFFCURVE",
"100 438 OFFCURVE",
"50 424 CURVE SMOOTH",
"42 421 OFFCURVE",
"33 409 OFFCURVE",
"33 402 CURVE SMOOTH",
"33 399 OFFCURVE",
"34 397 OFFCURVE",
"38 397 CURVE SMOOTH",
"41 397 OFFCURVE",
"45 398 OFFCURVE",
"51 401 CURVE SMOOTH",
"88 417 OFFCURVE",
"162 435 OFFCURVE",
"215 435 CURVE SMOOTH",
"330 435 OFFCURVE",
"385 365 OFFCURVE",
"385 296 CURVE SMOOTH",
"385 205 OFFCURVE",
"306 169 OFFCURVE",
"206 169 CURVE SMOOTH",
"160 169 LINE",
"172 262 OFFCURVE",
"204 358 OFFCURVE",
"219 394 CURVE SMOOTH",
"224 404 OFFCURVE",
"181 424 OFFCURVE",
"179 417 CURVE SMOOTH",
"162 361 OFFCURVE",
"144 259 OFFCURVE",
"136 168 CURVE",
"47 165 LINE SMOOTH",
"28 164 OFFCURVE",
"20 160 OFFCURVE",
"19 147 CURVE SMOOTH",
"19 143 OFFCURVE",
"23 140 OFFCURVE",
"28 140 CURVE SMOOTH",
"30 140 LINE SMOOTH",
"45 142 OFFCURVE",
"98 145 OFFCURVE",
"134 146 CURVE",
"132 123 OFFCURVE",
"132 101 OFFCURVE",
"132 81 CURVE SMOOTH",
"132 39 OFFCURVE",
"135 5 OFFCURVE",
"145 -13 CURVE SMOOTH",
"157 -34 OFFCURVE",
"166 -41 OFFCURVE",
"173 -41 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 39 LINE",
"79 46 OFFCURVE",
"197 48 OFFCURVE",
"249 48 CURVE SMOOTH",
"261 48 OFFCURVE",
"263 52 OFFCURVE",
"263 56 CURVE SMOOTH",
"263 60 OFFCURVE",
"259 62 OFFCURVE",
"251 64 CURVE SMOOTH",
"235 67 OFFCURVE",
"161 68 OFFCURVE",
"128 68 CURVE SMOOTH",
"109 68 OFFCURVE",
"85 67 OFFCURVE",
"66 64 CURVE SMOOTH",
"57 63 OFFCURVE",
"53 59 OFFCURVE",
"53 46 CURVE SMOOTH",
"53 42 OFFCURVE",
"55 39 OFFCURVE",
"57 39 CURVE SMOOTH"
);
}
);
width = 463;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"247 426 OFFCURVE",
"303 360 OFFCURVE",
"303 294 CURVE SMOOTH",
"303 228 OFFCURVE",
"217 166 OFFCURVE",
"103 166 CURVE SMOOTH",
"84 166 OFFCURVE",
"89 154 OFFCURVE",
"102 154 CURVE SMOOTH",
"235 150 OFFCURVE",
"339 226 OFFCURVE",
"339 304 CURVE SMOOTH",
"339 371 OFFCURVE",
"285 433 OFFCURVE",
"168 438 CURVE SMOOTH",
"101 440 OFFCURVE",
"88 426 OFFCURVE",
"139 426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 140 OFFCURVE",
"134 124 OFFCURVE",
"153 101 CURVE SMOOTH",
"219 16 OFFCURVE",
"262 -28 OFFCURVE",
"289 -28 CURVE SMOOTH",
"295 -28 OFFCURVE",
"302 -25 OFFCURVE",
"307 -19 CURVE",
"287 -4 OFFCURVE",
"265 17 OFFCURVE",
"241 45 CURVE SMOOTH",
"232 53 OFFCURVE",
"225 62 OFFCURVE",
"217 72 CURVE SMOOTH",
"194 98 LINE SMOOTH",
"176 119 OFFCURVE",
"159 135 OFFCURVE",
"145 144 CURVE SMOOTH",
"128 157 OFFCURVE",
"110 163 OFFCURVE",
"86 167 CURVE",
"57 168 OFFCURVE",
"68 148 OFFCURVE",
"79 148 CURVE"
);
},
{
closed = 1;
nodes = (
"68 287 OFFCURVE",
"288 289 OFFCURVE",
"385 289 CURVE SMOOTH",
"404 289 OFFCURVE",
"411 292 OFFCURVE",
"411 296 CURVE SMOOTH",
"412 300 OFFCURVE",
"405 303 OFFCURVE",
"388 305 CURVE SMOOTH",
"359 308 OFFCURVE",
"220 309 OFFCURVE",
"158 309 CURVE SMOOTH",
"124 309 OFFCURVE",
"79 308 OFFCURVE",
"44 305 CURVE SMOOTH",
"27 304 OFFCURVE",
"20 300 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 283 OFFCURVE",
"23 280 OFFCURVE",
"27 280 CURVE SMOOTH",
"27 280 OFFCURVE",
"28 280 OFFCURVE",
"29 280 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 417 OFFCURVE",
"297 419 OFFCURVE",
"395 419 CURVE SMOOTH",
"414 419 OFFCURVE",
"421 422 OFFCURVE",
"421 426 CURVE SMOOTH",
"422 430 OFFCURVE",
"415 433 OFFCURVE",
"397 435 CURVE SMOOTH",
"369 438 OFFCURVE",
"230 439 OFFCURVE",
"168 439 CURVE SMOOTH",
"134 439 OFFCURVE",
"89 438 OFFCURVE",
"54 435 CURVE SMOOTH",
"37 434 OFFCURVE",
"30 430 OFFCURVE",
"29 417 CURVE SMOOTH",
"29 413 OFFCURVE",
"33 410 OFFCURVE",
"37 410 CURVE SMOOTH",
"37 410 OFFCURVE",
"38 410 OFFCURVE",
"39 410 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"235 150 OFFCURVE",
"339 226 OFFCURVE",
"339 304 CURVE SMOOTH",
"339 373 OFFCURVE",
"281 438 OFFCURVE",
"156 438 CURVE SMOOTH",
"125 438 OFFCURVE",
"108 435 OFFCURVE",
"108 431 CURVE SMOOTH",
"108 428 OFFCURVE",
"118 426 OFFCURVE",
"139 426 CURVE SMOOTH",
"247 426 OFFCURVE",
"303 360 OFFCURVE",
"303 294 CURVE SMOOTH",
"303 228 OFFCURVE",
"217 166 OFFCURVE",
"103 166 CURVE SMOOTH",
"94 166 OFFCURVE",
"90 163 OFFCURVE",
"90 161 CURVE SMOOTH",
"90 157 OFFCURVE",
"95 154 OFFCURVE",
"102 154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"295 -28 OFFCURVE",
"302 -25 OFFCURVE",
"307 -19 CURVE",
"287 -4 OFFCURVE",
"265 17 OFFCURVE",
"241 45 CURVE",
"232 53 OFFCURVE",
"225 62 OFFCURVE",
"217 72 CURVE SMOOTH",
"194 98 LINE SMOOTH",
"176 119 OFFCURVE",
"159 135 OFFCURVE",
"145 144 CURVE SMOOTH",
"128 157 OFFCURVE",
"110 163 OFFCURVE",
"86 167 CURVE",
"72 167 OFFCURVE",
"67 163 OFFCURVE",
"67 159 CURVE SMOOTH",
"67 154 OFFCURVE",
"73 148 OFFCURVE",
"79 148 CURVE",
"110 140 OFFCURVE",
"134 124 OFFCURVE",
"153 101 CURVE SMOOTH",
"219 16 OFFCURVE",
"262 -28 OFFCURVE",
"289 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 280 LINE SMOOTH",
"68 287 OFFCURVE",
"288 289 OFFCURVE",
"385 289 CURVE SMOOTH",
"404 289 OFFCURVE",
"411 292 OFFCURVE",
"411 296 CURVE SMOOTH",
"412 300 OFFCURVE",
"405 303 OFFCURVE",
"388 305 CURVE SMOOTH",
"359 308 OFFCURVE",
"220 309 OFFCURVE",
"158 309 CURVE SMOOTH",
"124 309 OFFCURVE",
"79 308 OFFCURVE",
"44 305 CURVE SMOOTH",
"27 304 OFFCURVE",
"20 300 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 283 OFFCURVE",
"23 280 OFFCURVE",
"27 280 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 410 LINE SMOOTH",
"78 417 OFFCURVE",
"297 419 OFFCURVE",
"395 419 CURVE SMOOTH",
"414 419 OFFCURVE",
"421 422 OFFCURVE",
"421 426 CURVE SMOOTH",
"422 430 OFFCURVE",
"415 433 OFFCURVE",
"397 435 CURVE SMOOTH",
"369 438 OFFCURVE",
"230 439 OFFCURVE",
"168 439 CURVE SMOOTH",
"134 439 OFFCURVE",
"89 438 OFFCURVE",
"54 435 CURVE SMOOTH",
"37 434 OFFCURVE",
"30 430 OFFCURVE",
"29 417 CURVE SMOOTH",
"29 413 OFFCURVE",
"33 410 OFFCURVE",
"37 410 CURVE SMOOTH"
);
}
);
width = 431;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"437 -16 OFFCURVE",
"484 10 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 97 OFFCURVE",
"450 121 OFFCURVE",
"416 121 CURVE SMOOTH",
"390 121 OFFCURVE",
"368 107 OFFCURVE",
"368 86 CURVE SMOOTH",
"368 76 OFFCURVE",
"374 65 OFFCURVE",
"387 54 CURVE",
"397 48 OFFCURVE",
"412 54 OFFCURVE",
"400 63 CURVE SMOOTH",
"389 71 OFFCURVE",
"383 80 OFFCURVE",
"383 85 CURVE SMOOTH",
"383 94 OFFCURVE",
"400 99 OFFCURVE",
"414 99 CURVE SMOOTH",
"442 99 OFFCURVE",
"464 89 OFFCURVE",
"464 61 CURVE SMOOTH",
"464 23 OFFCURVE",
"425 7 OFFCURVE",
"387 7 CURVE SMOOTH",
"323 7 OFFCURVE",
"275 35 OFFCURVE",
"147 77 CURVE",
"208 170 OFFCURVE",
"274 434 OFFCURVE",
"363 434 CURVE SMOOTH",
"391 434 OFFCURVE",
"392 386 OFFCURVE",
"377 341 CURVE SMOOTH",
"369 318 OFFCURVE",
"360 283 OFFCURVE",
"368 283 CURVE SMOOTH",
"383 283 OFFCURVE",
"394 308 OFFCURVE",
"402 330 CURVE SMOOTH",
"422 383 OFFCURVE",
"414 455 OFFCURVE",
"347 455 CURVE SMOOTH",
"272 455 OFFCURVE",
"229 360 OFFCURVE",
"195 252 CURVE SMOOTH",
"173 183 OFFCURVE",
"169 162 OFFCURVE",
"135 84 CURVE",
"108 94 OFFCURVE",
"86 101 OFFCURVE",
"63 104 CURVE",
"57 104 OFFCURVE",
"54 105 OFFCURVE",
"47 105 CURVE SMOOTH",
"28 105 OFFCURVE",
"9 102 OFFCURVE",
"-6 92 CURVE SMOOTH",
"-23 79 OFFCURVE",
"-27 63 OFFCURVE",
"-27 47 CURVE SMOOTH",
"-27 22 OFFCURVE",
"-10 9 OFFCURVE",
"23 9 CURVE SMOOTH",
"55 9 OFFCURVE",
"93 24 OFFCURVE",
"113 42 CURVE SMOOTH",
"131 59 LINE",
"225 31 OFFCURVE",
"298 -16 OFFCURVE",
"387 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 21 OFFCURVE",
"-14 31 OFFCURVE",
"-14 51 CURVE SMOOTH",
"-14 59 OFFCURVE",
"-8 67 OFFCURVE",
"5 72 CURVE SMOOTH",
"16 76 OFFCURVE",
"30 78 OFFCURVE",
"45 78 CURVE SMOOTH",
"51 78 OFFCURVE",
"58 78 OFFCURVE",
"63 77 CURVE",
"82 74 OFFCURVE",
"101 69 OFFCURVE",
"119 63 CURVE",
"114 57 OFFCURVE",
"111 53 OFFCURVE",
"108 50 CURVE SMOOTH",
"98 41 OFFCURVE",
"87 35 OFFCURVE",
"72 30 CURVE SMOOTH",
"58 24 OFFCURVE",
"44 21 OFFCURVE",
"30 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 192 OFFCURVE",
"244 194 OFFCURVE",
"296 194 CURVE SMOOTH",
"307 194 OFFCURVE",
"310 197 OFFCURVE",
"310 201 CURVE SMOOTH",
"311 205 OFFCURVE",
"307 208 OFFCURVE",
"298 210 CURVE SMOOTH",
"282 213 OFFCURVE",
"208 214 OFFCURVE",
"175 214 CURVE SMOOTH",
"156 214 OFFCURVE",
"132 213 OFFCURVE",
"113 210 CURVE SMOOTH",
"104 209 OFFCURVE",
"100 205 OFFCURVE",
"100 192 CURVE SMOOTH",
"100 187 OFFCURVE",
"102 184 OFFCURVE",
"105 185 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"437 -16 OFFCURVE",
"484 10 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 97 OFFCURVE",
"450 121 OFFCURVE",
"416 121 CURVE SMOOTH",
"390 121 OFFCURVE",
"368 107 OFFCURVE",
"368 86 CURVE SMOOTH",
"368 76 OFFCURVE",
"374 65 OFFCURVE",
"387 54 CURVE",
"390 53 OFFCURVE",
"393 52 OFFCURVE",
"395 52 CURVE SMOOTH",
"400 52 OFFCURVE",
"404 54 OFFCURVE",
"404 57 CURVE SMOOTH",
"404 58 OFFCURVE",
"403 61 OFFCURVE",
"400 63 CURVE SMOOTH",
"389 71 OFFCURVE",
"383 80 OFFCURVE",
"383 85 CURVE SMOOTH",
"383 94 OFFCURVE",
"400 99 OFFCURVE",
"414 99 CURVE SMOOTH",
"442 99 OFFCURVE",
"464 89 OFFCURVE",
"464 61 CURVE SMOOTH",
"464 23 OFFCURVE",
"425 7 OFFCURVE",
"387 7 CURVE SMOOTH",
"323 7 OFFCURVE",
"275 35 OFFCURVE",
"147 77 CURVE",
"208 170 OFFCURVE",
"274 434 OFFCURVE",
"363 434 CURVE SMOOTH",
"379 434 OFFCURVE",
"387 417 OFFCURVE",
"387 394 CURVE SMOOTH",
"387 378 OFFCURVE",
"383 359 OFFCURVE",
"377 341 CURVE SMOOTH",
"369 318 OFFCURVE",
"360 283 OFFCURVE",
"368 283 CURVE SMOOTH",
"383 283 OFFCURVE",
"394 308 OFFCURVE",
"402 330 CURVE SMOOTH",
"408 346 OFFCURVE",
"412 364 OFFCURVE",
"412 381 CURVE SMOOTH",
"412 420 OFFCURVE",
"394 455 OFFCURVE",
"347 455 CURVE SMOOTH",
"272 455 OFFCURVE",
"229 360 OFFCURVE",
"195 252 CURVE SMOOTH",
"173 183 OFFCURVE",
"169 162 OFFCURVE",
"135 84 CURVE",
"108 94 OFFCURVE",
"86 101 OFFCURVE",
"63 104 CURVE",
"57 104 OFFCURVE",
"54 105 OFFCURVE",
"47 105 CURVE SMOOTH",
"28 105 OFFCURVE",
"9 102 OFFCURVE",
"-6 92 CURVE SMOOTH",
"-23 79 OFFCURVE",
"-27 63 OFFCURVE",
"-27 47 CURVE SMOOTH",
"-27 22 OFFCURVE",
"-10 9 OFFCURVE",
"23 9 CURVE SMOOTH",
"55 9 OFFCURVE",
"93 24 OFFCURVE",
"113 42 CURVE SMOOTH",
"131 59 LINE",
"225 31 OFFCURVE",
"298 -16 OFFCURVE",
"387 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 21 OFFCURVE",
"-14 31 OFFCURVE",
"-14 51 CURVE SMOOTH",
"-14 59 OFFCURVE",
"-8 67 OFFCURVE",
"5 72 CURVE SMOOTH",
"16 76 OFFCURVE",
"30 78 OFFCURVE",
"45 78 CURVE SMOOTH",
"51 78 OFFCURVE",
"58 78 OFFCURVE",
"63 77 CURVE SMOOTH",
"82 74 OFFCURVE",
"101 69 OFFCURVE",
"119 63 CURVE",
"114 57 OFFCURVE",
"111 53 OFFCURVE",
"108 50 CURVE SMOOTH",
"98 41 OFFCURVE",
"87 35 OFFCURVE",
"72 30 CURVE SMOOTH",
"58 24 OFFCURVE",
"44 21 OFFCURVE",
"30 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 185 LINE",
"126 192 OFFCURVE",
"244 194 OFFCURVE",
"296 194 CURVE SMOOTH",
"308 194 OFFCURVE",
"310 198 OFFCURVE",
"310 202 CURVE SMOOTH",
"310 206 OFFCURVE",
"306 208 OFFCURVE",
"298 210 CURVE SMOOTH",
"282 213 OFFCURVE",
"208 214 OFFCURVE",
"175 214 CURVE SMOOTH",
"156 214 OFFCURVE",
"132 213 OFFCURVE",
"113 210 CURVE SMOOTH",
"104 209 OFFCURVE",
"100 205 OFFCURVE",
"100 192 CURVE SMOOTH",
"100 188 OFFCURVE",
"102 185 OFFCURVE",
"104 185 CURVE SMOOTH"
);
}
);
width = 484;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"546 441 OFFCURVE",
"458 248 OFFCURVE",
"405 69 CURVE",
"406 78 OFFCURVE",
"406 86 OFFCURVE",
"406 115 CURVE SMOOTH",
"406 184 OFFCURVE",
"407 288 OFFCURVE",
"384 374 CURVE SMOOTH",
"379 392 OFFCURVE",
"374 401 OFFCURVE",
"368 396 CURVE",
"320 298 OFFCURVE",
"280 168 OFFCURVE",
"251 69 CURVE",
"251 115 LINE SMOOTH",
"251 281 OFFCURVE",
"209 447 OFFCURVE",
"86 447 CURVE SMOOTH",
"-1 447 OFFCURVE",
"-16 334 OFFCURVE",
"45 284 CURVE SMOOTH",
"63 269 OFFCURVE",
"75 270 OFFCURVE",
"60 284 CURVE SMOOTH",
"21 323 OFFCURVE",
"10 429 OFFCURVE",
"78 429 CURVE SMOOTH",
"223 429 OFFCURVE",
"227 187 OFFCURVE",
"220 10 CURVE SMOOTH",
"220 -4 LINE SMOOTH",
"220 -8 OFFCURVE",
"222 -10 OFFCURVE",
"228 -10 CURVE SMOOTH",
"231 -10 OFFCURVE",
"235 -9 OFFCURVE",
"240 -7 CURVE SMOOTH",
"244 -5 OFFCURVE",
"245 -3 OFFCURVE",
"246 -2 CURVE",
"275 84 OFFCURVE",
"316 216 OFFCURVE",
"366 333 CURVE",
"384 212 OFFCURVE",
"377 76 OFFCURVE",
"374 10 CURVE SMOOTH",
"374 -4 LINE SMOOTH",
"374 -8 OFFCURVE",
"377 -10 OFFCURVE",
"383 -10 CURVE SMOOTH",
"385 -10 OFFCURVE",
"390 -9 OFFCURVE",
"395 -7 CURVE SMOOTH",
"400 -5 OFFCURVE",
"400 -3 OFFCURVE",
"401 -2 CURVE",
"453 154 OFFCURVE",
"547 426 OFFCURVE",
"658 426 CURVE SMOOTH",
"701 426 OFFCURVE",
"717 441 OFFCURVE",
"658 441 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 208 OFFCURVE",
"178 210 OFFCURVE",
"243 212 CURVE SMOOTH",
"346 214 LINE SMOOTH",
"405 215 OFFCURVE",
"495 216 OFFCURVE",
"541 217 CURVE SMOOTH",
"598 217 LINE SMOOTH",
"609 217 OFFCURVE",
"619 216 OFFCURVE",
"624 215 CURVE",
"624 214 OFFCURVE",
"626 214 OFFCURVE",
"627 214 CURVE SMOOTH",
"631 214 OFFCURVE",
"633 217 OFFCURVE",
"633 224 CURVE SMOOTH",
"633 228 OFFCURVE",
"631 231 OFFCURVE",
"629 233 CURVE SMOOTH",
"622 236 OFFCURVE",
"574 235 OFFCURVE",
"533 236 CURVE SMOOTH",
"446 236 LINE SMOOTH",
"394 236 OFFCURVE",
"316 237 OFFCURVE",
"276 237 CURVE SMOOTH",
"224 237 LINE",
"152 236 LINE SMOOTH",
"133 235 OFFCURVE",
"119 234 OFFCURVE",
"112 233 CURVE SMOOTH",
"103 232 OFFCURVE",
"99 225 OFFCURVE",
"99 212 CURVE SMOOTH",
"99 207 OFFCURVE",
"101 205 OFFCURVE",
"105 205 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 308 OFFCURVE",
"178 310 OFFCURVE",
"243 312 CURVE SMOOTH",
"346 314 LINE SMOOTH",
"405 315 OFFCURVE",
"495 316 OFFCURVE",
"541 317 CURVE SMOOTH",
"598 317 LINE SMOOTH",
"609 317 OFFCURVE",
"619 316 OFFCURVE",
"624 315 CURVE",
"624 314 OFFCURVE",
"626 314 OFFCURVE",
"627 314 CURVE SMOOTH",
"631 314 OFFCURVE",
"633 317 OFFCURVE",
"633 324 CURVE SMOOTH",
"633 328 OFFCURVE",
"631 331 OFFCURVE",
"629 333 CURVE SMOOTH",
"622 336 OFFCURVE",
"574 335 OFFCURVE",
"533 336 CURVE SMOOTH",
"446 336 LINE SMOOTH",
"394 336 OFFCURVE",
"316 337 OFFCURVE",
"276 337 CURVE SMOOTH",
"224 337 LINE",
"152 336 LINE SMOOTH",
"133 335 OFFCURVE",
"119 334 OFFCURVE",
"112 333 CURVE SMOOTH",
"103 332 OFFCURVE",
"99 325 OFFCURVE",
"99 312 CURVE SMOOTH",
"99 307 OFFCURVE",
"101 305 OFFCURVE",
"105 305 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"231 -10 OFFCURVE",
"235 -9 OFFCURVE",
"240 -7 CURVE SMOOTH",
"244 -5 OFFCURVE",
"245 -3 OFFCURVE",
"246 -2 CURVE",
"275 84 OFFCURVE",
"316 216 OFFCURVE",
"366 333 CURVE",
"375 271 OFFCURVE",
"378 205 OFFCURVE",
"378 147 CURVE SMOOTH",
"378 91 OFFCURVE",
"375 42 OFFCURVE",
"374 10 CURVE SMOOTH",
"374 -4 LINE SMOOTH",
"374 -8 OFFCURVE",
"377 -10 OFFCURVE",
"383 -10 CURVE SMOOTH",
"385 -10 OFFCURVE",
"390 -9 OFFCURVE",
"395 -7 CURVE SMOOTH",
"400 -5 OFFCURVE",
"400 -3 OFFCURVE",
"401 -2 CURVE",
"453 154 OFFCURVE",
"547 426 OFFCURVE",
"658 426 CURVE SMOOTH",
"681 426 OFFCURVE",
"696 430 OFFCURVE",
"696 434 CURVE SMOOTH",
"696 438 OFFCURVE",
"685 441 OFFCURVE",
"658 441 CURVE SMOOTH",
"546 441 OFFCURVE",
"458 248 OFFCURVE",
"405 69 CURVE",
"406 80 OFFCURVE",
"406 89 OFFCURVE",
"406 132 CURVE SMOOTH",
"406 201 OFFCURVE",
"405 295 OFFCURVE",
"384 374 CURVE SMOOTH",
"380 389 OFFCURVE",
"376 397 OFFCURVE",
"371 397 CURVE SMOOTH",
"370 397 OFFCURVE",
"369 397 OFFCURVE",
"368 396 CURVE",
"320 298 OFFCURVE",
"280 168 OFFCURVE",
"251 69 CURVE",
"251 115 LINE SMOOTH",
"251 281 OFFCURVE",
"209 447 OFFCURVE",
"86 447 CURVE SMOOTH",
"34 447 OFFCURVE",
"8 407 OFFCURVE",
"8 364 CURVE SMOOTH",
"8 335 OFFCURVE",
"20 304 OFFCURVE",
"45 284 CURVE SMOOTH",
"54 277 OFFCURVE",
"61 273 OFFCURVE",
"65 273 CURVE SMOOTH",
"66 273 OFFCURVE",
"67 274 OFFCURVE",
"67 275 CURVE SMOOTH",
"67 276 OFFCURVE",
"65 280 OFFCURVE",
"60 284 CURVE SMOOTH",
"41 303 OFFCURVE",
"29 337 OFFCURVE",
"29 368 CURVE SMOOTH",
"29 401 OFFCURVE",
"43 429 OFFCURVE",
"78 429 CURVE SMOOTH",
"199 429 OFFCURVE",
"222 259 OFFCURVE",
"222 100 CURVE SMOOTH",
"222 69 OFFCURVE",
"221 39 OFFCURVE",
"220 10 CURVE SMOOTH",
"220 -4 LINE SMOOTH",
"220 -8 OFFCURVE",
"222 -10 OFFCURVE",
"228 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 208 OFFCURVE",
"178 210 OFFCURVE",
"243 212 CURVE SMOOTH",
"541 217 LINE",
"598 217 LINE SMOOTH",
"609 217 OFFCURVE",
"619 216 OFFCURVE",
"624 215 CURVE",
"624 214 OFFCURVE",
"626 214 OFFCURVE",
"627 214 CURVE SMOOTH",
"631 214 OFFCURVE",
"633 217 OFFCURVE",
"633 224 CURVE SMOOTH",
"633 228 OFFCURVE",
"631 231 OFFCURVE",
"629 233 CURVE",
"622 236 OFFCURVE",
"574 235 OFFCURVE",
"533 236 CURVE SMOOTH",
"446 236 LINE SMOOTH",
"394 236 OFFCURVE",
"316 237 OFFCURVE",
"276 237 CURVE SMOOTH",
"224 237 LINE",
"152 236 LINE SMOOTH",
"133 235 OFFCURVE",
"119 234 OFFCURVE",
"112 233 CURVE SMOOTH",
"103 232 OFFCURVE",
"99 225 OFFCURVE",
"99 212 CURVE SMOOTH",
"99 207 OFFCURVE",
"101 205 OFFCURVE",
"105 205 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 308 OFFCURVE",
"178 310 OFFCURVE",
"243 312 CURVE SMOOTH",
"541 317 LINE",
"598 317 LINE SMOOTH",
"609 317 OFFCURVE",
"619 316 OFFCURVE",
"624 315 CURVE",
"624 314 OFFCURVE",
"626 314 OFFCURVE",
"627 314 CURVE SMOOTH",
"631 314 OFFCURVE",
"633 317 OFFCURVE",
"633 324 CURVE SMOOTH",
"633 328 OFFCURVE",
"631 331 OFFCURVE",
"629 333 CURVE",
"622 336 OFFCURVE",
"574 335 OFFCURVE",
"533 336 CURVE SMOOTH",
"446 336 LINE SMOOTH",
"394 336 OFFCURVE",
"316 337 OFFCURVE",
"276 337 CURVE SMOOTH",
"224 337 LINE",
"152 336 LINE SMOOTH",
"133 335 OFFCURVE",
"119 334 OFFCURVE",
"112 333 CURVE SMOOTH",
"103 332 OFFCURVE",
"99 325 OFFCURVE",
"99 312 CURVE SMOOTH",
"99 307 OFFCURVE",
"101 305 OFFCURVE",
"105 305 CURVE SMOOTH"
);
}
);
width = 666;
}
);
unicode = 20A9;
},
{
glyphname = yen;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"347 395 OFFCURVE",
"350 399 OFFCURVE",
"349 401 CURVE SMOOTH",
"348 407 OFFCURVE",
"346 409 OFFCURVE",
"342 409 CURVE SMOOTH",
"341 409 OFFCURVE",
"341 409 OFFCURVE",
"339 408 CURVE",
"295 356 OFFCURVE",
"231 257 OFFCURVE",
"176 167 CURVE",
"152 208 OFFCURVE",
"77 346 OFFCURVE",
"53 383 CURVE SMOOTH",
"44 396 OFFCURVE",
"14 385 OFFCURVE",
"30 361 CURVE SMOOTH",
"64 308 OFFCURVE",
"143 156 OFFCURVE",
"153 138 CURVE",
"138 26 OFFCURVE",
"131 -11 OFFCURVE",
"132 -12 CURVE SMOOTH",
"133 -17 OFFCURVE",
"136 -19 OFFCURVE",
"142 -19 CURVE SMOOTH",
"145 -19 OFFCURVE",
"162 -19 OFFCURVE",
"162 -16 CURVE SMOOTH",
"166 5 OFFCURVE",
"181 111 OFFCURVE",
"186 142 CURVE",
"245 231 OFFCURVE",
"375 423 OFFCURVE",
"349 397 CURVE SMOOTH",
"348 396 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 140 OFFCURVE",
"204 142 OFFCURVE",
"256 142 CURVE SMOOTH",
"267 142 OFFCURVE",
"270 145 OFFCURVE",
"270 149 CURVE SMOOTH",
"271 153 OFFCURVE",
"267 156 OFFCURVE",
"258 158 CURVE SMOOTH",
"242 161 OFFCURVE",
"168 162 OFFCURVE",
"135 162 CURVE SMOOTH",
"116 162 OFFCURVE",
"92 161 OFFCURVE",
"73 158 CURVE SMOOTH",
"64 157 OFFCURVE",
"60 153 OFFCURVE",
"60 140 CURVE SMOOTH",
"60 135 OFFCURVE",
"62 132 OFFCURVE",
"65 133 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 64 OFFCURVE",
"198 66 OFFCURVE",
"250 66 CURVE SMOOTH",
"261 66 OFFCURVE",
"264 69 OFFCURVE",
"264 73 CURVE SMOOTH",
"265 77 OFFCURVE",
"261 80 OFFCURVE",
"252 82 CURVE SMOOTH",
"236 85 OFFCURVE",
"162 86 OFFCURVE",
"129 86 CURVE SMOOTH",
"110 86 OFFCURVE",
"86 85 OFFCURVE",
"67 82 CURVE SMOOTH",
"58 81 OFFCURVE",
"54 77 OFFCURVE",
"54 64 CURVE SMOOTH",
"54 59 OFFCURVE",
"56 56 OFFCURVE",
"59 57 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"145 -19 OFFCURVE",
"162 -19 OFFCURVE",
"162 -16 CURVE",
"166 5 OFFCURVE",
"181 111 OFFCURVE",
"186 142 CURVE",
"245 231 OFFCURVE",
"375 423 OFFCURVE",
"349 397 CURVE SMOOTH",
"348 396 LINE SMOOTH",
"347 395 OFFCURVE",
"350 399 OFFCURVE",
"349 401 CURVE",
"348 407 OFFCURVE",
"346 409 OFFCURVE",
"342 409 CURVE SMOOTH",
"341 409 OFFCURVE",
"341 409 OFFCURVE",
"339 408 CURVE",
"295 356 OFFCURVE",
"231 257 OFFCURVE",
"176 167 CURVE",
"152 208 OFFCURVE",
"77 346 OFFCURVE",
"53 383 CURVE SMOOTH",
"50 387 OFFCURVE",
"46 388 OFFCURVE",
"42 388 CURVE SMOOTH",
"34 388 OFFCURVE",
"25 383 OFFCURVE",
"25 374 CURVE SMOOTH",
"25 370 OFFCURVE",
"27 366 OFFCURVE",
"30 361 CURVE SMOOTH",
"64 308 OFFCURVE",
"143 156 OFFCURVE",
"153 138 CURVE",
"138 26 OFFCURVE",
"131 -11 OFFCURVE",
"132 -12 CURVE",
"133 -17 OFFCURVE",
"136 -19 OFFCURVE",
"142 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"59 57 LINE",
"80 64 OFFCURVE",
"198 66 OFFCURVE",
"250 66 CURVE SMOOTH",
"262 66 OFFCURVE",
"264 70 OFFCURVE",
"264 74 CURVE SMOOTH",
"264 78 OFFCURVE",
"260 80 OFFCURVE",
"252 82 CURVE SMOOTH",
"236 85 OFFCURVE",
"162 86 OFFCURVE",
"129 86 CURVE SMOOTH",
"110 86 OFFCURVE",
"86 85 OFFCURVE",
"67 82 CURVE SMOOTH",
"58 81 OFFCURVE",
"54 77 OFFCURVE",
"54 64 CURVE SMOOTH",
"54 60 OFFCURVE",
"56 57 OFFCURVE",
"58 57 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65 133 LINE",
"86 140 OFFCURVE",
"204 142 OFFCURVE",
"256 142 CURVE SMOOTH",
"268 142 OFFCURVE",
"270 146 OFFCURVE",
"270 150 CURVE SMOOTH",
"270 154 OFFCURVE",
"266 156 OFFCURVE",
"258 158 CURVE SMOOTH",
"242 161 OFFCURVE",
"168 162 OFFCURVE",
"135 162 CURVE SMOOTH",
"116 162 OFFCURVE",
"92 161 OFFCURVE",
"73 158 CURVE SMOOTH",
"64 157 OFFCURVE",
"60 153 OFFCURVE",
"60 140 CURVE SMOOTH",
"60 136 OFFCURVE",
"62 133 OFFCURVE",
"64 133 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 4 50 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 4 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 4 104 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 22 165 22 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 73 165 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 77 165 77 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01238 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01269 2 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 2 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01281 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 81 23 81 39 81 55 81 71 81 87 81 103 81 119 81 135 81 151 81 167 81 183 81 199 81 215 81 231 81 247 81 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 378;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = bullet;
transform = "{0.44881, 0, 0, 0.44881, 35, 140}";
}
);
};
components = (
{
name = bullet;
transform = "{0.44881, 0, 0, 0.44881, 35, 140}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 221;
}
);
unicode = 2219;
},
{
glyphname = commercialMinusSign;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = divisionslash;
},
{
name = bullet;
transform = "{0.50206, 0, 0, 0.50206, 219, 75}";
},
{
name = bullet;
transform = "{0.50206, 0, 0, 0.50206, 17, 261}";
}
);
};
components = (
{
name = divisionslash;
},
{
name = bullet;
transform = "{0.50206, 0, 0, 0.50206, 219, 75}";
},
{
name = bullet;
transform = "{0.50206, 0, 0, 0.50206, 17, 261}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 405;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"23 86 OFFCURVE",
"27 84 OFFCURVE",
"32 86 CURVE SMOOTH",
"36 87 OFFCURVE",
"40 89 OFFCURVE",
"43 94 CURVE SMOOTH",
"45 97 LINE",
"54 113 LINE SMOOTH",
"95 184 OFFCURVE",
"133 246 OFFCURVE",
"169 300 CURVE SMOOTH",
"182 320 OFFCURVE",
"204 347 OFFCURVE",
"234 381 CURVE SMOOTH",
"264 415 OFFCURVE",
"285 441 OFFCURVE",
"299 461 CURVE SMOOTH",
"302 466 OFFCURVE",
"301 472 OFFCURVE",
"296 480 CURVE SMOOTH",
"293 484 OFFCURVE",
"288 486 OFFCURVE",
"280 486 CURVE",
"274 484 OFFCURVE",
"264 471 OFFCURVE",
"249 448 CURVE SMOOTH",
"236 430 LINE",
"219 402 LINE",
"201 374 LINE",
"188 354 LINE",
"108 234 LINE",
"61 164 LINE",
"27 113 LINE SMOOTH",
"20 103 OFFCURVE",
"18 95 OFFCURVE",
"21 90 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"29 85 OFFCURVE",
"31 85 OFFCURVE",
"32 86 CURVE",
"36 87 OFFCURVE",
"40 89 OFFCURVE",
"43 94 CURVE SMOOTH",
"45 97 LINE",
"54 113 LINE SMOOTH",
"95 184 OFFCURVE",
"133 246 OFFCURVE",
"169 300 CURVE SMOOTH",
"182 320 OFFCURVE",
"204 347 OFFCURVE",
"234 381 CURVE SMOOTH",
"264 415 OFFCURVE",
"285 441 OFFCURVE",
"299 461 CURVE SMOOTH",
"302 466 OFFCURVE",
"301 472 OFFCURVE",
"296 480 CURVE SMOOTH",
"293 484 OFFCURVE",
"288 486 OFFCURVE",
"280 486 CURVE",
"274 484 OFFCURVE",
"264 471 OFFCURVE",
"249 448 CURVE SMOOTH",
"236 430 LINE",
"219 402 LINE",
"201 374 LINE",
"188 354 LINE",
"108 234 LINE",
"61 164 LINE",
"27 113 LINE SMOOTH",
"22 106 OFFCURVE",
"20 100 OFFCURVE",
"20 95 CURVE SMOOTH",
"20 93 OFFCURVE",
"20 92 OFFCURVE",
"21 90 CURVE SMOOTH",
"22 87 OFFCURVE",
"25 85 OFFCURVE",
"28 85 CURVE SMOOTH"
);
}
);
width = 321;
}
);
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"215.667 54 OFFCURVE",
"217.667 55.333 OFFCURVE",
"217 58 CURVE SMOOTH",
"213 90.667 OFFCURVE",
"210 125.667 OFFCURVE",
"208 163 CURVE",
"230.667 164.333 OFFCURVE",
"252 165 OFFCURVE",
"276 165 CURVE SMOOTH",
"287.333 165 OFFCURVE",
"295.667 164.333 OFFCURVE",
"301 163 CURVE SMOOTH",
"303 162 LINE",
"307.667 162 OFFCURVE",
"310 165.333 OFFCURVE",
"310 172 CURVE SMOOTH",
"310 176 OFFCURVE",
"308.333 179 OFFCURVE",
"305 181 CURVE",
"297.667 183.667 OFFCURVE",
"265 185 OFFCURVE",
"207 185 CURVE",
"206.333 194.333 OFFCURVE",
"206 204 OFFCURVE",
"206 214 CURVE SMOOTH",
"206 245 LINE SMOOTH",
"206 257.667 OFFCURVE",
"206.667 266 OFFCURVE",
"208 270 CURVE",
"208 273 LINE SMOOTH",
"208 277.667 OFFCURVE",
"204.667 280 OFFCURVE",
"198 280 CURVE SMOOTH",
"193.333 280 OFFCURVE",
"190.667 278 OFFCURVE",
"190 274 CURVE SMOOTH",
"187.333 266.667 OFFCURVE",
"186 237 OFFCURVE",
"186 185 CURVE",
"128.5 183.5 LINE SMOOTH",
"113.5 183.167 OFFCURVE",
"102.667 182.333 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 179.667 OFFCURVE",
"84 172.667 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155.333 OFFCURVE",
"85.667 153 OFFCURVE",
"89 153 CURVE SMOOTH",
"118.333 157 OFFCURVE",
"150.667 160 OFFCURVE",
"186 162 CURVE",
"187.5 100 LINE SMOOTH",
"187.833 84 OFFCURVE",
"188.667 72.333 OFFCURVE",
"190 65 CURVE SMOOTH",
"191.333 58.333 OFFCURVE",
"196.333 54 OFFCURVE",
"211 54 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"216 54 OFFCURVE",
"218 55 OFFCURVE",
"217 58 CURVE",
"213 91 OFFCURVE",
"210 126 OFFCURVE",
"208 163 CURVE",
"231 164 OFFCURVE",
"252 165 OFFCURVE",
"276 165 CURVE SMOOTH",
"287 165 OFFCURVE",
"296 164 OFFCURVE",
"301 163 CURVE",
"303 162 LINE",
"308 162 OFFCURVE",
"310 165 OFFCURVE",
"310 172 CURVE SMOOTH",
"310 176 OFFCURVE",
"308 179 OFFCURVE",
"305 181 CURVE SMOOTH",
"298 184 OFFCURVE",
"265 185 OFFCURVE",
"207 185 CURVE",
"206 194 OFFCURVE",
"206 204 OFFCURVE",
"206 214 CURVE SMOOTH",
"206 245 LINE SMOOTH",
"206 258 OFFCURVE",
"207 266 OFFCURVE",
"208 270 CURVE SMOOTH",
"208 273 LINE SMOOTH",
"208 278 OFFCURVE",
"205 280 OFFCURVE",
"198 280 CURVE SMOOTH",
"193 280 OFFCURVE",
"191 278 OFFCURVE",
"190 274 CURVE SMOOTH",
"187 267 OFFCURVE",
"186 237 OFFCURVE",
"186 185 CURVE",
"129 184 LINE SMOOTH",
"114 183 OFFCURVE",
"103 182 OFFCURVE",
"96 181 CURVE SMOOTH",
"88 180 OFFCURVE",
"84 173 OFFCURVE",
"84 160 CURVE SMOOTH",
"84 155 OFFCURVE",
"86 153 OFFCURVE",
"89 153 CURVE SMOOTH",
"118 157 OFFCURVE",
"151 160 OFFCURVE",
"186 162 CURVE",
"188 100 LINE SMOOTH",
"188 84 OFFCURVE",
"189 72 OFFCURVE",
"190 65 CURVE SMOOTH",
"191 58 OFFCURVE",
"196 54 OFFCURVE",
"211 54 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01216 3 11 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 16 170 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01240 2 9 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
};
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 162;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"204 84 OFFCURVE",
"179 111 OFFCURVE",
"139 151 CURVE SMOOTH",
"138 152 LINE",
"208 212 LINE SMOOTH",
"210 214 OFFCURVE",
"212 217 OFFCURVE",
"212 219 CURVE SMOOTH",
"212 221 OFFCURVE",
"211 222 OFFCURVE",
"210 224 CURVE",
"205 228 OFFCURVE",
"201 231 OFFCURVE",
"196 231 CURVE SMOOTH",
"190 231 OFFCURVE",
"184 228 OFFCURVE",
"178 222 CURVE SMOOTH",
"168 214 OFFCURVE",
"155 202 OFFCURVE",
"141 190 CURVE SMOOTH",
"120 170 LINE",
"95 194 LINE SMOOTH",
"81 206 OFFCURVE",
"68 218 OFFCURVE",
"58 226 CURVE SMOOTH",
"52 232 OFFCURVE",
"46 235 OFFCURVE",
"40 235 CURVE SMOOTH",
"35 235 OFFCURVE",
"31 232 OFFCURVE",
"26 228 CURVE",
"23 224 OFFCURVE",
"24 220 OFFCURVE",
"28 216 CURVE SMOOTH",
"102 152 LINE",
"97 147 LINE SMOOTH",
"57 107 OFFCURVE",
"32 80 OFFCURVE",
"25 69 CURVE SMOOTH",
"23 65 OFFCURVE",
"21 61 OFFCURVE",
"21 58 CURVE SMOOTH",
"21 57 OFFCURVE",
"22 55 OFFCURVE",
"23 54 CURVE SMOOTH",
"28 49 OFFCURVE",
"33 50 OFFCURVE",
"39 57 CURVE",
"41 58 OFFCURVE",
"42 59 OFFCURVE",
"43 61 CURVE",
"48 67 OFFCURVE",
"54 75 OFFCURVE",
"63 84 CURVE SMOOTH",
"71 92 OFFCURVE",
"91 110 OFFCURVE",
"120 136 CURVE",
"147 112 OFFCURVE",
"165 96 OFFCURVE",
"173 88 CURVE SMOOTH",
"182 79 OFFCURVE",
"188 71 OFFCURVE",
"193 65 CURVE",
"194 63 OFFCURVE",
"195 62 OFFCURVE",
"197 61 CURVE",
"200 57 OFFCURVE",
"204 55 OFFCURVE",
"207 55 CURVE SMOOTH",
"209 55 OFFCURVE",
"211 56 OFFCURVE",
"213 58 CURVE SMOOTH",
"216 61 OFFCURVE",
"215 66 OFFCURVE",
"211 73 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"28 49 OFFCURVE",
"33 50 OFFCURVE",
"39 57 CURVE",
"41 58 OFFCURVE",
"42 59 OFFCURVE",
"43 61 CURVE",
"48 67 OFFCURVE",
"54 75 OFFCURVE",
"63 84 CURVE SMOOTH",
"71 92 OFFCURVE",
"91 110 OFFCURVE",
"120 136 CURVE",
"147 112 OFFCURVE",
"165 96 OFFCURVE",
"173 88 CURVE SMOOTH",
"182 79 OFFCURVE",
"188 71 OFFCURVE",
"193 65 CURVE",
"194 63 OFFCURVE",
"195 62 OFFCURVE",
"197 61 CURVE",
"200 57 OFFCURVE",
"204 55 OFFCURVE",
"207 55 CURVE SMOOTH",
"209 55 OFFCURVE",
"211 56 OFFCURVE",
"213 58 CURVE SMOOTH",
"216 61 OFFCURVE",
"215 66 OFFCURVE",
"211 73 CURVE SMOOTH",
"204 84 OFFCURVE",
"179 111 OFFCURVE",
"139 151 CURVE SMOOTH",
"138 152 LINE",
"208 212 LINE SMOOTH",
"210 214 OFFCURVE",
"212 217 OFFCURVE",
"212 219 CURVE SMOOTH",
"212 221 OFFCURVE",
"211 222 OFFCURVE",
"210 224 CURVE",
"205 228 OFFCURVE",
"201 231 OFFCURVE",
"196 231 CURVE SMOOTH",
"190 231 OFFCURVE",
"184 228 OFFCURVE",
"178 222 CURVE SMOOTH",
"168 214 OFFCURVE",
"155 202 OFFCURVE",
"141 190 CURVE SMOOTH",
"120 170 LINE",
"95 194 LINE SMOOTH",
"81 206 OFFCURVE",
"68 218 OFFCURVE",
"58 226 CURVE SMOOTH",
"52 232 OFFCURVE",
"46 235 OFFCURVE",
"40 235 CURVE SMOOTH",
"35 235 OFFCURVE",
"31 232 OFFCURVE",
"26 228 CURVE",
"23 224 OFFCURVE",
"24 220 OFFCURVE",
"28 216 CURVE SMOOTH",
"102 152 LINE",
"97 147 LINE SMOOTH",
"57 107 OFFCURVE",
"32 80 OFFCURVE",
"25 69 CURVE SMOOTH",
"23 65 OFFCURVE",
"21 61 OFFCURVE",
"21 58 CURVE SMOOTH",
"21 57 OFFCURVE",
"22 55 OFFCURVE",
"23 54 CURVE SMOOTH"
);
}
);
width = 233;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"105 154 OFFCURVE",
"167 157 OFFCURVE",
"235 157 CURVE SMOOTH",
"249.667 157 OFFCURVE",
"258 156.667 OFFCURVE",
"260 156 CURVE",
"260.667 155.333 OFFCURVE",
"261.667 155 OFFCURVE",
"263 155 CURVE SMOOTH",
"267.667 155 OFFCURVE",
"270 158.333 OFFCURVE",
"270 165 CURVE SMOOTH",
"270 169 OFFCURVE",
"268.333 172 OFFCURVE",
"265 174 CURVE",
"257 176.667 OFFCURVE",
"222.333 178 OFFCURVE",
"161 178 CURVE SMOOTH",
"93 176.5 LINE SMOOTH",
"75.667 176.167 OFFCURVE",
"63.333 175.333 OFFCURVE",
"56 174 CURVE SMOOTH",
"48 172.667 OFFCURVE",
"44 165.667 OFFCURVE",
"44 153 CURVE SMOOTH",
"44 148.333 OFFCURVE",
"45.667 146 OFFCURVE",
"49 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152.333 58 OFFCURVE",
"158.333 60.667 OFFCURVE",
"165 66 CURVE SMOOTH",
"171.667 72 OFFCURVE",
"175 78 OFFCURVE",
"175 84 CURVE SMOOTH",
"175 90 OFFCURVE",
"172 95 OFFCURVE",
"166 99 CURVE SMOOTH",
"159.333 102.333 OFFCURVE",
"153 104 OFFCURVE",
"147 104 CURVE SMOOTH",
"141 104 OFFCURVE",
"135.667 101.667 OFFCURVE",
"131 97 CURVE SMOOTH",
"126.333 91 OFFCURVE",
"124 85.333 OFFCURVE",
"124 80 CURVE SMOOTH",
"124 65.333 OFFCURVE",
"131.667 58 OFFCURVE",
"147 58 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"155.333 221 OFFCURVE",
"161.333 223.667 OFFCURVE",
"168 229 CURVE SMOOTH",
"174.667 235 OFFCURVE",
"178 241 OFFCURVE",
"178 247 CURVE SMOOTH",
"178 253 OFFCURVE",
"175 258 OFFCURVE",
"169 262 CURVE SMOOTH",
"162.333 265.333 OFFCURVE",
"156 267 OFFCURVE",
"150 267 CURVE SMOOTH",
"144 267 OFFCURVE",
"138.667 264.667 OFFCURVE",
"134 260 CURVE SMOOTH",
"129.333 255.333 OFFCURVE",
"127 249.667 OFFCURVE",
"127 243 CURVE SMOOTH",
"127 228.333 OFFCURVE",
"134.667 221 OFFCURVE",
"150 221 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"105 154 OFFCURVE",
"167 157 OFFCURVE",
"235 157 CURVE SMOOTH",
"250 157 OFFCURVE",
"258 157 OFFCURVE",
"260 156 CURVE SMOOTH",
"261 155 OFFCURVE",
"262 155 OFFCURVE",
"263 155 CURVE SMOOTH",
"268 155 OFFCURVE",
"270 158 OFFCURVE",
"270 165 CURVE SMOOTH",
"270 169 OFFCURVE",
"268 172 OFFCURVE",
"265 174 CURVE",
"257 177 OFFCURVE",
"222 178 OFFCURVE",
"161 178 CURVE SMOOTH",
"93 177 LINE SMOOTH",
"76 176 OFFCURVE",
"63 175 OFFCURVE",
"56 174 CURVE SMOOTH",
"48 173 OFFCURVE",
"44 166 OFFCURVE",
"44 153 CURVE SMOOTH",
"44 148 OFFCURVE",
"46 146 OFFCURVE",
"49 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 58 OFFCURVE",
"158 61 OFFCURVE",
"165 66 CURVE SMOOTH",
"172 72 OFFCURVE",
"175 78 OFFCURVE",
"175 84 CURVE SMOOTH",
"175 90 OFFCURVE",
"172 95 OFFCURVE",
"166 99 CURVE",
"159 102 OFFCURVE",
"153 104 OFFCURVE",
"147 104 CURVE SMOOTH",
"141 104 OFFCURVE",
"136 102 OFFCURVE",
"131 97 CURVE SMOOTH",
"126 91 OFFCURVE",
"124 85 OFFCURVE",
"124 80 CURVE SMOOTH",
"124 65 OFFCURVE",
"132 58 OFFCURVE",
"147 58 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"155 221 OFFCURVE",
"161 224 OFFCURVE",
"168 229 CURVE SMOOTH",
"175 235 OFFCURVE",
"178 241 OFFCURVE",
"178 247 CURVE SMOOTH",
"178 253 OFFCURVE",
"175 258 OFFCURVE",
"169 262 CURVE",
"162 265 OFFCURVE",
"156 267 OFFCURVE",
"150 267 CURVE SMOOTH",
"144 267 OFFCURVE",
"139 265 OFFCURVE",
"134 260 CURVE SMOOTH",
"129 255 OFFCURVE",
"127 250 OFFCURVE",
"127 243 CURVE SMOOTH",
"127 228 OFFCURVE",
"135 221 OFFCURVE",
"150 221 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01214 4 20 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 14 165 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01224 18 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 4 233 4 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 294;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"143 207 OFFCURVE",
"205.333 211 OFFCURVE",
"274 211 CURVE SMOOTH",
"285.333 211 OFFCURVE",
"293.667 210.333 OFFCURVE",
"299 209 CURVE SMOOTH",
"300 208.5 LINE",
"301 208 LINE",
"305.667 208 OFFCURVE",
"308 211.333 OFFCURVE",
"308 218 CURVE SMOOTH",
"308 223.333 OFFCURVE",
"306.333 226.333 OFFCURVE",
"303 227 CURVE SMOOTH",
"298.333 228.333 OFFCURVE",
"287.5 229.5 OFFCURVE",
"270.5 230.5 CURVE SMOOTH",
"260 231 OFFCURVE",
"248 231 OFFCURVE",
"233 231 CURVE SMOOTH",
"223 231 OFFCURVE",
"212 231 OFFCURVE",
"200 231 CURVE SMOOTH",
"131.5 229.5 LINE SMOOTH",
"113.833 229.167 OFFCURVE",
"101.333 228.333 OFFCURVE",
"94 227 CURVE SMOOTH",
"86 225.667 OFFCURVE",
"82 218.667 OFFCURVE",
"82 206 CURVE SMOOTH",
"82 201.333 OFFCURVE",
"83.667 199 OFFCURVE",
"87 199 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 121 OFFCURVE",
"202.667 124 OFFCURVE",
"272 124 CURVE SMOOTH",
"286 124 OFFCURVE",
"294.333 123.667 OFFCURVE",
"297 123 CURVE SMOOTH",
"299 122 LINE",
"304.333 122 OFFCURVE",
"307 125.333 OFFCURVE",
"307 132 CURVE SMOOTH",
"307 136 OFFCURVE",
"305 139 OFFCURVE",
"301 141 CURVE SMOOTH",
"293 143.667 OFFCURVE",
"258.667 145 OFFCURVE",
"198 145 CURVE SMOOTH",
"129.5 143.5 LINE SMOOTH",
"111.833 143.167 OFFCURVE",
"99.333 142.333 OFFCURVE",
"92 141 CURVE SMOOTH",
"84.667 139.667 OFFCURVE",
"81 132.667 OFFCURVE",
"81 120 CURVE SMOOTH",
"81 115.333 OFFCURVE",
"82.333 113 OFFCURVE",
"85 113 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"143 207 OFFCURVE",
"205 211 OFFCURVE",
"274 211 CURVE SMOOTH",
"285 211 OFFCURVE",
"294 210 OFFCURVE",
"299 209 CURVE",
"301 208 LINE",
"306 208 OFFCURVE",
"308 211 OFFCURVE",
"308 218 CURVE SMOOTH",
"308 223 OFFCURVE",
"306 226 OFFCURVE",
"303 227 CURVE SMOOTH",
"298 228 OFFCURVE",
"288 230 OFFCURVE",
"271 231 CURVE SMOOTH",
"233 231 LINE",
"200 231 LINE",
"132 230 LINE SMOOTH",
"114 229 OFFCURVE",
"101 228 OFFCURVE",
"94 227 CURVE SMOOTH",
"86 226 OFFCURVE",
"82 219 OFFCURVE",
"82 206 CURVE SMOOTH",
"82 201 OFFCURVE",
"84 199 OFFCURVE",
"87 199 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 121 OFFCURVE",
"203 124 OFFCURVE",
"272 124 CURVE SMOOTH",
"286 124 OFFCURVE",
"294 124 OFFCURVE",
"297 123 CURVE SMOOTH",
"299 122 LINE",
"304 122 OFFCURVE",
"307 125 OFFCURVE",
"307 132 CURVE SMOOTH",
"307 136 OFFCURVE",
"305 139 OFFCURVE",
"301 141 CURVE SMOOTH",
"293 144 OFFCURVE",
"259 145 OFFCURVE",
"198 145 CURVE SMOOTH",
"130 144 LINE SMOOTH",
"112 143 OFFCURVE",
"99 142 OFFCURVE",
"92 141 CURVE SMOOTH",
"85 140 OFFCURVE",
"81 133 OFFCURVE",
"81 120 CURVE SMOOTH",
"81 115 OFFCURVE",
"82 113 OFFCURVE",
"85 113 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01237 2 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"63.333 -19 OFFCURVE",
"64 -18.333 OFFCURVE",
"64 -17 CURVE",
"89.333 23 OFFCURVE",
"126 70.333 OFFCURVE",
"166 121 CURVE",
"198.667 123 OFFCURVE",
"234 124 OFFCURVE",
"272 124 CURVE SMOOTH",
"286 124 OFFCURVE",
"294.333 123.667 OFFCURVE",
"297 123 CURVE SMOOTH",
"299 122 LINE",
"304.333 122 OFFCURVE",
"307 125.333 OFFCURVE",
"307 132 CURVE SMOOTH",
"307 136 OFFCURVE",
"305 139 OFFCURVE",
"301 141 CURVE SMOOTH",
"293 143.667 OFFCURVE",
"258.667 145 OFFCURVE",
"198 145 CURVE SMOOTH",
"184 144 LINE",
"238 210 LINE",
"244 210.667 OFFCURVE",
"250 211 OFFCURVE",
"256 211 CURVE SMOOTH",
"274 211 LINE SMOOTH",
"285.333 211 OFFCURVE",
"293.667 210.333 OFFCURVE",
"299 209 CURVE SMOOTH",
"300 208.5 LINE",
"301 208 LINE",
"305.667 208 OFFCURVE",
"308 211.333 OFFCURVE",
"308 218 CURVE SMOOTH",
"308 223.333 OFFCURVE",
"306.333 226.333 OFFCURVE",
"303 227 CURVE SMOOTH",
"298.333 228.333 OFFCURVE",
"282.333 229.667 OFFCURVE",
"255 231 CURVE",
"293.667 277.667 OFFCURVE",
"329.667 324 OFFCURVE",
"359 364 CURVE SMOOTH",
"359.667 364.667 OFFCURVE",
"360 365.667 OFFCURVE",
"360 367 CURVE SMOOTH",
"360 369.667 OFFCURVE",
"353 378 OFFCURVE",
"349 378 CURVE",
"345 376 LINE",
"311.667 332 OFFCURVE",
"269.667 281.667 OFFCURVE",
"227 231 CURVE",
"200 231 LINE",
"131.5 229.5 LINE SMOOTH",
"113.833 229.167 OFFCURVE",
"101.333 228.333 OFFCURVE",
"94 227 CURVE SMOOTH",
"86 225.667 OFFCURVE",
"82 218.667 OFFCURVE",
"82 206 CURVE SMOOTH",
"82 201.333 OFFCURVE",
"83.667 199 OFFCURVE",
"87 199 CURVE",
"125.667 205.667 OFFCURVE",
"165 207.333 OFFCURVE",
"209 210 CURVE",
"181.5 177 LINE",
"154 144 LINE",
"92 141 LINE",
"84.667 139.667 OFFCURVE",
"81 132.667 OFFCURVE",
"81 120 CURVE SMOOTH",
"81 115.333 OFFCURVE",
"82.333 113 OFFCURVE",
"85 113 CURVE SMOOTH",
"93 114.333 OFFCURVE",
"101 115.333 OFFCURVE",
"109 116 CURVE SMOOTH",
"134 119 LINE",
"99.333 75 OFFCURVE",
"66.667 33.333 OFFCURVE",
"44 -4 CURVE",
"44 -5 LINE SMOOTH",
"44 -7 OFFCURVE",
"46 -10 OFFCURVE",
"50 -14 CURVE",
"55.333 -17.333 OFFCURVE",
"59.333 -19 OFFCURVE",
"62 -19 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"63 -19 OFFCURVE",
"64 -18 OFFCURVE",
"64 -17 CURVE",
"89 23 OFFCURVE",
"126 70 OFFCURVE",
"166 121 CURVE",
"199 123 OFFCURVE",
"234 124 OFFCURVE",
"272 124 CURVE SMOOTH",
"286 124 OFFCURVE",
"294 124 OFFCURVE",
"297 123 CURVE SMOOTH",
"299 122 LINE",
"304 122 OFFCURVE",
"307 125 OFFCURVE",
"307 132 CURVE SMOOTH",
"307 136 OFFCURVE",
"305 139 OFFCURVE",
"301 141 CURVE SMOOTH",
"293 144 OFFCURVE",
"259 145 OFFCURVE",
"198 145 CURVE SMOOTH",
"184 144 LINE",
"238 210 LINE",
"244 211 OFFCURVE",
"250 211 OFFCURVE",
"256 211 CURVE SMOOTH",
"274 211 LINE SMOOTH",
"285 211 OFFCURVE",
"294 210 OFFCURVE",
"299 209 CURVE",
"301 208 LINE",
"306 208 OFFCURVE",
"308 211 OFFCURVE",
"308 218 CURVE SMOOTH",
"308 223 OFFCURVE",
"306 226 OFFCURVE",
"303 227 CURVE SMOOTH",
"298 228 OFFCURVE",
"282 230 OFFCURVE",
"255 231 CURVE",
"294 278 OFFCURVE",
"330 324 OFFCURVE",
"359 364 CURVE SMOOTH",
"360 365 OFFCURVE",
"360 366 OFFCURVE",
"360 367 CURVE SMOOTH",
"360 370 OFFCURVE",
"353 378 OFFCURVE",
"349 378 CURVE",
"345 376 LINE",
"312 332 OFFCURVE",
"270 282 OFFCURVE",
"227 231 CURVE",
"200 231 LINE",
"132 230 LINE SMOOTH",
"114 229 OFFCURVE",
"101 228 OFFCURVE",
"94 227 CURVE SMOOTH",
"86 226 OFFCURVE",
"82 219 OFFCURVE",
"82 206 CURVE SMOOTH",
"82 201 OFFCURVE",
"84 199 OFFCURVE",
"87 199 CURVE",
"126 206 OFFCURVE",
"165 207 OFFCURVE",
"209 210 CURVE",
"154 144 LINE",
"92 141 LINE SMOOTH",
"85 140 OFFCURVE",
"81 133 OFFCURVE",
"81 120 CURVE SMOOTH",
"81 115 OFFCURVE",
"82 113 OFFCURVE",
"85 113 CURVE SMOOTH",
"109 116 LINE",
"134 119 LINE",
"99 75 OFFCURVE",
"67 33 OFFCURVE",
"44 -4 CURVE",
"44 -5 LINE SMOOTH",
"44 -7 OFFCURVE",
"46 -10 OFFCURVE",
"50 -14 CURVE",
"55 -17 OFFCURVE",
"59 -19 OFFCURVE",
"62 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01220 2 31 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"89.402 49.068 OFFCURVE",
"168.508 125.508 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"168.535 199.465 OFFCURVE",
"91.808 271.662 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191.333 OFFCURVE",
"147.333 175.667 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"93.5 82.5 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 41.5 CURVE SMOOTH",
"64 39.167 OFFCURVE",
"66.333 38.667 OFFCURVE",
"69 40 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"89 49 OFFCURVE",
"169 126 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"169 199 OFFCURVE",
"92 272 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191 OFFCURVE",
"147 176 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"94 83 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 42 CURVE",
"64 39 OFFCURVE",
"66 39 OFFCURVE",
"69 40 CURVE SMOOTH"
);
}
);
width = 233;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183.333 64 OFFCURVE",
"176.167 71.833 OFFCURVE",
"166.5 83.5 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 134.667 OFFCURVE",
"110.667 150.333 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"164 243 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 284.5 CURVE SMOOTH",
"194 286.833 OFFCURVE",
"191.667 287.333 OFFCURVE",
"189 286 CURVE SMOOTH",
"164.23 272.239 OFFCURVE",
"94.294 205.294 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85.467 130.533 OFFCURVE",
"169.51 49.996 OFFCURVE",
"192 40 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183 64 OFFCURVE",
"176 72 OFFCURVE",
"167 84 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 135 OFFCURVE",
"111 150 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 285 CURVE",
"194 287 OFFCURVE",
"192 287 OFFCURVE",
"189 286 CURVE",
"164 272 OFFCURVE",
"94 205 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85 131 OFFCURVE",
"170 50 OFFCURVE",
"192 40 CURVE SMOOTH"
);
}
);
width = 233;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"89.402 49.068 OFFCURVE",
"168.508 125.508 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"168.535 199.465 OFFCURVE",
"91.808 271.662 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191.333 OFFCURVE",
"147.333 175.667 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"93.5 82.5 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 41.5 CURVE SMOOTH",
"64 39.167 OFFCURVE",
"66.333 38.667 OFFCURVE",
"69 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 -8 LINE SMOOTH",
"142.667 -6 OFFCURVE",
"154 -5 OFFCURVE",
"160 -5 CURVE SMOOTH",
"166.667 -5 OFFCURVE",
"172 -5.667 OFFCURVE",
"176 -7 CURVE",
"179 -7 LINE SMOOTH",
"183.667 -7 OFFCURVE",
"186 -4 OFFCURVE",
"186 2 CURVE SMOOTH",
"186 6.667 OFFCURVE",
"184 9.667 OFFCURVE",
"180 11 CURVE SMOOTH",
"172 14 OFFCURVE",
"158 15 OFFCURVE",
"137 15 CURVE SMOOTH",
"107 15 OFFCURVE",
"83 14 OFFCURVE",
"66 11 CURVE SMOOTH",
"58.667 9.667 OFFCURVE",
"55 2.667 OFFCURVE",
"55 -10 CURVE SMOOTH",
"55 -14.667 OFFCURVE",
"56.333 -16.667 OFFCURVE",
"59 -16 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"89 49 OFFCURVE",
"169 126 OFFCURVE",
"187 144 CURVE SMOOTH",
"193 150 OFFCURVE",
"197 157 OFFCURVE",
"197 163 CURVE SMOOTH",
"197 168 OFFCURVE",
"196 172 OFFCURVE",
"192 176 CURVE SMOOTH",
"169 199 OFFCURVE",
"92 272 OFFCURVE",
"66 286 CURVE SMOOTH",
"60 289 OFFCURVE",
"57 288 OFFCURVE",
"57 285 CURVE SMOOTH",
"57 282 OFFCURVE",
"61 275 OFFCURVE",
"70 266 CURVE SMOOTH",
"91 242 LINE",
"122 206 LINE SMOOTH",
"134 191 OFFCURVE",
"147 176 OFFCURVE",
"162 159 CURVE",
"123 116 LINE",
"94 83 LINE",
"73 60 LINE SMOOTH",
"65 52 OFFCURVE",
"61 46 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 42 OFFCURVE",
"62 42 OFFCURVE",
"62 42 CURVE",
"64 39 OFFCURVE",
"66 39 OFFCURVE",
"69 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 -8 LINE SMOOTH",
"143 -6 OFFCURVE",
"154 -5 OFFCURVE",
"160 -5 CURVE SMOOTH",
"167 -5 OFFCURVE",
"172 -6 OFFCURVE",
"176 -7 CURVE SMOOTH",
"179 -7 LINE SMOOTH",
"184 -7 OFFCURVE",
"186 -4 OFFCURVE",
"186 2 CURVE SMOOTH",
"186 7 OFFCURVE",
"184 10 OFFCURVE",
"180 11 CURVE SMOOTH",
"172 14 OFFCURVE",
"158 15 OFFCURVE",
"137 15 CURVE SMOOTH",
"107 15 OFFCURVE",
"83 14 OFFCURVE",
"66 11 CURVE SMOOTH",
"59 10 OFFCURVE",
"55 3 OFFCURVE",
"55 -10 CURVE SMOOTH",
"55 -15 OFFCURVE",
"56 -17 OFFCURVE",
"59 -16 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01231 41 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 31 229 31 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 233;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183.333 64 OFFCURVE",
"176.167 71.833 OFFCURVE",
"166.5 83.5 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 134.667 OFFCURVE",
"110.667 150.333 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"164 243 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 284.5 CURVE SMOOTH",
"194 286.833 OFFCURVE",
"191.667 287.333 OFFCURVE",
"189 286 CURVE SMOOTH",
"164.23 272.239 OFFCURVE",
"94.294 205.294 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85.467 130.533 OFFCURVE",
"169.51 49.996 OFFCURVE",
"192 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 -8 LINE SMOOTH",
"157.667 -6 OFFCURVE",
"169 -5 OFFCURVE",
"175 -5 CURVE SMOOTH",
"181.667 -5 OFFCURVE",
"187 -5.667 OFFCURVE",
"191 -7 CURVE",
"194 -7 LINE SMOOTH",
"198.667 -7 OFFCURVE",
"201 -4 OFFCURVE",
"201 2 CURVE SMOOTH",
"201 6.667 OFFCURVE",
"199 9.667 OFFCURVE",
"195 11 CURVE SMOOTH",
"187 14 OFFCURVE",
"173 15 OFFCURVE",
"152 15 CURVE SMOOTH",
"122 15 OFFCURVE",
"98 14 OFFCURVE",
"81 11 CURVE SMOOTH",
"73.667 9.667 OFFCURVE",
"70 2.667 OFFCURVE",
"70 -10 CURVE SMOOTH",
"70 -14.667 OFFCURVE",
"71.333 -16.667 OFFCURVE",
"74 -16 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"198 37 OFFCURVE",
"201 38 OFFCURVE",
"201 41 CURVE SMOOTH",
"201 44 OFFCURVE",
"197 51 OFFCURVE",
"188 60 CURVE SMOOTH",
"183 64 OFFCURVE",
"176 72 OFFCURVE",
"167 84 CURVE SMOOTH",
"136 120 LINE SMOOTH",
"124 135 OFFCURVE",
"111 150 OFFCURVE",
"96 167 CURVE",
"134 210 LINE",
"185 266 LINE SMOOTH",
"193 274 OFFCURVE",
"197 280 OFFCURVE",
"197 283 CURVE SMOOTH",
"197 284 OFFCURVE",
"196 284 OFFCURVE",
"196 285 CURVE",
"194 287 OFFCURVE",
"192 287 OFFCURVE",
"189 286 CURVE",
"164 272 OFFCURVE",
"94 205 OFFCURVE",
"71 182 CURVE SMOOTH",
"65 176 OFFCURVE",
"61 169 OFFCURVE",
"61 163 CURVE SMOOTH",
"61 158 OFFCURVE",
"62 154 OFFCURVE",
"66 150 CURVE SMOOTH",
"85 131 OFFCURVE",
"170 50 OFFCURVE",
"192 40 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 -8 LINE SMOOTH",
"158 -6 OFFCURVE",
"169 -5 OFFCURVE",
"175 -5 CURVE SMOOTH",
"182 -5 OFFCURVE",
"187 -6 OFFCURVE",
"191 -7 CURVE SMOOTH",
"194 -7 LINE SMOOTH",
"199 -7 OFFCURVE",
"201 -4 OFFCURVE",
"201 2 CURVE SMOOTH",
"201 7 OFFCURVE",
"199 10 OFFCURVE",
"195 11 CURVE SMOOTH",
"187 14 OFFCURVE",
"173 15 OFFCURVE",
"152 15 CURVE SMOOTH",
"122 15 OFFCURVE",
"98 14 OFFCURVE",
"81 11 CURVE SMOOTH",
"74 10 OFFCURVE",
"70 3 OFFCURVE",
"70 -10 CURVE SMOOTH",
"70 -15 OFFCURVE",
"71 -17 OFFCURVE",
"74 -16 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01241 31 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 41 234 41 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 233;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"116.667 63 OFFCURVE",
"119.333 64.333 OFFCURVE",
"122 67 CURVE SMOOTH",
"136.667 81.667 OFFCURVE",
"144.667 106.333 OFFCURVE",
"146 141 CURVE",
"154.5 140 LINE",
"163 140 LINE SMOOTH",
"183 140 OFFCURVE",
"200 142.667 OFFCURVE",
"214 148 CURVE SMOOTH",
"218.667 150 OFFCURVE",
"221 152.333 OFFCURVE",
"221 155 CURVE SMOOTH",
"221 161 OFFCURVE",
"218.333 164 OFFCURVE",
"213 164 CURVE SMOOTH",
"207.667 164 OFFCURVE",
"202.333 163.333 OFFCURVE",
"193 162 CURVE SMOOTH",
"185 160.667 OFFCURVE",
"179.333 160 OFFCURVE",
"174 160 CURVE SMOOTH",
"162 160 OFFCURVE",
"152.667 160.667 OFFCURVE",
"146 162 CURVE",
"143 206.5 LINE",
"142 230 LINE SMOOTH",
"142 236 OFFCURVE",
"139 239 OFFCURVE",
"133 239 CURVE SMOOTH",
"127.667 239 OFFCURVE",
"125 236 OFFCURVE",
"125 230 CURVE SMOOTH",
"125 199 LINE",
"124.5 180 LINE",
"124 167 LINE",
"110.667 170.333 OFFCURVE",
"96.667 172 OFFCURVE",
"82 172 CURVE SMOOTH",
"64.667 172 OFFCURVE",
"48 165 OFFCURVE",
"32 151 CURVE SMOOTH",
"29.333 149 OFFCURVE",
"28 146.667 OFFCURVE",
"28 144 CURVE SMOOTH",
"28 138.667 OFFCURVE",
"30.667 136 OFFCURVE",
"36 136 CURVE",
"54 144.667 OFFCURVE",
"68.667 149 OFFCURVE",
"80 149 CURVE SMOOTH",
"96 149 OFFCURVE",
"110.667 147.667 OFFCURVE",
"124 145 CURVE",
"124 143 LINE SMOOTH",
"124 109 OFFCURVE",
"120 88 OFFCURVE",
"112 80 CURVE SMOOTH",
"109.333 78 OFFCURVE",
"108 75 OFFCURVE",
"108 71 CURVE SMOOTH",
"108 65.667 OFFCURVE",
"110 63 OFFCURVE",
"114 63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"71.667 14.333 OFFCURVE",
"81.667 19 OFFCURVE",
"89 19 CURVE SMOOTH",
"92.333 19 OFFCURVE",
"96.333 18.5 OFFCURVE",
"101 17.5 CURVE SMOOTH",
"118 14 LINE SMOOTH",
"132.667 10.667 OFFCURVE",
"142.333 9 OFFCURVE",
"147 9 CURVE SMOOTH",
"161.667 9 OFFCURVE",
"173.667 12 OFFCURVE",
"183 18 CURVE SMOOTH",
"185.667 20 OFFCURVE",
"187 22.333 OFFCURVE",
"187 25 CURVE SMOOTH",
"187 31 OFFCURVE",
"185.333 34 OFFCURVE",
"182 34 CURVE SMOOTH",
"179.333 34 OFFCURVE",
"175.667 33.333 OFFCURVE",
"169 32 CURVE SMOOTH",
"162.333 30.667 OFFCURVE",
"157.667 30 OFFCURVE",
"155 30 CURVE SMOOTH",
"150 30 LINE SMOOTH",
"144 30 OFFCURVE",
"134 32 OFFCURVE",
"120 36 CURVE SMOOTH",
"106.667 40 OFFCURVE",
"96.667 42 OFFCURVE",
"90 42 CURVE SMOOTH",
"83.333 42 OFFCURVE",
"77.667 38.667 OFFCURVE",
"67 32 CURVE SMOOTH",
"57.667 24.667 OFFCURVE",
"53 18.667 OFFCURVE",
"53 14 CURVE SMOOTH",
"53 8 OFFCURVE",
"55 5 OFFCURVE",
"59 5 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"117 63 OFFCURVE",
"119 64 OFFCURVE",
"122 67 CURVE SMOOTH",
"137 82 OFFCURVE",
"145 106 OFFCURVE",
"146 141 CURVE",
"155 140 LINE",
"163 140 LINE SMOOTH",
"183 140 OFFCURVE",
"200 143 OFFCURVE",
"214 148 CURVE SMOOTH",
"219 150 OFFCURVE",
"221 152 OFFCURVE",
"221 155 CURVE SMOOTH",
"221 161 OFFCURVE",
"218 164 OFFCURVE",
"213 164 CURVE SMOOTH",
"208 164 OFFCURVE",
"202 163 OFFCURVE",
"193 162 CURVE SMOOTH",
"185 161 OFFCURVE",
"179 160 OFFCURVE",
"174 160 CURVE SMOOTH",
"162 160 OFFCURVE",
"153 161 OFFCURVE",
"146 162 CURVE",
"143 207 LINE",
"142 230 LINE SMOOTH",
"142 236 OFFCURVE",
"139 239 OFFCURVE",
"133 239 CURVE SMOOTH",
"128 239 OFFCURVE",
"125 236 OFFCURVE",
"125 230 CURVE SMOOTH",
"125 180 LINE",
"124 167 LINE",
"111 170 OFFCURVE",
"97 172 OFFCURVE",
"82 172 CURVE SMOOTH",
"65 172 OFFCURVE",
"48 165 OFFCURVE",
"32 151 CURVE SMOOTH",
"29 149 OFFCURVE",
"28 147 OFFCURVE",
"28 144 CURVE SMOOTH",
"28 139 OFFCURVE",
"31 136 OFFCURVE",
"36 136 CURVE",
"54 145 OFFCURVE",
"69 149 OFFCURVE",
"80 149 CURVE SMOOTH",
"96 149 OFFCURVE",
"111 148 OFFCURVE",
"124 145 CURVE",
"124 143 LINE SMOOTH",
"124 109 OFFCURVE",
"120 88 OFFCURVE",
"112 80 CURVE",
"109 78 OFFCURVE",
"108 75 OFFCURVE",
"108 71 CURVE SMOOTH",
"108 66 OFFCURVE",
"110 63 OFFCURVE",
"114 63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"72 14 OFFCURVE",
"82 19 OFFCURVE",
"89 19 CURVE SMOOTH",
"92 19 OFFCURVE",
"96 19 OFFCURVE",
"101 18 CURVE SMOOTH",
"118 14 LINE SMOOTH",
"133 11 OFFCURVE",
"142 9 OFFCURVE",
"147 9 CURVE SMOOTH",
"162 9 OFFCURVE",
"174 12 OFFCURVE",
"183 18 CURVE SMOOTH",
"186 20 OFFCURVE",
"187 22 OFFCURVE",
"187 25 CURVE SMOOTH",
"187 31 OFFCURVE",
"185 34 OFFCURVE",
"182 34 CURVE SMOOTH",
"179 34 OFFCURVE",
"176 33 OFFCURVE",
"169 32 CURVE SMOOTH",
"162 31 OFFCURVE",
"158 30 OFFCURVE",
"155 30 CURVE SMOOTH",
"150 30 LINE SMOOTH",
"144 30 OFFCURVE",
"134 32 OFFCURVE",
"120 36 CURVE SMOOTH",
"107 40 OFFCURVE",
"97 42 OFFCURVE",
"90 42 CURVE SMOOTH",
"83 42 OFFCURVE",
"78 39 OFFCURVE",
"67 32 CURVE SMOOTH",
"58 25 OFFCURVE",
"53 19 OFFCURVE",
"53 14 CURVE SMOOTH",
"53 8 OFFCURVE",
"55 5 OFFCURVE",
"59 5 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01217 3 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 17 170 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01257 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01253 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01255 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01229 2 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01262 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 62 23 62 39 62 55 62 71 62 87 62 103 62 119 62 135 62 151 62 167 62 183 62 199 62 215 62 231 62 247 62 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01271 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 71 23 71 39 71 55 71 71 71 87 71 103 71 119 71 135 71 151 71 167 71 183 71 199 71 215 71 231 71 247 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 71 23 71 39 71 55 71 71 71 87 71 103 71 119 71 135 71 151 71 167 71 183 71 199 71 215 71 231 71 247 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 71 23 71 39 71 55 71 71 71 87 71 103 71 119 71 135 71 151 71 167 71 183 71 199 71 215 71 231 71 247 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 240;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"467 -67 OFFCURVE",
"493 -55 OFFCURVE",
"513 -31 CURVE SMOOTH",
"517 -25 OFFCURVE",
"519 -19.667 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -9 OFFCURVE",
"516.667 -6 OFFCURVE",
"512 -6 CURVE SMOOTH",
"510.667 -6 OFFCURVE",
"505.667 -11 OFFCURVE",
"497 -21 CURVE SMOOTH",
"487 -34.333 OFFCURVE",
"475.333 -43 OFFCURVE",
"462 -47 CURVE SMOOTH",
"450 -50.333 OFFCURVE",
"440.667 -52 OFFCURVE",
"434 -52 CURVE SMOOTH",
"394 -52 OFFCURVE",
"376 -17 OFFCURVE",
"376 47 CURVE SMOOTH",
"376 71 OFFCURVE",
"380.333 105.333 OFFCURVE",
"387 152 CURVE SMOOTH",
"393.667 197.333 OFFCURVE",
"398 230.333 OFFCURVE",
"398 253 CURVE SMOOTH",
"398 258.333 OFFCURVE",
"397.333 263 OFFCURVE",
"396 267 CURVE SMOOTH",
"388 299.667 OFFCURVE",
"372 316 OFFCURVE",
"348 316 CURVE SMOOTH",
"342 316 OFFCURVE",
"336.667 315 OFFCURVE",
"332 313 CURVE",
"311.333 308.333 OFFCURVE",
"294 294.333 OFFCURVE",
"280 271 CURVE",
"272 260.333 OFFCURVE",
"261.333 236.333 OFFCURVE",
"248 199 CURVE",
"244.667 218.333 OFFCURVE",
"243 235.667 OFFCURVE",
"243 251 CURVE SMOOTH",
"243 266.333 OFFCURVE",
"244.333 281.667 OFFCURVE",
"247 297 CURVE",
"268 318 LINE",
"286 331.333 OFFCURVE",
"304.667 352.333 OFFCURVE",
"324 381 CURVE SMOOTH",
"346.667 415.667 OFFCURVE",
"362 446.333 OFFCURVE",
"370 477 CURVE SMOOTH",
"375.333 497 OFFCURVE",
"378 513.667 OFFCURVE",
"378 527 CURVE SMOOTH",
"378 561.667 OFFCURVE",
"366.333 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"328.333 579 OFFCURVE",
"313 570.667 OFFCURVE",
"297 554 CURVE SMOOTH",
"278.333 534.667 OFFCURVE",
"263.333 509 OFFCURVE",
"252 477 CURVE SMOOTH",
"241.333 448.333 OFFCURVE",
"232.667 415.333 OFFCURVE",
"226 378 CURVE SMOOTH",
"223.333 366 OFFCURVE",
"221.167 354.167 OFFCURVE",
"219.5 342.5 CURVE SMOOTH",
"217.833 330.833 OFFCURVE",
"215.667 318.667 OFFCURVE",
"213 306 CURVE",
"189 295.333 OFFCURVE",
"165.667 290 OFFCURVE",
"143 290 CURVE SMOOTH",
"131 290 OFFCURVE",
"118.667 291 OFFCURVE",
"104 295 CURVE",
"119 336.5 LINE",
"138 388 LINE SMOOTH",
"148 416 OFFCURVE",
"153 431 OFFCURVE",
"153 433 CURVE SMOOTH",
"153 437 OFFCURVE",
"150.667 441.333 OFFCURVE",
"146 446 CURVE SMOOTH",
"140.667 450 OFFCURVE",
"135.667 452 OFFCURVE",
"131 452 CURVE SMOOTH",
"125.667 452 OFFCURVE",
"122 449.333 OFFCURVE",
"120 444 CURVE SMOOTH",
"106.667 412 OFFCURVE",
"96 385.167 OFFCURVE",
"88 363.5 CURVE SMOOTH",
"69 313 LINE",
"38.333 337 OFFCURVE",
"21 368 OFFCURVE",
"13 408 CURVE SMOOTH",
"12 417 LINE",
"12 426 LINE SMOOTH",
"12 443.333 OFFCURVE",
"15.667 457 OFFCURVE",
"23 467 CURVE SMOOTH",
"33 478.333 OFFCURVE",
"46 484 OFFCURVE",
"62 484 CURVE SMOOTH",
"72 484 OFFCURVE",
"78.833 485.167 OFFCURVE",
"82.5 487.5 CURVE SMOOTH",
"86.167 489.833 OFFCURVE",
"88 492.667 OFFCURVE",
"88 496 CURVE SMOOTH",
"88 499 LINE SMOOTH",
"86 511 OFFCURVE",
"74 517 OFFCURVE",
"52 517 CURVE SMOOTH",
"31.333 517 OFFCURVE",
"14 508.667 OFFCURVE",
"0 492 CURVE SMOOTH",
"-14.667 476.667 OFFCURVE",
"-22 457.667 OFFCURVE",
"-22 435 CURVE SMOOTH",
"-21.5 430.5 LINE",
"-21 426 LINE SMOOTH",
"-14.333 358 OFFCURVE",
"13 311 OFFCURVE",
"61 285 CURVE",
"45 231.667 OFFCURVE",
"37 187 OFFCURVE",
"37 151 CURVE SMOOTH",
"37 102.333 OFFCURVE",
"50.667 65.333 OFFCURVE",
"78 40 CURVE SMOOTH",
"94.667 25.333 OFFCURVE",
"110.667 18 OFFCURVE",
"126 18 CURVE SMOOTH",
"136.667 18 OFFCURVE",
"146.333 20.667 OFFCURVE",
"155 26 CURVE SMOOTH",
"159.667 28.667 OFFCURVE",
"166 34.333 OFFCURVE",
"174 43 CURVE SMOOTH",
"179.333 49.667 OFFCURVE",
"184 58.667 OFFCURVE",
"184 68 CURVE SMOOTH",
"184 72 OFFCURVE",
"183 74 OFFCURVE",
"181 74 CURVE SMOOTH",
"177.667 74 OFFCURVE",
"175 71.667 OFFCURVE",
"173 67 CURVE SMOOTH",
"163.667 49.667 OFFCURVE",
"152 41 OFFCURVE",
"138 41 CURVE SMOOTH",
"92 41 OFFCURVE",
"69 69.667 OFFCURVE",
"69 127 CURVE SMOOTH",
"69 163.667 OFFCURVE",
"78.333 212.333 OFFCURVE",
"97 273 CURVE",
"109.667 270.333 OFFCURVE",
"122 269 OFFCURVE",
"134 269 CURVE SMOOTH",
"160 269 OFFCURVE",
"186 274.333 OFFCURVE",
"212 285 CURVE",
"210.667 251.667 OFFCURVE",
"210 221.667 OFFCURVE",
"210 195 CURVE SMOOTH",
"210 121 LINE",
"210.5 113 LINE",
"212 97 LINE",
"212.5 86.5 LINE",
"213 79 LINE SMOOTH",
"213 76.333 OFFCURVE",
"213.333 74.333 OFFCURVE",
"214 73 CURVE SMOOTH",
"218 59 OFFCURVE",
"225.333 52 OFFCURVE",
"236 52 CURVE SMOOTH",
"237.333 52 OFFCURVE",
"240 52.667 OFFCURVE",
"244 54 CURVE SMOOTH",
"244.667 54 OFFCURVE",
"246 65 OFFCURVE",
"248 87 CURVE SMOOTH",
"250.667 120.333 OFFCURVE",
"253.333 144.333 OFFCURVE",
"256 163 CURVE SMOOTH",
"261.333 197.667 OFFCURVE",
"270.333 226 OFFCURVE",
"281 250 CURVE SMOOTH",
"287 262.667 OFFCURVE",
"295.333 274 OFFCURVE",
"306 284 CURVE SMOOTH",
"319.333 296 OFFCURVE",
"331 302 OFFCURVE",
"341 302 CURVE SMOOTH",
"352.333 302 OFFCURVE",
"360.667 294 OFFCURVE",
"366 278 CURVE SMOOTH",
"368 270 OFFCURVE",
"369 260.333 OFFCURVE",
"369 249 CURVE SMOOTH",
"369 230.333 OFFCURVE",
"366.667 207.333 OFFCURVE",
"360 178 CURVE SMOOTH",
"348 127 LINE SMOOTH",
"342 101 OFFCURVE",
"340 78 OFFCURVE",
"340 57 CURVE SMOOTH",
"340 25 OFFCURVE",
"346 -2 OFFCURVE",
"359 -23 CURVE SMOOTH",
"375.667 -52.333 OFFCURVE",
"401 -67 OFFCURVE",
"435 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"256.667 377.333 OFFCURVE",
"266 417.667 OFFCURVE",
"278 455 CURVE SMOOTH",
"290 490.333 OFFCURVE",
"302 514 OFFCURVE",
"314 526 CURVE SMOOTH",
"324 534.667 OFFCURVE",
"332.333 539 OFFCURVE",
"339 539 CURVE SMOOTH",
"352.333 539 OFFCURVE",
"356 527.667 OFFCURVE",
"356 509 CURVE SMOOTH",
"356 497.5 LINE SMOOTH",
"356 493.833 OFFCURVE",
"355.333 489.667 OFFCURVE",
"354 485 CURVE SMOOTH",
"348 455 OFFCURVE",
"335.667 426 OFFCURVE",
"317 398 CURVE SMOOTH",
"298.333 368.667 OFFCURVE",
"279.333 346.667 OFFCURVE",
"250 324 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"467 -67 OFFCURVE",
"493 -55 OFFCURVE",
"513 -31 CURVE SMOOTH",
"517 -25 OFFCURVE",
"519 -20 OFFCURVE",
"519 -15 CURVE SMOOTH",
"519 -9 OFFCURVE",
"517 -6 OFFCURVE",
"512 -6 CURVE SMOOTH",
"511 -6 OFFCURVE",
"506 -11 OFFCURVE",
"497 -21 CURVE SMOOTH",
"487 -34 OFFCURVE",
"475 -43 OFFCURVE",
"462 -47 CURVE SMOOTH",
"450 -50 OFFCURVE",
"441 -52 OFFCURVE",
"434 -52 CURVE SMOOTH",
"394 -52 OFFCURVE",
"376 -17 OFFCURVE",
"376 47 CURVE SMOOTH",
"376 71 OFFCURVE",
"380 105 OFFCURVE",
"387 152 CURVE SMOOTH",
"394 197 OFFCURVE",
"398 230 OFFCURVE",
"398 253 CURVE SMOOTH",
"398 258 OFFCURVE",
"397 263 OFFCURVE",
"396 267 CURVE SMOOTH",
"388 300 OFFCURVE",
"372 316 OFFCURVE",
"348 316 CURVE SMOOTH",
"342 316 OFFCURVE",
"337 315 OFFCURVE",
"332 313 CURVE",
"311 308 OFFCURVE",
"294 294 OFFCURVE",
"280 271 CURVE SMOOTH",
"272 260 OFFCURVE",
"261 236 OFFCURVE",
"248 199 CURVE",
"245 218 OFFCURVE",
"243 236 OFFCURVE",
"243 251 CURVE SMOOTH",
"243 266 OFFCURVE",
"244 282 OFFCURVE",
"247 297 CURVE",
"268 318 LINE",
"286 331 OFFCURVE",
"305 352 OFFCURVE",
"324 381 CURVE SMOOTH",
"347 416 OFFCURVE",
"362 446 OFFCURVE",
"370 477 CURVE SMOOTH",
"375 497 OFFCURVE",
"378 514 OFFCURVE",
"378 527 CURVE SMOOTH",
"378 562 OFFCURVE",
"366 579 OFFCURVE",
"343 579 CURVE SMOOTH",
"328 579 OFFCURVE",
"313 571 OFFCURVE",
"297 554 CURVE SMOOTH",
"278 535 OFFCURVE",
"263 509 OFFCURVE",
"252 477 CURVE SMOOTH",
"241 448 OFFCURVE",
"233 415 OFFCURVE",
"226 378 CURVE SMOOTH",
"223 366 OFFCURVE",
"221 354 OFFCURVE",
"220 343 CURVE SMOOTH",
"218 331 OFFCURVE",
"216 319 OFFCURVE",
"213 306 CURVE",
"189 295 OFFCURVE",
"166 290 OFFCURVE",
"143 290 CURVE SMOOTH",
"131 290 OFFCURVE",
"119 291 OFFCURVE",
"104 295 CURVE",
"119 337 LINE",
"138 388 LINE SMOOTH",
"148 416 OFFCURVE",
"153 431 OFFCURVE",
"153 433 CURVE SMOOTH",
"153 437 OFFCURVE",
"151 441 OFFCURVE",
"146 446 CURVE SMOOTH",
"141 450 OFFCURVE",
"136 452 OFFCURVE",
"131 452 CURVE SMOOTH",
"126 452 OFFCURVE",
"122 449 OFFCURVE",
"120 444 CURVE SMOOTH",
"107 412 OFFCURVE",
"96 385 OFFCURVE",
"88 364 CURVE SMOOTH",
"69 313 LINE",
"38 337 OFFCURVE",
"21 368 OFFCURVE",
"13 408 CURVE SMOOTH",
"12 417 LINE",
"12 426 LINE SMOOTH",
"12 443 OFFCURVE",
"16 457 OFFCURVE",
"23 467 CURVE SMOOTH",
"33 478 OFFCURVE",
"46 484 OFFCURVE",
"62 484 CURVE SMOOTH",
"72 484 OFFCURVE",
"79 485 OFFCURVE",
"83 488 CURVE SMOOTH",
"86 490 OFFCURVE",
"88 493 OFFCURVE",
"88 496 CURVE SMOOTH",
"88 499 LINE SMOOTH",
"86 511 OFFCURVE",
"74 517 OFFCURVE",
"52 517 CURVE SMOOTH",
"31 517 OFFCURVE",
"14 509 OFFCURVE",
"0 492 CURVE SMOOTH",
"-15 477 OFFCURVE",
"-22 458 OFFCURVE",
"-22 435 CURVE SMOOTH",
"-21 426 LINE SMOOTH",
"-14 358 OFFCURVE",
"13 311 OFFCURVE",
"61 285 CURVE",
"45 232 OFFCURVE",
"37 187 OFFCURVE",
"37 151 CURVE SMOOTH",
"37 102 OFFCURVE",
"51 65 OFFCURVE",
"78 40 CURVE SMOOTH",
"95 25 OFFCURVE",
"111 18 OFFCURVE",
"126 18 CURVE SMOOTH",
"137 18 OFFCURVE",
"146 21 OFFCURVE",
"155 26 CURVE SMOOTH",
"160 29 OFFCURVE",
"166 34 OFFCURVE",
"174 43 CURVE SMOOTH",
"179 50 OFFCURVE",
"184 59 OFFCURVE",
"184 68 CURVE SMOOTH",
"184 72 OFFCURVE",
"183 74 OFFCURVE",
"181 74 CURVE SMOOTH",
"178 74 OFFCURVE",
"175 72 OFFCURVE",
"173 67 CURVE SMOOTH",
"164 50 OFFCURVE",
"152 41 OFFCURVE",
"138 41 CURVE SMOOTH",
"92 41 OFFCURVE",
"69 70 OFFCURVE",
"69 127 CURVE SMOOTH",
"69 164 OFFCURVE",
"78 212 OFFCURVE",
"97 273 CURVE",
"110 270 OFFCURVE",
"122 269 OFFCURVE",
"134 269 CURVE SMOOTH",
"160 269 OFFCURVE",
"186 274 OFFCURVE",
"212 285 CURVE",
"211 252 OFFCURVE",
"210 222 OFFCURVE",
"210 195 CURVE SMOOTH",
"210 121 LINE",
"211 113 LINE",
"212 97 LINE",
"213 87 LINE",
"213 79 LINE SMOOTH",
"213 76 OFFCURVE",
"213 74 OFFCURVE",
"214 73 CURVE",
"218 59 OFFCURVE",
"225 52 OFFCURVE",
"236 52 CURVE",
"244 54 LINE SMOOTH",
"245 54 OFFCURVE",
"246 65 OFFCURVE",
"248 87 CURVE SMOOTH",
"251 120 OFFCURVE",
"253 144 OFFCURVE",
"256 163 CURVE SMOOTH",
"261 198 OFFCURVE",
"270 226 OFFCURVE",
"281 250 CURVE SMOOTH",
"287 263 OFFCURVE",
"295 274 OFFCURVE",
"306 284 CURVE SMOOTH",
"319 296 OFFCURVE",
"331 302 OFFCURVE",
"341 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"361 294 OFFCURVE",
"366 278 CURVE SMOOTH",
"368 270 OFFCURVE",
"369 260 OFFCURVE",
"369 249 CURVE SMOOTH",
"369 230 OFFCURVE",
"367 207 OFFCURVE",
"360 178 CURVE SMOOTH",
"348 127 LINE SMOOTH",
"342 101 OFFCURVE",
"340 78 OFFCURVE",
"340 57 CURVE SMOOTH",
"340 25 OFFCURVE",
"346 -2 OFFCURVE",
"359 -23 CURVE SMOOTH",
"376 -52 OFFCURVE",
"401 -67 OFFCURVE",
"435 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 377 OFFCURVE",
"266 418 OFFCURVE",
"278 455 CURVE SMOOTH",
"290 490 OFFCURVE",
"302 514 OFFCURVE",
"314 526 CURVE SMOOTH",
"324 535 OFFCURVE",
"332 539 OFFCURVE",
"339 539 CURVE SMOOTH",
"352 539 OFFCURVE",
"356 528 OFFCURVE",
"356 509 CURVE SMOOTH",
"356 498 LINE SMOOTH",
"356 494 OFFCURVE",
"355 490 OFFCURVE",
"354 485 CURVE SMOOTH",
"348 455 OFFCURVE",
"336 426 OFFCURVE",
"317 398 CURVE SMOOTH",
"298 369 OFFCURVE",
"279 347 OFFCURVE",
"250 324 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 3 144 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 4 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 4 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012133 4 37 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 12 170 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 49 165 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 89 165 89 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01295 75 146 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012182 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01245 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012138 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012144 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012155 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012123 2 166 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 2 178 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01295 16 142 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012136 64 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 423;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"32 203 OFFCURVE",
"34.333 206.333 OFFCURVE",
"35 213 CURVE",
"37.667 221 OFFCURVE",
"40.333 225.667 OFFCURVE",
"43 227 CURVE SMOOTH",
"47 228.333 OFFCURVE",
"53 229 OFFCURVE",
"61 229 CURVE SMOOTH",
"63.667 229 OFFCURVE",
"71.667 224.667 OFFCURVE",
"85 216 CURVE SMOOTH",
"97.667 207.333 OFFCURVE",
"111 203 OFFCURVE",
"125 203 CURVE SMOOTH",
"149.667 203 OFFCURVE",
"162 215.667 OFFCURVE",
"162 241 CURVE SMOOTH",
"162 244.333 OFFCURVE",
"160.667 246 OFFCURVE",
"158 246 CURVE SMOOTH",
"155.333 246 OFFCURVE",
"150.667 242 OFFCURVE",
"144 234 CURVE SMOOTH",
"136.667 226 OFFCURVE",
"130.333 222 OFFCURVE",
"125 222 CURVE SMOOTH",
"119.667 222 OFFCURVE",
"110 226.667 OFFCURVE",
"96 236 CURVE SMOOTH",
"81.333 245.333 OFFCURVE",
"69.667 250 OFFCURVE",
"61 250 CURVE SMOOTH",
"33.667 250 OFFCURVE",
"20 241 OFFCURVE",
"20 223 CURVE SMOOTH",
"20 209.667 OFFCURVE",
"22.667 203 OFFCURVE",
"28 203 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"32 203 OFFCURVE",
"34 206 OFFCURVE",
"35 213 CURVE",
"38 221 OFFCURVE",
"40 226 OFFCURVE",
"43 227 CURVE SMOOTH",
"47 228 OFFCURVE",
"53 229 OFFCURVE",
"61 229 CURVE SMOOTH",
"64 229 OFFCURVE",
"72 225 OFFCURVE",
"85 216 CURVE SMOOTH",
"98 207 OFFCURVE",
"111 203 OFFCURVE",
"125 203 CURVE SMOOTH",
"150 203 OFFCURVE",
"162 216 OFFCURVE",
"162 241 CURVE SMOOTH",
"162 244 OFFCURVE",
"161 246 OFFCURVE",
"158 246 CURVE SMOOTH",
"155 246 OFFCURVE",
"151 242 OFFCURVE",
"144 234 CURVE SMOOTH",
"137 226 OFFCURVE",
"130 222 OFFCURVE",
"125 222 CURVE SMOOTH",
"120 222 OFFCURVE",
"110 227 OFFCURVE",
"96 236 CURVE SMOOTH",
"81 245 OFFCURVE",
"70 250 OFFCURVE",
"61 250 CURVE SMOOTH",
"34 250 OFFCURVE",
"20 241 OFFCURVE",
"20 223 CURVE SMOOTH",
"20 210 OFFCURVE",
"23 203 OFFCURVE",
"28 203 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01214 0 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 0 229 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 181;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"404 62 OFFCURVE",
"410 60 OFFCURVE",
"415 60 CURVE SMOOTH",
"422 60 OFFCURVE",
"428 63 OFFCURVE",
"428 68 CURVE SMOOTH",
"428 97 LINE SMOOTH",
"428 106 OFFCURVE",
"441 147 OFFCURVE",
"441 166 CURVE SMOOTH",
"441 170 OFFCURVE",
"440 173 OFFCURVE",
"438 174 CURVE",
"438 177.333 OFFCURVE",
"435.333 179.667 OFFCURVE",
"430 181 CURVE SMOOTH",
"418.667 183.667 OFFCURVE",
"365.667 185 OFFCURVE",
"271 185 CURVE SMOOTH",
"165.5 183.5 LINE SMOOTH",
"138.5 183.167 OFFCURVE",
"119.333 182.333 OFFCURVE",
"108 181 CURVE SMOOTH",
"96.667 179.667 OFFCURVE",
"91 172.667 OFFCURVE",
"91 160 CURVE SMOOTH",
"91 155.333 OFFCURVE",
"93 153 OFFCURVE",
"97 153 CURVE SMOOTH",
"183 161 OFFCURVE",
"279 165 OFFCURVE",
"385 165 CURVE SMOOTH",
"404 164.5 LINE",
"417 164 LINE",
"406.333 141.333 OFFCURVE",
"404 120.667 OFFCURVE",
"404 98 CURVE SMOOTH",
"404 67 LINE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"422 60 OFFCURVE",
"428 63 OFFCURVE",
"428 68 CURVE SMOOTH",
"428 97 LINE SMOOTH",
"428 106 OFFCURVE",
"441 147 OFFCURVE",
"441 166 CURVE SMOOTH",
"441 170 OFFCURVE",
"440 173 OFFCURVE",
"438 174 CURVE",
"438 177 OFFCURVE",
"435 180 OFFCURVE",
"430 181 CURVE SMOOTH",
"419 184 OFFCURVE",
"366 185 OFFCURVE",
"271 185 CURVE SMOOTH",
"166 184 LINE SMOOTH",
"139 183 OFFCURVE",
"119 182 OFFCURVE",
"108 181 CURVE SMOOTH",
"97 180 OFFCURVE",
"91 173 OFFCURVE",
"91 160 CURVE SMOOTH",
"91 155 OFFCURVE",
"93 153 OFFCURVE",
"97 153 CURVE SMOOTH",
"183 161 OFFCURVE",
"279 165 OFFCURVE",
"385 165 CURVE SMOOTH",
"404 165 LINE",
"417 164 LINE",
"406 141 OFFCURVE",
"404 121 OFFCURVE",
"404 98 CURVE SMOOTH",
"404 67 LINE SMOOTH",
"404 62 OFFCURVE",
"410 60 OFFCURVE",
"415 60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0125 3 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 465;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"40.667 193 OFFCURVE",
"44 195 OFFCURVE",
"48 199 CURVE SMOOTH",
"58.667 209.667 OFFCURVE",
"70.333 219 OFFCURVE",
"85 227 CURVE",
"87.667 225 OFFCURVE",
"98.667 219.667 OFFCURVE",
"118 211 CURVE SMOOTH",
"136 203 OFFCURVE",
"146.333 199 OFFCURVE",
"149 199 CURVE SMOOTH",
"151.667 199 OFFCURVE",
"153 200.333 OFFCURVE",
"153 203 CURVE SMOOTH",
"153 207.667 OFFCURVE",
"143 217 OFFCURVE",
"123 231 CURVE SMOOTH",
"103.667 244.333 OFFCURVE",
"91 251 OFFCURVE",
"85 251 CURVE SMOOTH",
"81 251 OFFCURVE",
"73 245 OFFCURVE",
"61 233 CURVE SMOOTH",
"42.333 216.333 OFFCURVE",
"33 205 OFFCURVE",
"33 199 CURVE SMOOTH",
"33 195 OFFCURVE",
"34.667 193 OFFCURVE",
"38 193 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"41 193 OFFCURVE",
"44 195 OFFCURVE",
"48 199 CURVE SMOOTH",
"59 210 OFFCURVE",
"70 219 OFFCURVE",
"85 227 CURVE",
"88 225 OFFCURVE",
"99 220 OFFCURVE",
"118 211 CURVE SMOOTH",
"136 203 OFFCURVE",
"146 199 OFFCURVE",
"149 199 CURVE SMOOTH",
"152 199 OFFCURVE",
"153 200 OFFCURVE",
"153 203 CURVE SMOOTH",
"153 208 OFFCURVE",
"143 217 OFFCURVE",
"123 231 CURVE SMOOTH",
"104 244 OFFCURVE",
"91 251 OFFCURVE",
"85 251 CURVE SMOOTH",
"81 251 OFFCURVE",
"73 245 OFFCURVE",
"61 233 CURVE SMOOTH",
"42 216 OFFCURVE",
"33 205 OFFCURVE",
"33 199 CURVE SMOOTH",
"33 195 OFFCURVE",
"35 193 OFFCURVE",
"38 193 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01213 0 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 0 229 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 168;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"104 97 OFFCURVE",
"127 102.667 OFFCURVE",
"151 114 CURVE",
"213 154 LINE",
"217 157.333 OFFCURVE",
"220.667 160 OFFCURVE",
"224 162 CURVE SMOOTH",
"227.333 164 OFFCURVE",
"230.333 166.333 OFFCURVE",
"233 169 CURVE",
"233 127.667 OFFCURVE",
"251.333 107 OFFCURVE",
"288 107 CURVE SMOOTH",
"320 107 OFFCURVE",
"352.667 121.667 OFFCURVE",
"386 151 CURVE SMOOTH",
"421.333 181.667 OFFCURVE",
"439 212.667 OFFCURVE",
"439 244 CURVE SMOOTH",
"439 258 OFFCURVE",
"435.333 270.667 OFFCURVE",
"428 282 CURVE SMOOTH",
"418.667 295.333 OFFCURVE",
"407 302 OFFCURVE",
"393 302 CURVE SMOOTH",
"362.333 302 OFFCURVE",
"317 272.667 OFFCURVE",
"257 214 CURVE",
"256.333 267.333 OFFCURVE",
"230.333 294 OFFCURVE",
"179 294 CURVE SMOOTH",
"143 294 OFFCURVE",
"106.667 279.333 OFFCURVE",
"70 250 CURVE SMOOTH",
"32 220 OFFCURVE",
"13 186.667 OFFCURVE",
"13 150 CURVE SMOOTH",
"13 114.667 OFFCURVE",
"36 97 OFFCURVE",
"82 97 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"40.667 107 OFFCURVE",
"26 118.667 OFFCURVE",
"26 142 CURVE SMOOTH",
"26 157.333 OFFCURVE",
"33.667 177.667 OFFCURVE",
"49 203 CURVE SMOOTH",
"60.333 222.333 OFFCURVE",
"78 239.667 OFFCURVE",
"102 255 CURVE SMOOTH",
"124 269 OFFCURVE",
"146.667 276 OFFCURVE",
"170 276 CURVE SMOOTH",
"212.667 276 OFFCURVE",
"234 254 OFFCURVE",
"234 210 CURVE SMOOTH",
"234 202 LINE SMOOTH",
"234 198.667 OFFCURVE",
"233.667 195 OFFCURVE",
"233 191 CURVE",
"210.333 168.333 OFFCURVE",
"185.667 149.333 OFFCURVE",
"159 134 CURVE SMOOTH",
"125.667 116.667 OFFCURVE",
"96.667 107 OFFCURVE",
"70 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274.333 128 OFFCURVE",
"257.667 149 OFFCURVE",
"257 191 CURVE",
"314 245 LINE SMOOTH",
"340.667 269.667 OFFCURVE",
"361.667 282 OFFCURVE",
"377 282 CURVE SMOOTH",
"407 282 OFFCURVE",
"422 265.667 OFFCURVE",
"422 233 CURVE SMOOTH",
"422 215.667 OFFCURVE",
"419.333 203 OFFCURVE",
"414 195 CURVE SMOOTH",
"404 177.667 OFFCURVE",
"388.333 162.333 OFFCURVE",
"367 149 CURVE SMOOTH",
"345 135 OFFCURVE",
"325 128 OFFCURVE",
"307 128 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"104 97 OFFCURVE",
"127 103 OFFCURVE",
"151 114 CURVE",
"213 154 LINE",
"224 162 LINE SMOOTH",
"227 164 OFFCURVE",
"230 166 OFFCURVE",
"233 169 CURVE",
"233 128 OFFCURVE",
"251 107 OFFCURVE",
"288 107 CURVE SMOOTH",
"320 107 OFFCURVE",
"353 122 OFFCURVE",
"386 151 CURVE SMOOTH",
"421 182 OFFCURVE",
"439 213 OFFCURVE",
"439 244 CURVE SMOOTH",
"439 258 OFFCURVE",
"435 271 OFFCURVE",
"428 282 CURVE SMOOTH",
"419 295 OFFCURVE",
"407 302 OFFCURVE",
"393 302 CURVE SMOOTH",
"362 302 OFFCURVE",
"317 273 OFFCURVE",
"257 214 CURVE",
"256 267 OFFCURVE",
"230 294 OFFCURVE",
"179 294 CURVE SMOOTH",
"143 294 OFFCURVE",
"107 279 OFFCURVE",
"70 250 CURVE SMOOTH",
"32 220 OFFCURVE",
"13 187 OFFCURVE",
"13 150 CURVE SMOOTH",
"13 115 OFFCURVE",
"36 97 OFFCURVE",
"82 97 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41 107 OFFCURVE",
"26 119 OFFCURVE",
"26 142 CURVE SMOOTH",
"26 157 OFFCURVE",
"34 178 OFFCURVE",
"49 203 CURVE SMOOTH",
"60 222 OFFCURVE",
"78 240 OFFCURVE",
"102 255 CURVE SMOOTH",
"124 269 OFFCURVE",
"147 276 OFFCURVE",
"170 276 CURVE SMOOTH",
"213 276 OFFCURVE",
"234 254 OFFCURVE",
"234 210 CURVE SMOOTH",
"234 202 LINE SMOOTH",
"234 199 OFFCURVE",
"234 195 OFFCURVE",
"233 191 CURVE",
"210 168 OFFCURVE",
"186 149 OFFCURVE",
"159 134 CURVE SMOOTH",
"126 117 OFFCURVE",
"97 107 OFFCURVE",
"70 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 128 OFFCURVE",
"258 149 OFFCURVE",
"257 191 CURVE",
"314 245 LINE SMOOTH",
"341 270 OFFCURVE",
"362 282 OFFCURVE",
"377 282 CURVE SMOOTH",
"407 282 OFFCURVE",
"422 266 OFFCURVE",
"422 233 CURVE SMOOTH",
"422 216 OFFCURVE",
"419 203 OFFCURVE",
"414 195 CURVE SMOOTH",
"404 178 OFFCURVE",
"388 162 OFFCURVE",
"367 149 CURVE SMOOTH",
"345 135 OFFCURVE",
"325 128 OFFCURVE",
"307 128 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 28 170 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 28 25 28 41 28 57 28 73 28 89 28 105 28 121 28 137 28 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01222 16 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 49 165 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01235 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 455;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"194 4 OFFCURVE",
"217.333 20.333 OFFCURVE",
"236 53 CURVE SMOOTH",
"244 67.667 OFFCURVE",
"248 84.333 OFFCURVE",
"248 103 CURVE SMOOTH",
"248 112.5 LINE SMOOTH",
"248 115.5 OFFCURVE",
"247.333 119.333 OFFCURVE",
"246 124 CURVE",
"282.667 128.667 OFFCURVE",
"306 148.667 OFFCURVE",
"316 184 CURVE",
"316 187 LINE SMOOTH",
"316 190.333 OFFCURVE",
"315.333 192 OFFCURVE",
"314 192 CURVE SMOOTH",
"312.667 192 OFFCURVE",
"311.333 190 OFFCURVE",
"310 186 CURVE SMOOTH",
"306 174.667 OFFCURVE",
"296.333 165 OFFCURVE",
"281 157 CURVE SMOOTH",
"269.667 150.333 OFFCURVE",
"259.333 147 OFFCURVE",
"250 147 CURVE SMOOTH",
"248 147 OFFCURVE",
"246.333 147.667 OFFCURVE",
"245 149 CURVE",
"241 157.5 LINE",
"232 177 LINE",
"224 193.5 LINE SMOOTH",
"222 197.833 OFFCURVE",
"219.667 201.667 OFFCURVE",
"217 205 CURVE SMOOTH",
"208.333 217.667 OFFCURVE",
"199.333 224 OFFCURVE",
"190 224 CURVE SMOOTH",
"184 224 OFFCURVE",
"178.667 221.667 OFFCURVE",
"174 217 CURVE",
"170 211 OFFCURVE",
"168 204.667 OFFCURVE",
"168 198 CURVE SMOOTH",
"168 184.667 OFFCURVE",
"174.667 172.667 OFFCURVE",
"188 162 CURVE SMOOTH",
"206.667 146.667 OFFCURVE",
"217.333 136.667 OFFCURVE",
"220 132 CURVE",
"221.333 110.667 OFFCURVE",
"221 94.333 OFFCURVE",
"219 83 CURVE SMOOTH",
"213 40.333 OFFCURVE",
"197.333 19 OFFCURVE",
"172 19 CURVE SMOOTH",
"145.333 19 OFFCURVE",
"126.667 44 OFFCURVE",
"112 88 CURVE SMOOTH",
"101.333 120 OFFCURVE",
"95.667 161.333 OFFCURVE",
"95 212 CURVE",
"123.667 218.667 OFFCURVE",
"152 238 OFFCURVE",
"180 270 CURVE SMOOTH",
"218.667 311.333 OFFCURVE",
"238 362.667 OFFCURVE",
"238 424 CURVE SMOOTH",
"238 464 OFFCURVE",
"223.667 484 OFFCURVE",
"195 484 CURVE SMOOTH",
"148.246 484 OFFCURVE",
"112.103 443.935 OFFCURVE",
"93 403 CURVE SMOOTH",
"67.667 355 OFFCURVE",
"55 300.667 OFFCURVE",
"55 234 CURVE",
"46.333 232 OFFCURVE",
"37.333 234.333 OFFCURVE",
"28 241 CURVE SMOOTH",
"25.333 242.333 OFFCURVE",
"23 243 OFFCURVE",
"21 243 CURVE SMOOTH",
"13.667 243 OFFCURVE",
"10 240 OFFCURVE",
"10 234 CURVE SMOOTH",
"10 230 OFFCURVE",
"12.667 226.333 OFFCURVE",
"18 223 CURVE SMOOTH",
"29.333 215.667 OFFCURVE",
"41 212.333 OFFCURVE",
"53 213 CURVE",
"55.667 211.667 OFFCURVE",
"58 199.333 OFFCURVE",
"60 176 CURVE SMOOTH",
"62 146.667 OFFCURVE",
"65.333 122.667 OFFCURVE",
"70 104 CURVE SMOOTH",
"78 72.667 OFFCURVE",
"91 48 OFFCURVE",
"109 30 CURVE SMOOTH",
"127.667 12.667 OFFCURVE",
"146.667 4 OFFCURVE",
"166 4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 247 LINE",
"93 251 LINE SMOOTH",
"93 289.667 OFFCURVE",
"102.667 334 OFFCURVE",
"122 384 CURVE SMOOTH",
"143.333 440 OFFCURVE",
"166.667 468 OFFCURVE",
"192 468 CURVE SMOOTH",
"208 468 OFFCURVE",
"214 451.333 OFFCURVE",
"214 426 CURVE SMOOTH",
"214 398.667 OFFCURVE",
"208 370.667 OFFCURVE",
"196 342 CURVE SMOOTH",
"184.667 315.333 OFFCURVE",
"169.667 292.667 OFFCURVE",
"151 274 CURVE SMOOTH",
"132.333 255.333 OFFCURVE",
"115.333 244 OFFCURVE",
"94 240 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"194 4 OFFCURVE",
"217 20 OFFCURVE",
"236 53 CURVE SMOOTH",
"244 68 OFFCURVE",
"248 84 OFFCURVE",
"248 103 CURVE SMOOTH",
"248 113 LINE SMOOTH",
"248 116 OFFCURVE",
"247 119 OFFCURVE",
"246 124 CURVE",
"283 129 OFFCURVE",
"306 149 OFFCURVE",
"316 184 CURVE",
"316 187 LINE SMOOTH",
"316 190 OFFCURVE",
"315 192 OFFCURVE",
"314 192 CURVE SMOOTH",
"313 192 OFFCURVE",
"311 190 OFFCURVE",
"310 186 CURVE SMOOTH",
"306 175 OFFCURVE",
"296 165 OFFCURVE",
"281 157 CURVE SMOOTH",
"270 150 OFFCURVE",
"259 147 OFFCURVE",
"250 147 CURVE SMOOTH",
"248 147 OFFCURVE",
"246 148 OFFCURVE",
"245 149 CURVE",
"241 158 LINE",
"232 177 LINE",
"224 194 LINE SMOOTH",
"222 198 OFFCURVE",
"220 202 OFFCURVE",
"217 205 CURVE",
"208 218 OFFCURVE",
"199 224 OFFCURVE",
"190 224 CURVE SMOOTH",
"184 224 OFFCURVE",
"179 222 OFFCURVE",
"174 217 CURVE",
"170 211 OFFCURVE",
"168 205 OFFCURVE",
"168 198 CURVE SMOOTH",
"168 185 OFFCURVE",
"175 173 OFFCURVE",
"188 162 CURVE SMOOTH",
"207 147 OFFCURVE",
"217 137 OFFCURVE",
"220 132 CURVE",
"221 111 OFFCURVE",
"221 94 OFFCURVE",
"219 83 CURVE SMOOTH",
"213 40 OFFCURVE",
"197 19 OFFCURVE",
"172 19 CURVE SMOOTH",
"145 19 OFFCURVE",
"127 44 OFFCURVE",
"112 88 CURVE SMOOTH",
"101 120 OFFCURVE",
"96 161 OFFCURVE",
"95 212 CURVE",
"124 219 OFFCURVE",
"152 238 OFFCURVE",
"180 270 CURVE SMOOTH",
"219 311 OFFCURVE",
"238 363 OFFCURVE",
"238 424 CURVE SMOOTH",
"238 464 OFFCURVE",
"224 484 OFFCURVE",
"195 484 CURVE SMOOTH",
"148 484 OFFCURVE",
"112 444 OFFCURVE",
"93 403 CURVE SMOOTH",
"68 355 OFFCURVE",
"55 301 OFFCURVE",
"55 234 CURVE",
"46 232 OFFCURVE",
"37 234 OFFCURVE",
"28 241 CURVE",
"25 242 OFFCURVE",
"23 243 OFFCURVE",
"21 243 CURVE SMOOTH",
"14 243 OFFCURVE",
"10 240 OFFCURVE",
"10 234 CURVE SMOOTH",
"10 230 OFFCURVE",
"13 226 OFFCURVE",
"18 223 CURVE SMOOTH",
"29 216 OFFCURVE",
"41 212 OFFCURVE",
"53 213 CURVE",
"56 212 OFFCURVE",
"58 199 OFFCURVE",
"60 176 CURVE SMOOTH",
"62 147 OFFCURVE",
"65 123 OFFCURVE",
"70 104 CURVE SMOOTH",
"78 73 OFFCURVE",
"91 48 OFFCURVE",
"109 30 CURVE SMOOTH",
"128 13 OFFCURVE",
"147 4 OFFCURVE",
"166 4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 247 LINE",
"93 251 LINE SMOOTH",
"93 290 OFFCURVE",
"103 334 OFFCURVE",
"122 384 CURVE SMOOTH",
"143 440 OFFCURVE",
"167 468 OFFCURVE",
"192 468 CURVE SMOOTH",
"208 468 OFFCURVE",
"214 451 OFFCURVE",
"214 426 CURVE SMOOTH",
"214 399 OFFCURVE",
"208 371 OFFCURVE",
"196 342 CURVE SMOOTH",
"185 315 OFFCURVE",
"170 293 OFFCURVE",
"151 274 CURVE SMOOTH",
"132 255 OFFCURVE",
"115 244 OFFCURVE",
"94 240 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01277 3 37 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 77 170 77 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01235 1 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01246 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 46 23 46 39 46 55 46 71 46 87 46 103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 46 23 46 39 46 55 46 71 46 87 46 103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 46 23 46 39 46 55 46 71 46 87 46 103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 288;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = radical;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"169.333 40.333 OFFCURVE",
"201 89 OFFCURVE",
"255 177 CURVE SMOOTH",
"281.719 221.531 OFFCURVE",
"361.492 360.857 OFFCURVE",
"374 389 CURVE",
"376 393 OFFCURVE",
"377 398 OFFCURVE",
"377 403 CURVE SMOOTH",
"377 423 OFFCURVE",
"363 446 OFFCURVE",
"357 436 CURVE",
"319.653 361.306 OFFCURVE",
"230.701 180.171 OFFCURVE",
"179 97 CURVE SMOOTH",
"168 80 LINE",
"160 68 LINE",
"137.333 85.333 OFFCURVE",
"106.667 110 OFFCURVE",
"80 134 CURVE SMOOTH",
"75 138 OFFCURVE",
"71 131 OFFCURVE",
"71 123 CURVE SMOOTH",
"71 120 OFFCURVE",
"72 116 OFFCURVE",
"74 113 CURVE SMOOTH",
"89.874 97.126 OFFCURVE",
"145.531 16.531 OFFCURVE",
"160 31 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"169 40 OFFCURVE",
"201 89 OFFCURVE",
"255 177 CURVE SMOOTH",
"282 222 OFFCURVE",
"361 361 OFFCURVE",
"374 389 CURVE SMOOTH",
"376 393 OFFCURVE",
"377 398 OFFCURVE",
"377 403 CURVE SMOOTH",
"377 423 OFFCURVE",
"363 446 OFFCURVE",
"357 436 CURVE SMOOTH",
"320 361 OFFCURVE",
"231 180 OFFCURVE",
"179 97 CURVE SMOOTH",
"168 80 LINE",
"160 68 LINE",
"137 85 OFFCURVE",
"107 110 OFFCURVE",
"80 134 CURVE SMOOTH",
"75 138 OFFCURVE",
"71 131 OFFCURVE",
"71 123 CURVE SMOOTH",
"71 120 OFFCURVE",
"72 116 OFFCURVE",
"74 113 CURVE",
"90 97 OFFCURVE",
"146 17 OFFCURVE",
"160 31 CURVE SMOOTH"
);
}
);
width = 419;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = mu;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"10 -147 OFFCURVE",
"38 -37 OFFCURVE",
"49 44 CURVE",
"60 24 OFFCURVE",
"73 14 OFFCURVE",
"87 14 CURVE SMOOTH",
"97 14 OFFCURVE",
"108 18 OFFCURVE",
"120 29 CURVE SMOOTH",
"129.333 37.667 OFFCURVE",
"137.833 50.833 OFFCURVE",
"145.5 68.5 CURVE SMOOTH",
"153.167 86.167 OFFCURVE",
"160.667 112.667 OFFCURVE",
"168 148 CURVE",
"170.5 108 LINE SMOOTH",
"170.833 100 OFFCURVE",
"171.667 93.333 OFFCURVE",
"173 88 CURVE SMOOTH",
"175.667 68 OFFCURVE",
"182.333 48.667 OFFCURVE",
"189 34 CURVE SMOOTH",
"192 27 OFFCURVE",
"197 24 OFFCURVE",
"202 24 CURVE SMOOTH",
"208 24 OFFCURVE",
"214 29 OFFCURVE",
"214 36 CURVE SMOOTH",
"214 37 OFFCURVE",
"214 39 OFFCURVE",
"213 41 CURVE SMOOTH",
"207.667 53.667 OFFCURVE",
"203.667 68.667 OFFCURVE",
"201 86 CURVE SMOOTH",
"200.333 88.667 OFFCURVE",
"200 91.167 OFFCURVE",
"200 93.5 CURVE SMOOTH",
"200 95.833 OFFCURVE",
"199.667 98 OFFCURVE",
"199 100 CURVE",
"197 120 OFFCURVE",
"195 138 OFFCURVE",
"195 156 CURVE SMOOTH",
"195 182 OFFCURVE",
"198 205 OFFCURVE",
"203 227 CURVE",
"203.5 232 LINE SMOOTH",
"203.833 233.333 OFFCURVE",
"203.667 234.667 OFFCURVE",
"203 236 CURVE",
"201.667 242.667 OFFCURVE",
"198.333 247.333 OFFCURVE",
"193 250 CURVE SMOOTH",
"188 251 OFFCURVE",
"183 252 OFFCURVE",
"178 252 CURVE SMOOTH",
"176 252 OFFCURVE",
"175 252 OFFCURVE",
"173 252 CURVE SMOOTH",
"155.667 248.667 OFFCURVE",
"148.667 239 OFFCURVE",
"152 223 CURVE SMOOTH",
"153 215 OFFCURVE",
"154 206 OFFCURVE",
"154 196 CURVE SMOOTH",
"154 177 OFFCURVE",
"151 152 OFFCURVE",
"146 124 CURVE SMOOTH",
"142 102 OFFCURVE",
"134.333 82.333 OFFCURVE",
"123 65 CURVE SMOOTH",
"114 50 OFFCURVE",
"101 41 OFFCURVE",
"89 41 CURVE SMOOTH",
"77 41 OFFCURVE",
"67 49 OFFCURVE",
"63 68 CURVE SMOOTH",
"61 84 OFFCURVE",
"59 100 OFFCURVE",
"59 115 CURVE SMOOTH",
"59 121 OFFCURVE",
"59 127 OFFCURVE",
"60 133 CURVE SMOOTH",
"63 152 LINE SMOOTH",
"63 155.333 OFFCURVE",
"63.333 158.167 OFFCURVE",
"64 160.5 CURVE SMOOTH",
"66 169 LINE SMOOTH",
"71.333 187.667 OFFCURVE",
"77.333 207.333 OFFCURVE",
"84 226 CURVE SMOOTH",
"84.667 228.667 OFFCURVE",
"85 232.333 OFFCURVE",
"85 237 CURVE SMOOTH",
"84.333 242.333 OFFCURVE",
"80.667 246.667 OFFCURVE",
"74 250 CURVE SMOOTH",
"70 251 OFFCURVE",
"65 252 OFFCURVE",
"60 252 CURVE SMOOTH",
"58 252 OFFCURVE",
"57 252 OFFCURVE",
"55 252 CURVE SMOOTH",
"41.667 250 OFFCURVE",
"35 244.333 OFFCURVE",
"35 235 CURVE SMOOTH",
"28.5 126 LINE SMOOTH",
"26.167 86.667 OFFCURVE",
"21.667 48.667 OFFCURVE",
"15 12 CURVE SMOOTH",
"6.258 -37.54 OFFCURVE",
"-17.524 -134 OFFCURVE",
"-75 -134 CURVE SMOOTH",
"-87 -134 OFFCURVE",
"-97.667 -129.333 OFFCURVE",
"-107 -120 CURVE SMOOTH",
"-116 -110 OFFCURVE",
"-120 -96 OFFCURVE",
"-120 -80 CURVE SMOOTH",
"-120 -58 OFFCURVE",
"-114 -46 OFFCURVE",
"-106 -38 CURVE SMOOTH",
"-103 -35 OFFCURVE",
"-99 -30 OFFCURVE",
"-99 -26 CURVE SMOOTH",
"-99 -24 OFFCURVE",
"-101 -22 OFFCURVE",
"-105 -22 CURVE SMOOTH",
"-127 -22 OFFCURVE",
"-138 -66 OFFCURVE",
"-138 -80 CURVE SMOOTH",
"-138 -99 OFFCURVE",
"-132 -115 OFFCURVE",
"-119 -127 CURVE SMOOTH",
"-106 -141 OFFCURVE",
"-89 -147 OFFCURVE",
"-69 -147 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"10 -147 OFFCURVE",
"38 -37 OFFCURVE",
"49 44 CURVE",
"60 24 OFFCURVE",
"73 14 OFFCURVE",
"87 14 CURVE SMOOTH",
"97 14 OFFCURVE",
"108 18 OFFCURVE",
"120 29 CURVE SMOOTH",
"129 38 OFFCURVE",
"138 51 OFFCURVE",
"146 69 CURVE SMOOTH",
"153 86 OFFCURVE",
"161 113 OFFCURVE",
"168 148 CURVE",
"171 108 LINE SMOOTH",
"171 100 OFFCURVE",
"172 93 OFFCURVE",
"173 88 CURVE SMOOTH",
"176 68 OFFCURVE",
"182 49 OFFCURVE",
"189 34 CURVE SMOOTH",
"192 27 OFFCURVE",
"197 24 OFFCURVE",
"202 24 CURVE SMOOTH",
"208 24 OFFCURVE",
"214 29 OFFCURVE",
"214 36 CURVE SMOOTH",
"214 37 OFFCURVE",
"214 39 OFFCURVE",
"213 41 CURVE SMOOTH",
"208 54 OFFCURVE",
"204 69 OFFCURVE",
"201 86 CURVE SMOOTH",
"200 89 OFFCURVE",
"200 91 OFFCURVE",
"200 94 CURVE SMOOTH",
"200 96 OFFCURVE",
"200 98 OFFCURVE",
"199 100 CURVE",
"197 120 OFFCURVE",
"195 138 OFFCURVE",
"195 156 CURVE SMOOTH",
"195 182 OFFCURVE",
"198 205 OFFCURVE",
"203 227 CURVE SMOOTH",
"204 232 LINE SMOOTH",
"204 233 OFFCURVE",
"204 235 OFFCURVE",
"203 236 CURVE",
"202 243 OFFCURVE",
"198 247 OFFCURVE",
"193 250 CURVE",
"188 251 OFFCURVE",
"183 252 OFFCURVE",
"178 252 CURVE SMOOTH",
"173 252 LINE",
"159 249 OFFCURVE",
"151 242 OFFCURVE",
"151 230 CURVE SMOOTH",
"151 220 OFFCURVE",
"154 209 OFFCURVE",
"154 196 CURVE SMOOTH",
"154 177 OFFCURVE",
"151 152 OFFCURVE",
"146 124 CURVE SMOOTH",
"142 102 OFFCURVE",
"134 82 OFFCURVE",
"123 65 CURVE SMOOTH",
"114 50 OFFCURVE",
"101 41 OFFCURVE",
"89 41 CURVE SMOOTH",
"77 41 OFFCURVE",
"67 49 OFFCURVE",
"63 68 CURVE SMOOTH",
"61 84 OFFCURVE",
"59 100 OFFCURVE",
"59 115 CURVE SMOOTH",
"59 121 OFFCURVE",
"59 127 OFFCURVE",
"60 133 CURVE SMOOTH",
"63 152 LINE SMOOTH",
"63 155 OFFCURVE",
"63 158 OFFCURVE",
"64 161 CURVE SMOOTH",
"66 169 LINE SMOOTH",
"71 188 OFFCURVE",
"77 207 OFFCURVE",
"84 226 CURVE SMOOTH",
"85 229 OFFCURVE",
"85 232 OFFCURVE",
"85 237 CURVE SMOOTH",
"84 242 OFFCURVE",
"81 247 OFFCURVE",
"74 250 CURVE SMOOTH",
"70 251 OFFCURVE",
"65 252 OFFCURVE",
"60 252 CURVE SMOOTH",
"55 252 LINE SMOOTH",
"42 250 OFFCURVE",
"35 244 OFFCURVE",
"35 235 CURVE SMOOTH",
"29 126 LINE SMOOTH",
"26 87 OFFCURVE",
"22 49 OFFCURVE",
"15 12 CURVE SMOOTH",
"6 -38 OFFCURVE",
"-18 -134 OFFCURVE",
"-75 -134 CURVE SMOOTH",
"-87 -134 OFFCURVE",
"-98 -129 OFFCURVE",
"-107 -120 CURVE SMOOTH",
"-116 -110 OFFCURVE",
"-120 -96 OFFCURVE",
"-120 -80 CURVE SMOOTH",
"-120 -58 OFFCURVE",
"-114 -46 OFFCURVE",
"-106 -38 CURVE SMOOTH",
"-103 -35 OFFCURVE",
"-99 -30 OFFCURVE",
"-99 -26 CURVE SMOOTH",
"-99 -24 OFFCURVE",
"-101 -22 OFFCURVE",
"-105 -22 CURVE SMOOTH",
"-127 -22 OFFCURVE",
"-138 -66 OFFCURVE",
"-138 -80 CURVE SMOOTH",
"-138 -99 OFFCURVE",
"-132 -115 OFFCURVE",
"-119 -127 CURVE SMOOTH",
"-106 -141 OFFCURVE",
"-89 -147 OFFCURVE",
"-69 -147 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01281 3 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 31 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 0 234 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01254 31 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 31 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 81 165 81 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 7 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01285 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 85 23 85 39 85 55 85 71 85 87 85 103 85 119 85 135 85 151 85 167 85 183 85 199 85 215 85 231 85 247 85 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 85 23 85 39 85 55 85 71 85 87 85 103 85 119 85 135 85 151 85 167 85 183 85 199 85 215 85 231 85 247 85 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 85 23 85 39 85 55 85 71 85 87 85 103 85 119 85 135 85 151 85 167 85 183 85 199 85 215 85 231 85 247 85 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = percent;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"25.667 -28 OFFCURVE",
"27 -27.667 OFFCURVE",
"27 -27 CURVE",
"56.333 31 OFFCURVE",
"103.333 100.667 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 256.5 LINE",
"345 397 LINE SMOOTH",
"415.667 481 OFFCURVE",
"464.667 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"494.667 589.667 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598.333 OFFCURVE",
"492.333 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 599.667 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554.333 OFFCURVE",
"402.333 492.667 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"168.667 232.333 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"24.667 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1.333 -14.667 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25.333 OFFCURVE",
"17.667 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 -15 OFFCURVE",
"394 -2.667 OFFCURVE",
"420 22 CURVE SMOOTH",
"447 49 OFFCURVE",
"461 86 OFFCURVE",
"461 132 CURVE SMOOTH",
"461 165 OFFCURVE",
"451 194 OFFCURVE",
"430 219 CURVE SMOOTH",
"408.667 243 OFFCURVE",
"382.333 255 OFFCURVE",
"351 255 CURVE SMOOTH",
"321.667 255 OFFCURVE",
"296.667 244 OFFCURVE",
"276 222 CURVE SMOOTH",
"257.333 202 OFFCURVE",
"246.333 177 OFFCURVE",
"243 147 CURVE",
"232.333 127.667 OFFCURVE",
"227 107.333 OFFCURVE",
"227 86 CURVE SMOOTH",
"227 54 OFFCURVE",
"237.333 29 OFFCURVE",
"258 11 CURVE SMOOTH",
"277.333 -6.333 OFFCURVE",
"301.333 -15 OFFCURVE",
"330 -15 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 3 OFFCURVE",
"281.667 10 OFFCURVE",
"269 24 CURVE SMOOTH",
"253.667 39.333 OFFCURVE",
"246.667 60 OFFCURVE",
"248 86 CURVE SMOOTH",
"248 104 LINE",
"262.667 77.333 OFFCURVE",
"274 67.333 OFFCURVE",
"290 58 CURVE SMOOTH",
"302 52.667 OFFCURVE",
"314 50 OFFCURVE",
"326 50 CURVE SMOOTH",
"344 50 OFFCURVE",
"362 55 OFFCURVE",
"380 65 CURVE SMOOTH",
"396 73.667 OFFCURVE",
"405.667 82.333 OFFCURVE",
"409 91 CURVE",
"411 102 LINE SMOOTH",
"411 104 OFFCURVE",
"410.333 105 OFFCURVE",
"409 105 CURVE SMOOTH",
"405 105 OFFCURVE",
"400.667 102.333 OFFCURVE",
"396 97 CURVE SMOOTH",
"378.667 76.333 OFFCURVE",
"359.333 66 OFFCURVE",
"338 66 CURVE SMOOTH",
"328.667 66 OFFCURVE",
"318 68.667 OFFCURVE",
"306 74 CURVE SMOOTH",
"280 88 OFFCURVE",
"267 111.667 OFFCURVE",
"267 145 CURVE SMOOTH",
"267 155 OFFCURVE",
"268.333 164 OFFCURVE",
"271 172 CURVE",
"281 185.333 OFFCURVE",
"293.333 193.333 OFFCURVE",
"308 196 CURVE",
"309 198 LINE",
"309 199.333 OFFCURVE",
"308.667 200 OFFCURVE",
"308 200 CURVE SMOOTH",
"307 200 LINE",
"299 197.333 OFFCURVE",
"291.333 194.333 OFFCURVE",
"274 185 CURVE",
"294 223.667 OFFCURVE",
"316.667 239 OFFCURVE",
"346 239 CURVE SMOOTH",
"351 239 LINE SMOOTH",
"408.333 235 OFFCURVE",
"437 200.667 OFFCURVE",
"437 136 CURVE SMOOTH",
"437 97.333 OFFCURVE",
"424.333 64.667 OFFCURVE",
"399 38 CURVE SMOOTH",
"375.667 14.667 OFFCURVE",
"349.667 3 OFFCURVE",
"321 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151.667 383 OFFCURVE",
"134 391.333 OFFCURVE",
"120 408 CURVE SMOOTH",
"108.667 422.667 OFFCURVE",
"103 439.667 OFFCURVE",
"103 459 CURVE SMOOTH",
"103 480.333 OFFCURVE",
"111 496.333 OFFCURVE",
"127 507 CURVE",
"139.667 480.333 OFFCURVE",
"155 467 OFFCURVE",
"173 467 CURVE SMOOTH",
"185.667 467 OFFCURVE",
"197 473.333 OFFCURVE",
"207 486 CURVE",
"209 491 LINE",
"208 492 LINE",
"206 491 LINE",
"196.667 483 OFFCURVE",
"188 479 OFFCURVE",
"180 479 CURVE SMOOTH",
"170 479 OFFCURVE",
"161.667 484 OFFCURVE",
"155 494 CURVE SMOOTH",
"149.667 502.667 OFFCURVE",
"147 510.667 OFFCURVE",
"147 518 CURVE SMOOTH",
"147 535.333 OFFCURVE",
"152.667 549.667 OFFCURVE",
"164 561 CURVE SMOOTH",
"174 571 OFFCURVE",
"186.333 576 OFFCURVE",
"201 576 CURVE SMOOTH",
"221.667 574.667 OFFCURVE",
"238 565.333 OFFCURVE",
"250 548 CURVE SMOOTH",
"262 530.667 OFFCURVE",
"268 510.667 OFFCURVE",
"268 488 CURVE SMOOTH",
"268 460.667 OFFCURVE",
"259 436.667 OFFCURVE",
"241 416 CURVE SMOOTH",
"221.667 394.667 OFFCURVE",
"199 383.667 OFFCURVE",
"173 383 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"207 368 OFFCURVE",
"236.333 380.333 OFFCURVE",
"261 405 CURVE SMOOTH",
"285 429 OFFCURVE",
"297 458.333 OFFCURVE",
"297 493 CURVE SMOOTH",
"297 522.333 OFFCURVE",
"287.667 548.333 OFFCURVE",
"269 571 CURVE SMOOTH",
"249.667 594.333 OFFCURVE",
"226.333 606 OFFCURVE",
"199 606 CURVE SMOOTH",
"192.333 606 OFFCURVE",
"185.667 605.333 OFFCURVE",
"179 604 CURVE SMOOTH",
"163 600 OFFCURVE",
"150.667 593 OFFCURVE",
"142 583 CURVE SMOOTH",
"132 571.667 OFFCURVE",
"127 560 OFFCURVE",
"127 548 CURVE SMOOTH",
"127 543.333 OFFCURVE",
"128.333 537.333 OFFCURVE",
"131 530 CURVE",
"114.333 524 OFFCURVE",
"101.667 514.333 OFFCURVE",
"93 501 CURVE SMOOTH",
"83.667 487 OFFCURVE",
"79 468.667 OFFCURVE",
"79 446 CURVE SMOOTH",
"79 422.667 OFFCURVE",
"88.333 403.667 OFFCURVE",
"107 389 CURVE SMOOTH",
"125 375 OFFCURVE",
"147 368 OFFCURVE",
"173 368 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"26 -28 OFFCURVE",
"27 -28 OFFCURVE",
"27 -27 CURVE",
"56 31 OFFCURVE",
"103 101 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 257 LINE",
"345 397 LINE SMOOTH",
"416 481 OFFCURVE",
"465 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"495 590 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598 OFFCURVE",
"492 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 600 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554 OFFCURVE",
"402 493 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"169 232 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"25 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1 -15 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25 OFFCURVE",
"18 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 -15 OFFCURVE",
"394 -3 OFFCURVE",
"420 22 CURVE SMOOTH",
"447 49 OFFCURVE",
"461 86 OFFCURVE",
"461 132 CURVE SMOOTH",
"461 165 OFFCURVE",
"451 194 OFFCURVE",
"430 219 CURVE SMOOTH",
"409 243 OFFCURVE",
"382 255 OFFCURVE",
"351 255 CURVE SMOOTH",
"322 255 OFFCURVE",
"297 244 OFFCURVE",
"276 222 CURVE SMOOTH",
"257 202 OFFCURVE",
"246 177 OFFCURVE",
"243 147 CURVE",
"232 128 OFFCURVE",
"227 107 OFFCURVE",
"227 86 CURVE SMOOTH",
"227 54 OFFCURVE",
"237 29 OFFCURVE",
"258 11 CURVE SMOOTH",
"277 -6 OFFCURVE",
"301 -15 OFFCURVE",
"330 -15 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299 3 OFFCURVE",
"282 10 OFFCURVE",
"269 24 CURVE SMOOTH",
"254 39 OFFCURVE",
"247 60 OFFCURVE",
"248 86 CURVE SMOOTH",
"248 104 LINE",
"263 77 OFFCURVE",
"274 67 OFFCURVE",
"290 58 CURVE SMOOTH",
"302 53 OFFCURVE",
"314 50 OFFCURVE",
"326 50 CURVE SMOOTH",
"344 50 OFFCURVE",
"362 55 OFFCURVE",
"380 65 CURVE SMOOTH",
"396 74 OFFCURVE",
"406 82 OFFCURVE",
"409 91 CURVE SMOOTH",
"411 102 LINE SMOOTH",
"411 104 OFFCURVE",
"410 105 OFFCURVE",
"409 105 CURVE SMOOTH",
"405 105 OFFCURVE",
"401 102 OFFCURVE",
"396 97 CURVE SMOOTH",
"379 76 OFFCURVE",
"359 66 OFFCURVE",
"338 66 CURVE SMOOTH",
"329 66 OFFCURVE",
"318 69 OFFCURVE",
"306 74 CURVE SMOOTH",
"280 88 OFFCURVE",
"267 112 OFFCURVE",
"267 145 CURVE SMOOTH",
"267 155 OFFCURVE",
"268 164 OFFCURVE",
"271 172 CURVE",
"281 185 OFFCURVE",
"293 193 OFFCURVE",
"308 196 CURVE",
"309 198 LINE",
"309 199 OFFCURVE",
"309 200 OFFCURVE",
"308 200 CURVE SMOOTH",
"307 200 LINE",
"299 197 OFFCURVE",
"291 194 OFFCURVE",
"274 185 CURVE",
"294 224 OFFCURVE",
"317 239 OFFCURVE",
"346 239 CURVE SMOOTH",
"351 239 LINE SMOOTH",
"408 235 OFFCURVE",
"437 201 OFFCURVE",
"437 136 CURVE SMOOTH",
"437 97 OFFCURVE",
"424 65 OFFCURVE",
"399 38 CURVE SMOOTH",
"376 15 OFFCURVE",
"350 3 OFFCURVE",
"321 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 383 OFFCURVE",
"134 391 OFFCURVE",
"120 408 CURVE SMOOTH",
"109 423 OFFCURVE",
"103 440 OFFCURVE",
"103 459 CURVE SMOOTH",
"103 480 OFFCURVE",
"111 496 OFFCURVE",
"127 507 CURVE",
"140 480 OFFCURVE",
"155 467 OFFCURVE",
"173 467 CURVE SMOOTH",
"186 467 OFFCURVE",
"197 473 OFFCURVE",
"207 486 CURVE",
"209 491 LINE",
"208 492 LINE",
"206 491 LINE",
"197 483 OFFCURVE",
"188 479 OFFCURVE",
"180 479 CURVE SMOOTH",
"170 479 OFFCURVE",
"162 484 OFFCURVE",
"155 494 CURVE SMOOTH",
"150 503 OFFCURVE",
"147 511 OFFCURVE",
"147 518 CURVE SMOOTH",
"147 535 OFFCURVE",
"153 550 OFFCURVE",
"164 561 CURVE SMOOTH",
"174 571 OFFCURVE",
"186 576 OFFCURVE",
"201 576 CURVE SMOOTH",
"222 575 OFFCURVE",
"238 565 OFFCURVE",
"250 548 CURVE SMOOTH",
"262 531 OFFCURVE",
"268 511 OFFCURVE",
"268 488 CURVE SMOOTH",
"268 461 OFFCURVE",
"259 437 OFFCURVE",
"241 416 CURVE SMOOTH",
"222 395 OFFCURVE",
"199 384 OFFCURVE",
"173 383 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"207 368 OFFCURVE",
"236 380 OFFCURVE",
"261 405 CURVE SMOOTH",
"285 429 OFFCURVE",
"297 458 OFFCURVE",
"297 493 CURVE SMOOTH",
"297 522 OFFCURVE",
"288 548 OFFCURVE",
"269 571 CURVE SMOOTH",
"250 594 OFFCURVE",
"226 606 OFFCURVE",
"199 606 CURVE SMOOTH",
"192 606 OFFCURVE",
"186 605 OFFCURVE",
"179 604 CURVE SMOOTH",
"163 600 OFFCURVE",
"151 593 OFFCURVE",
"142 583 CURVE SMOOTH",
"132 572 OFFCURVE",
"127 560 OFFCURVE",
"127 548 CURVE SMOOTH",
"127 543 OFFCURVE",
"128 537 OFFCURVE",
"131 530 CURVE",
"114 524 OFFCURVE",
"102 514 OFFCURVE",
"93 501 CURVE SMOOTH",
"84 487 OFFCURVE",
"79 469 OFFCURVE",
"79 446 CURVE SMOOTH",
"79 423 OFFCURVE",
"88 404 OFFCURVE",
"107 389 CURVE SMOOTH",
"125 375 OFFCURVE",
"147 368 OFFCURVE",
"173 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012106 3 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012146 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012146 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 73 170 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01292 8 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 98 165 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 106 170 106 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 153 106 169 106 185 106 201 106 217 106 233 106 249 106 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 106 25 106 41 106 57 106 73 106 89 106 105 106 121 106 137 106 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012112 0 73 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012120 8 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012150 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 2 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 1 140 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01285 1 94 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01269 1 108 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 493;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"26 -28 OFFCURVE",
"27 -28 OFFCURVE",
"27 -27 CURVE",
"56 31 OFFCURVE",
"103 101 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 257 LINE",
"345 397 LINE SMOOTH",
"415 482 OFFCURVE",
"465 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"495 590 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598 OFFCURVE",
"492 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 600 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554 OFFCURVE",
"403 492 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"169 232 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"24 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1 -15 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25 OFFCURVE",
"18 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 383 OFFCURVE",
"134 391 OFFCURVE",
"120 408 CURVE SMOOTH",
"109 423 OFFCURVE",
"103 440 OFFCURVE",
"103 459 CURVE SMOOTH",
"103 480 OFFCURVE",
"111 496 OFFCURVE",
"127 507 CURVE",
"140 480 OFFCURVE",
"155 467 OFFCURVE",
"173 467 CURVE SMOOTH",
"186 467 OFFCURVE",
"197 473 OFFCURVE",
"207 486 CURVE",
"209 491 LINE",
"208 492 LINE",
"206 491 LINE",
"197 483 OFFCURVE",
"188 479 OFFCURVE",
"180 479 CURVE SMOOTH",
"170 479 OFFCURVE",
"162 484 OFFCURVE",
"155 494 CURVE SMOOTH",
"150 503 OFFCURVE",
"147 511 OFFCURVE",
"147 518 CURVE SMOOTH",
"147 535 OFFCURVE",
"153 550 OFFCURVE",
"164 561 CURVE SMOOTH",
"174 571 OFFCURVE",
"186 576 OFFCURVE",
"201 576 CURVE SMOOTH",
"222 575 OFFCURVE",
"238 565 OFFCURVE",
"250 548 CURVE SMOOTH",
"262 531 OFFCURVE",
"268 511 OFFCURVE",
"268 488 CURVE SMOOTH",
"268 461 OFFCURVE",
"259 437 OFFCURVE",
"241 416 CURVE SMOOTH",
"222 395 OFFCURVE",
"199 384 OFFCURVE",
"173 383 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"207 368 OFFCURVE",
"236 380 OFFCURVE",
"261 405 CURVE SMOOTH",
"285 429 OFFCURVE",
"297 458 OFFCURVE",
"297 493 CURVE SMOOTH",
"297 522 OFFCURVE",
"288 548 OFFCURVE",
"269 571 CURVE SMOOTH",
"250 594 OFFCURVE",
"226 606 OFFCURVE",
"199 606 CURVE SMOOTH",
"192 606 OFFCURVE",
"186 605 OFFCURVE",
"179 604 CURVE SMOOTH",
"163 600 OFFCURVE",
"151 593 OFFCURVE",
"142 583 CURVE SMOOTH",
"132 572 OFFCURVE",
"127 560 OFFCURVE",
"127 548 CURVE SMOOTH",
"127 543 OFFCURVE",
"128 537 OFFCURVE",
"131 530 CURVE",
"114 524 OFFCURVE",
"102 514 OFFCURVE",
"93 501 CURVE SMOOTH",
"84 487 OFFCURVE",
"79 469 OFFCURVE",
"79 446 CURVE SMOOTH",
"79 423 OFFCURVE",
"88 404 OFFCURVE",
"107 389 CURVE SMOOTH",
"125 375 OFFCURVE",
"147 368 OFFCURVE",
"173 368 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"562 23 OFFCURVE",
"544 31 OFFCURVE",
"530 48 CURVE SMOOTH",
"519 63 OFFCURVE",
"513 80 OFFCURVE",
"513 99 CURVE SMOOTH",
"513 120 OFFCURVE",
"521 136 OFFCURVE",
"537 147 CURVE",
"550 120 OFFCURVE",
"565 107 OFFCURVE",
"583 107 CURVE SMOOTH",
"596 107 OFFCURVE",
"607 113 OFFCURVE",
"617 126 CURVE",
"619 131 LINE",
"618 132 LINE",
"616 131 LINE",
"607 123 OFFCURVE",
"598 119 OFFCURVE",
"590 119 CURVE SMOOTH",
"580 119 OFFCURVE",
"572 124 OFFCURVE",
"565 134 CURVE SMOOTH",
"560 143 OFFCURVE",
"557 151 OFFCURVE",
"557 158 CURVE SMOOTH",
"557 175 OFFCURVE",
"563 190 OFFCURVE",
"574 201 CURVE SMOOTH",
"584 211 OFFCURVE",
"596 216 OFFCURVE",
"611 216 CURVE SMOOTH",
"632 215 OFFCURVE",
"648 205 OFFCURVE",
"660 188 CURVE SMOOTH",
"672 171 OFFCURVE",
"678 151 OFFCURVE",
"678 128 CURVE SMOOTH",
"678 101 OFFCURVE",
"669 77 OFFCURVE",
"651 56 CURVE SMOOTH",
"632 35 OFFCURVE",
"609 24 OFFCURVE",
"583 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"617 8 OFFCURVE",
"646 20 OFFCURVE",
"671 45 CURVE SMOOTH",
"695 69 OFFCURVE",
"707 98 OFFCURVE",
"707 133 CURVE SMOOTH",
"707 162 OFFCURVE",
"698 188 OFFCURVE",
"679 211 CURVE SMOOTH",
"660 234 OFFCURVE",
"636 246 OFFCURVE",
"609 246 CURVE SMOOTH",
"602 246 OFFCURVE",
"596 245 OFFCURVE",
"589 244 CURVE SMOOTH",
"573 240 OFFCURVE",
"561 233 OFFCURVE",
"552 223 CURVE SMOOTH",
"542 212 OFFCURVE",
"537 200 OFFCURVE",
"537 188 CURVE SMOOTH",
"537 183 OFFCURVE",
"538 177 OFFCURVE",
"541 170 CURVE",
"524 164 OFFCURVE",
"512 154 OFFCURVE",
"503 141 CURVE SMOOTH",
"494 127 OFFCURVE",
"489 109 OFFCURVE",
"489 86 CURVE SMOOTH",
"489 63 OFFCURVE",
"498 44 OFFCURVE",
"517 29 CURVE SMOOTH",
"535 15 OFFCURVE",
"557 8 OFFCURVE",
"583 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"316 23 OFFCURVE",
"298 31 OFFCURVE",
"284 48 CURVE SMOOTH",
"273 63 OFFCURVE",
"267 80 OFFCURVE",
"267 99 CURVE SMOOTH",
"267 120 OFFCURVE",
"275 136 OFFCURVE",
"291 147 CURVE",
"304 120 OFFCURVE",
"319 107 OFFCURVE",
"337 107 CURVE SMOOTH",
"350 107 OFFCURVE",
"361 113 OFFCURVE",
"371 126 CURVE",
"373 131 LINE",
"372 132 LINE",
"370 131 LINE",
"361 123 OFFCURVE",
"352 119 OFFCURVE",
"344 119 CURVE SMOOTH",
"334 119 OFFCURVE",
"326 124 OFFCURVE",
"319 134 CURVE SMOOTH",
"314 143 OFFCURVE",
"311 151 OFFCURVE",
"311 158 CURVE SMOOTH",
"311 175 OFFCURVE",
"317 190 OFFCURVE",
"328 201 CURVE SMOOTH",
"338 211 OFFCURVE",
"350 216 OFFCURVE",
"365 216 CURVE SMOOTH",
"386 215 OFFCURVE",
"402 205 OFFCURVE",
"414 188 CURVE SMOOTH",
"426 171 OFFCURVE",
"432 151 OFFCURVE",
"432 128 CURVE SMOOTH",
"432 101 OFFCURVE",
"423 77 OFFCURVE",
"405 56 CURVE SMOOTH",
"386 35 OFFCURVE",
"363 24 OFFCURVE",
"337 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"371 8 OFFCURVE",
"400 20 OFFCURVE",
"425 45 CURVE SMOOTH",
"449 69 OFFCURVE",
"461 98 OFFCURVE",
"461 133 CURVE SMOOTH",
"461 162 OFFCURVE",
"452 188 OFFCURVE",
"433 211 CURVE SMOOTH",
"414 234 OFFCURVE",
"390 246 OFFCURVE",
"363 246 CURVE SMOOTH",
"356 246 OFFCURVE",
"350 245 OFFCURVE",
"343 244 CURVE SMOOTH",
"327 240 OFFCURVE",
"315 233 OFFCURVE",
"306 223 CURVE SMOOTH",
"296 212 OFFCURVE",
"291 200 OFFCURVE",
"291 188 CURVE SMOOTH",
"291 183 OFFCURVE",
"292 177 OFFCURVE",
"295 170 CURVE",
"278 164 OFFCURVE",
"266 154 OFFCURVE",
"257 141 CURVE SMOOTH",
"248 127 OFFCURVE",
"243 109 OFFCURVE",
"243 86 CURVE SMOOTH",
"243 63 OFFCURVE",
"252 44 OFFCURVE",
"271 29 CURVE SMOOTH",
"289 15 OFFCURVE",
"311 8 OFFCURVE",
"337 8 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"26 -28 OFFCURVE",
"27 -28 OFFCURVE",
"27 -27 CURVE",
"56 31 OFFCURVE",
"103 101 OFFCURVE",
"168 182 CURVE SMOOTH",
"229 257 LINE",
"345 397 LINE SMOOTH",
"415 482 OFFCURVE",
"465 545 OFFCURVE",
"494 589 CURVE SMOOTH",
"495 590 OFFCURVE",
"495 591 OFFCURVE",
"495 593 CURVE SMOOTH",
"495 598 OFFCURVE",
"492 601 OFFCURVE",
"487 601 CURVE SMOOTH",
"485 601 OFFCURVE",
"483 600 OFFCURVE",
"481 597 CURVE SMOOTH",
"453 554 OFFCURVE",
"403 492 OFFCURVE",
"329 410 CURVE SMOOTH",
"200 267 LINE SMOOTH",
"169 232 OFFCURVE",
"149 210 OFFCURVE",
"141 200 CURVE SMOOTH",
"73 120 OFFCURVE",
"24 52 OFFCURVE",
"-4 -4 CURVE SMOOTH",
"-5 -6 LINE",
"-5 -10 OFFCURVE",
"-1 -15 OFFCURVE",
"6 -20 CURVE SMOOTH",
"12 -25 OFFCURVE",
"18 -28 OFFCURVE",
"23 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"316 23 OFFCURVE",
"298 31 OFFCURVE",
"284 48 CURVE SMOOTH",
"273 63 OFFCURVE",
"267 80 OFFCURVE",
"267 99 CURVE SMOOTH",
"267 120 OFFCURVE",
"275 136 OFFCURVE",
"291 147 CURVE",
"304 120 OFFCURVE",
"319 107 OFFCURVE",
"337 107 CURVE SMOOTH",
"350 107 OFFCURVE",
"361 113 OFFCURVE",
"371 126 CURVE",
"373 131 LINE",
"372 132 LINE",
"370 131 LINE",
"361 123 OFFCURVE",
"352 119 OFFCURVE",
"344 119 CURVE SMOOTH",
"334 119 OFFCURVE",
"326 124 OFFCURVE",
"319 134 CURVE SMOOTH",
"314 143 OFFCURVE",
"311 151 OFFCURVE",
"311 158 CURVE SMOOTH",
"311 175 OFFCURVE",
"317 190 OFFCURVE",
"328 201 CURVE SMOOTH",
"338 211 OFFCURVE",
"350 216 OFFCURVE",
"365 216 CURVE SMOOTH",
"386 215 OFFCURVE",
"402 205 OFFCURVE",
"414 188 CURVE SMOOTH",
"426 171 OFFCURVE",
"432 151 OFFCURVE",
"432 128 CURVE SMOOTH",
"432 101 OFFCURVE",
"423 77 OFFCURVE",
"405 56 CURVE SMOOTH",
"386 35 OFFCURVE",
"363 24 OFFCURVE",
"337 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"371 8 OFFCURVE",
"400 20 OFFCURVE",
"425 45 CURVE SMOOTH",
"449 69 OFFCURVE",
"461 98 OFFCURVE",
"461 133 CURVE SMOOTH",
"461 162 OFFCURVE",
"452 188 OFFCURVE",
"433 211 CURVE SMOOTH",
"414 234 OFFCURVE",
"390 246 OFFCURVE",
"363 246 CURVE SMOOTH",
"356 246 OFFCURVE",
"350 245 OFFCURVE",
"343 244 CURVE SMOOTH",
"327 240 OFFCURVE",
"315 233 OFFCURVE",
"306 223 CURVE SMOOTH",
"296 212 OFFCURVE",
"291 200 OFFCURVE",
"291 188 CURVE SMOOTH",
"291 183 OFFCURVE",
"292 177 OFFCURVE",
"295 170 CURVE",
"278 164 OFFCURVE",
"266 154 OFFCURVE",
"257 141 CURVE SMOOTH",
"248 127 OFFCURVE",
"243 109 OFFCURVE",
"243 86 CURVE SMOOTH",
"243 63 OFFCURVE",
"252 44 OFFCURVE",
"271 29 CURVE SMOOTH",
"289 15 OFFCURVE",
"311 8 OFFCURVE",
"337 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152 383 OFFCURVE",
"134 391 OFFCURVE",
"120 408 CURVE SMOOTH",
"109 423 OFFCURVE",
"103 440 OFFCURVE",
"103 459 CURVE SMOOTH",
"103 480 OFFCURVE",
"111 496 OFFCURVE",
"127 507 CURVE",
"140 480 OFFCURVE",
"155 467 OFFCURVE",
"173 467 CURVE SMOOTH",
"186 467 OFFCURVE",
"197 473 OFFCURVE",
"207 486 CURVE",
"209 491 LINE",
"208 492 LINE",
"206 491 LINE",
"197 483 OFFCURVE",
"188 479 OFFCURVE",
"180 479 CURVE SMOOTH",
"170 479 OFFCURVE",
"162 484 OFFCURVE",
"155 494 CURVE SMOOTH",
"150 503 OFFCURVE",
"147 511 OFFCURVE",
"147 518 CURVE SMOOTH",
"147 535 OFFCURVE",
"153 550 OFFCURVE",
"164 561 CURVE SMOOTH",
"174 571 OFFCURVE",
"186 576 OFFCURVE",
"201 576 CURVE SMOOTH",
"222 575 OFFCURVE",
"238 565 OFFCURVE",
"250 548 CURVE SMOOTH",
"262 531 OFFCURVE",
"268 511 OFFCURVE",
"268 488 CURVE SMOOTH",
"268 461 OFFCURVE",
"259 437 OFFCURVE",
"241 416 CURVE SMOOTH",
"222 395 OFFCURVE",
"199 384 OFFCURVE",
"173 383 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"207 368 OFFCURVE",
"236 380 OFFCURVE",
"261 405 CURVE SMOOTH",
"285 429 OFFCURVE",
"297 458 OFFCURVE",
"297 493 CURVE SMOOTH",
"297 522 OFFCURVE",
"288 548 OFFCURVE",
"269 571 CURVE SMOOTH",
"250 594 OFFCURVE",
"226 606 OFFCURVE",
"199 606 CURVE SMOOTH",
"192 606 OFFCURVE",
"186 605 OFFCURVE",
"179 604 CURVE SMOOTH",
"163 600 OFFCURVE",
"151 593 OFFCURVE",
"142 583 CURVE SMOOTH",
"132 572 OFFCURVE",
"127 560 OFFCURVE",
"127 548 CURVE SMOOTH",
"127 543 OFFCURVE",
"128 537 OFFCURVE",
"131 530 CURVE",
"114 524 OFFCURVE",
"102 514 OFFCURVE",
"93 501 CURVE SMOOTH",
"84 487 OFFCURVE",
"79 469 OFFCURVE",
"79 446 CURVE SMOOTH",
"79 423 OFFCURVE",
"88 404 OFFCURVE",
"107 389 CURVE SMOOTH",
"125 375 OFFCURVE",
"147 368 OFFCURVE",
"173 368 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"562 23 OFFCURVE",
"544 31 OFFCURVE",
"530 48 CURVE SMOOTH",
"519 63 OFFCURVE",
"513 80 OFFCURVE",
"513 99 CURVE SMOOTH",
"513 120 OFFCURVE",
"521 136 OFFCURVE",
"537 147 CURVE",
"550 120 OFFCURVE",
"565 107 OFFCURVE",
"583 107 CURVE SMOOTH",
"596 107 OFFCURVE",
"607 113 OFFCURVE",
"617 126 CURVE",
"619 131 LINE",
"618 132 LINE",
"616 131 LINE",
"607 123 OFFCURVE",
"598 119 OFFCURVE",
"590 119 CURVE SMOOTH",
"580 119 OFFCURVE",
"572 124 OFFCURVE",
"565 134 CURVE SMOOTH",
"560 143 OFFCURVE",
"557 151 OFFCURVE",
"557 158 CURVE SMOOTH",
"557 175 OFFCURVE",
"563 190 OFFCURVE",
"574 201 CURVE SMOOTH",
"584 211 OFFCURVE",
"596 216 OFFCURVE",
"611 216 CURVE SMOOTH",
"632 215 OFFCURVE",
"648 205 OFFCURVE",
"660 188 CURVE SMOOTH",
"672 171 OFFCURVE",
"678 151 OFFCURVE",
"678 128 CURVE SMOOTH",
"678 101 OFFCURVE",
"669 77 OFFCURVE",
"651 56 CURVE SMOOTH",
"632 35 OFFCURVE",
"609 24 OFFCURVE",
"583 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"617 8 OFFCURVE",
"646 20 OFFCURVE",
"671 45 CURVE SMOOTH",
"695 69 OFFCURVE",
"707 98 OFFCURVE",
"707 133 CURVE SMOOTH",
"707 162 OFFCURVE",
"698 188 OFFCURVE",
"679 211 CURVE SMOOTH",
"660 234 OFFCURVE",
"636 246 OFFCURVE",
"609 246 CURVE SMOOTH",
"602 246 OFFCURVE",
"596 245 OFFCURVE",
"589 244 CURVE SMOOTH",
"573 240 OFFCURVE",
"561 233 OFFCURVE",
"552 223 CURVE SMOOTH",
"542 212 OFFCURVE",
"537 200 OFFCURVE",
"537 188 CURVE SMOOTH",
"537 183 OFFCURVE",
"538 177 OFFCURVE",
"541 170 CURVE",
"524 164 OFFCURVE",
"512 154 OFFCURVE",
"503 141 CURVE SMOOTH",
"494 127 OFFCURVE",
"489 109 OFFCURVE",
"489 86 CURVE SMOOTH",
"489 63 OFFCURVE",
"498 44 OFFCURVE",
"517 29 CURVE SMOOTH",
"535 15 OFFCURVE",
"557 8 OFFCURVE",
"583 8 CURVE SMOOTH"
);
}
);
width = 712;
}
);
unicode = 2030;
},
{
glyphname = apple;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"281 282 OFFCURVE",
"282 293 OFFCURVE",
"277 300 CURVE SMOOTH",
"273 305 LINE",
"273 307 OFFCURVE",
"271 316 OFFCURVE",
"275 316 CURVE",
"275 323 LINE",
"276 323 LINE",
"280 325 OFFCURVE",
"272 335 OFFCURVE",
"272 336 CURVE",
"270 342 LINE",
"270 347 OFFCURVE",
"269 353 OFFCURVE",
"266 357 CURVE",
"262 360 OFFCURVE",
"255 358 OFFCURVE",
"255 364 CURVE",
"248 366 OFFCURVE",
"247 366 OFFCURVE",
"247 374 CURVE",
"243 375 OFFCURVE",
"236 377 OFFCURVE",
"232 379 CURVE",
"232 380 LINE",
"221 385 LINE",
"208 385 LINE",
"203 390 OFFCURVE",
"199 395 OFFCURVE",
"192 395 CURVE SMOOTH",
"191 395 OFFCURVE",
"190 395 OFFCURVE",
"189 395 CURVE SMOOTH",
"185 394 OFFCURVE",
"180 392 OFFCURVE",
"176 392 CURVE SMOOTH",
"174 392 LINE",
"167 385 OFFCURVE",
"158 396 OFFCURVE",
"151 396 CURVE SMOOTH",
"144 396 OFFCURVE",
"137 389 OFFCURVE",
"131 385 CURVE",
"112 385 LINE",
"112 383 LINE",
"108 383 OFFCURVE",
"105 381 OFFCURVE",
"104 379 CURVE",
"103 379 OFFCURVE",
"101 375 OFFCURVE",
"101 377 CURVE",
"99 376 OFFCURVE",
"99 374 OFFCURVE",
"99 372 CURVE",
"99 372 OFFCURVE",
"97 372 OFFCURVE",
"97 370 CURVE SMOOTH",
"97 368 OFFCURVE",
"95 366 OFFCURVE",
"92 364 CURVE",
"92 362 LINE",
"91 361 LINE",
"90 362 LINE",
"77 349 LINE",
"75 349 LINE",
"74 348 LINE",
"73 345 OFFCURVE",
"72 343 OFFCURVE",
"69 343 CURVE",
"69 342 LINE",
"67 343 OFFCURVE",
"66 344 OFFCURVE",
"65 343 CURVE",
"65 342 LINE",
"62 340 OFFCURVE",
"56 334 OFFCURVE",
"54 331 CURVE",
"52 331 OFFCURVE",
"52 329 OFFCURVE",
"52 328 CURVE",
"50 327 OFFCURVE",
"50 325 OFFCURVE",
"49 324 CURVE",
"49 311 LINE",
"47 308 OFFCURVE",
"44 304 OFFCURVE",
"44 300 CURVE SMOOTH",
"44 292 OFFCURVE",
"43 284 OFFCURVE",
"46 276 CURVE SMOOTH",
"47 271 OFFCURVE",
"50 265 OFFCURVE",
"50 260 CURVE SMOOTH",
"50 259 OFFCURVE",
"49 258 OFFCURVE",
"49 256 CURVE SMOOTH",
"49 244 LINE",
"52 244 OFFCURVE",
"53 244 OFFCURVE",
"55 242 CURVE",
"55 241 LINE",
"56 240 OFFCURVE",
"58 241 OFFCURVE",
"58 238 CURVE",
"59 238 LINE",
"59 233 LINE",
"62 233 LINE",
"62 231 LINE",
"65 231 OFFCURVE",
"66 231 OFFCURVE",
"66 228 CURVE SMOOTH",
"66 227 LINE",
"69 227 LINE",
"69 216 LINE",
"66 216 LINE",
"66 214 LINE",
"65 214 LINE",
"65 212 LINE",
"62 212 LINE SMOOTH",
"60 212 OFFCURVE",
"59 210 OFFCURVE",
"59 210 CURVE",
"58 211 LINE",
"58 207 LINE",
"65 207 LINE",
"65 209 LINE",
"71 209 LINE",
"71 207 OFFCURVE",
"74 207 OFFCURVE",
"74 205 CURVE SMOOTH",
"73 201 OFFCURVE",
"71 197 OFFCURVE",
"71 193 CURVE SMOOTH",
"71 188 LINE",
"73 185 LINE",
"74 185 LINE",
"73 183 OFFCURVE",
"73 180 OFFCURVE",
"74 178 CURVE",
"74 177 OFFCURVE",
"73 175 OFFCURVE",
"71 175 CURVE",
"71 171 LINE",
"70 171 OFFCURVE",
"69 171 OFFCURVE",
"69 170 CURVE SMOOTH",
"69 167 LINE",
"67 168 LINE",
"66 168 OFFCURVE",
"66 168 OFFCURVE",
"66 167 CURVE",
"65 167 LINE",
"65 169 LINE",
"63 169 OFFCURVE",
"63 170 OFFCURVE",
"62 169 CURVE",
"62 170 LINE",
"59 170 LINE",
"59 165 LINE",
"56 165 LINE",
"56 160 LINE",
"58 160 LINE",
"59 161 LINE",
"60 161 LINE",
"62 160 OFFCURVE",
"62 160 OFFCURVE",
"65 160 CURVE",
"65 154 LINE",
"66 154 LINE",
"66 152 LINE",
"65 152 LINE",
"65 143 OFFCURVE",
"63 142 OFFCURVE",
"66 136 CURVE",
"66 129 LINE",
"67 125 OFFCURVE",
"69 121 OFFCURVE",
"69 117 CURVE",
"71 111 OFFCURVE",
"71 101 OFFCURVE",
"71 95 CURVE",
"66 88 OFFCURVE",
"66 83 OFFCURVE",
"62 77 CURVE",
"62 61 LINE",
"71 55 LINE",
"71 48 OFFCURVE",
"73 49 OFFCURVE",
"75 43 CURVE",
"86 43 LINE",
"88 41 OFFCURVE",
"90 38 OFFCURVE",
"92 37 CURVE",
"92 36 LINE",
"93 36 LINE",
"93 34 LINE",
"101 29 OFFCURVE",
"101 30 OFFCURVE",
"101 21 CURVE SMOOTH",
"101 18 LINE",
"105 18 OFFCURVE",
"109 19 OFFCURVE",
"112 19 CURVE SMOOTH",
"118 19 OFFCURVE",
"116 16 OFFCURVE",
"118 14 CURVE",
"118 11 LINE",
"116 8 OFFCURVE",
"118 6 OFFCURVE",
"118 5 CURVE SMOOTH",
"118 3 LINE",
"155 3 LINE",
"155 8 LINE",
"159 8 LINE",
"159 9 LINE",
"161 9 LINE",
"163 11 LINE",
"162 12 OFFCURVE",
"162 13 OFFCURVE",
"162 14 CURVE",
"163 15 OFFCURVE",
"167 17 OFFCURVE",
"167 17 CURVE",
"167 18 LINE",
"174 18 LINE",
"175 21 OFFCURVE",
"179 23 OFFCURVE",
"179 26 CURVE",
"180 26 LINE",
"180 28 OFFCURVE",
"180 30 OFFCURVE",
"182 31 CURVE",
"183 30 LINE",
"183 34 LINE",
"185 34 LINE",
"186 36 LINE",
"186 37 LINE",
"188 37 LINE",
"189 38 OFFCURVE",
"189 39 OFFCURVE",
"189 40 CURVE",
"192 40 LINE",
"192 43 LINE",
"200 43 OFFCURVE",
"197 49 OFFCURVE",
"204 49 CURVE",
"204 50 OFFCURVE",
"204 52 OFFCURVE",
"203 52 CURVE",
"203 52 OFFCURVE",
"204 53 OFFCURVE",
"205 53 CURVE",
"205 55 OFFCURVE",
"203 56 OFFCURVE",
"201 58 CURVE",
"201 58 OFFCURVE",
"200 58 OFFCURVE",
"199 57 CURVE",
"200 57 LINE",
"200 56 OFFCURVE",
"199 55 OFFCURVE",
"198 55 CURVE SMOOTH",
"188 55 LINE SMOOTH",
"187 55 OFFCURVE",
"185 58 OFFCURVE",
"183 59 CURVE",
"183 60 LINE",
"183 59 OFFCURVE",
"182 59 OFFCURVE",
"182 59 CURVE",
"180 62 LINE",
"163 62 LINE",
"163 64 LINE",
"161 64 LINE",
"159 64 LINE",
"159 65 LINE",
"155 66 OFFCURVE",
"155 64 OFFCURVE",
"152 64 CURVE",
"150 65 OFFCURVE",
"148 65 OFFCURVE",
"145 65 CURVE",
"145 67 LINE",
"142 68 OFFCURVE",
"143 66 OFFCURVE",
"141 66 CURVE",
"134 73 LINE",
"133 73 LINE SMOOTH",
"132 73 OFFCURVE",
"131 76 OFFCURVE",
"131 76 CURVE",
"131 79 OFFCURVE",
"130 83 OFFCURVE",
"131 85 CURVE",
"131 88 OFFCURVE",
"131 88 OFFCURVE",
"130 90 CURVE",
"129 90 OFFCURVE",
"127 90 OFFCURVE",
"127 89 CURVE",
"125 89 OFFCURVE",
"122 89 OFFCURVE",
"120 90 CURVE",
"120 92 OFFCURVE",
"118 92 OFFCURVE",
"118 95 CURVE",
"120 95 LINE",
"120 115 LINE",
"118 117 LINE",
"120 119 OFFCURVE",
"121 119 OFFCURVE",
"121 121 CURVE",
"124 121 LINE",
"124 122 LINE",
"125 122 OFFCURVE",
"127 122 OFFCURVE",
"127 121 CURVE",
"129 122 OFFCURVE",
"130 124 OFFCURVE",
"131 126 CURVE",
"131 128 LINE",
"133 129 LINE",
"133 130 LINE",
"144 130 OFFCURVE",
"144 120 OFFCURVE",
"155 120 CURVE SMOOTH",
"157 120 OFFCURVE",
"160 120 OFFCURVE",
"163 121 CURVE",
"163 122 LINE",
"161 124 LINE",
"151 124 LINE",
"151 126 OFFCURVE",
"150 127 OFFCURVE",
"148 129 CURVE",
"148 139 OFFCURVE",
"148 134 OFFCURVE",
"151 138 CURVE",
"161 138 LINE",
"163 136 OFFCURVE",
"164 134 OFFCURVE",
"165 133 CURVE",
"180 133 LINE",
"182 133 LINE",
"185 133 LINE",
"186 134 LINE",
"182 135 OFFCURVE",
"180 137 OFFCURVE",
"180 141 CURVE",
"185 141 OFFCURVE",
"189 144 OFFCURVE",
"194 144 CURVE",
"197 149 OFFCURVE",
"196 148 OFFCURVE",
"201 148 CURVE",
"202 149 LINE",
"203 149 LINE",
"204 148 LINE",
"205 150 LINE",
"204 150 LINE",
"205 152 LINE",
"205 158 LINE",
"204 158 LINE",
"204 160 LINE",
"201 160 OFFCURVE",
"198 158 OFFCURVE",
"195 158 CURVE SMOOTH",
"182 158 LINE",
"180 160 LINE",
"176 160 LINE",
"176 163 LINE",
"170 163 LINE",
"170 164 LINE",
"166 163 OFFCURVE",
"161 163 OFFCURVE",
"155 163 CURVE",
"154 164 LINE",
"154 169 OFFCURVE",
"155 175 OFFCURVE",
"152 179 CURVE",
"151 178 OFFCURVE",
"150 178 OFFCURVE",
"150 178 CURVE",
"150 179 LINE",
"148 178 LINE SMOOTH",
"143 175 OFFCURVE",
"144 173 OFFCURVE",
"140 170 CURVE",
"138 170 LINE",
"138 169 LINE",
"132 169 LINE SMOOTH",
"127 169 OFFCURVE",
"123 166 OFFCURVE",
"118 166 CURVE SMOOTH",
"116 166 OFFCURVE",
"113 167 OFFCURVE",
"111 169 CURVE",
"110 169 LINE SMOOTH",
"107 168 OFFCURVE",
"103 169 OFFCURVE",
"101 169 CURVE",
"99 171 LINE SMOOTH",
"97 174 OFFCURVE",
"97 175 OFFCURVE",
"96 178 CURVE SMOOTH",
"95 180 OFFCURVE",
"92 188 OFFCURVE",
"92 192 CURVE SMOOTH",
"92 194 OFFCURVE",
"93 194 OFFCURVE",
"93 195 CURVE",
"95 195 LINE",
"97 197 OFFCURVE",
"103 194 OFFCURVE",
"103 199 CURVE SMOOTH",
"103 203 OFFCURVE",
"98 201 OFFCURVE",
"96 205 CURVE",
"92 205 LINE",
"92 207 OFFCURVE",
"91 207 OFFCURVE",
"91 209 CURVE SMOOTH",
"91 214 OFFCURVE",
"95 214 OFFCURVE",
"97 218 CURVE",
"101 218 LINE",
"101 218 OFFCURVE",
"102 219 OFFCURVE",
"103 219 CURVE SMOOTH",
"108 219 LINE",
"110 216 OFFCURVE",
"112 215 OFFCURVE",
"112 212 CURVE",
"120 212 LINE",
"120 211 LINE",
"120 210 LINE",
"121 209 LINE",
"122 209 LINE",
"122 207 LINE",
"124 206 LINE",
"125 206 LINE",
"127 205 LINE",
"133 205 LINE",
"134 203 LINE",
"136 203 LINE",
"135 202 OFFCURVE",
"136 201 OFFCURVE",
"137 201 CURVE SMOOTH",
"139 201 LINE",
"139 200 LINE",
"148 200 LINE",
"148 201 LINE",
"152 205 LINE",
"179 205 OFFCURVE",
"174 201 OFFCURVE",
"179 215 CURVE",
"181 215 OFFCURVE",
"183 219 OFFCURVE",
"183 220 CURVE SMOOTH",
"182 225 OFFCURVE",
"176 231 OFFCURVE",
"174 235 CURVE",
"170 235 LINE",
"168 237 LINE",
"163 238 OFFCURVE",
"152 238 OFFCURVE",
"142 238 CURVE SMOOTH",
"134 238 OFFCURVE",
"126 238 OFFCURVE",
"124 236 CURVE",
"124 236 OFFCURVE",
"123 235 OFFCURVE",
"122 235 CURVE SMOOTH",
"116 235 LINE",
"116 238 LINE",
"114 237 LINE",
"114 250 LINE",
"118 250 LINE",
"118 252 OFFCURVE",
"118 252 OFFCURVE",
"120 252 CURVE",
"121 254 LINE SMOOTH",
"122 257 OFFCURVE",
"120 259 OFFCURVE",
"122 260 CURVE",
"122 263 OFFCURVE",
"120 265 OFFCURVE",
"120 270 CURVE",
"118 270 LINE",
"118 281 LINE",
"116 281 LINE",
"116 284 LINE",
"114 284 OFFCURVE",
"113 284 OFFCURVE",
"112 283 CURVE",
"112 281 OFFCURVE",
"111 280 OFFCURVE",
"110 278 CURVE",
"110 271 OFFCURVE",
"107 276 OFFCURVE",
"105 272 CURVE",
"104 272 OFFCURVE",
"101 272 OFFCURVE",
"101 273 CURVE",
"97 276 LINE",
"97 278 LINE",
"96 280 LINE",
"96 289 LINE",
"99 289 OFFCURVE",
"96 292 OFFCURVE",
"96 294 CURVE",
"95 294 LINE",
"93 293 LINE",
"92 294 OFFCURVE",
"89 297 OFFCURVE",
"89 298 CURVE",
"91 306 OFFCURVE",
"93 301 OFFCURVE",
"98 301 CURVE SMOOTH",
"100 301 OFFCURVE",
"101 301 OFFCURVE",
"103 302 CURVE",
"103 301 OFFCURVE",
"104 300 OFFCURVE",
"104 300 CURVE",
"105 302 LINE",
"107 303 OFFCURVE",
"107 303 OFFCURVE",
"108 303 CURVE",
"108 300 LINE",
"114 305 LINE",
"113 306 LINE",
"113 308 OFFCURVE",
"116 312 OFFCURVE",
"118 315 CURVE",
"133 315 LINE",
"133 316 LINE",
"136 318 OFFCURVE",
"138 320 OFFCURVE",
"142 320 CURVE",
"142 323 LINE",
"143 323 OFFCURVE",
"144 321 OFFCURVE",
"145 321 CURVE",
"145 323 LINE",
"149 325 OFFCURVE",
"146 328 OFFCURVE",
"155 328 CURVE",
"155 326 LINE",
"155 324 LINE",
"163 324 LINE",
"163 327 LINE",
"164 327 OFFCURVE",
"165 326 OFFCURVE",
"165 325 CURVE",
"166 325 OFFCURVE",
"167 327 OFFCURVE",
"167 328 CURVE SMOOTH",
"167 333 OFFCURVE",
"183 334 OFFCURVE",
"186 334 CURVE",
"186 331 LINE",
"189 331 LINE",
"189 328 OFFCURVE",
"190 327 OFFCURVE",
"192 325 CURVE",
"192 324 OFFCURVE",
"189 323 OFFCURVE",
"189 321 CURVE",
"192 321 LINE",
"192 319 LINE",
"193 319 LINE",
"193 318 LINE",
"198 318 LINE",
"198 316 LINE",
"199 316 OFFCURVE",
"200 315 OFFCURVE",
"201 315 CURVE",
"201 312 LINE",
"205 312 OFFCURVE",
"217 309 OFFCURVE",
"217 315 CURVE",
"222 315 LINE",
"223 316 OFFCURVE",
"225 317 OFFCURVE",
"227 317 CURVE SMOOTH",
"228 317 OFFCURVE",
"229 315 OFFCURVE",
"230 315 CURVE SMOOTH",
"232 315 LINE",
"232 314 OFFCURVE",
"235 309 OFFCURVE",
"236 308 CURVE",
"244 308 LINE",
"244 306 LINE",
"245 306 OFFCURVE",
"245 305 OFFCURVE",
"245 305 CURVE",
"247 303 OFFCURVE",
"248 303 OFFCURVE",
"248 300 CURVE",
"251 300 OFFCURVE",
"254 300 OFFCURVE",
"255 302 CURVE",
"255 301 OFFCURVE",
"255 300 OFFCURVE",
"256 300 CURVE",
"256 297 LINE",
"257 297 LINE",
"257 292 LINE",
"259 292 LINE",
"259 289 LINE",
"260 289 LINE",
"260 288 LINE",
"262 288 LINE",
"262 287 LINE",
"263 287 LINE SMOOTH",
"264 287 OFFCURVE",
"266 285 OFFCURVE",
"266 285 CURVE",
"266 283 LINE",
"268 283 LINE",
"268 282 OFFCURVE",
"267 277 OFFCURVE",
"270 276 CURVE",
"270 261 LINE",
"268 261 LINE",
"268 259 LINE",
"266 258 LINE",
"266 256 LINE",
"264 256 OFFCURVE",
"263 249 OFFCURVE",
"263 248 CURVE SMOOTH",
"263 195 LINE",
"262 195 LINE",
"263 193 OFFCURVE",
"263 192 OFFCURVE",
"263 191 CURVE",
"260 191 LINE",
"260 186 OFFCURVE",
"259 188 OFFCURVE",
"259 186 CURVE SMOOTH",
"259 185 LINE",
"257 184 OFFCURVE",
"256 184 OFFCURVE",
"256 182 CURVE",
"257 181 OFFCURVE",
"259 181 OFFCURVE",
"259 181 CURVE",
"257 179 LINE",
"259 179 LINE",
"259 178 LINE",
"260 176 OFFCURVE",
"260 178 OFFCURVE",
"262 175 CURVE",
"262 177 OFFCURVE",
"263 178 OFFCURVE",
"263 179 CURVE",
"265 179 LINE",
"266 180 LINE",
"266 184 OFFCURVE",
"266 182 OFFCURVE",
"268 184 CURVE",
"268 187 OFFCURVE",
"270 189 OFFCURVE",
"270 191 CURVE SMOOTH",
"270 197 OFFCURVE",
"270 199 OFFCURVE",
"273 203 CURVE",
"275 203 LINE",
"275 205 OFFCURVE",
"277 207 OFFCURVE",
"277 209 CURVE SMOOTH",
"277 210 LINE",
"276 210 LINE",
"276 214 LINE",
"275 214 LINE",
"275 242 LINE",
"276 242 OFFCURVE",
"277 242 OFFCURVE",
"277 244 CURVE",
"276 245 OFFCURVE",
"274 249 OFFCURVE",
"274 252 CURVE SMOOTH",
"274 254 OFFCURVE",
"275 255 OFFCURVE",
"276 256 CURVE",
"276 258 LINE",
"278 258 LINE",
"277 259 LINE",
"279 259 LINE",
"279 265 LINE",
"283 265 OFFCURVE",
"281 270 OFFCURVE",
"281 274 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"253 219 LINE",
"252 220 OFFCURVE",
"251 220 OFFCURVE",
"251 220 CURVE",
"251 222 LINE",
"247 222 LINE",
"247 223 LINE",
"244 224 OFFCURVE",
"244 226 OFFCURVE",
"244 227 CURVE",
"241 227 OFFCURVE",
"238 224 OFFCURVE",
"236 225 CURVE",
"234 227 LINE",
"232 227 LINE",
"229 231 LINE",
"223 231 LINE",
"221 233 LINE",
"217 232 LINE",
"217 231 LINE",
"210 231 LINE",
"210 227 LINE",
"208 227 OFFCURVE",
"205 226 OFFCURVE",
"204 225 CURVE SMOOTH",
"201 222 LINE",
"201 220 LINE",
"200 219 LINE",
"199 219 LINE",
"199 218 OFFCURVE",
"199 216 OFFCURVE",
"198 216 CURVE",
"198 214 OFFCURVE",
"199 213 OFFCURVE",
"198 211 CURVE",
"201 207 OFFCURVE",
"204 206 OFFCURVE",
"201 203 CURVE",
"201 200 LINE",
"212 200 LINE SMOOTH",
"215 200 OFFCURVE",
"217 197 OFFCURVE",
"218 196 CURVE SMOOTH",
"219 194 LINE",
"220 193 LINE",
"225 193 LINE SMOOTH",
"226 193 OFFCURVE",
"226 195 OFFCURVE",
"225 195 CURVE SMOOTH",
"228 195 LINE",
"228 196 OFFCURVE",
"231 197 OFFCURVE",
"232 198 CURVE",
"232 200 LINE",
"234 201 LINE",
"234 203 LINE",
"238 205 OFFCURVE",
"251 203 OFFCURVE",
"251 210 CURVE",
"247 211 OFFCURVE",
"251 214 OFFCURVE",
"251 215 CURVE",
"253 216 LINE"
);
},
{
closed = 1;
nodes = (
"244 144 LINE",
"244 147 OFFCURVE",
"242 150 OFFCURVE",
"240 152 CURVE",
"236 154 LINE",
"236 155 OFFCURVE",
"234 156 OFFCURVE",
"232 157 CURVE",
"232 160 LINE",
"230 160 LINE SMOOTH",
"228 160 OFFCURVE",
"227 163 OFFCURVE",
"227 164 CURVE",
"226 165 OFFCURVE",
"226 165 OFFCURVE",
"224 165 CURVE",
"224 167 LINE",
"216 175 LINE",
"212 173 LINE",
"212 167 LINE",
"215 165 LINE",
"215 164 LINE",
"217 163 OFFCURVE",
"217 162 OFFCURVE",
"217 160 CURVE",
"219 160 LINE",
"219 138 LINE",
"219 138 OFFCURVE",
"217 137 OFFCURVE",
"217 136 CURVE",
"207 136 LINE",
"207 134 LINE",
"205 134 OFFCURVE",
"200 136 OFFCURVE",
"198 134 CURVE",
"195 134 LINE",
"194 136 LINE",
"192 137 OFFCURVE",
"191 134 OFFCURVE",
"188 134 CURVE",
"189 133 LINE",
"198 133 LINE",
"198 130 LINE",
"201 130 LINE",
"201 129 LINE",
"205 129 LINE",
"205 128 LINE",
"210 128 LINE",
"210 126 LINE",
"215 126 LINE",
"217 124 OFFCURVE",
"218 124 OFFCURVE",
"220 125 CURVE",
"220 124 OFFCURVE",
"223 122 OFFCURVE",
"223 121 CURVE",
"224 121 OFFCURVE",
"224 122 OFFCURVE",
"225 122 CURVE SMOOTH",
"226 122 OFFCURVE",
"227 122 OFFCURVE",
"228 121 CURVE",
"228 122 LINE SMOOTH",
"228 123 OFFCURVE",
"230 124 OFFCURVE",
"231 124 CURVE",
"230 124 LINE",
"232 126 LINE",
"232 129 LINE",
"234 129 LINE",
"234 130 OFFCURVE",
"233 132 OFFCURVE",
"232 133 CURVE",
"234 134 OFFCURVE",
"236 134 OFFCURVE",
"236 136 CURVE",
"237 136 OFFCURVE",
"238 136 OFFCURVE",
"238 138 CURVE",
"244 138 LINE",
"244 136 LINE",
"246 136 LINE",
"246 135 OFFCURVE",
"247 134 OFFCURVE",
"247 133 CURVE",
"259 133 OFFCURVE",
"259 134 OFFCURVE",
"259 144 CURVE"
);
},
{
closed = 1;
nodes = (
"180 98 LINE",
"181 100 OFFCURVE",
"178 105 OFFCURVE",
"176 105 CURVE",
"176 107 OFFCURVE",
"176 107 OFFCURVE",
"175 107 CURVE",
"174 108 LINE",
"172 107 LINE",
"167 107 LINE",
"167 105 LINE",
"161 105 LINE",
"161 107 LINE",
"157 107 LINE SMOOTH",
"155 107 OFFCURVE",
"159 105 OFFCURVE",
"147 105 CURVE SMOOTH",
"146 105 OFFCURVE",
"146 105 OFFCURVE",
"145 105 CURVE",
"139 105 LINE",
"139 100 LINE SMOOTH",
"139 99 OFFCURVE",
"140 99 OFFCURVE",
"140 99 CURVE",
"140 98 LINE",
"143 97 LINE",
"148 97 LINE",
"148 95 LINE",
"151 96 LINE",
"151 94 OFFCURVE",
"157 92 OFFCURVE",
"158 90 CURVE",
"159 92 OFFCURVE",
"161 92 OFFCURVE",
"162 92 CURVE SMOOTH",
"163 92 LINE",
"163 95 LINE",
"165 95 OFFCURVE",
"167 94 OFFCURVE",
"167 96 CURVE SMOOTH",
"167 95 LINE",
"170 95 OFFCURVE",
"170 96 OFFCURVE",
"170 97 CURVE",
"176 97 LINE",
"176 98 LINE"
);
},
{
closed = 1;
nodes = (
"247 107 LINE",
"248 110 OFFCURVE",
"249 113 OFFCURVE",
"244 113 CURVE SMOOTH",
"243 113 OFFCURVE",
"241 113 OFFCURVE",
"240 111 CURVE SMOOTH",
"236 105 LINE",
"230 105 LINE",
"230 103 OFFCURVE",
"228 105 OFFCURVE",
"228 102 CURVE",
"226 102 LINE",
"226 99 LINE",
"225 99 LINE",
"225 98 OFFCURVE",
"226 95 OFFCURVE",
"224 95 CURVE",
"224 93 LINE",
"223 92 LINE",
"223 86 LINE",
"221 86 LINE",
"221 85 LINE",
"223 84 LINE",
"220 83 OFFCURVE",
"217 79 OFFCURVE",
"215 76 CURVE",
"215 75 LINE",
"214 75 LINE",
"214 73 LINE",
"210 73 LINE SMOOTH",
"212 73 OFFCURVE",
"212 72 OFFCURVE",
"212 70 CURVE",
"210 68 LINE",
"210 66 OFFCURVE",
"212 66 OFFCURVE",
"213 66 CURVE SMOOTH",
"214 66 OFFCURVE",
"215 66 OFFCURVE",
"215 67 CURVE",
"217 68 LINE",
"220 68 LINE",
"220 70 LINE",
"223 70 LINE",
"223 73 OFFCURVE",
"224 77 OFFCURVE",
"222 81 CURVE",
"222 82 OFFCURVE",
"224 84 OFFCURVE",
"225 84 CURVE SMOOTH",
"226 84 LINE",
"228 85 LINE",
"228 88 LINE",
"230 89 OFFCURVE",
"232 93 OFFCURVE",
"232 95 CURVE",
"235 96 OFFCURVE",
"240 99 OFFCURVE",
"241 101 CURVE SMOOTH",
"242 103 OFFCURVE",
"244 101 OFFCURVE",
"246 103 CURVE",
"246 105 LINE",
"247 105 LINE"
);
},
{
closed = 1;
nodes = (
"52 169 LINE",
"54 174 OFFCURVE",
"50 178 OFFCURVE",
"50 182 CURVE",
"49 182 LINE",
"49 186 LINE",
"47 186 LINE",
"47 188 OFFCURVE",
"46 189 OFFCURVE",
"44 191 CURVE",
"42 191 LINE",
"42 190 LINE",
"40 190 LINE",
"40 187 OFFCURVE",
"42 184 OFFCURVE",
"42 180 CURVE",
"44 180 LINE",
"43 178 OFFCURVE",
"43 177 OFFCURVE",
"43 175 CURVE",
"44 175 LINE",
"46 173 OFFCURVE",
"49 172 OFFCURVE",
"49 169 CURVE"
);
},
{
closed = 1;
nodes = (
"54 201 LINE",
"54 205 OFFCURVE",
"52 209 OFFCURVE",
"52 212 CURVE SMOOTH",
"52 213 OFFCURVE",
"50 214 OFFCURVE",
"50 214 CURVE",
"50 216 LINE",
"49 216 LINE",
"49 219 LINE",
"47 219 LINE",
"47 225 LINE",
"43 225 LINE",
"43 218 LINE",
"44 218 LINE",
"44 215 LINE",
"47 215 LINE",
"46 214 OFFCURVE",
"46 212 OFFCURVE",
"46 210 CURVE",
"49 210 LINE",
"49 207 OFFCURVE",
"47 205 OFFCURVE",
"44 203 CURVE",
"44 201 OFFCURVE",
"46 200 OFFCURVE",
"47 198 CURVE",
"50 198 LINE",
"50 200 LINE",
"50 200 OFFCURVE",
"51 200 OFFCURVE",
"52 201 CURVE"
);
},
{
closed = 1;
nodes = (
"176 119 LINE",
"176 117 LINE",
"172 117 LINE",
"172 115 LINE",
"173 114 OFFCURVE",
"176 113 OFFCURVE",
"180 113 CURVE SMOOTH",
"185 113 OFFCURVE",
"191 115 OFFCURVE",
"191 117 CURVE SMOOTH",
"191 118 OFFCURVE",
"190 118 OFFCURVE",
"189 119 CURVE"
);
},
{
closed = 1;
nodes = (
"59 182 LINE",
"58 185 LINE",
"58 185 OFFCURVE",
"57 186 OFFCURVE",
"56 186 CURVE",
"56 183 LINE SMOOTH",
"56 181 OFFCURVE",
"58 180 OFFCURVE",
"58 180 CURVE",
"59 181 OFFCURVE",
"61 181 OFFCURVE",
"62 182 CURVE"
);
},
{
closed = 1;
nodes = (
"62 222 LINE",
"62 222 OFFCURVE",
"59 222 OFFCURVE",
"59 224 CURVE SMOOTH",
"59 220 LINE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"155 3 LINE",
"155 8 LINE",
"159 8 LINE",
"159 9 LINE",
"161 9 LINE",
"163 11 LINE",
"162 12 OFFCURVE",
"162 13 OFFCURVE",
"162 14 CURVE",
"163 15 OFFCURVE",
"167 17 OFFCURVE",
"167 17 CURVE",
"167 18 LINE",
"174 18 LINE",
"175 21 OFFCURVE",
"179 23 OFFCURVE",
"179 26 CURVE",
"180 26 LINE",
"180 28 OFFCURVE",
"180 30 OFFCURVE",
"182 31 CURVE",
"183 30 LINE",
"183 34 LINE",
"185 34 LINE",
"186 36 LINE",
"186 37 LINE",
"188 37 LINE",
"189 38 OFFCURVE",
"189 39 OFFCURVE",
"189 40 CURVE",
"192 40 LINE",
"192 43 LINE",
"200 43 OFFCURVE",
"197 49 OFFCURVE",
"204 49 CURVE",
"204 50 OFFCURVE",
"204 52 OFFCURVE",
"203 52 CURVE",
"203 52 OFFCURVE",
"204 53 OFFCURVE",
"205 53 CURVE",
"205 55 OFFCURVE",
"203 56 OFFCURVE",
"201 58 CURVE",
"201 58 OFFCURVE",
"200 58 OFFCURVE",
"199 57 CURVE",
"200 57 LINE",
"200 56 OFFCURVE",
"199 55 OFFCURVE",
"198 55 CURVE SMOOTH",
"188 55 LINE SMOOTH",
"187 55 OFFCURVE",
"185 58 OFFCURVE",
"183 59 CURVE",
"183 60 LINE",
"183 59 OFFCURVE",
"182 59 OFFCURVE",
"182 59 CURVE",
"180 62 LINE",
"163 62 LINE",
"163 64 LINE",
"159 64 LINE",
"159 65 LINE",
"155 66 OFFCURVE",
"155 64 OFFCURVE",
"152 64 CURVE",
"150 65 OFFCURVE",
"148 65 OFFCURVE",
"145 65 CURVE",
"145 67 LINE",
"142 68 OFFCURVE",
"143 66 OFFCURVE",
"141 66 CURVE",
"134 73 LINE",
"133 73 LINE SMOOTH",
"132 73 OFFCURVE",
"131 76 OFFCURVE",
"131 76 CURVE",
"131 79 OFFCURVE",
"130 83 OFFCURVE",
"131 85 CURVE",
"131 88 OFFCURVE",
"131 88 OFFCURVE",
"130 90 CURVE",
"129 90 OFFCURVE",
"127 90 OFFCURVE",
"127 89 CURVE",
"125 89 OFFCURVE",
"122 89 OFFCURVE",
"120 90 CURVE",
"120 92 OFFCURVE",
"118 92 OFFCURVE",
"118 95 CURVE",
"120 95 LINE",
"120 115 LINE",
"118 117 LINE",
"120 119 OFFCURVE",
"121 119 OFFCURVE",
"121 121 CURVE",
"124 121 LINE",
"124 122 LINE",
"125 122 OFFCURVE",
"127 122 OFFCURVE",
"127 121 CURVE",
"129 122 OFFCURVE",
"130 124 OFFCURVE",
"131 126 CURVE",
"131 128 LINE",
"133 129 LINE",
"133 130 LINE",
"144 130 OFFCURVE",
"144 120 OFFCURVE",
"155 120 CURVE SMOOTH",
"157 120 OFFCURVE",
"160 120 OFFCURVE",
"163 121 CURVE",
"163 122 LINE",
"161 124 LINE",
"151 124 LINE",
"151 126 OFFCURVE",
"150 127 OFFCURVE",
"148 129 CURVE",
"148 139 OFFCURVE",
"148 134 OFFCURVE",
"151 138 CURVE",
"161 138 LINE",
"163 136 OFFCURVE",
"164 134 OFFCURVE",
"165 133 CURVE",
"185 133 LINE",
"186 134 LINE",
"182 135 OFFCURVE",
"180 137 OFFCURVE",
"180 141 CURVE",
"185 141 OFFCURVE",
"189 144 OFFCURVE",
"194 144 CURVE",
"197 149 OFFCURVE",
"196 148 OFFCURVE",
"201 148 CURVE",
"202 149 LINE",
"203 149 LINE",
"204 148 LINE",
"205 150 LINE",
"204 150 LINE",
"205 152 LINE",
"205 158 LINE",
"204 158 LINE",
"204 160 LINE",
"201 160 OFFCURVE",
"198 158 OFFCURVE",
"195 158 CURVE SMOOTH",
"182 158 LINE",
"180 160 LINE",
"176 160 LINE",
"176 163 LINE",
"170 163 LINE",
"170 164 LINE",
"166 163 OFFCURVE",
"161 163 OFFCURVE",
"155 163 CURVE",
"154 164 LINE",
"154 169 OFFCURVE",
"155 175 OFFCURVE",
"152 179 CURVE",
"151 178 OFFCURVE",
"150 178 OFFCURVE",
"150 178 CURVE",
"150 179 LINE",
"148 178 LINE SMOOTH",
"143 175 OFFCURVE",
"144 173 OFFCURVE",
"140 170 CURVE",
"138 170 LINE",
"138 169 LINE",
"132 169 LINE SMOOTH",
"127 169 OFFCURVE",
"123 166 OFFCURVE",
"118 166 CURVE SMOOTH",
"116 166 OFFCURVE",
"113 167 OFFCURVE",
"111 169 CURVE",
"110 169 LINE SMOOTH",
"107 168 OFFCURVE",
"103 169 OFFCURVE",
"101 169 CURVE",
"99 171 LINE SMOOTH",
"97 174 OFFCURVE",
"97 175 OFFCURVE",
"96 178 CURVE SMOOTH",
"95 180 OFFCURVE",
"92 188 OFFCURVE",
"92 192 CURVE SMOOTH",
"92 194 OFFCURVE",
"93 194 OFFCURVE",
"93 195 CURVE",
"95 195 LINE",
"97 197 OFFCURVE",
"103 194 OFFCURVE",
"103 199 CURVE SMOOTH",
"103 203 OFFCURVE",
"98 201 OFFCURVE",
"96 205 CURVE",
"92 205 LINE",
"92 207 OFFCURVE",
"91 207 OFFCURVE",
"91 209 CURVE SMOOTH",
"91 214 OFFCURVE",
"95 214 OFFCURVE",
"97 218 CURVE",
"101 218 LINE",
"101 218 OFFCURVE",
"102 219 OFFCURVE",
"103 219 CURVE SMOOTH",
"108 219 LINE",
"110 216 OFFCURVE",
"112 215 OFFCURVE",
"112 212 CURVE",
"120 212 LINE",
"120 210 LINE",
"121 209 LINE",
"122 209 LINE",
"122 207 LINE",
"124 206 LINE",
"125 206 LINE",
"127 205 LINE",
"133 205 LINE",
"134 203 LINE",
"136 203 LINE",
"135 202 OFFCURVE",
"136 201 OFFCURVE",
"137 201 CURVE SMOOTH",
"139 201 LINE",
"139 200 LINE",
"148 200 LINE",
"148 201 LINE",
"152 205 LINE",
"179 205 OFFCURVE",
"174 201 OFFCURVE",
"179 215 CURVE",
"181 215 OFFCURVE",
"183 219 OFFCURVE",
"183 220 CURVE SMOOTH",
"182 225 OFFCURVE",
"176 231 OFFCURVE",
"174 235 CURVE",
"170 235 LINE",
"168 237 LINE",
"163 238 OFFCURVE",
"152 238 OFFCURVE",
"142 238 CURVE SMOOTH",
"134 238 OFFCURVE",
"126 238 OFFCURVE",
"124 236 CURVE",
"124 236 OFFCURVE",
"123 235 OFFCURVE",
"122 235 CURVE SMOOTH",
"116 235 LINE",
"116 238 LINE",
"114 237 LINE",
"114 250 LINE",
"118 250 LINE",
"118 252 OFFCURVE",
"118 252 OFFCURVE",
"120 252 CURVE",
"121 254 LINE SMOOTH",
"122 257 OFFCURVE",
"120 259 OFFCURVE",
"122 260 CURVE",
"122 263 OFFCURVE",
"120 265 OFFCURVE",
"120 270 CURVE",
"118 270 LINE",
"118 281 LINE",
"116 281 LINE",
"116 284 LINE",
"114 284 OFFCURVE",
"113 284 OFFCURVE",
"112 283 CURVE",
"112 281 OFFCURVE",
"111 280 OFFCURVE",
"110 278 CURVE",
"110 271 OFFCURVE",
"107 276 OFFCURVE",
"105 272 CURVE",
"104 272 OFFCURVE",
"101 272 OFFCURVE",
"101 273 CURVE",
"97 276 LINE",
"97 278 LINE",
"96 280 LINE",
"96 289 LINE",
"99 289 OFFCURVE",
"96 292 OFFCURVE",
"96 294 CURVE",
"95 294 LINE",
"93 293 LINE",
"92 294 OFFCURVE",
"89 297 OFFCURVE",
"89 298 CURVE SMOOTH",
"91 306 OFFCURVE",
"93 301 OFFCURVE",
"98 301 CURVE SMOOTH",
"100 301 OFFCURVE",
"101 301 OFFCURVE",
"103 302 CURVE",
"103 301 OFFCURVE",
"104 300 OFFCURVE",
"104 300 CURVE",
"105 302 LINE",
"107 303 OFFCURVE",
"107 303 OFFCURVE",
"108 303 CURVE",
"108 300 LINE",
"114 305 LINE",
"113 306 LINE",
"113 308 OFFCURVE",
"116 312 OFFCURVE",
"118 315 CURVE",
"133 315 LINE",
"133 316 LINE",
"136 318 OFFCURVE",
"138 320 OFFCURVE",
"142 320 CURVE",
"142 323 LINE",
"143 323 OFFCURVE",
"144 321 OFFCURVE",
"145 321 CURVE",
"145 323 LINE",
"149 325 OFFCURVE",
"146 328 OFFCURVE",
"155 328 CURVE",
"155 324 LINE",
"163 324 LINE",
"163 327 LINE",
"164 327 OFFCURVE",
"165 326 OFFCURVE",
"165 325 CURVE",
"166 325 OFFCURVE",
"167 327 OFFCURVE",
"167 328 CURVE SMOOTH",
"167 333 OFFCURVE",
"183 334 OFFCURVE",
"186 334 CURVE",
"186 331 LINE",
"189 331 LINE",
"189 328 OFFCURVE",
"190 327 OFFCURVE",
"192 325 CURVE",
"192 324 OFFCURVE",
"189 323 OFFCURVE",
"189 321 CURVE",
"192 321 LINE",
"192 319 LINE",
"193 319 LINE",
"193 318 LINE",
"198 318 LINE",
"198 316 LINE",
"199 316 OFFCURVE",
"200 315 OFFCURVE",
"201 315 CURVE",
"201 312 LINE",
"205 312 OFFCURVE",
"217 309 OFFCURVE",
"217 315 CURVE",
"222 315 LINE",
"223 316 OFFCURVE",
"225 317 OFFCURVE",
"227 317 CURVE SMOOTH",
"228 317 OFFCURVE",
"229 315 OFFCURVE",
"230 315 CURVE SMOOTH",
"232 315 LINE",
"232 314 OFFCURVE",
"235 309 OFFCURVE",
"236 308 CURVE",
"244 308 LINE",
"244 306 LINE",
"245 306 OFFCURVE",
"245 305 OFFCURVE",
"245 305 CURVE",
"247 303 OFFCURVE",
"248 303 OFFCURVE",
"248 300 CURVE",
"251 300 OFFCURVE",
"254 300 OFFCURVE",
"255 302 CURVE",
"255 301 OFFCURVE",
"255 300 OFFCURVE",
"256 300 CURVE",
"256 297 LINE",
"257 297 LINE",
"257 292 LINE",
"259 292 LINE",
"259 289 LINE",
"260 289 LINE",
"260 288 LINE",
"262 288 LINE",
"262 287 LINE",
"263 287 LINE SMOOTH",
"264 287 OFFCURVE",
"266 285 OFFCURVE",
"266 285 CURVE",
"266 283 LINE",
"268 283 LINE",
"268 282 OFFCURVE",
"267 277 OFFCURVE",
"270 276 CURVE",
"270 261 LINE",
"268 261 LINE",
"268 259 LINE",
"266 258 LINE",
"266 256 LINE",
"264 256 OFFCURVE",
"263 249 OFFCURVE",
"263 248 CURVE SMOOTH",
"263 195 LINE",
"262 195 LINE",
"263 193 OFFCURVE",
"263 192 OFFCURVE",
"263 191 CURVE",
"260 191 LINE",
"260 186 OFFCURVE",
"259 188 OFFCURVE",
"259 186 CURVE SMOOTH",
"259 185 LINE",
"257 184 OFFCURVE",
"256 184 OFFCURVE",
"256 182 CURVE",
"257 181 OFFCURVE",
"259 181 OFFCURVE",
"259 181 CURVE",
"257 179 LINE",
"259 179 LINE",
"259 178 LINE",
"260 176 OFFCURVE",
"260 178 OFFCURVE",
"262 175 CURVE",
"262 177 OFFCURVE",
"263 178 OFFCURVE",
"263 179 CURVE",
"265 179 LINE",
"266 180 LINE",
"266 184 OFFCURVE",
"266 182 OFFCURVE",
"268 184 CURVE",
"268 187 OFFCURVE",
"270 189 OFFCURVE",
"270 191 CURVE SMOOTH",
"270 197 OFFCURVE",
"270 199 OFFCURVE",
"273 203 CURVE",
"275 203 LINE",
"275 205 OFFCURVE",
"277 207 OFFCURVE",
"277 209 CURVE SMOOTH",
"277 210 LINE",
"276 210 LINE",
"276 214 LINE",
"275 214 LINE",
"275 242 LINE",
"276 242 OFFCURVE",
"277 242 OFFCURVE",
"277 244 CURVE",
"276 245 OFFCURVE",
"274 249 OFFCURVE",
"274 252 CURVE SMOOTH",
"274 254 OFFCURVE",
"275 255 OFFCURVE",
"276 256 CURVE",
"276 258 LINE",
"278 258 LINE",
"277 259 LINE",
"279 259 LINE",
"279 265 LINE",
"283 265 OFFCURVE",
"281 270 OFFCURVE",
"281 274 CURVE SMOOTH",
"281 282 OFFCURVE",
"282 293 OFFCURVE",
"277 300 CURVE SMOOTH",
"273 305 LINE",
"273 307 OFFCURVE",
"271 316 OFFCURVE",
"275 316 CURVE",
"275 323 LINE",
"276 323 LINE",
"280 325 OFFCURVE",
"272 335 OFFCURVE",
"272 336 CURVE",
"270 342 LINE",
"270 347 OFFCURVE",
"269 353 OFFCURVE",
"266 357 CURVE",
"262 360 OFFCURVE",
"255 358 OFFCURVE",
"255 364 CURVE",
"248 366 OFFCURVE",
"247 366 OFFCURVE",
"247 374 CURVE",
"243 375 OFFCURVE",
"236 377 OFFCURVE",
"232 379 CURVE",
"232 380 LINE",
"221 385 LINE",
"208 385 LINE",
"203 390 OFFCURVE",
"199 395 OFFCURVE",
"192 395 CURVE SMOOTH",
"189 395 LINE SMOOTH",
"185 394 OFFCURVE",
"180 392 OFFCURVE",
"176 392 CURVE SMOOTH",
"174 392 LINE",
"167 385 OFFCURVE",
"158 396 OFFCURVE",
"151 396 CURVE SMOOTH",
"144 396 OFFCURVE",
"137 389 OFFCURVE",
"131 385 CURVE",
"112 385 LINE",
"112 383 LINE",
"108 383 OFFCURVE",
"105 381 OFFCURVE",
"104 379 CURVE",
"103 379 OFFCURVE",
"101 375 OFFCURVE",
"101 377 CURVE",
"99 376 OFFCURVE",
"99 374 OFFCURVE",
"99 372 CURVE",
"99 372 OFFCURVE",
"97 372 OFFCURVE",
"97 370 CURVE SMOOTH",
"97 368 OFFCURVE",
"95 366 OFFCURVE",
"92 364 CURVE",
"92 362 LINE",
"91 361 LINE",
"90 362 LINE",
"77 349 LINE",
"75 349 LINE",
"74 348 LINE",
"73 345 OFFCURVE",
"72 343 OFFCURVE",
"69 343 CURVE",
"69 342 LINE",
"67 343 OFFCURVE",
"66 344 OFFCURVE",
"65 343 CURVE",
"65 342 LINE",
"62 340 OFFCURVE",
"56 334 OFFCURVE",
"54 331 CURVE",
"52 331 OFFCURVE",
"52 329 OFFCURVE",
"52 328 CURVE",
"50 327 OFFCURVE",
"50 325 OFFCURVE",
"49 324 CURVE",
"49 311 LINE",
"47 308 OFFCURVE",
"44 304 OFFCURVE",
"44 300 CURVE SMOOTH",
"44 292 OFFCURVE",
"43 284 OFFCURVE",
"46 276 CURVE SMOOTH",
"47 271 OFFCURVE",
"50 265 OFFCURVE",
"50 260 CURVE SMOOTH",
"50 259 OFFCURVE",
"49 258 OFFCURVE",
"49 256 CURVE SMOOTH",
"49 244 LINE",
"52 244 OFFCURVE",
"53 244 OFFCURVE",
"55 242 CURVE",
"55 241 LINE",
"56 240 OFFCURVE",
"58 241 OFFCURVE",
"58 238 CURVE",
"59 238 LINE",
"59 233 LINE",
"62 233 LINE",
"62 231 LINE",
"65 231 OFFCURVE",
"66 231 OFFCURVE",
"66 228 CURVE SMOOTH",
"66 227 LINE",
"69 227 LINE",
"69 216 LINE",
"66 216 LINE",
"66 214 LINE",
"65 214 LINE",
"65 212 LINE",
"62 212 LINE SMOOTH",
"60 212 OFFCURVE",
"59 210 OFFCURVE",
"59 210 CURVE",
"58 211 LINE",
"58 207 LINE",
"65 207 LINE",
"65 209 LINE",
"71 209 LINE",
"71 207 OFFCURVE",
"74 207 OFFCURVE",
"74 205 CURVE SMOOTH",
"73 201 OFFCURVE",
"71 197 OFFCURVE",
"71 193 CURVE SMOOTH",
"71 188 LINE",
"73 185 LINE",
"74 185 LINE",
"73 183 OFFCURVE",
"73 180 OFFCURVE",
"74 178 CURVE",
"74 177 OFFCURVE",
"73 175 OFFCURVE",
"71 175 CURVE",
"71 171 LINE",
"70 171 OFFCURVE",
"69 171 OFFCURVE",
"69 170 CURVE SMOOTH",
"69 167 LINE",
"67 168 LINE",
"66 168 OFFCURVE",
"66 168 OFFCURVE",
"66 167 CURVE",
"65 167 LINE",
"65 169 LINE",
"63 169 OFFCURVE",
"63 170 OFFCURVE",
"62 169 CURVE",
"62 170 LINE",
"59 170 LINE",
"59 165 LINE",
"56 165 LINE",
"56 160 LINE",
"58 160 LINE",
"59 161 LINE",
"60 161 LINE",
"62 160 OFFCURVE",
"62 160 OFFCURVE",
"65 160 CURVE",
"65 154 LINE",
"66 154 LINE",
"66 152 LINE",
"65 152 LINE",
"65 143 OFFCURVE",
"63 142 OFFCURVE",
"66 136 CURVE",
"66 129 LINE",
"67 125 OFFCURVE",
"69 121 OFFCURVE",
"69 117 CURVE",
"71 111 OFFCURVE",
"71 101 OFFCURVE",
"71 95 CURVE",
"66 88 OFFCURVE",
"66 83 OFFCURVE",
"62 77 CURVE",
"62 61 LINE",
"71 55 LINE",
"71 48 OFFCURVE",
"73 49 OFFCURVE",
"75 43 CURVE",
"86 43 LINE",
"88 41 OFFCURVE",
"90 38 OFFCURVE",
"92 37 CURVE",
"92 36 LINE",
"93 36 LINE",
"93 34 LINE",
"101 29 OFFCURVE",
"101 30 OFFCURVE",
"101 21 CURVE SMOOTH",
"101 18 LINE",
"105 18 OFFCURVE",
"109 19 OFFCURVE",
"112 19 CURVE SMOOTH",
"118 19 OFFCURVE",
"116 16 OFFCURVE",
"118 14 CURVE",
"118 11 LINE",
"116 8 OFFCURVE",
"118 6 OFFCURVE",
"118 5 CURVE SMOOTH",
"118 3 LINE"
);
},
{
closed = 1;
nodes = (
"52 169 LINE",
"54 174 OFFCURVE",
"50 178 OFFCURVE",
"50 182 CURVE",
"49 182 LINE",
"49 186 LINE",
"47 186 LINE",
"47 188 OFFCURVE",
"46 189 OFFCURVE",
"44 191 CURVE",
"42 191 LINE",
"42 190 LINE",
"40 190 LINE",
"40 187 OFFCURVE",
"42 184 OFFCURVE",
"42 180 CURVE",
"44 180 LINE",
"43 178 OFFCURVE",
"43 177 OFFCURVE",
"43 175 CURVE",
"44 175 LINE",
"46 173 OFFCURVE",
"49 172 OFFCURVE",
"49 169 CURVE"
);
},
{
closed = 1;
nodes = (
"59 181 OFFCURVE",
"61 181 OFFCURVE",
"62 182 CURVE",
"59 182 LINE",
"58 185 LINE",
"58 185 OFFCURVE",
"57 186 OFFCURVE",
"56 186 CURVE",
"56 183 LINE SMOOTH",
"56 181 OFFCURVE",
"58 180 OFFCURVE",
"58 180 CURVE"
);
},
{
closed = 1;
nodes = (
"159 92 OFFCURVE",
"161 92 OFFCURVE",
"162 92 CURVE SMOOTH",
"163 92 LINE",
"163 95 LINE",
"165 95 OFFCURVE",
"167 94 OFFCURVE",
"167 96 CURVE SMOOTH",
"167 95 LINE",
"170 95 OFFCURVE",
"170 96 OFFCURVE",
"170 97 CURVE",
"176 97 LINE",
"176 98 LINE",
"180 98 LINE",
"181 100 OFFCURVE",
"178 105 OFFCURVE",
"176 105 CURVE",
"176 107 OFFCURVE",
"176 107 OFFCURVE",
"175 107 CURVE",
"174 108 LINE",
"172 107 LINE",
"167 107 LINE",
"167 105 LINE",
"161 105 LINE",
"161 107 LINE",
"157 107 LINE SMOOTH",
"155 107 OFFCURVE",
"159 105 OFFCURVE",
"147 105 CURVE SMOOTH",
"139 105 LINE",
"139 100 LINE SMOOTH",
"139 99 OFFCURVE",
"140 99 OFFCURVE",
"140 99 CURVE",
"140 98 LINE",
"143 97 LINE",
"148 97 LINE",
"148 95 LINE",
"151 96 LINE",
"151 94 OFFCURVE",
"157 92 OFFCURVE",
"158 90 CURVE"
);
},
{
closed = 1;
nodes = (
"50 198 LINE",
"50 200 LINE",
"50 200 OFFCURVE",
"51 200 OFFCURVE",
"52 201 CURVE",
"54 201 LINE",
"54 205 OFFCURVE",
"52 209 OFFCURVE",
"52 212 CURVE SMOOTH",
"52 213 OFFCURVE",
"50 214 OFFCURVE",
"50 214 CURVE",
"50 216 LINE",
"49 216 LINE",
"49 219 LINE",
"47 219 LINE",
"47 225 LINE",
"43 225 LINE",
"43 218 LINE",
"44 218 LINE",
"44 215 LINE",
"47 215 LINE",
"46 214 OFFCURVE",
"46 212 OFFCURVE",
"46 210 CURVE",
"49 210 LINE",
"49 207 OFFCURVE",
"47 205 OFFCURVE",
"44 203 CURVE",
"44 201 OFFCURVE",
"46 200 OFFCURVE",
"47 198 CURVE"
);
},
{
closed = 1;
nodes = (
"62 222 LINE",
"62 222 OFFCURVE",
"59 222 OFFCURVE",
"59 224 CURVE SMOOTH",
"59 220 LINE"
);
},
{
closed = 1;
nodes = (
"185 113 OFFCURVE",
"191 115 OFFCURVE",
"191 117 CURVE SMOOTH",
"191 118 OFFCURVE",
"190 118 OFFCURVE",
"189 119 CURVE",
"176 119 LINE",
"176 117 LINE",
"172 117 LINE",
"172 115 LINE",
"173 114 OFFCURVE",
"176 113 OFFCURVE",
"180 113 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"214 66 OFFCURVE",
"215 66 OFFCURVE",
"215 67 CURVE",
"217 68 LINE",
"220 68 LINE",
"220 70 LINE",
"223 70 LINE",
"223 73 OFFCURVE",
"224 77 OFFCURVE",
"222 81 CURVE",
"222 82 OFFCURVE",
"224 84 OFFCURVE",
"225 84 CURVE SMOOTH",
"226 84 LINE",
"228 85 LINE",
"228 88 LINE",
"230 89 OFFCURVE",
"232 93 OFFCURVE",
"232 95 CURVE",
"235 96 OFFCURVE",
"240 99 OFFCURVE",
"241 101 CURVE SMOOTH",
"242 103 OFFCURVE",
"244 101 OFFCURVE",
"246 103 CURVE",
"246 105 LINE",
"247 105 LINE",
"247 107 LINE",
"248 110 OFFCURVE",
"249 113 OFFCURVE",
"244 113 CURVE SMOOTH",
"243 113 OFFCURVE",
"241 113 OFFCURVE",
"240 111 CURVE SMOOTH",
"236 105 LINE",
"230 105 LINE",
"230 103 OFFCURVE",
"228 105 OFFCURVE",
"228 102 CURVE",
"226 102 LINE",
"226 99 LINE",
"225 99 LINE",
"225 98 OFFCURVE",
"226 95 OFFCURVE",
"224 95 CURVE",
"224 93 LINE",
"223 92 LINE",
"223 86 LINE",
"221 86 LINE",
"221 85 LINE",
"223 84 LINE",
"220 83 OFFCURVE",
"217 79 OFFCURVE",
"215 76 CURVE",
"215 75 LINE",
"214 75 LINE",
"214 73 LINE",
"210 73 LINE SMOOTH",
"212 73 OFFCURVE",
"212 72 OFFCURVE",
"212 70 CURVE",
"210 68 LINE",
"210 66 OFFCURVE",
"212 66 OFFCURVE",
"213 66 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"224 121 OFFCURVE",
"224 122 OFFCURVE",
"225 122 CURVE SMOOTH",
"226 122 OFFCURVE",
"227 122 OFFCURVE",
"228 121 CURVE",
"228 122 LINE SMOOTH",
"228 123 OFFCURVE",
"230 124 OFFCURVE",
"231 124 CURVE",
"230 124 LINE",
"232 126 LINE",
"232 129 LINE",
"234 129 LINE",
"234 130 OFFCURVE",
"233 132 OFFCURVE",
"232 133 CURVE",
"234 134 OFFCURVE",
"236 134 OFFCURVE",
"236 136 CURVE",
"237 136 OFFCURVE",
"238 136 OFFCURVE",
"238 138 CURVE",
"244 138 LINE",
"244 136 LINE",
"246 136 LINE",
"246 135 OFFCURVE",
"247 134 OFFCURVE",
"247 133 CURVE",
"259 133 OFFCURVE",
"259 134 OFFCURVE",
"259 144 CURVE",
"244 144 LINE",
"244 147 OFFCURVE",
"242 150 OFFCURVE",
"240 152 CURVE",
"236 154 LINE",
"236 155 OFFCURVE",
"234 156 OFFCURVE",
"232 157 CURVE",
"232 160 LINE",
"230 160 LINE SMOOTH",
"228 160 OFFCURVE",
"227 163 OFFCURVE",
"227 164 CURVE",
"226 165 OFFCURVE",
"226 165 OFFCURVE",
"224 165 CURVE",
"224 167 LINE",
"216 175 LINE",
"212 173 LINE",
"212 167 LINE",
"215 165 LINE",
"215 164 LINE",
"217 163 OFFCURVE",
"217 162 OFFCURVE",
"217 160 CURVE",
"219 160 LINE",
"219 138 LINE",
"219 138 OFFCURVE",
"217 137 OFFCURVE",
"217 136 CURVE",
"207 136 LINE",
"207 134 LINE",
"205 134 OFFCURVE",
"200 136 OFFCURVE",
"198 134 CURVE",
"195 134 LINE",
"194 136 LINE",
"192 137 OFFCURVE",
"191 134 OFFCURVE",
"188 134 CURVE",
"189 133 LINE",
"198 133 LINE",
"198 130 LINE",
"201 130 LINE",
"201 129 LINE",
"205 129 LINE",
"205 128 LINE",
"210 128 LINE",
"210 126 LINE",
"215 126 LINE",
"217 124 OFFCURVE",
"218 124 OFFCURVE",
"220 125 CURVE",
"220 124 OFFCURVE",
"223 122 OFFCURVE",
"223 121 CURVE"
);
},
{
closed = 1;
nodes = (
"225 193 LINE SMOOTH",
"226 193 OFFCURVE",
"226 195 OFFCURVE",
"225 195 CURVE SMOOTH",
"228 195 LINE",
"228 196 OFFCURVE",
"231 197 OFFCURVE",
"232 198 CURVE",
"232 200 LINE",
"234 201 LINE",
"234 203 LINE",
"238 205 OFFCURVE",
"251 203 OFFCURVE",
"251 210 CURVE",
"247 211 OFFCURVE",
"251 214 OFFCURVE",
"251 215 CURVE",
"253 216 LINE",
"253 219 LINE",
"252 220 OFFCURVE",
"251 220 OFFCURVE",
"251 220 CURVE",
"251 222 LINE",
"247 222 LINE",
"247 223 LINE",
"244 224 OFFCURVE",
"244 226 OFFCURVE",
"244 227 CURVE",
"241 227 OFFCURVE",
"238 224 OFFCURVE",
"236 225 CURVE",
"234 227 LINE",
"232 227 LINE",
"229 231 LINE",
"223 231 LINE",
"221 233 LINE",
"217 232 LINE",
"217 231 LINE",
"210 231 LINE",
"210 227 LINE",
"208 227 OFFCURVE",
"205 226 OFFCURVE",
"204 225 CURVE SMOOTH",
"201 222 LINE",
"201 220 LINE",
"200 219 LINE",
"199 219 LINE",
"199 218 OFFCURVE",
"199 216 OFFCURVE",
"198 216 CURVE",
"198 214 OFFCURVE",
"199 213 OFFCURVE",
"198 211 CURVE",
"201 207 OFFCURVE",
"204 206 OFFCURVE",
"201 203 CURVE",
"201 200 LINE",
"212 200 LINE SMOOTH",
"215 200 OFFCURVE",
"217 197 OFFCURVE",
"218 196 CURVE SMOOTH",
"219 194 LINE",
"220 193 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012115 3 251 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012131 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012311 251 115 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012313 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012313 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012315 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012315 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012333 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012333 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012463 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012463 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012466 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012466 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012468 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012468 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012471 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012471 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012475 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012475 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012477 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012477 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012533 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012533 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012543 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012543 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012545 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012547 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012547 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012558 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012558 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012572 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012572 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012574 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012574 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 321;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = at;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"262 37 OFFCURVE",
"309 56 OFFCURVE",
"352 95 CURVE SMOOTH",
"394 133 OFFCURVE",
"415 173 OFFCURVE",
"415 215 CURVE SMOOTH",
"415 223 OFFCURVE",
"414 231 OFFCURVE",
"412 238 CURVE SMOOTH",
"411 243 OFFCURVE",
"408 246 OFFCURVE",
"403 246 CURVE SMOOTH",
"399 246 OFFCURVE",
"397 244 OFFCURVE",
"397 241 CURVE SMOOTH",
"397 239 LINE SMOOTH",
"399 230 OFFCURVE",
"400 221 OFFCURVE",
"400 212 CURVE SMOOTH",
"400 171 OFFCURVE",
"382 135 OFFCURVE",
"347 105 CURVE SMOOTH",
"314 76 OFFCURVE",
"275 61 OFFCURVE",
"231 61 CURVE SMOOTH",
"175 61 OFFCURVE",
"128 79 OFFCURVE",
"91 114 CURVE SMOOTH",
"54 151 OFFCURVE",
"35 199 OFFCURVE",
"35 258 CURVE SMOOTH",
"35 315 OFFCURVE",
"53 362 OFFCURVE",
"90 398 CURVE SMOOTH",
"126 434 OFFCURVE",
"172 452 OFFCURVE",
"229 452 CURVE SMOOTH",
"311 452 OFFCURVE",
"368 380 OFFCURVE",
"368 304 CURVE SMOOTH",
"368 281 OFFCURVE",
"362 258 OFFCURVE",
"351 236 CURVE SMOOTH",
"336 211 OFFCURVE",
"318 199 OFFCURVE",
"296 199 CURVE SMOOTH",
"292 200 LINE",
"288 200 LINE SMOOTH",
"282 201 OFFCURVE",
"278 207 OFFCURVE",
"276 216 CURVE SMOOTH",
"273 225 OFFCURVE",
"272 238 OFFCURVE",
"272 253 CURVE SMOOTH",
"272 275 LINE",
"273 284 LINE",
"273 288 LINE SMOOTH",
"272 297 OFFCURVE",
"267 302 OFFCURVE",
"252 302 CURVE SMOOTH",
"243 302 OFFCURVE",
"239 298 OFFCURVE",
"239 291 CURVE SMOOTH",
"240 253 OFFCURVE",
"234 222 OFFCURVE",
"221 199 CURVE SMOOTH",
"210 179 OFFCURVE",
"196 169 OFFCURVE",
"181 169 CURVE SMOOTH",
"160 169 OFFCURVE",
"150 184 OFFCURVE",
"150 213 CURVE SMOOTH",
"150 248 OFFCURVE",
"158 278 OFFCURVE",
"175 303 CURVE SMOOTH",
"192 328 OFFCURVE",
"212 342 OFFCURVE",
"236 346 CURVE",
"243 346 LINE SMOOTH",
"259 346 OFFCURVE",
"270 342 OFFCURVE",
"271 330 CURVE SMOOTH",
"272 326 OFFCURVE",
"274 324 OFFCURVE",
"278 324 CURVE SMOOTH",
"281 324 OFFCURVE",
"283 326 OFFCURVE",
"283 330 CURVE SMOOTH",
"283 353 OFFCURVE",
"271 366 OFFCURVE",
"246 370 CURVE SMOOTH",
"243 371 OFFCURVE",
"239 371 OFFCURVE",
"234 371 CURVE SMOOTH",
"204 371 OFFCURVE",
"178 358 OFFCURVE",
"155 332 CURVE SMOOTH",
"132 305 OFFCURVE",
"120 274 OFFCURVE",
"120 239 CURVE SMOOTH",
"120 225 OFFCURVE",
"121 213 OFFCURVE",
"124 202 CURVE SMOOTH",
"132 172 OFFCURVE",
"148 157 OFFCURVE",
"173 157 CURVE SMOOTH",
"190 157 OFFCURVE",
"205 164 OFFCURVE",
"219 179 CURVE SMOOTH",
"235 196 OFFCURVE",
"244 217 OFFCURVE",
"246 240 CURVE",
"252 239 LINE",
"252 222 OFFCURVE",
"256 207 OFFCURVE",
"265 196 CURVE SMOOTH",
"274 183 OFFCURVE",
"285 177 OFFCURVE",
"300 177 CURVE SMOOTH",
"320 177 OFFCURVE",
"341 191 OFFCURVE",
"363 219 CURVE SMOOTH",
"385 248 OFFCURVE",
"395 280 OFFCURVE",
"395 311 CURVE SMOOTH",
"395 392 OFFCURVE",
"325 467 OFFCURVE",
"229 467 CURVE SMOOTH",
"168 467 OFFCURVE",
"117 447 OFFCURVE",
"75 407 CURVE SMOOTH",
"32 366 OFFCURVE",
"10 315 OFFCURVE",
"10 254 CURVE SMOOTH",
"10 187 OFFCURVE",
"30 134 OFFCURVE",
"69 95 CURVE SMOOTH",
"106 56 OFFCURVE",
"154 37 OFFCURVE",
"213 37 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"262 -83 OFFCURVE",
"309 -64 OFFCURVE",
"352 -25 CURVE SMOOTH",
"394 13 OFFCURVE",
"415 53 OFFCURVE",
"415 95 CURVE SMOOTH",
"415 103 OFFCURVE",
"414 111 OFFCURVE",
"412 118 CURVE SMOOTH",
"411 123 OFFCURVE",
"408 126 OFFCURVE",
"403 126 CURVE SMOOTH",
"399 126 OFFCURVE",
"397 124 OFFCURVE",
"397 121 CURVE SMOOTH",
"397 119 LINE",
"399 110 OFFCURVE",
"400 101 OFFCURVE",
"400 92 CURVE SMOOTH",
"400 51 OFFCURVE",
"382 15 OFFCURVE",
"347 -15 CURVE SMOOTH",
"314 -44 OFFCURVE",
"275 -59 OFFCURVE",
"231 -59 CURVE SMOOTH",
"175 -59 OFFCURVE",
"128 -41 OFFCURVE",
"91 -6 CURVE SMOOTH",
"54 31 OFFCURVE",
"35 79 OFFCURVE",
"35 138 CURVE SMOOTH",
"35 195 OFFCURVE",
"53 242 OFFCURVE",
"90 278 CURVE SMOOTH",
"126 314 OFFCURVE",
"172 332 OFFCURVE",
"229 332 CURVE SMOOTH",
"311 332 OFFCURVE",
"368 260 OFFCURVE",
"368 184 CURVE SMOOTH",
"368 161 OFFCURVE",
"362 138 OFFCURVE",
"351 116 CURVE SMOOTH",
"336 91 OFFCURVE",
"318 79 OFFCURVE",
"296 79 CURVE",
"288 80 LINE SMOOTH",
"282 81 OFFCURVE",
"278 87 OFFCURVE",
"276 96 CURVE SMOOTH",
"273 105 OFFCURVE",
"272 118 OFFCURVE",
"272 133 CURVE SMOOTH",
"272 155 LINE",
"273 164 LINE",
"273 168 LINE SMOOTH",
"272 177 OFFCURVE",
"267 182 OFFCURVE",
"252 182 CURVE SMOOTH",
"243 182 OFFCURVE",
"239 178 OFFCURVE",
"239 171 CURVE SMOOTH",
"240 133 OFFCURVE",
"234 102 OFFCURVE",
"221 79 CURVE SMOOTH",
"210 59 OFFCURVE",
"196 49 OFFCURVE",
"181 49 CURVE SMOOTH",
"160 49 OFFCURVE",
"150 64 OFFCURVE",
"150 93 CURVE SMOOTH",
"150 128 OFFCURVE",
"158 158 OFFCURVE",
"175 183 CURVE SMOOTH",
"192 208 OFFCURVE",
"212 222 OFFCURVE",
"236 226 CURVE",
"243 226 LINE SMOOTH",
"259 226 OFFCURVE",
"270 222 OFFCURVE",
"271 210 CURVE SMOOTH",
"272 206 OFFCURVE",
"274 204 OFFCURVE",
"278 204 CURVE SMOOTH",
"281 204 OFFCURVE",
"283 206 OFFCURVE",
"283 210 CURVE SMOOTH",
"283 233 OFFCURVE",
"271 246 OFFCURVE",
"246 250 CURVE",
"243 251 OFFCURVE",
"239 251 OFFCURVE",
"234 251 CURVE SMOOTH",
"204 251 OFFCURVE",
"178 238 OFFCURVE",
"155 212 CURVE SMOOTH",
"132 185 OFFCURVE",
"120 154 OFFCURVE",
"120 119 CURVE SMOOTH",
"120 105 OFFCURVE",
"121 93 OFFCURVE",
"124 82 CURVE SMOOTH",
"132 52 OFFCURVE",
"148 37 OFFCURVE",
"173 37 CURVE SMOOTH",
"190 37 OFFCURVE",
"205 44 OFFCURVE",
"219 59 CURVE SMOOTH",
"235 76 OFFCURVE",
"244 97 OFFCURVE",
"246 120 CURVE",
"252 119 LINE",
"252 102 OFFCURVE",
"256 87 OFFCURVE",
"265 76 CURVE SMOOTH",
"274 63 OFFCURVE",
"285 57 OFFCURVE",
"300 57 CURVE SMOOTH",
"320 57 OFFCURVE",
"341 71 OFFCURVE",
"363 99 CURVE SMOOTH",
"385 128 OFFCURVE",
"395 160 OFFCURVE",
"395 191 CURVE SMOOTH",
"395 272 OFFCURVE",
"325 347 OFFCURVE",
"229 347 CURVE SMOOTH",
"168 347 OFFCURVE",
"117 327 OFFCURVE",
"75 287 CURVE SMOOTH",
"32 246 OFFCURVE",
"10 195 OFFCURVE",
"10 134 CURVE SMOOTH",
"10 67 OFFCURVE",
"30 14 OFFCURVE",
"69 -25 CURVE SMOOTH",
"106 -64 OFFCURVE",
"154 -83 OFFCURVE",
"213 -83 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01252 3 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01292 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 4 63 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 58 170 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 52 165 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 84 165 84 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 92 170 92 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01288 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 2 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01260 23 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"129.333 -79 OFFCURVE",
"131.333 -77.667 OFFCURVE",
"132 -75 CURVE",
"145.333 -47 OFFCURVE",
"156.5 -22.167 OFFCURVE",
"165.5 -0.5 CURVE SMOOTH",
"189 56 LINE",
"205 52 OFFCURVE",
"217.667 51 OFFCURVE",
"231 51 CURVE SMOOTH",
"272.333 51 OFFCURVE",
"305 64 OFFCURVE",
"329 90 CURVE SMOOTH",
"350.333 112 OFFCURVE",
"361 139.667 OFFCURVE",
"361 173 CURVE SMOOTH",
"361 196.333 OFFCURVE",
"355 216 OFFCURVE",
"343 232 CURVE SMOOTH",
"328.333 250.667 OFFCURVE",
"308.667 260 OFFCURVE",
"284 260 CURVE SMOOTH",
"267.333 260 OFFCURVE",
"252.667 254 OFFCURVE",
"240 242 CURVE SMOOTH",
"228 230.667 OFFCURVE",
"222 216.667 OFFCURVE",
"222 200 CURVE SMOOTH",
"222 177.333 OFFCURVE",
"234.333 166 OFFCURVE",
"259 166 CURVE SMOOTH",
"264 166 LINE SMOOTH",
"266 166 OFFCURVE",
"267 167 OFFCURVE",
"267 169 CURVE SMOOTH",
"267 171.667 OFFCURVE",
"266 173 OFFCURVE",
"264 173 CURVE SMOOTH",
"240 171 OFFCURVE",
"228 180.333 OFFCURVE",
"228 201 CURVE SMOOTH",
"228 213.667 OFFCURVE",
"233.667 225.667 OFFCURVE",
"245 237 CURVE SMOOTH",
"256 248 OFFCURVE",
"269 253 OFFCURVE",
"285 253 CURVE SMOOTH",
"305 253 OFFCURVE",
"320 244 OFFCURVE",
"331 229 CURVE SMOOTH",
"340.333 217 OFFCURVE",
"345 201 OFFCURVE",
"345 181 CURVE SMOOTH",
"345 153 OFFCURVE",
"336 128.667 OFFCURVE",
"318 108 CURVE SMOOTH",
"296.667 84.667 OFFCURVE",
"269 73 OFFCURVE",
"235 73 CURVE SMOOTH",
"221.667 73 OFFCURVE",
"209.667 74.333 OFFCURVE",
"199 77 CURVE SMOOTH",
"165.667 84.333 OFFCURVE",
"139 99.333 OFFCURVE",
"119 122 CURVE SMOOTH",
"97.667 147.333 OFFCURVE",
"87 177.667 OFFCURVE",
"87 213 CURVE SMOOTH",
"87.5 220 LINE",
"88 226 LINE SMOOTH",
"90.667 267.333 OFFCURVE",
"100.333 297.667 OFFCURVE",
"123 323 CURVE",
"141.667 305.667 OFFCURVE",
"162.333 297.667 OFFCURVE",
"193 295 CURVE SMOOTH",
"200 295 LINE SMOOTH",
"228 295 OFFCURVE",
"243 305 OFFCURVE",
"243 324 CURVE SMOOTH",
"243 332 OFFCURVE",
"238 338 OFFCURVE",
"229 344 CURVE SMOOTH",
"217.667 350 OFFCURVE",
"203.667 353 OFFCURVE",
"187 353 CURVE SMOOTH",
"168.333 353 OFFCURVE",
"151.333 350.333 OFFCURVE",
"130 341 CURVE",
"126.667 350.333 OFFCURVE",
"125 359.333 OFFCURVE",
"125 368 CURVE SMOOTH",
"125 396.667 OFFCURVE",
"136 423 OFFCURVE",
"158 447 CURVE SMOOTH",
"182 474 OFFCURVE",
"211 487 OFFCURVE",
"246 487 CURVE SMOOTH",
"271 487 OFFCURVE",
"292 483 OFFCURVE",
"309 474 CURVE SMOOTH",
"327 463 OFFCURVE",
"336 449 OFFCURVE",
"336 431 CURVE SMOOTH",
"336 419 OFFCURVE",
"331 409 OFFCURVE",
"324 402 CURVE SMOOTH",
"317.333 395.333 OFFCURVE",
"310.667 392 OFFCURVE",
"304 392 CURVE SMOOTH",
"291 392 OFFCURVE",
"284 399 OFFCURVE",
"284 414 CURVE SMOOTH",
"284 415 OFFCURVE",
"284 417 OFFCURVE",
"284 418 CURVE SMOOTH",
"284 421 LINE SMOOTH",
"284 427 OFFCURVE",
"283.333 430 OFFCURVE",
"282 430 CURVE SMOOTH",
"279.333 430 OFFCURVE",
"277.667 426.333 OFFCURVE",
"277 419 CURVE SMOOTH",
"277 408.333 OFFCURVE",
"280.333 399.667 OFFCURVE",
"287 393 CURVE SMOOTH",
"293.667 387 OFFCURVE",
"302.333 384 OFFCURVE",
"313 384 CURVE SMOOTH",
"322.333 384 OFFCURVE",
"331.333 387.667 OFFCURVE",
"340 395 CURVE SMOOTH",
"350.667 405.667 OFFCURVE",
"354 419.333 OFFCURVE",
"354 434 CURVE SMOOTH",
"354 468.667 OFFCURVE",
"335.333 490 OFFCURVE",
"290 502 CURVE",
"312.5 546.5 LINE SMOOTH",
"318.167 557.5 OFFCURVE",
"322.667 565.667 OFFCURVE",
"326 571 CURVE SMOOTH",
"328 576 LINE",
"328 580.667 OFFCURVE",
"325.333 583 OFFCURVE",
"320 583 CURVE SMOOTH",
"316.667 583 OFFCURVE",
"314.667 582 OFFCURVE",
"314 580 CURVE",
"304.667 564 OFFCURVE",
"297 549.833 OFFCURVE",
"291 537.5 CURVE SMOOTH",
"275 505 LINE",
"266 506 OFFCURVE",
"259 507 OFFCURVE",
"251 507 CURVE SMOOTH",
"247 507 OFFCURVE",
"242 506 OFFCURVE",
"238 506 CURVE SMOOTH",
"197.333 504.667 OFFCURVE",
"164 490.667 OFFCURVE",
"138 464 CURVE SMOOTH",
"113.333 439.333 OFFCURVE",
"101 411 OFFCURVE",
"101 379 CURVE SMOOTH",
"101 363 OFFCURVE",
"105.667 347.667 OFFCURVE",
"115 333 CURVE",
"75 307.667 OFFCURVE",
"55.333 272.667 OFFCURVE",
"50 226 CURVE SMOOTH",
"49.5 218 LINE",
"49 210 LINE SMOOTH",
"49 172.667 OFFCURVE",
"61.333 140.333 OFFCURVE",
"86 113 CURVE SMOOTH",
"108.667 89 OFFCURVE",
"135.333 71 OFFCURVE",
"174 59 CURVE",
"147.333 -7.667 OFFCURVE",
"129.667 -48 OFFCURVE",
"119 -68 CURVE",
"118.333 -68.667 OFFCURVE",
"118 -69.667 OFFCURVE",
"118 -71 CURVE SMOOTH",
"118 -76.333 OFFCURVE",
"120.667 -79 OFFCURVE",
"126 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 302 OFFCURVE",
"195 302.333 OFFCURVE",
"193 303 CURVE",
"166.333 304.333 OFFCURVE",
"146.667 314.667 OFFCURVE",
"134 334 CURVE",
"148 343 OFFCURVE",
"162 348 OFFCURVE",
"177 348 CURVE SMOOTH",
"196 348 OFFCURVE",
"211 345 OFFCURVE",
"221 338 CURVE SMOOTH",
"231 332.667 OFFCURVE",
"236 326.333 OFFCURVE",
"236 319 CURVE SMOOTH",
"236 305.667 OFFCURVE",
"222 302 OFFCURVE",
"202 302 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"129 -79 OFFCURVE",
"131 -78 OFFCURVE",
"132 -75 CURVE SMOOTH",
"145 -47 OFFCURVE",
"157 -22 OFFCURVE",
"166 -1 CURVE SMOOTH",
"189 56 LINE",
"205 52 OFFCURVE",
"218 51 OFFCURVE",
"231 51 CURVE SMOOTH",
"272 51 OFFCURVE",
"305 64 OFFCURVE",
"329 90 CURVE SMOOTH",
"350 112 OFFCURVE",
"361 140 OFFCURVE",
"361 173 CURVE SMOOTH",
"361 196 OFFCURVE",
"355 216 OFFCURVE",
"343 232 CURVE SMOOTH",
"328 251 OFFCURVE",
"309 260 OFFCURVE",
"284 260 CURVE SMOOTH",
"267 260 OFFCURVE",
"253 254 OFFCURVE",
"240 242 CURVE SMOOTH",
"228 231 OFFCURVE",
"222 217 OFFCURVE",
"222 200 CURVE SMOOTH",
"222 177 OFFCURVE",
"234 166 OFFCURVE",
"259 166 CURVE SMOOTH",
"264 166 LINE SMOOTH",
"266 166 OFFCURVE",
"267 167 OFFCURVE",
"267 169 CURVE SMOOTH",
"267 172 OFFCURVE",
"266 173 OFFCURVE",
"264 173 CURVE SMOOTH",
"240 171 OFFCURVE",
"228 180 OFFCURVE",
"228 201 CURVE SMOOTH",
"228 214 OFFCURVE",
"234 226 OFFCURVE",
"245 237 CURVE SMOOTH",
"256 248 OFFCURVE",
"269 253 OFFCURVE",
"285 253 CURVE SMOOTH",
"305 253 OFFCURVE",
"320 244 OFFCURVE",
"331 229 CURVE SMOOTH",
"340 217 OFFCURVE",
"345 201 OFFCURVE",
"345 181 CURVE SMOOTH",
"345 153 OFFCURVE",
"336 129 OFFCURVE",
"318 108 CURVE SMOOTH",
"297 85 OFFCURVE",
"269 73 OFFCURVE",
"235 73 CURVE SMOOTH",
"222 73 OFFCURVE",
"210 74 OFFCURVE",
"199 77 CURVE SMOOTH",
"166 84 OFFCURVE",
"139 99 OFFCURVE",
"119 122 CURVE SMOOTH",
"98 147 OFFCURVE",
"87 178 OFFCURVE",
"87 213 CURVE",
"88 220 LINE",
"88 226 LINE SMOOTH",
"91 267 OFFCURVE",
"100 298 OFFCURVE",
"123 323 CURVE",
"142 306 OFFCURVE",
"162 298 OFFCURVE",
"193 295 CURVE SMOOTH",
"200 295 LINE SMOOTH",
"228 295 OFFCURVE",
"243 305 OFFCURVE",
"243 324 CURVE SMOOTH",
"243 332 OFFCURVE",
"238 338 OFFCURVE",
"229 344 CURVE SMOOTH",
"218 350 OFFCURVE",
"204 353 OFFCURVE",
"187 353 CURVE SMOOTH",
"168 353 OFFCURVE",
"151 350 OFFCURVE",
"130 341 CURVE",
"127 350 OFFCURVE",
"125 359 OFFCURVE",
"125 368 CURVE SMOOTH",
"125 397 OFFCURVE",
"136 423 OFFCURVE",
"158 447 CURVE SMOOTH",
"182 474 OFFCURVE",
"211 487 OFFCURVE",
"246 487 CURVE SMOOTH",
"271 487 OFFCURVE",
"292 483 OFFCURVE",
"309 474 CURVE SMOOTH",
"327 463 OFFCURVE",
"336 449 OFFCURVE",
"336 431 CURVE SMOOTH",
"336 419 OFFCURVE",
"331 409 OFFCURVE",
"324 402 CURVE SMOOTH",
"317 395 OFFCURVE",
"311 392 OFFCURVE",
"304 392 CURVE SMOOTH",
"291 392 OFFCURVE",
"284 399 OFFCURVE",
"284 414 CURVE SMOOTH",
"284 421 LINE SMOOTH",
"284 427 OFFCURVE",
"283 430 OFFCURVE",
"282 430 CURVE SMOOTH",
"279 430 OFFCURVE",
"278 426 OFFCURVE",
"277 419 CURVE SMOOTH",
"277 408 OFFCURVE",
"280 400 OFFCURVE",
"287 393 CURVE SMOOTH",
"294 387 OFFCURVE",
"302 384 OFFCURVE",
"313 384 CURVE SMOOTH",
"322 384 OFFCURVE",
"331 388 OFFCURVE",
"340 395 CURVE SMOOTH",
"351 406 OFFCURVE",
"354 419 OFFCURVE",
"354 434 CURVE SMOOTH",
"354 469 OFFCURVE",
"335 490 OFFCURVE",
"290 502 CURVE",
"313 547 LINE SMOOTH",
"318 558 OFFCURVE",
"323 566 OFFCURVE",
"326 571 CURVE SMOOTH",
"328 576 LINE",
"328 581 OFFCURVE",
"325 583 OFFCURVE",
"320 583 CURVE SMOOTH",
"317 583 OFFCURVE",
"315 582 OFFCURVE",
"314 580 CURVE SMOOTH",
"305 564 OFFCURVE",
"297 550 OFFCURVE",
"291 538 CURVE SMOOTH",
"275 505 LINE",
"266 506 OFFCURVE",
"259 507 OFFCURVE",
"251 507 CURVE SMOOTH",
"247 507 OFFCURVE",
"242 506 OFFCURVE",
"238 506 CURVE SMOOTH",
"197 505 OFFCURVE",
"164 491 OFFCURVE",
"138 464 CURVE SMOOTH",
"113 439 OFFCURVE",
"101 411 OFFCURVE",
"101 379 CURVE SMOOTH",
"101 363 OFFCURVE",
"106 348 OFFCURVE",
"115 333 CURVE",
"75 308 OFFCURVE",
"55 273 OFFCURVE",
"50 226 CURVE SMOOTH",
"49 210 LINE SMOOTH",
"49 173 OFFCURVE",
"61 140 OFFCURVE",
"86 113 CURVE SMOOTH",
"109 89 OFFCURVE",
"135 71 OFFCURVE",
"174 59 CURVE",
"147 -8 OFFCURVE",
"130 -48 OFFCURVE",
"119 -68 CURVE",
"118 -69 OFFCURVE",
"118 -70 OFFCURVE",
"118 -71 CURVE SMOOTH",
"118 -76 OFFCURVE",
"121 -79 OFFCURVE",
"126 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 302 OFFCURVE",
"195 302 OFFCURVE",
"193 303 CURVE",
"166 304 OFFCURVE",
"147 315 OFFCURVE",
"134 334 CURVE",
"148 343 OFFCURVE",
"162 348 OFFCURVE",
"177 348 CURVE SMOOTH",
"196 348 OFFCURVE",
"211 345 OFFCURVE",
"221 338 CURVE",
"231 333 OFFCURVE",
"236 326 OFFCURVE",
"236 319 CURVE SMOOTH",
"236 306 OFFCURVE",
"222 302 OFFCURVE",
"202 302 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01282 3 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 4 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012138 91 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012140 121 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01263 68 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 82 165 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 63 234 63 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 103 165 103 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 113 170 113 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 113 25 113 41 113 57 113 73 113 89 113 105 113 121 113 137 113 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012128 24 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 138 234 138 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 153 138 169 138 185 138 201 138 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012218 140 234 140 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 140 25 140 41 140 57 140 73 140 89 140 105 140 121 140 137 140 153 140 169 140 185 140 201 140 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 2 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012109 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012123 127 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012148 93 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012134 117 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012148 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 389;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"250 -53 OFFCURVE",
"254.667 -47 OFFCURVE",
"258 -35 CURVE SMOOTH",
"259.333 -29.667 OFFCURVE",
"260.167 -25.167 OFFCURVE",
"260.5 -21.5 CURVE SMOOTH",
"262 -12 LINE SMOOTH",
"276.667 96 OFFCURVE",
"286 179.667 OFFCURVE",
"286 237 CURVE SMOOTH",
"286 297.667 OFFCURVE",
"278.333 341.333 OFFCURVE",
"263 368 CURVE",
"241.667 384 OFFCURVE",
"214.667 392 OFFCURVE",
"182 392 CURVE SMOOTH",
"146.667 392 OFFCURVE",
"113.667 383.333 OFFCURVE",
"83 366 CURVE SMOOTH",
"46.333 345.333 OFFCURVE",
"28 318.667 OFFCURVE",
"28 286 CURVE SMOOTH",
"28 265.333 OFFCURVE",
"36.333 243.667 OFFCURVE",
"53 221 CURVE SMOOTH",
"65 205 OFFCURVE",
"79.333 190.667 OFFCURVE",
"96 178 CURVE SMOOTH",
"116.667 161.333 OFFCURVE",
"135 153 OFFCURVE",
"151 153 CURVE SMOOTH",
"161.667 153 OFFCURVE",
"167 155 OFFCURVE",
"167 159 CURVE SMOOTH",
"167 161.667 OFFCURVE",
"162 166 OFFCURVE",
"152 172 CURVE SMOOTH",
"124 189.333 OFFCURVE",
"102.667 204.333 OFFCURVE",
"88 217 CURVE SMOOTH",
"62.667 238.333 OFFCURVE",
"50 259.333 OFFCURVE",
"50 280 CURVE SMOOTH",
"50 308 OFFCURVE",
"70 330 OFFCURVE",
"110 346 CURVE SMOOTH",
"142.667 359.333 OFFCURVE",
"174.667 366 OFFCURVE",
"206 366 CURVE SMOOTH",
"220.667 366 OFFCURVE",
"230.333 363.667 OFFCURVE",
"241 361 CURVE",
"256.333 336.333 OFFCURVE",
"264 296 OFFCURVE",
"264 240 CURVE SMOOTH",
"264 208 OFFCURVE",
"259.333 161.333 OFFCURVE",
"250 100 CURVE SMOOTH",
"239.333 37.333 OFFCURVE",
"236 -9.333 OFFCURVE",
"236 -40 CURVE SMOOTH",
"236 -48.667 OFFCURVE",
"238.667 -53 OFFCURVE",
"244 -53 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167.667 -136 OFFCURVE",
"170 -135.333 OFFCURVE",
"172 -134 CURVE SMOOTH",
"180 -129 LINE SMOOTH",
"186 -125 OFFCURVE",
"189.333 -120.667 OFFCURVE",
"190 -116 CURVE",
"196.667 -95.333 OFFCURVE",
"201.333 -77 OFFCURVE",
"204 -61 CURVE SMOOTH",
"224 43 OFFCURVE",
"234 165.333 OFFCURVE",
"234 306 CURVE SMOOTH",
"234 319.333 OFFCURVE",
"233.667 327 OFFCURVE",
"233 329 CURVE SMOOTH",
"231 334.333 OFFCURVE",
"224.667 337 OFFCURVE",
"214 337 CURVE SMOOTH",
"208 337 OFFCURVE",
"205 335 OFFCURVE",
"205 331 CURVE SMOOTH",
"205 322 LINE",
"205.667 319.333 OFFCURVE",
"206 316.333 OFFCURVE",
"206 313 CURVE SMOOTH",
"206 267 LINE SMOOTH",
"206 200.333 OFFCURVE",
"204.667 136.667 OFFCURVE",
"198 70 CURVE SMOOTH",
"190 -18 OFFCURVE",
"179 -80.333 OFFCURVE",
"163 -119 CURVE SMOOTH",
"161 -124.333 OFFCURVE",
"160 -127.667 OFFCURVE",
"160 -129 CURVE SMOOTH",
"160 -133.667 OFFCURVE",
"161.667 -136 OFFCURVE",
"165 -136 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"250 -53 OFFCURVE",
"255 -47 OFFCURVE",
"258 -35 CURVE SMOOTH",
"261 -22 LINE",
"262 -12 LINE SMOOTH",
"277 96 OFFCURVE",
"286 180 OFFCURVE",
"286 237 CURVE SMOOTH",
"286 298 OFFCURVE",
"278 341 OFFCURVE",
"263 368 CURVE",
"242 384 OFFCURVE",
"215 392 OFFCURVE",
"182 392 CURVE SMOOTH",
"147 392 OFFCURVE",
"114 383 OFFCURVE",
"83 366 CURVE SMOOTH",
"46 345 OFFCURVE",
"28 319 OFFCURVE",
"28 286 CURVE SMOOTH",
"28 265 OFFCURVE",
"36 244 OFFCURVE",
"53 221 CURVE SMOOTH",
"65 205 OFFCURVE",
"79 191 OFFCURVE",
"96 178 CURVE SMOOTH",
"117 161 OFFCURVE",
"135 153 OFFCURVE",
"151 153 CURVE SMOOTH",
"162 153 OFFCURVE",
"167 155 OFFCURVE",
"167 159 CURVE SMOOTH",
"167 162 OFFCURVE",
"162 166 OFFCURVE",
"152 172 CURVE SMOOTH",
"124 189 OFFCURVE",
"103 204 OFFCURVE",
"88 217 CURVE SMOOTH",
"63 238 OFFCURVE",
"50 259 OFFCURVE",
"50 280 CURVE SMOOTH",
"50 308 OFFCURVE",
"70 330 OFFCURVE",
"110 346 CURVE SMOOTH",
"143 359 OFFCURVE",
"175 366 OFFCURVE",
"206 366 CURVE SMOOTH",
"221 366 OFFCURVE",
"230 364 OFFCURVE",
"241 361 CURVE",
"256 336 OFFCURVE",
"264 296 OFFCURVE",
"264 240 CURVE SMOOTH",
"264 208 OFFCURVE",
"259 161 OFFCURVE",
"250 100 CURVE SMOOTH",
"239 37 OFFCURVE",
"236 -9 OFFCURVE",
"236 -40 CURVE SMOOTH",
"236 -49 OFFCURVE",
"239 -53 OFFCURVE",
"244 -53 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"168 -136 OFFCURVE",
"170 -135 OFFCURVE",
"172 -134 CURVE SMOOTH",
"180 -129 LINE SMOOTH",
"186 -125 OFFCURVE",
"189 -121 OFFCURVE",
"190 -116 CURVE SMOOTH",
"197 -95 OFFCURVE",
"201 -77 OFFCURVE",
"204 -61 CURVE SMOOTH",
"224 43 OFFCURVE",
"234 165 OFFCURVE",
"234 306 CURVE SMOOTH",
"234 319 OFFCURVE",
"234 327 OFFCURVE",
"233 329 CURVE SMOOTH",
"231 334 OFFCURVE",
"225 337 OFFCURVE",
"214 337 CURVE SMOOTH",
"208 337 OFFCURVE",
"205 335 OFFCURVE",
"205 331 CURVE SMOOTH",
"205 322 LINE",
"206 319 OFFCURVE",
"206 316 OFFCURVE",
"206 313 CURVE SMOOTH",
"206 267 LINE SMOOTH",
"206 200 OFFCURVE",
"205 137 OFFCURVE",
"198 70 CURVE SMOOTH",
"190 -18 OFFCURVE",
"179 -80 OFFCURVE",
"163 -119 CURVE SMOOTH",
"161 -124 OFFCURVE",
"160 -128 OFFCURVE",
"160 -129 CURVE SMOOTH",
"160 -134 OFFCURVE",
"162 -136 OFFCURVE",
"165 -136 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01267 3 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01225 3 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 3 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012154 16 170 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 25 165 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01243 2 21 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 306;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"202 -215.333 OFFCURVE",
"272.667 -152 OFFCURVE",
"278 -52 CURVE",
"347 -25 OFFCURVE",
"387 35 OFFCURVE",
"387 115 CURVE SMOOTH",
"387 176 OFFCURVE",
"360 219 OFFCURVE",
"323 252.5 CURVE SMOOTH",
"305.667 268.167 OFFCURVE",
"287.167 282.333 OFFCURVE",
"267.5 295 CURVE SMOOTH",
"213.503 329.777 OFFCURVE",
"152.902 368.652 OFFCURVE",
"151 420 CURVE SMOOTH",
"149.667 445.333 OFFCURVE",
"156.667 465 OFFCURVE",
"172 479 CURVE SMOOTH",
"186 494 OFFCURVE",
"206 501 OFFCURVE",
"231 501 CURVE SMOOTH",
"249 501 OFFCURVE",
"265 496 OFFCURVE",
"279 484 CURVE SMOOTH",
"298 469 OFFCURVE",
"307 448 OFFCURVE",
"307 421 CURVE SMOOTH",
"307 406 OFFCURVE",
"301 398 OFFCURVE",
"288 398 CURVE SMOOTH",
"283 397 OFFCURVE",
"281 395 OFFCURVE",
"281 393 CURVE SMOOTH",
"281 389 OFFCURVE",
"285 385 OFFCURVE",
"289 385 CURVE SMOOTH",
"314 385 OFFCURVE",
"325 411 OFFCURVE",
"325 433 CURVE SMOOTH",
"325 461 OFFCURVE",
"311 481 OFFCURVE",
"292 498 CURVE SMOOTH",
"275 512 OFFCURVE",
"256 518 OFFCURVE",
"233 518 CURVE SMOOTH",
"202 518 OFFCURVE",
"176 509 OFFCURVE",
"156 491 CURVE SMOOTH",
"135.333 472.333 OFFCURVE",
"125 447.667 OFFCURVE",
"125 417 CURVE SMOOTH",
"125 398.333 OFFCURVE",
"129.667 380.333 OFFCURVE",
"139 363 CURVE",
"134 364 OFFCURVE",
"130 364 OFFCURVE",
"125 364 CURVE SMOOTH",
"93 364 OFFCURVE",
"61 350 OFFCURVE",
"47 337 CURVE SMOOTH",
"27 318 OFFCURVE",
"17 294 OFFCURVE",
"17 266 CURVE SMOOTH",
"17 226 OFFCURVE",
"34 192 OFFCURVE",
"70 164 CURVE SMOOTH",
"149.121 103.138 OFFCURVE",
"225.888 69.134 OFFCURVE",
"231 -28 CURVE SMOOTH",
"237 -125 OFFCURVE",
"193 -208 OFFCURVE",
"89 -208 CURVE SMOOTH",
"10 -208 OFFCURVE",
"-48 -155 OFFCURVE",
"-53 -73 CURVE SMOOTH",
"-55.746 -15.329 OFFCURVE",
"-15.48 47.414 OFFCURVE",
"44 50 CURVE SMOOTH",
"74 52 OFFCURVE",
"98.333 45 OFFCURVE",
"117 29 CURVE SMOOTH",
"137 12 OFFCURVE",
"146 -13 OFFCURVE",
"146 -44 CURVE SMOOTH",
"146 -64 OFFCURVE",
"141 -81 OFFCURVE",
"130 -95 CURVE SMOOTH",
"118 -112.333 OFFCURVE",
"102.667 -121.333 OFFCURVE",
"84 -122 CURVE SMOOTH",
"77.333 -122 OFFCURVE",
"68.333 -118.333 OFFCURVE",
"57 -111 CURVE SMOOTH",
"51 -107 OFFCURVE",
"48 -109 OFFCURVE",
"48 -113 CURVE SMOOTH",
"48 -116 OFFCURVE",
"50 -120 OFFCURVE",
"53 -122 CURVE",
"67.667 -130.667 OFFCURVE",
"80.333 -135 OFFCURVE",
"91 -135 CURVE SMOOTH",
"116.333 -133 OFFCURVE",
"136.333 -122.333 OFFCURVE",
"151 -103 CURVE SMOOTH",
"164 -86 OFFCURVE",
"170 -66 OFFCURVE",
"170 -44 CURVE SMOOTH",
"170 -11 OFFCURVE",
"158 16 OFFCURVE",
"137 35 CURVE SMOOTH",
"113.667 56.333 OFFCURVE",
"82.333 65.667 OFFCURVE",
"43 63 CURVE SMOOTH",
"-22.048 60.398 OFFCURVE",
"-79.716 -9.821 OFFCURVE",
"-77 -75 CURVE SMOOTH",
"-71.764 -169.254 OFFCURVE",
"4.136 -227.521 OFFCURVE",
"98 -222 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 -27 LINE",
"275.333 26.333 OFFCURVE",
"251.333 64.167 OFFCURVE",
"218 95.5 CURVE SMOOTH",
"190.173 121.657 OFFCURVE",
"134.116 156.468 OFFCURVE",
"103 179 CURVE SMOOTH",
"62 209 OFFCURVE",
"42 240 OFFCURVE",
"42 272 CURVE SMOOTH",
"42 293 OFFCURVE",
"49 311 OFFCURVE",
"63 325 CURVE SMOOTH",
"76.333 338.333 OFFCURVE",
"115 352.333 OFFCURVE",
"147 351 CURVE",
"155.667 338.333 OFFCURVE",
"166 327.333 OFFCURVE",
"178 318 CURVE SMOOTH",
"260 255 OFFCURVE",
"340 222 OFFCURVE",
"340 113 CURVE SMOOTH",
"340 53 OFFCURVE",
"323 -1 OFFCURVE",
"279 -31 CURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"202 -215 OFFCURVE",
"273 -152 OFFCURVE",
"278 -52 CURVE",
"347 -25 OFFCURVE",
"387 35 OFFCURVE",
"387 115 CURVE SMOOTH",
"387 176 OFFCURVE",
"360 219 OFFCURVE",
"323 253 CURVE SMOOTH",
"306 268 OFFCURVE",
"287 282 OFFCURVE",
"268 295 CURVE SMOOTH",
"212 331 OFFCURVE",
"151 372 OFFCURVE",
"151 425 CURVE SMOOTH",
"151 447 OFFCURVE",
"158 466 OFFCURVE",
"172 479 CURVE SMOOTH",
"186 494 OFFCURVE",
"206 501 OFFCURVE",
"231 501 CURVE SMOOTH",
"249 501 OFFCURVE",
"265 496 OFFCURVE",
"279 484 CURVE SMOOTH",
"298 469 OFFCURVE",
"307 448 OFFCURVE",
"307 421 CURVE SMOOTH",
"307 406 OFFCURVE",
"301 398 OFFCURVE",
"288 398 CURVE",
"283 397 OFFCURVE",
"281 395 OFFCURVE",
"281 393 CURVE SMOOTH",
"281 389 OFFCURVE",
"285 385 OFFCURVE",
"289 385 CURVE SMOOTH",
"314 385 OFFCURVE",
"325 411 OFFCURVE",
"325 433 CURVE SMOOTH",
"325 461 OFFCURVE",
"311 481 OFFCURVE",
"292 498 CURVE SMOOTH",
"275 512 OFFCURVE",
"256 518 OFFCURVE",
"233 518 CURVE SMOOTH",
"202 518 OFFCURVE",
"176 509 OFFCURVE",
"156 491 CURVE SMOOTH",
"135 472 OFFCURVE",
"125 448 OFFCURVE",
"125 417 CURVE SMOOTH",
"125 398 OFFCURVE",
"130 380 OFFCURVE",
"139 363 CURVE",
"134 364 OFFCURVE",
"130 364 OFFCURVE",
"125 364 CURVE SMOOTH",
"93 364 OFFCURVE",
"61 350 OFFCURVE",
"47 337 CURVE SMOOTH",
"27 318 OFFCURVE",
"17 294 OFFCURVE",
"17 266 CURVE SMOOTH",
"17 226 OFFCURVE",
"34 192 OFFCURVE",
"70 164 CURVE SMOOTH",
"149 103 OFFCURVE",
"226 69 OFFCURVE",
"231 -28 CURVE SMOOTH",
"237 -125 OFFCURVE",
"193 -208 OFFCURVE",
"89 -208 CURVE SMOOTH",
"10 -208 OFFCURVE",
"-48 -155 OFFCURVE",
"-53 -73 CURVE SMOOTH",
"-56 -15 OFFCURVE",
"-15 47 OFFCURVE",
"44 50 CURVE SMOOTH",
"74 52 OFFCURVE",
"98 45 OFFCURVE",
"117 29 CURVE SMOOTH",
"137 12 OFFCURVE",
"146 -13 OFFCURVE",
"146 -44 CURVE SMOOTH",
"146 -64 OFFCURVE",
"141 -81 OFFCURVE",
"130 -95 CURVE SMOOTH",
"118 -112 OFFCURVE",
"103 -121 OFFCURVE",
"84 -122 CURVE SMOOTH",
"77 -122 OFFCURVE",
"68 -118 OFFCURVE",
"57 -111 CURVE SMOOTH",
"51 -107 OFFCURVE",
"48 -109 OFFCURVE",
"48 -113 CURVE SMOOTH",
"48 -116 OFFCURVE",
"50 -120 OFFCURVE",
"53 -122 CURVE SMOOTH",
"68 -131 OFFCURVE",
"80 -135 OFFCURVE",
"91 -135 CURVE SMOOTH",
"116 -133 OFFCURVE",
"136 -122 OFFCURVE",
"151 -103 CURVE SMOOTH",
"164 -86 OFFCURVE",
"170 -66 OFFCURVE",
"170 -44 CURVE SMOOTH",
"170 -11 OFFCURVE",
"158 16 OFFCURVE",
"137 35 CURVE SMOOTH",
"114 56 OFFCURVE",
"82 66 OFFCURVE",
"43 63 CURVE SMOOTH",
"-22 60 OFFCURVE",
"-80 -10 OFFCURVE",
"-77 -75 CURVE SMOOTH",
"-72 -169 OFFCURVE",
"4 -228 OFFCURVE",
"98 -222 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 -27 LINE",
"275 26 OFFCURVE",
"251 64 OFFCURVE",
"218 96 CURVE SMOOTH",
"190 122 OFFCURVE",
"134 156 OFFCURVE",
"103 179 CURVE SMOOTH",
"62 209 OFFCURVE",
"42 240 OFFCURVE",
"42 272 CURVE SMOOTH",
"42 293 OFFCURVE",
"49 311 OFFCURVE",
"63 325 CURVE SMOOTH",
"76 338 OFFCURVE",
"115 352 OFFCURVE",
"147 351 CURVE",
"156 338 OFFCURVE",
"166 327 OFFCURVE",
"178 318 CURVE SMOOTH",
"260 255 OFFCURVE",
"340 222 OFFCURVE",
"340 113 CURVE SMOOTH",
"340 53 OFFCURVE",
"323 -1 OFFCURVE",
"279 -31 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01290 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 3 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 3 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01282 3 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 4 97 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 13 165 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 90 22 90 38 90 54 90 70 90 86 90 102 90 118 90 134 90 150 90 166 90 182 90 198 90 214 90 230 90 246 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 90 22 90 38 90 54 90 70 90 86 90 102 90 118 90 134 90 150 90 166 90 182 90 198 90 214 90 230 90 246 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 90 22 90 38 90 54 90 70 90 86 90 102 90 118 90 134 90 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 90 165 90 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 41 165 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 63 90 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 82 170 82 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 82 25 82 41 82 57 82 73 82 89 82 105 82 121 82 137 82 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012100 8 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012154 103 170 103 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 103 25 103 41 103 57 103 73 103 89 103 105 103 121 103 137 103 153 103 169 103 185 103 201 103 217 103 233 103 249 103 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 103 25 103 41 103 57 103 73 103 89 103 105 103 121 103 137 103 153 103 169 103 185 103 201 103 217 103 233 103 249 103 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 103 25 103 41 103 57 103 73 103 89 103 105 103 121 103 137 103 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01297 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01244 1 3 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01267 1 86 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 1 36 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 403;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"423 29 OFFCURVE",
"520.333 72.167 OFFCURVE",
"591 139.5 CURVE SMOOTH",
"661.667 206.833 OFFCURVE",
"708 299.333 OFFCURVE",
"708 398 CURVE SMOOTH",
"708 500.667 OFFCURVE",
"674.833 584.5 OFFCURVE",
"611.5 642.5 CURVE SMOOTH",
"548.167 700.5 OFFCURVE",
"456 733 OFFCURVE",
"340 733 CURVE SMOOTH",
"267 733 OFFCURVE",
"198 706 OFFCURVE",
"198 646 CURVE SMOOTH",
"198 632 OFFCURVE",
"203 615 OFFCURVE",
"212 596 CURVE",
"190 588 LINE SMOOTH",
"90.347 546.041 OFFCURVE",
"42 418.693 OFFCURVE",
"42 306 CURVE SMOOTH",
"43.333 235.333 OFFCURVE",
"64.667 167 OFFCURVE",
"110 115 CURVE SMOOTH",
"155.333 63 OFFCURVE",
"225.667 29 OFFCURVE",
"323 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"418.333 189 OFFCURVE",
"466.333 213.333 OFFCURVE",
"499 262 CURVE SMOOTH",
"504.333 271.333 OFFCURVE",
"507 277 OFFCURVE",
"507 279 CURVE SMOOTH",
"507 280.333 OFFCURVE",
"506.333 281.667 OFFCURVE",
"505 283 CURVE",
"501 283 OFFCURVE",
"496 279 OFFCURVE",
"490 271 CURVE SMOOTH",
"461.333 230.333 OFFCURVE",
"421 210 OFFCURVE",
"369 210 CURVE SMOOTH",
"289.667 210 OFFCURVE",
"250 250.333 OFFCURVE",
"250 331 CURVE SMOOTH",
"250 374.333 OFFCURVE",
"263 415.667 OFFCURVE",
"289 455 CURVE SMOOTH",
"315 495 OFFCURVE",
"348.667 515 OFFCURVE",
"390 515 CURVE SMOOTH",
"436 515 OFFCURVE",
"459 494 OFFCURVE",
"459 452 CURVE SMOOTH",
"459 437.333 OFFCURVE",
"451.333 422.333 OFFCURVE",
"436 407 CURVE SMOOTH",
"420 392.333 OFFCURVE",
"404.667 385 OFFCURVE",
"390 385 CURVE SMOOTH",
"374.667 385 OFFCURVE",
"367 391.333 OFFCURVE",
"367 404 CURVE SMOOTH",
"367 414.667 OFFCURVE",
"372 425 OFFCURVE",
"384 433 CURVE SMOOTH",
"401 446 LINE",
"401 448.667 OFFCURVE",
"399.333 450 OFFCURVE",
"396 450 CURVE SMOOTH",
"384.667 450 OFFCURVE",
"373.667 442.667 OFFCURVE",
"363 428 CURVE SMOOTH",
"351.667 413.333 OFFCURVE",
"346 400.667 OFFCURVE",
"346 390 CURVE SMOOTH",
"346 367.333 OFFCURVE",
"358 356 OFFCURVE",
"382 356 CURVE SMOOTH",
"444.667 356 OFFCURVE",
"476 384.667 OFFCURVE",
"476 442 CURVE SMOOTH",
"476 496 OFFCURVE",
"447.333 523 OFFCURVE",
"390 523 CURVE SMOOTH",
"340.667 523 OFFCURVE",
"298.667 502.667 OFFCURVE",
"264 462 CURVE SMOOTH",
"228.667 420.667 OFFCURVE",
"211 375.667 OFFCURVE",
"211 327 CURVE SMOOTH",
"211 287.667 OFFCURVE",
"225.333 255 OFFCURVE",
"254 229 CURVE SMOOTH",
"282.667 202.333 OFFCURVE",
"316.333 189 OFFCURVE",
"355 189 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"245.333 56 OFFCURVE",
"177.667 89.333 OFFCURVE",
"135 140 CURVE SMOOTH",
"94 189 OFFCURVE",
"76 253 OFFCURVE",
"76 320 CURVE SMOOTH",
"76 445 OFFCURVE",
"122 538 OFFCURVE",
"217 583 CURVE",
"221 577 OFFCURVE",
"225 575 OFFCURVE",
"227 575 CURVE SMOOTH",
"230 575 OFFCURVE",
"232 578 OFFCURVE",
"232 582 CURVE SMOOTH",
"232 584 OFFCURVE",
"232 586 OFFCURVE",
"231 588 CURVE",
"249.667 596 OFFCURVE",
"274.333 603.333 OFFCURVE",
"297 606 CURVE SMOOTH",
"317 609 OFFCURVE",
"338 610 OFFCURVE",
"357 610 CURVE SMOOTH",
"403 610 OFFCURVE",
"445 602 OFFCURVE",
"469 588 CURVE",
"474 583 OFFCURVE",
"479 587 OFFCURVE",
"479 593 CURVE SMOOTH",
"479 595 OFFCURVE",
"478 597 OFFCURVE",
"476 599 CURVE SMOOTH",
"453 615 OFFCURVE",
"409 625 OFFCURVE",
"359 625 CURVE SMOOTH",
"315 625 OFFCURVE",
"266 617 OFFCURVE",
"224 601 CURVE",
"221 609 OFFCURVE",
"220 618 OFFCURVE",
"220 626 CURVE SMOOTH",
"220 677 OFFCURVE",
"275 719 OFFCURVE",
"340 719 CURVE SMOOTH",
"433.333 719 OFFCURVE",
"515.5 684.5 OFFCURVE",
"573.5 626.5 CURVE SMOOTH",
"631.5 568.5 OFFCURVE",
"666 487 OFFCURVE",
"666 395 CURVE SMOOTH",
"666 303 OFFCURVE",
"633.333 217.333 OFFCURVE",
"576 156 CURVE SMOOTH",
"518.667 94.667 OFFCURVE",
"438.667 56 OFFCURVE",
"344 56 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"423 29 OFFCURVE",
"520 72 OFFCURVE",
"591 140 CURVE SMOOTH",
"662 207 OFFCURVE",
"708 299 OFFCURVE",
"708 398 CURVE SMOOTH",
"708 501 OFFCURVE",
"675 585 OFFCURVE",
"612 643 CURVE SMOOTH",
"548 701 OFFCURVE",
"456 733 OFFCURVE",
"340 733 CURVE SMOOTH",
"267 733 OFFCURVE",
"198 706 OFFCURVE",
"198 646 CURVE SMOOTH",
"198 632 OFFCURVE",
"203 615 OFFCURVE",
"212 596 CURVE",
"190 588 LINE SMOOTH",
"90 546 OFFCURVE",
"42 419 OFFCURVE",
"42 306 CURVE SMOOTH",
"43 235 OFFCURVE",
"65 167 OFFCURVE",
"110 115 CURVE SMOOTH",
"155 63 OFFCURVE",
"226 29 OFFCURVE",
"323 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"418 189 OFFCURVE",
"466 213 OFFCURVE",
"499 262 CURVE SMOOTH",
"504 271 OFFCURVE",
"507 277 OFFCURVE",
"507 279 CURVE SMOOTH",
"507 280 OFFCURVE",
"506 282 OFFCURVE",
"505 283 CURVE",
"501 283 OFFCURVE",
"496 279 OFFCURVE",
"490 271 CURVE SMOOTH",
"461 230 OFFCURVE",
"421 210 OFFCURVE",
"369 210 CURVE SMOOTH",
"290 210 OFFCURVE",
"250 250 OFFCURVE",
"250 331 CURVE SMOOTH",
"250 374 OFFCURVE",
"263 416 OFFCURVE",
"289 455 CURVE SMOOTH",
"315 495 OFFCURVE",
"349 515 OFFCURVE",
"390 515 CURVE SMOOTH",
"436 515 OFFCURVE",
"459 494 OFFCURVE",
"459 452 CURVE SMOOTH",
"459 437 OFFCURVE",
"451 422 OFFCURVE",
"436 407 CURVE SMOOTH",
"420 392 OFFCURVE",
"405 385 OFFCURVE",
"390 385 CURVE SMOOTH",
"375 385 OFFCURVE",
"367 391 OFFCURVE",
"367 404 CURVE SMOOTH",
"367 415 OFFCURVE",
"372 425 OFFCURVE",
"384 433 CURVE SMOOTH",
"401 446 LINE",
"401 449 OFFCURVE",
"399 450 OFFCURVE",
"396 450 CURVE SMOOTH",
"385 450 OFFCURVE",
"374 443 OFFCURVE",
"363 428 CURVE SMOOTH",
"352 413 OFFCURVE",
"346 401 OFFCURVE",
"346 390 CURVE SMOOTH",
"346 367 OFFCURVE",
"358 356 OFFCURVE",
"382 356 CURVE SMOOTH",
"445 356 OFFCURVE",
"476 385 OFFCURVE",
"476 442 CURVE SMOOTH",
"476 496 OFFCURVE",
"447 523 OFFCURVE",
"390 523 CURVE SMOOTH",
"341 523 OFFCURVE",
"299 503 OFFCURVE",
"264 462 CURVE SMOOTH",
"229 421 OFFCURVE",
"211 376 OFFCURVE",
"211 327 CURVE SMOOTH",
"211 288 OFFCURVE",
"225 255 OFFCURVE",
"254 229 CURVE SMOOTH",
"283 202 OFFCURVE",
"316 189 OFFCURVE",
"355 189 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"245 56 OFFCURVE",
"178 89 OFFCURVE",
"135 140 CURVE SMOOTH",
"94 189 OFFCURVE",
"76 253 OFFCURVE",
"76 320 CURVE SMOOTH",
"76 445 OFFCURVE",
"122 538 OFFCURVE",
"217 583 CURVE",
"221 577 OFFCURVE",
"225 575 OFFCURVE",
"227 575 CURVE SMOOTH",
"230 575 OFFCURVE",
"232 578 OFFCURVE",
"232 582 CURVE SMOOTH",
"232 584 OFFCURVE",
"232 586 OFFCURVE",
"231 588 CURVE",
"250 596 OFFCURVE",
"274 603 OFFCURVE",
"297 606 CURVE SMOOTH",
"317 609 OFFCURVE",
"338 610 OFFCURVE",
"357 610 CURVE SMOOTH",
"403 610 OFFCURVE",
"445 602 OFFCURVE",
"469 588 CURVE",
"474 583 OFFCURVE",
"479 587 OFFCURVE",
"479 593 CURVE SMOOTH",
"479 595 OFFCURVE",
"478 597 OFFCURVE",
"476 599 CURVE",
"453 615 OFFCURVE",
"409 625 OFFCURVE",
"359 625 CURVE SMOOTH",
"315 625 OFFCURVE",
"266 617 OFFCURVE",
"224 601 CURVE",
"221 609 OFFCURVE",
"220 618 OFFCURVE",
"220 626 CURVE SMOOTH",
"220 677 OFFCURVE",
"275 719 OFFCURVE",
"340 719 CURVE SMOOTH",
"433 719 OFFCURVE",
"516 685 OFFCURVE",
"574 627 CURVE SMOOTH",
"632 569 OFFCURVE",
"666 487 OFFCURVE",
"666 395 CURVE SMOOTH",
"666 303 OFFCURVE",
"633 217 OFFCURVE",
"576 156 CURVE SMOOTH",
"519 95 OFFCURVE",
"439 56 OFFCURVE",
"344 56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01288 4 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01234 3 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 3 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 4 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01224 68 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 28 165 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 34 170 34 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 88 165 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 98 170 98 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01263 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01253 1 103 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 2 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01293 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 93 23 93 39 93 55 93 71 93 87 93 103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 93 23 93 39 93 55 93 71 93 87 93 103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 93 23 93 39 93 55 93 71 93 87 93 103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 748;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"423 29 OFFCURVE",
"520.333 72.167 OFFCURVE",
"591 139.5 CURVE SMOOTH",
"661.667 206.833 OFFCURVE",
"708 299.333 OFFCURVE",
"708 398 CURVE SMOOTH",
"708 500.667 OFFCURVE",
"674.833 584.5 OFFCURVE",
"611.5 642.5 CURVE SMOOTH",
"548.167 700.5 OFFCURVE",
"456 733 OFFCURVE",
"340 733 CURVE SMOOTH",
"267 733 OFFCURVE",
"198 706 OFFCURVE",
"198 646 CURVE SMOOTH",
"198 632 OFFCURVE",
"203 615 OFFCURVE",
"212 596 CURVE",
"190 588 LINE SMOOTH",
"90.347 546.041 OFFCURVE",
"42 418.693 OFFCURVE",
"42 306 CURVE SMOOTH",
"43.333 235.333 OFFCURVE",
"64.667 167 OFFCURVE",
"110 115 CURVE SMOOTH",
"155.333 63 OFFCURVE",
"225.667 29 OFFCURVE",
"323 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"244 167 OFFCURVE",
"254 161 OFFCURVE",
"265 161 CURVE SMOOTH",
"277 161 OFFCURVE",
"290 170 OFFCURVE",
"286 186 CURVE SMOOTH",
"278 223 OFFCURVE",
"274 310 OFFCURVE",
"274 388 CURVE SMOOTH",
"274 439 OFFCURVE",
"276 486 OFFCURVE",
"279 513 CURVE",
"309.667 519.667 OFFCURVE",
"342 523 OFFCURVE",
"374 523 CURVE SMOOTH",
"429 523 OFFCURVE",
"452 499 OFFCURVE",
"452 472 CURVE SMOOTH",
"452 447 OFFCURVE",
"433 420 OFFCURVE",
"399 406 CURVE SMOOTH",
"373.667 395.333 OFFCURVE",
"352.167 387.167 OFFCURVE",
"334.5 381.5 CURVE SMOOTH",
"316.833 375.833 OFFCURVE",
"308 368.667 OFFCURVE",
"308 360 CURVE SMOOTH",
"308 340.476 OFFCURVE",
"403.065 269.968 OFFCURVE",
"437 253 CURVE",
"445 248 OFFCURVE",
"516 213 OFFCURVE",
"540 213 CURVE SMOOTH",
"545 213 OFFCURVE",
"548 215 OFFCURVE",
"548 218 CURVE SMOOTH",
"548 222.667 OFFCURVE",
"542.333 228.667 OFFCURVE",
"531 236 CURVE",
"482.771 260.114 OFFCURVE",
"408.22 323.172 OFFCURVE",
"358 360 CURVE",
"418.675 388.741 OFFCURVE",
"489 417.666 OFFCURVE",
"489 483 CURVE SMOOTH",
"489 536 OFFCURVE",
"441 548 OFFCURVE",
"392 548 CURVE SMOOTH",
"373 548 OFFCURVE",
"354 546 OFFCURVE",
"338 544 CURVE SMOOTH",
"308.667 541.333 OFFCURVE",
"286.5 537.833 OFFCURVE",
"271.5 533.5 CURVE SMOOTH",
"256.5 529.167 OFFCURVE",
"248.667 521.333 OFFCURVE",
"248 510 CURVE SMOOTH",
"244 464.667 OFFCURVE",
"243 405.167 OFFCURVE",
"243 344.5 CURVE SMOOTH",
"243 294.067 OFFCURVE",
"244 217.81 OFFCURVE",
"244 179 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"245.333 56 OFFCURVE",
"177.667 89.333 OFFCURVE",
"135 140 CURVE SMOOTH",
"94 189 OFFCURVE",
"76 253 OFFCURVE",
"76 320 CURVE SMOOTH",
"76 445 OFFCURVE",
"122 538 OFFCURVE",
"217 583 CURVE",
"221 577 OFFCURVE",
"225 575 OFFCURVE",
"227 575 CURVE SMOOTH",
"230 575 OFFCURVE",
"232 578 OFFCURVE",
"232 582 CURVE SMOOTH",
"232 584 OFFCURVE",
"232 586 OFFCURVE",
"231 588 CURVE",
"249.667 596 OFFCURVE",
"274.333 603.333 OFFCURVE",
"297 606 CURVE SMOOTH",
"317 609 OFFCURVE",
"338 610 OFFCURVE",
"357 610 CURVE SMOOTH",
"403 610 OFFCURVE",
"445 602 OFFCURVE",
"469 588 CURVE",
"474 583 OFFCURVE",
"479 587 OFFCURVE",
"479 593 CURVE SMOOTH",
"479 595 OFFCURVE",
"478 597 OFFCURVE",
"476 599 CURVE SMOOTH",
"453 615 OFFCURVE",
"409 625 OFFCURVE",
"359 625 CURVE SMOOTH",
"315 625 OFFCURVE",
"266 617 OFFCURVE",
"224 601 CURVE",
"221 609 OFFCURVE",
"220 618 OFFCURVE",
"220 626 CURVE SMOOTH",
"220 677 OFFCURVE",
"275 719 OFFCURVE",
"340 719 CURVE SMOOTH",
"433.333 719 OFFCURVE",
"514.5 684.5 OFFCURVE",
"572.5 626.5 CURVE SMOOTH",
"630.5 568.5 OFFCURVE",
"666 487 OFFCURVE",
"666 395 CURVE SMOOTH",
"666 303 OFFCURVE",
"633.333 217.333 OFFCURVE",
"576 156 CURVE SMOOTH",
"518.667 94.667 OFFCURVE",
"438.667 56 OFFCURVE",
"344 56 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"423 29 OFFCURVE",
"520 72 OFFCURVE",
"591 140 CURVE SMOOTH",
"662 207 OFFCURVE",
"708 299 OFFCURVE",
"708 398 CURVE SMOOTH",
"708 501 OFFCURVE",
"675 585 OFFCURVE",
"612 643 CURVE SMOOTH",
"548 701 OFFCURVE",
"456 733 OFFCURVE",
"340 733 CURVE SMOOTH",
"267 733 OFFCURVE",
"198 706 OFFCURVE",
"198 646 CURVE SMOOTH",
"198 632 OFFCURVE",
"203 615 OFFCURVE",
"212 596 CURVE",
"190 588 LINE SMOOTH",
"90 546 OFFCURVE",
"42 419 OFFCURVE",
"42 306 CURVE SMOOTH",
"43 235 OFFCURVE",
"65 167 OFFCURVE",
"110 115 CURVE SMOOTH",
"155 63 OFFCURVE",
"226 29 OFFCURVE",
"323 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 161 OFFCURVE",
"287 168 OFFCURVE",
"287 180 CURVE SMOOTH",
"287 182 OFFCURVE",
"287 184 OFFCURVE",
"286 186 CURVE",
"278 223 OFFCURVE",
"274 310 OFFCURVE",
"274 388 CURVE SMOOTH",
"274 439 OFFCURVE",
"276 486 OFFCURVE",
"279 513 CURVE",
"310 520 OFFCURVE",
"342 523 OFFCURVE",
"374 523 CURVE SMOOTH",
"429 523 OFFCURVE",
"452 499 OFFCURVE",
"452 472 CURVE SMOOTH",
"452 447 OFFCURVE",
"433 420 OFFCURVE",
"399 406 CURVE SMOOTH",
"374 395 OFFCURVE",
"352 387 OFFCURVE",
"335 382 CURVE SMOOTH",
"317 376 OFFCURVE",
"308 369 OFFCURVE",
"308 360 CURVE SMOOTH",
"308 340 OFFCURVE",
"403 270 OFFCURVE",
"437 253 CURVE SMOOTH",
"445 248 OFFCURVE",
"516 213 OFFCURVE",
"540 213 CURVE SMOOTH",
"545 213 OFFCURVE",
"548 215 OFFCURVE",
"548 218 CURVE SMOOTH",
"548 223 OFFCURVE",
"542 229 OFFCURVE",
"531 236 CURVE",
"483 260 OFFCURVE",
"408 323 OFFCURVE",
"358 360 CURVE",
"419 389 OFFCURVE",
"489 418 OFFCURVE",
"489 483 CURVE SMOOTH",
"489 536 OFFCURVE",
"441 548 OFFCURVE",
"392 548 CURVE SMOOTH",
"373 548 OFFCURVE",
"354 546 OFFCURVE",
"338 544 CURVE SMOOTH",
"309 541 OFFCURVE",
"287 538 OFFCURVE",
"272 534 CURVE SMOOTH",
"257 529 OFFCURVE",
"249 521 OFFCURVE",
"248 510 CURVE SMOOTH",
"244 465 OFFCURVE",
"243 405 OFFCURVE",
"243 345 CURVE SMOOTH",
"243 294 OFFCURVE",
"244 218 OFFCURVE",
"244 179 CURVE SMOOTH",
"244 167 OFFCURVE",
"254 161 OFFCURVE",
"265 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"245 56 OFFCURVE",
"178 89 OFFCURVE",
"135 140 CURVE SMOOTH",
"94 189 OFFCURVE",
"76 253 OFFCURVE",
"76 320 CURVE SMOOTH",
"76 445 OFFCURVE",
"122 538 OFFCURVE",
"217 583 CURVE",
"221 577 OFFCURVE",
"225 575 OFFCURVE",
"227 575 CURVE SMOOTH",
"230 575 OFFCURVE",
"232 578 OFFCURVE",
"232 582 CURVE SMOOTH",
"232 584 OFFCURVE",
"232 586 OFFCURVE",
"231 588 CURVE",
"250 596 OFFCURVE",
"274 603 OFFCURVE",
"297 606 CURVE SMOOTH",
"317 609 OFFCURVE",
"338 610 OFFCURVE",
"357 610 CURVE SMOOTH",
"403 610 OFFCURVE",
"445 602 OFFCURVE",
"469 588 CURVE",
"474 583 OFFCURVE",
"479 587 OFFCURVE",
"479 593 CURVE SMOOTH",
"479 595 OFFCURVE",
"478 597 OFFCURVE",
"476 599 CURVE",
"453 615 OFFCURVE",
"409 625 OFFCURVE",
"359 625 CURVE SMOOTH",
"315 625 OFFCURVE",
"266 617 OFFCURVE",
"224 601 CURVE",
"221 609 OFFCURVE",
"220 618 OFFCURVE",
"220 626 CURVE SMOOTH",
"220 677 OFFCURVE",
"275 719 OFFCURVE",
"340 719 CURVE SMOOTH",
"433 719 OFFCURVE",
"515 685 OFFCURVE",
"573 627 CURVE SMOOTH",
"631 569 OFFCURVE",
"666 487 OFFCURVE",
"666 395 CURVE SMOOTH",
"666 303 OFFCURVE",
"633 217 OFFCURVE",
"576 156 CURVE SMOOTH",
"519 95 OFFCURVE",
"439 56 OFFCURVE",
"344 56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 50 170 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01210 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 40 165 40 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01273 20 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0125 1 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012119 2 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 764;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"545 102 OFFCURVE",
"548 105 OFFCURVE",
"548 111 CURVE SMOOTH",
"548 115 OFFCURVE",
"546.333 119 OFFCURVE",
"543 123 CURVE SMOOTH",
"533 136.5 LINE SMOOTH",
"529.667 140.833 OFFCURVE",
"527 145 OFFCURVE",
"525 149 CURVE SMOOTH",
"511.667 174.333 OFFCURVE",
"502.333 206 OFFCURVE",
"493 246 CURVE SMOOTH",
"482.333 286 OFFCURVE",
"479 320 OFFCURVE",
"479 348 CURVE SMOOTH",
"479 351.333 OFFCURVE",
"476.333 353 OFFCURVE",
"471 353 CURVE SMOOTH",
"464.333 353 OFFCURVE",
"460.667 350.333 OFFCURVE",
"460 345 CURVE",
"458.667 343.667 OFFCURVE",
"457.667 338.667 OFFCURVE",
"457 330 CURVE SMOOTH",
"454.5 319 LINE",
"451 304 LINE SMOOTH",
"441.667 274.667 OFFCURVE",
"432.333 246.667 OFFCURVE",
"419 220 CURVE SMOOTH",
"401.667 184.667 OFFCURVE",
"384.333 160 OFFCURVE",
"367 146 CURVE",
"349.667 166 OFFCURVE",
"336 197.667 OFFCURVE",
"326 241 CURVE SMOOTH",
"317.333 277.667 OFFCURVE",
"313 313.333 OFFCURVE",
"313 348 CURVE SMOOTH",
"313 351.333 OFFCURVE",
"310 353 OFFCURVE",
"304 353 CURVE SMOOTH",
"298 353 OFFCURVE",
"293.667 346.667 OFFCURVE",
"291 334 CURVE SMOOTH",
"289.667 326 OFFCURVE",
"287.667 317 OFFCURVE",
"285 307 CURVE SMOOTH",
"274.333 276.333 OFFCURVE",
"262.667 245.667 OFFCURVE",
"244 215 CURVE SMOOTH",
"222.667 177.667 OFFCURVE",
"200.667 155 OFFCURVE",
"178 143 CURVE",
"177 141 LINE",
"177 137.667 OFFCURVE",
"179.667 133.333 OFFCURVE",
"185 128 CURVE SMOOTH",
"189 123.333 OFFCURVE",
"193 121 OFFCURVE",
"197 121 CURVE SMOOTH",
"211 121 OFFCURVE",
"229.667 144 OFFCURVE",
"253 190 CURVE SMOOTH",
"267.667 220.667 OFFCURVE",
"282.333 250.333 OFFCURVE",
"293 281 CURVE",
"296.333 258.333 OFFCURVE",
"304.667 228.333 OFFCURVE",
"318 191 CURVE SMOOTH",
"335.333 143.667 OFFCURVE",
"349.667 120 OFFCURVE",
"361 120 CURVE SMOOTH",
"376.333 120 OFFCURVE",
"397 143.333 OFFCURVE",
"423 190 CURVE SMOOTH",
"443 224.667 OFFCURVE",
"456.333 254.333 OFFCURVE",
"467 281 CURVE",
"473 231.667 OFFCURVE",
"483 190.667 OFFCURVE",
"497 158 CURVE SMOOTH",
"513 120.667 OFFCURVE",
"527 102 OFFCURVE",
"539 102 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143.667 81 OFFCURVE",
"148 83 OFFCURVE",
"152 87 CURVE SMOOTH",
"156.667 91.667 OFFCURVE",
"159 96.333 OFFCURVE",
"159 101 CURVE SMOOTH",
"153 154 LINE SMOOTH",
"149 186.667 OFFCURVE",
"147 216.667 OFFCURVE",
"147 244 CURVE SMOOTH",
"147 265.333 OFFCURVE",
"148 289 OFFCURVE",
"150 315 CURVE",
"190 318 LINE",
"203 319 LINE SMOOTH",
"208.333 319.667 OFFCURVE",
"213.333 320 OFFCURVE",
"218 320 CURVE SMOOTH",
"222.667 320 OFFCURVE",
"227.667 320.333 OFFCURVE",
"233 321 CURVE SMOOTH",
"249 323 OFFCURVE",
"257 328 OFFCURVE",
"257 336 CURVE SMOOTH",
"257 345.333 OFFCURVE",
"253.333 350 OFFCURVE",
"246 350 CURVE SMOOTH",
"231.333 350 OFFCURVE",
"200 347 OFFCURVE",
"152 341 CURVE",
"150 346.333 OFFCURVE",
"147.333 349 OFFCURVE",
"144 349 CURVE SMOOTH",
"140 349 OFFCURVE",
"135 345.667 OFFCURVE",
"129 339 CURVE",
"124 339 LINE SMOOTH",
"114 339 OFFCURVE",
"98.667 340 OFFCURVE",
"78 342 CURVE SMOOTH",
"58 343.333 OFFCURVE",
"42.667 344 OFFCURVE",
"32 344 CURVE SMOOTH",
"26 344 OFFCURVE",
"23 339.333 OFFCURVE",
"23 330 CURVE SMOOTH",
"23 324 OFFCURVE",
"25.333 320 OFFCURVE",
"30 318 CURVE SMOOTH",
"42 314.667 OFFCURVE",
"72.333 313 OFFCURVE",
"121 313 CURVE SMOOTH",
"129 313 LINE",
"129 190 LINE",
"128 126.5 LINE",
"128 98 LINE SMOOTH",
"128 86.667 OFFCURVE",
"131.667 81 OFFCURVE",
"139 81 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"545 102 OFFCURVE",
"548 105 OFFCURVE",
"548 111 CURVE SMOOTH",
"548 115 OFFCURVE",
"546 119 OFFCURVE",
"543 123 CURVE SMOOTH",
"533 137 LINE SMOOTH",
"530 141 OFFCURVE",
"527 145 OFFCURVE",
"525 149 CURVE SMOOTH",
"512 174 OFFCURVE",
"502 206 OFFCURVE",
"493 246 CURVE SMOOTH",
"482 286 OFFCURVE",
"479 320 OFFCURVE",
"479 348 CURVE SMOOTH",
"479 351 OFFCURVE",
"476 353 OFFCURVE",
"471 353 CURVE SMOOTH",
"464 353 OFFCURVE",
"461 350 OFFCURVE",
"460 345 CURVE",
"459 344 OFFCURVE",
"458 339 OFFCURVE",
"457 330 CURVE SMOOTH",
"455 319 LINE",
"451 304 LINE SMOOTH",
"442 275 OFFCURVE",
"432 247 OFFCURVE",
"419 220 CURVE SMOOTH",
"402 185 OFFCURVE",
"384 160 OFFCURVE",
"367 146 CURVE",
"350 166 OFFCURVE",
"336 198 OFFCURVE",
"326 241 CURVE SMOOTH",
"317 278 OFFCURVE",
"313 313 OFFCURVE",
"313 348 CURVE SMOOTH",
"313 351 OFFCURVE",
"310 353 OFFCURVE",
"304 353 CURVE SMOOTH",
"298 353 OFFCURVE",
"294 347 OFFCURVE",
"291 334 CURVE SMOOTH",
"290 326 OFFCURVE",
"288 317 OFFCURVE",
"285 307 CURVE SMOOTH",
"274 276 OFFCURVE",
"263 246 OFFCURVE",
"244 215 CURVE SMOOTH",
"223 178 OFFCURVE",
"201 155 OFFCURVE",
"178 143 CURVE",
"177 141 LINE",
"177 138 OFFCURVE",
"180 133 OFFCURVE",
"185 128 CURVE SMOOTH",
"189 123 OFFCURVE",
"193 121 OFFCURVE",
"197 121 CURVE SMOOTH",
"211 121 OFFCURVE",
"230 144 OFFCURVE",
"253 190 CURVE SMOOTH",
"268 221 OFFCURVE",
"282 250 OFFCURVE",
"293 281 CURVE",
"296 258 OFFCURVE",
"305 228 OFFCURVE",
"318 191 CURVE SMOOTH",
"335 144 OFFCURVE",
"350 120 OFFCURVE",
"361 120 CURVE SMOOTH",
"376 120 OFFCURVE",
"397 143 OFFCURVE",
"423 190 CURVE SMOOTH",
"443 225 OFFCURVE",
"456 254 OFFCURVE",
"467 281 CURVE",
"473 232 OFFCURVE",
"483 191 OFFCURVE",
"497 158 CURVE SMOOTH",
"513 121 OFFCURVE",
"527 102 OFFCURVE",
"539 102 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"144 81 OFFCURVE",
"148 83 OFFCURVE",
"152 87 CURVE SMOOTH",
"157 92 OFFCURVE",
"159 96 OFFCURVE",
"159 101 CURVE SMOOTH",
"153 154 LINE SMOOTH",
"149 187 OFFCURVE",
"147 217 OFFCURVE",
"147 244 CURVE SMOOTH",
"147 265 OFFCURVE",
"148 289 OFFCURVE",
"150 315 CURVE",
"203 319 LINE",
"208 320 OFFCURVE",
"213 320 OFFCURVE",
"218 320 CURVE SMOOTH",
"223 320 OFFCURVE",
"228 320 OFFCURVE",
"233 321 CURVE SMOOTH",
"249 323 OFFCURVE",
"257 328 OFFCURVE",
"257 336 CURVE SMOOTH",
"257 345 OFFCURVE",
"253 350 OFFCURVE",
"246 350 CURVE SMOOTH",
"231 350 OFFCURVE",
"200 347 OFFCURVE",
"152 341 CURVE",
"150 346 OFFCURVE",
"147 349 OFFCURVE",
"144 349 CURVE SMOOTH",
"140 349 OFFCURVE",
"135 346 OFFCURVE",
"129 339 CURVE",
"124 339 LINE SMOOTH",
"114 339 OFFCURVE",
"99 340 OFFCURVE",
"78 342 CURVE SMOOTH",
"58 343 OFFCURVE",
"43 344 OFFCURVE",
"32 344 CURVE SMOOTH",
"26 344 OFFCURVE",
"23 339 OFFCURVE",
"23 330 CURVE SMOOTH",
"23 324 OFFCURVE",
"25 320 OFFCURVE",
"30 318 CURVE SMOOTH",
"42 315 OFFCURVE",
"72 313 OFFCURVE",
"121 313 CURVE SMOOTH",
"129 313 LINE",
"129 190 LINE",
"128 127 LINE",
"128 98 LINE SMOOTH",
"128 87 OFFCURVE",
"132 81 OFFCURVE",
"139 81 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01278 3 91 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012102 2 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01293 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 559;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"112 217 OFFCURVE",
"127.333 221.667 OFFCURVE",
"140 231 CURVE SMOOTH",
"152.667 241 OFFCURVE",
"159 255.333 OFFCURVE",
"159 274 CURVE SMOOTH",
"159 292 OFFCURVE",
"153 308.667 OFFCURVE",
"141 324 CURVE SMOOTH",
"127.667 339.333 OFFCURVE",
"112.333 347 OFFCURVE",
"95 347 CURVE SMOOTH",
"76.333 347 OFFCURVE",
"61.333 340.667 OFFCURVE",
"50 328 CURVE SMOOTH",
"38.667 316.667 OFFCURVE",
"33 301.333 OFFCURVE",
"33 282 CURVE SMOOTH",
"33 263.333 OFFCURVE",
"38.667 248 OFFCURVE",
"50 236 CURVE SMOOTH",
"60.667 223.333 OFFCURVE",
"75.333 217 OFFCURVE",
"94 217 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78.667 232 OFFCURVE",
"67.667 238 OFFCURVE",
"59 250 CURVE SMOOTH",
"51 262 OFFCURVE",
"47 274.333 OFFCURVE",
"47 287 CURVE SMOOTH",
"47 313.667 OFFCURVE",
"60 327 OFFCURVE",
"86 327 CURVE SMOOTH",
"100.667 327 OFFCURVE",
"114.333 321.333 OFFCURVE",
"127 310 CURVE SMOOTH",
"138.333 298.667 OFFCURVE",
"144 285 OFFCURVE",
"144 269 CURVE SMOOTH",
"144 244.333 OFFCURVE",
"126.667 232 OFFCURVE",
"92 232 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"112 217 OFFCURVE",
"127 222 OFFCURVE",
"140 231 CURVE SMOOTH",
"153 241 OFFCURVE",
"159 255 OFFCURVE",
"159 274 CURVE SMOOTH",
"159 292 OFFCURVE",
"153 309 OFFCURVE",
"141 324 CURVE SMOOTH",
"128 339 OFFCURVE",
"112 347 OFFCURVE",
"95 347 CURVE SMOOTH",
"76 347 OFFCURVE",
"61 341 OFFCURVE",
"50 328 CURVE SMOOTH",
"39 317 OFFCURVE",
"33 301 OFFCURVE",
"33 282 CURVE SMOOTH",
"33 263 OFFCURVE",
"39 248 OFFCURVE",
"50 236 CURVE SMOOTH",
"61 223 OFFCURVE",
"75 217 OFFCURVE",
"94 217 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 232 OFFCURVE",
"68 238 OFFCURVE",
"59 250 CURVE SMOOTH",
"51 262 OFFCURVE",
"47 274 OFFCURVE",
"47 287 CURVE SMOOTH",
"47 314 OFFCURVE",
"60 327 OFFCURVE",
"86 327 CURVE SMOOTH",
"101 327 OFFCURVE",
"114 321 OFFCURVE",
"127 310 CURVE SMOOTH",
"138 299 OFFCURVE",
"144 285 OFFCURVE",
"144 269 CURVE SMOOTH",
"144 244 OFFCURVE",
"127 232 OFFCURVE",
"92 232 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 16 170 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01222 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 22 165 22 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01226 1 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 187;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = quotesingle;
}
);
};
components = (
{
name = quotesingle;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 147;
}
);
unicode = 2032;
},
{
glyphname = second;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 71, 0}";
},
{
name = quotesingle;
}
);
};
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 71, 0}";
},
{
name = quotesingle;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 215;
}
);
unicode = 2033;
},
{
glyphname = bar;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"97.333 -71 OFFCURVE",
"102 -68.667 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55.333 OFFCURVE",
"112 -50 CURVE SMOOTH",
"111.5 -47 LINE",
"110 -30 LINE SMOOTH",
"104 44.667 OFFCURVE",
"101 112.667 OFFCURVE",
"101 174 CURVE SMOOTH",
"101 196.667 OFFCURVE",
"105 230.667 OFFCURVE",
"113 276 CURVE SMOOTH",
"121 320.667 OFFCURVE",
"125 354.333 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382.333 OFFCURVE",
"119.667 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"104.333 385 OFFCURVE",
"97.333 381.667 OFFCURVE",
"88 375 CURVE",
"84 369 OFFCURVE",
"82 353 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 305.5 LINE",
"83 275 LINE",
"83.5 244 LINE",
"84 222 LINE",
"83 85 LINE",
"82 4.5 LINE",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85.333 -71 OFFCURVE",
"92 -71 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"97 -71 OFFCURVE",
"102 -69 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55 OFFCURVE",
"112 -50 CURVE SMOOTH",
"112 -47 LINE",
"110 -30 LINE SMOOTH",
"104 45 OFFCURVE",
"101 113 OFFCURVE",
"101 174 CURVE SMOOTH",
"101 197 OFFCURVE",
"105 231 OFFCURVE",
"113 276 CURVE SMOOTH",
"121 321 OFFCURVE",
"125 354 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382 OFFCURVE",
"120 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"104 385 OFFCURVE",
"97 382 OFFCURVE",
"88 375 CURVE",
"84 369 OFFCURVE",
"82 353 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 306 LINE",
"84 244 LINE",
"84 222 LINE",
"83 85 LINE",
"82 5 LINE",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85 -71 OFFCURVE",
"92 -71 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0126 3 15 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 6 165 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 177;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"83 85 LINE SMOOTH",
"82 54 OFFCURVE",
"82 28 OFFCURVE",
"82 5 CURVE SMOOTH",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85 -71 OFFCURVE",
"92 -71 CURVE SMOOTH",
"97 -71 OFFCURVE",
"102 -69 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55 OFFCURVE",
"112 -50 CURVE SMOOTH",
"112 -47 LINE",
"110 -30 LINE SMOOTH",
"106 26 OFFCURVE",
"103 78 OFFCURVE",
"102 127 CURVE",
"83 127 LINE"
);
},
{
closed = 1;
nodes = (
"103 216 OFFCURVE",
"107 243 OFFCURVE",
"113 276 CURVE SMOOTH",
"121 321 OFFCURVE",
"125 354 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382 OFFCURVE",
"120 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"104 385 OFFCURVE",
"97 382 OFFCURVE",
"88 375 CURVE",
"84 369 OFFCURVE",
"82 353 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 306 LINE",
"83 275 LINE SMOOTH",
"83 263 OFFCURVE",
"83 253 OFFCURVE",
"84 244 CURVE",
"84 195 LINE",
"102 195 LINE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"102 195 LINE",
"103 216 OFFCURVE",
"107 243 OFFCURVE",
"113 276 CURVE SMOOTH",
"121 321 OFFCURVE",
"125 354 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382 OFFCURVE",
"120 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"104 385 OFFCURVE",
"97 382 OFFCURVE",
"88 375 CURVE",
"84 369 OFFCURVE",
"82 353 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 306 LINE",
"83 275 LINE SMOOTH",
"83 263 OFFCURVE",
"83 253 OFFCURVE",
"84 244 CURVE",
"84 195 LINE"
);
},
{
closed = 1;
nodes = (
"97 -71 OFFCURVE",
"102 -69 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55 OFFCURVE",
"112 -50 CURVE SMOOTH",
"112 -47 LINE",
"110 -30 LINE SMOOTH",
"106 26 OFFCURVE",
"103 78 OFFCURVE",
"102 127 CURVE",
"83 127 LINE",
"83 85 LINE SMOOTH",
"82 54 OFFCURVE",
"82 28 OFFCURVE",
"82 5 CURVE SMOOTH",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85 -71 OFFCURVE",
"92 -71 CURVE SMOOTH"
);
}
);
width = 177;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"97.333 -71 OFFCURVE",
"102 -68.667 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55.333 OFFCURVE",
"112 -50 CURVE SMOOTH",
"111.5 -43 LINE",
"110 -30 LINE SMOOTH",
"104 42.667 OFFCURVE",
"101 108.667 OFFCURVE",
"101 168 CURVE SMOOTH",
"101 200 OFFCURVE",
"102 229 OFFCURVE",
"104 255 CURVE",
"130.667 257.667 OFFCURVE",
"149.667 261.667 OFFCURVE",
"161 267 CURVE SMOOTH",
"165.667 269 OFFCURVE",
"168 272.667 OFFCURVE",
"168 278 CURVE SMOOTH",
"168 288 OFFCURVE",
"164.667 293 OFFCURVE",
"158 293 CURVE SMOOTH",
"154.667 293 OFFCURVE",
"146.333 291.333 OFFCURVE",
"133 288 CURVE SMOOTH",
"119 284 OFFCURVE",
"109.667 282 OFFCURVE",
"105 282 CURVE",
"106.333 290 OFFCURVE",
"109.333 307 OFFCURVE",
"116 331 CURVE SMOOTH",
"122 353.667 OFFCURVE",
"125 369 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382.333 OFFCURVE",
"119.667 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"100.333 385 OFFCURVE",
"93.667 382 OFFCURVE",
"89 376 CURVE SMOOTH",
"84.333 370.667 OFFCURVE",
"82 354.333 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 304 LINE",
"83 289.5 LINE",
"83 280 LINE",
"65 280 LINE SMOOTH",
"61 280 OFFCURVE",
"56.333 280.667 OFFCURVE",
"51 282 CURVE SMOOTH",
"41 284 OFFCURVE",
"33.333 285 OFFCURVE",
"28 285 CURVE SMOOTH",
"22 285 OFFCURVE",
"19 280.333 OFFCURVE",
"19 271 CURVE SMOOTH",
"19 265 OFFCURVE",
"21.333 261 OFFCURVE",
"26 259 CURVE",
"39.333 255.667 OFFCURVE",
"55.667 254 OFFCURVE",
"75 254 CURVE SMOOTH",
"83 254 LINE",
"83.5 236.5 LINE",
"84 217 LINE",
"83 82 LINE",
"82 3.5 LINE",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85.333 -71 OFFCURVE",
"92 -71 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"97 -71 OFFCURVE",
"102 -69 OFFCURVE",
"106 -64 CURVE SMOOTH",
"110 -60 OFFCURVE",
"112 -55 OFFCURVE",
"112 -50 CURVE SMOOTH",
"112 -43 LINE",
"110 -30 LINE SMOOTH",
"104 43 OFFCURVE",
"101 109 OFFCURVE",
"101 168 CURVE SMOOTH",
"101 200 OFFCURVE",
"102 229 OFFCURVE",
"104 255 CURVE",
"131 258 OFFCURVE",
"150 262 OFFCURVE",
"161 267 CURVE SMOOTH",
"166 269 OFFCURVE",
"168 273 OFFCURVE",
"168 278 CURVE SMOOTH",
"168 288 OFFCURVE",
"165 293 OFFCURVE",
"158 293 CURVE SMOOTH",
"155 293 OFFCURVE",
"146 291 OFFCURVE",
"133 288 CURVE SMOOTH",
"119 284 OFFCURVE",
"110 282 OFFCURVE",
"105 282 CURVE",
"106 290 OFFCURVE",
"109 307 OFFCURVE",
"116 331 CURVE SMOOTH",
"122 354 OFFCURVE",
"125 369 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 382 OFFCURVE",
"120 385 OFFCURVE",
"109 385 CURVE SMOOTH",
"100 385 OFFCURVE",
"94 382 OFFCURVE",
"89 376 CURVE SMOOTH",
"84 371 OFFCURVE",
"82 354 OFFCURVE",
"82 327 CURVE SMOOTH",
"82 304 LINE",
"83 290 LINE",
"83 280 LINE",
"65 280 LINE SMOOTH",
"61 280 OFFCURVE",
"56 281 OFFCURVE",
"51 282 CURVE SMOOTH",
"41 284 OFFCURVE",
"33 285 OFFCURVE",
"28 285 CURVE SMOOTH",
"22 285 OFFCURVE",
"19 280 OFFCURVE",
"19 271 CURVE SMOOTH",
"19 265 OFFCURVE",
"21 261 OFFCURVE",
"26 259 CURVE",
"39 256 OFFCURVE",
"56 254 OFFCURVE",
"75 254 CURVE SMOOTH",
"83 254 LINE",
"84 237 LINE",
"84 217 LINE",
"83 82 LINE",
"82 4 LINE",
"82 -53 LINE SMOOTH",
"82 -65 OFFCURVE",
"85 -71 OFFCURVE",
"92 -71 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01217 3 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 17 170 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0120 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01252 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0124 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 177;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"351.333 3 OFFCURVE",
"365.667 8.667 OFFCURVE",
"377 20 CURVE SMOOTH",
"389.667 31.333 OFFCURVE",
"396 46.333 OFFCURVE",
"396 65 CURVE SMOOTH",
"396 73 OFFCURVE",
"395.167 78.167 OFFCURVE",
"393.5 80.5 CURVE SMOOTH",
"391.833 82.833 OFFCURVE",
"390 84 OFFCURVE",
"388 84 CURVE SMOOTH",
"386.667 84 OFFCURVE",
"385.667 83.5 OFFCURVE",
"385 82.5 CURVE SMOOTH",
"384.333 81.5 OFFCURVE",
"384 78.667 OFFCURVE",
"384 74 CURVE SMOOTH",
"384.5 70 LINE",
"385 66 LINE SMOOTH",
"385 57.333 OFFCURVE",
"381.333 48.667 OFFCURVE",
"374 40 CURVE SMOOTH",
"366 32 OFFCURVE",
"356 28 OFFCURVE",
"344 28 CURVE SMOOTH",
"294 28 OFFCURVE",
"269 61.333 OFFCURVE",
"269 128 CURVE SMOOTH",
"269 158.667 OFFCURVE",
"274 196.333 OFFCURVE",
"286 243 CURVE",
"325.5 246.5 LINE SMOOTH",
"336.5 247.5 OFFCURVE",
"346.333 248 OFFCURVE",
"355 248 CURVE SMOOTH",
"379 248 OFFCURVE",
"395.333 245.667 OFFCURVE",
"402 235 CURVE SMOOTH",
"404 232.333 OFFCURVE",
"405.333 231 OFFCURVE",
"406 231 CURVE SMOOTH",
"408 231 OFFCURVE",
"409 232.333 OFFCURVE",
"409 235 CURVE SMOOTH",
"409 236.333 OFFCURVE",
"408.333 238.333 OFFCURVE",
"407 241 CURVE SMOOTH",
"396.333 259 OFFCURVE",
"369.667 268 OFFCURVE",
"327 268 CURVE SMOOTH",
"317.667 268 OFFCURVE",
"307.667 267.333 OFFCURVE",
"293 266 CURVE",
"314.333 339.333 OFFCURVE",
"334.333 389.667 OFFCURVE",
"353 423 CURVE",
"353 425 LINE SMOOTH",
"353 428.333 OFFCURVE",
"350.667 431.667 OFFCURVE",
"346 435 CURVE SMOOTH",
"342 438.333 OFFCURVE",
"337 440 OFFCURVE",
"331 440 CURVE SMOOTH",
"325 440 OFFCURVE",
"321 437.667 OFFCURVE",
"319 433 CURVE SMOOTH",
"287 351.667 OFFCURVE",
"267.667 296.667 OFFCURVE",
"257 262 CURVE",
"206.333 250 OFFCURVE",
"171.667 244 OFFCURVE",
"145 244 CURVE",
"169 308 OFFCURVE",
"186.667 351 OFFCURVE",
"200 379 CURVE",
"200 381 LINE SMOOTH",
"200 383.667 OFFCURVE",
"197.667 387 OFFCURVE",
"193 391 CURVE SMOOTH",
"189 394.333 OFFCURVE",
"184 396 OFFCURVE",
"178 396 CURVE SMOOTH",
"172 396 OFFCURVE",
"168 393.667 OFFCURVE",
"166 389 CURVE SMOOTH",
"124.5 283.5 LINE",
"108 241 LINE",
"50 253 OFFCURVE",
"16.667 280.333 OFFCURVE",
"8 323 CURVE SMOOTH",
"6 335.667 OFFCURVE",
"3 342 OFFCURVE",
"-1 342 CURVE SMOOTH",
"-3.667 342 OFFCURVE",
"-5.667 340.667 OFFCURVE",
"-7 338 CURVE SMOOTH",
"-8.333 335.333 OFFCURVE",
"-9 330 OFFCURVE",
"-9 322 CURVE SMOOTH",
"-9 314 LINE",
"-4.333 283.333 OFFCURVE",
"11.333 260.333 OFFCURVE",
"38 245 CURVE SMOOTH",
"55.333 234.333 OFFCURVE",
"77.667 228 OFFCURVE",
"105 226 CURVE",
"95.667 187.333 OFFCURVE",
"91 156.667 OFFCURVE",
"91 130 CURVE SMOOTH",
"91 79.333 OFFCURVE",
"106.333 46.333 OFFCURVE",
"137 31 CURVE SMOOTH",
"143.667 27.667 OFFCURVE",
"150 26 OFFCURVE",
"156 26 CURVE SMOOTH",
"171.333 26 OFFCURVE",
"185 33 OFFCURVE",
"197 47 CURVE SMOOTH",
"208.333 59 OFFCURVE",
"214 72.667 OFFCURVE",
"214 88 CURVE SMOOTH",
"214 98 OFFCURVE",
"212.667 105.667 OFFCURVE",
"210 111 CURVE SMOOTH",
"207.333 115.667 OFFCURVE",
"205 118 OFFCURVE",
"203 118 CURVE SMOOTH",
"200.333 118 OFFCURVE",
"199 114 OFFCURVE",
"199 106 CURVE SMOOTH",
"199 97 LINE",
"199.667 95.667 OFFCURVE",
"200 93.667 OFFCURVE",
"200 91 CURVE SMOOTH",
"200 69.667 OFFCURVE",
"191.667 59 OFFCURVE",
"175 59 CURVE SMOOTH",
"160.333 59 OFFCURVE",
"148.333 68.333 OFFCURVE",
"139 87 CURVE SMOOTH",
"133 101 OFFCURVE",
"130 116 OFFCURVE",
"130 132 CURVE SMOOTH",
"130 161.333 OFFCURVE",
"134.333 193.333 OFFCURVE",
"143 228 CURVE",
"179 228 OFFCURVE",
"214.667 231.333 OFFCURVE",
"250 238 CURVE",
"240.667 196.667 OFFCURVE",
"236 166 OFFCURVE",
"236 138 CURVE SMOOTH",
"236 88 OFFCURVE",
"249.667 51 OFFCURVE",
"277 27 CURVE SMOOTH",
"293.667 11 OFFCURVE",
"312.667 3 OFFCURVE",
"334 3 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"351 3 OFFCURVE",
"366 9 OFFCURVE",
"377 20 CURVE SMOOTH",
"390 31 OFFCURVE",
"396 46 OFFCURVE",
"396 65 CURVE SMOOTH",
"396 73 OFFCURVE",
"395 78 OFFCURVE",
"394 81 CURVE",
"392 83 OFFCURVE",
"390 84 OFFCURVE",
"388 84 CURVE SMOOTH",
"387 84 OFFCURVE",
"386 84 OFFCURVE",
"385 83 CURVE SMOOTH",
"384 82 OFFCURVE",
"384 79 OFFCURVE",
"384 74 CURVE SMOOTH",
"385 66 LINE SMOOTH",
"385 57 OFFCURVE",
"381 49 OFFCURVE",
"374 40 CURVE SMOOTH",
"366 32 OFFCURVE",
"356 28 OFFCURVE",
"344 28 CURVE SMOOTH",
"294 28 OFFCURVE",
"269 61 OFFCURVE",
"269 128 CURVE SMOOTH",
"269 159 OFFCURVE",
"274 196 OFFCURVE",
"286 243 CURVE",
"326 247 LINE SMOOTH",
"337 248 OFFCURVE",
"346 248 OFFCURVE",
"355 248 CURVE SMOOTH",
"379 248 OFFCURVE",
"395 246 OFFCURVE",
"402 235 CURVE SMOOTH",
"404 232 OFFCURVE",
"405 231 OFFCURVE",
"406 231 CURVE SMOOTH",
"408 231 OFFCURVE",
"409 232 OFFCURVE",
"409 235 CURVE SMOOTH",
"409 236 OFFCURVE",
"408 238 OFFCURVE",
"407 241 CURVE",
"396 259 OFFCURVE",
"370 268 OFFCURVE",
"327 268 CURVE SMOOTH",
"318 268 OFFCURVE",
"308 267 OFFCURVE",
"293 266 CURVE",
"314 339 OFFCURVE",
"334 390 OFFCURVE",
"353 423 CURVE",
"353 425 LINE SMOOTH",
"353 428 OFFCURVE",
"351 432 OFFCURVE",
"346 435 CURVE SMOOTH",
"342 438 OFFCURVE",
"337 440 OFFCURVE",
"331 440 CURVE SMOOTH",
"325 440 OFFCURVE",
"321 438 OFFCURVE",
"319 433 CURVE SMOOTH",
"287 352 OFFCURVE",
"268 297 OFFCURVE",
"257 262 CURVE",
"206 250 OFFCURVE",
"172 244 OFFCURVE",
"145 244 CURVE",
"169 308 OFFCURVE",
"187 351 OFFCURVE",
"200 379 CURVE",
"200 381 LINE SMOOTH",
"200 384 OFFCURVE",
"198 387 OFFCURVE",
"193 391 CURVE SMOOTH",
"189 394 OFFCURVE",
"184 396 OFFCURVE",
"178 396 CURVE SMOOTH",
"172 396 OFFCURVE",
"168 394 OFFCURVE",
"166 389 CURVE SMOOTH",
"125 284 LINE",
"108 241 LINE",
"50 253 OFFCURVE",
"17 280 OFFCURVE",
"8 323 CURVE SMOOTH",
"6 336 OFFCURVE",
"3 342 OFFCURVE",
"-1 342 CURVE SMOOTH",
"-4 342 OFFCURVE",
"-6 341 OFFCURVE",
"-7 338 CURVE SMOOTH",
"-8 335 OFFCURVE",
"-9 330 OFFCURVE",
"-9 322 CURVE SMOOTH",
"-9 314 LINE",
"-4 283 OFFCURVE",
"11 260 OFFCURVE",
"38 245 CURVE SMOOTH",
"55 234 OFFCURVE",
"78 228 OFFCURVE",
"105 226 CURVE",
"96 187 OFFCURVE",
"91 157 OFFCURVE",
"91 130 CURVE SMOOTH",
"91 79 OFFCURVE",
"106 46 OFFCURVE",
"137 31 CURVE SMOOTH",
"144 28 OFFCURVE",
"150 26 OFFCURVE",
"156 26 CURVE SMOOTH",
"171 26 OFFCURVE",
"185 33 OFFCURVE",
"197 47 CURVE SMOOTH",
"208 59 OFFCURVE",
"214 73 OFFCURVE",
"214 88 CURVE SMOOTH",
"214 98 OFFCURVE",
"213 106 OFFCURVE",
"210 111 CURVE SMOOTH",
"207 116 OFFCURVE",
"205 118 OFFCURVE",
"203 118 CURVE SMOOTH",
"200 118 OFFCURVE",
"199 114 OFFCURVE",
"199 106 CURVE SMOOTH",
"199 97 LINE",
"200 96 OFFCURVE",
"200 94 OFFCURVE",
"200 91 CURVE SMOOTH",
"200 70 OFFCURVE",
"192 59 OFFCURVE",
"175 59 CURVE SMOOTH",
"160 59 OFFCURVE",
"148 68 OFFCURVE",
"139 87 CURVE SMOOTH",
"133 101 OFFCURVE",
"130 116 OFFCURVE",
"130 132 CURVE SMOOTH",
"130 161 OFFCURVE",
"134 193 OFFCURVE",
"143 228 CURVE",
"179 228 OFFCURVE",
"215 231 OFFCURVE",
"250 238 CURVE",
"241 197 OFFCURVE",
"236 166 OFFCURVE",
"236 138 CURVE SMOOTH",
"236 88 OFFCURVE",
"250 51 OFFCURVE",
"277 27 CURVE SMOOTH",
"294 11 OFFCURVE",
"313 3 OFFCURVE",
"334 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01243 4 66 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01236 4 13 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01219 28 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 19 234 19 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 153 19 169 19 185 19 201 19 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012154 36 170 36 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 13 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0126 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012149 43 165 43 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012154 49 170 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 19 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 9 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01294 66 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012110 66 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01297 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012110 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012113 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01232 5 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01215 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 32 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01294 32 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 393;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"900 473 OFFCURVE",
"894 478 OFFCURVE",
"887 483 CURVE",
"877 543 OFFCURVE",
"827 576 OFFCURVE",
"764 576 CURVE SMOOTH",
"737 576 OFFCURVE",
"711 568 OFFCURVE",
"686 552 CURVE SMOOTH",
"611 505 OFFCURVE",
"574 398 OFFCURVE",
"574 231 CURVE SMOOTH",
"574 195 OFFCURVE",
"576 154 OFFCURVE",
"581 98 CURVE",
"521 189 OFFCURVE",
"471 292 OFFCURVE",
"416 423 CURVE SMOOTH",
"413 430 OFFCURVE",
"409 437 OFFCURVE",
"406 444 CURVE SMOOTH",
"396 465 LINE",
"396 495 LINE",
"395 519 LINE SMOOTH",
"394 529 OFFCURVE",
"385 534 OFFCURVE",
"375 534 CURVE SMOOTH",
"367 534 OFFCURVE",
"358 529 OFFCURVE",
"358 518 CURVE",
"321 556 OFFCURVE",
"283 575 OFFCURVE",
"245 575 CURVE SMOOTH",
"181 575 OFFCURVE",
"129 536 OFFCURVE",
"129 469 CURVE SMOOTH",
"129 434 OFFCURVE",
"149 401 OFFCURVE",
"180 368 CURVE",
"183 367 OFFCURVE",
"185 366 OFFCURVE",
"186 366 CURVE SMOOTH",
"191 366 OFFCURVE",
"193 369 OFFCURVE",
"193 374 CURVE SMOOTH",
"193 376 OFFCURVE",
"192 378 OFFCURVE",
"191 379 CURVE SMOOTH",
"162 408 OFFCURVE",
"148 438 OFFCURVE",
"148 469 CURVE SMOOTH",
"148 516 OFFCURVE",
"183 545 OFFCURVE",
"228 545 CURVE SMOOTH",
"277 545 OFFCURVE",
"322 514 OFFCURVE",
"361 452 CURVE",
"362 443 OFFCURVE",
"362 435 OFFCURVE",
"362 428 CURVE SMOOTH",
"362 406 LINE SMOOTH",
"362 366 OFFCURVE",
"358 306 OFFCURVE",
"347 244 CURVE SMOOTH",
"341 213 OFFCURVE",
"333 182 OFFCURVE",
"323 151 CURVE SMOOTH",
"302 90 OFFCURVE",
"271 39 OFFCURVE",
"227 9 CURVE SMOOTH",
"205 -7 OFFCURVE",
"179 -14 OFFCURVE",
"150 -14 CURVE SMOOTH",
"111 -14 OFFCURVE",
"78 0 OFFCURVE",
"51 28 CURVE SMOOTH",
"28 55 OFFCURVE",
"19 78 OFFCURVE",
"19 113 CURVE SMOOTH",
"19 174 OFFCURVE",
"55 225 OFFCURVE",
"115 225 CURVE SMOOTH",
"130 225 OFFCURVE",
"144 221 OFFCURVE",
"155 214 CURVE SMOOTH",
"161 210 OFFCURVE",
"164 213 OFFCURVE",
"164 218 CURVE SMOOTH",
"164 221 OFFCURVE",
"163 224 OFFCURVE",
"160 226 CURVE SMOOTH",
"145 237 OFFCURVE",
"128 243 OFFCURVE",
"110 243 CURVE SMOOTH",
"46 243 OFFCURVE",
"-2 187 OFFCURVE",
"-2 103 CURVE SMOOTH",
"-2 72 OFFCURVE",
"6 44 OFFCURVE",
"23 19 CURVE SMOOTH",
"47 -19 OFFCURVE",
"106 -36 OFFCURVE",
"149 -36 CURVE SMOOTH",
"210 -36 OFFCURVE",
"258 -4 OFFCURVE",
"294 43 CURVE SMOOTH",
"312 66 OFFCURVE",
"327 93 OFFCURVE",
"340 123 CURVE SMOOTH",
"364 182 OFFCURVE",
"380 245 OFFCURVE",
"388 304 CURVE SMOOTH",
"392 333 OFFCURVE",
"395 359 OFFCURVE",
"396 381 CURVE",
"433 289 OFFCURVE",
"457 232 OFFCURVE",
"476 195 CURVE SMOOTH",
"517 116 OFFCURVE",
"576 14 OFFCURVE",
"664 -15 CURVE SMOOTH",
"671 -18 OFFCURVE",
"689 -20 OFFCURVE",
"697 -20 CURVE SMOOTH",
"709 -20 OFFCURVE",
"712 -17 OFFCURVE",
"712 -10 CURVE SMOOTH",
"712 -5 OFFCURVE",
"707 -4 OFFCURVE",
"702 -4 CURVE SMOOTH",
"700 -4 OFFCURVE",
"699 -4 OFFCURVE",
"698 -4 CURVE SMOOTH",
"689 -5 OFFCURVE",
"679 -3 OFFCURVE",
"669 2 CURVE SMOOTH",
"649 13 OFFCURVE",
"626 36 OFFCURVE",
"601 70 CURVE",
"598 125 OFFCURVE",
"597 163 OFFCURVE",
"597 190 CURVE SMOOTH",
"597 370 OFFCURVE",
"636 484 OFFCURVE",
"713 531 CURVE SMOOTH",
"732 543 OFFCURVE",
"752 549 OFFCURVE",
"774 549 CURVE SMOOTH",
"815 549 OFFCURVE",
"851 529 OFFCURVE",
"866 495 CURVE",
"853 500 OFFCURVE",
"839 503 OFFCURVE",
"823 503 CURVE SMOOTH",
"815 503 OFFCURVE",
"808 502 OFFCURVE",
"800 501 CURVE SMOOTH",
"782 497 OFFCURVE",
"768 490 OFFCURVE",
"756 479 CURVE SMOOTH",
"745 468 OFFCURVE",
"739 456 OFFCURVE",
"739 444 CURVE SMOOTH",
"739 439 OFFCURVE",
"741 433 OFFCURVE",
"744 425 CURVE",
"724 420 OFFCURVE",
"709 411 OFFCURVE",
"698 396 CURVE SMOOTH",
"687 381 OFFCURVE",
"681 362 OFFCURVE",
"681 340 CURVE SMOOTH",
"681 316 OFFCURVE",
"693 297 OFFCURVE",
"716 282 CURVE SMOOTH",
"737 268 OFFCURVE",
"763 261 OFFCURVE",
"794 261 CURVE SMOOTH",
"834 261 OFFCURVE",
"868 273 OFFCURVE",
"897 298 CURVE SMOOTH",
"926 324 OFFCURVE",
"940 354 OFFCURVE",
"940 388 CURVE SMOOTH",
"940 417 OFFCURVE",
"929 444 OFFCURVE",
"906 467 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"794 467 OFFCURVE",
"808 472 OFFCURVE",
"826 472 CURVE SMOOTH",
"844 472 OFFCURVE",
"860 466 OFFCURVE",
"874 455 CURVE",
"873 437 OFFCURVE",
"865 418 OFFCURVE",
"851 402 CURVE SMOOTH",
"838 388 OFFCURVE",
"820 377 OFFCURVE",
"801 374 CURVE",
"789 374 OFFCURVE",
"780 379 OFFCURVE",
"772 389 CURVE SMOOTH",
"767 396 OFFCURVE",
"763 405 OFFCURVE",
"763 414 CURVE SMOOTH",
"763 432 OFFCURVE",
"769 446 OFFCURVE",
"782 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"852 289 OFFCURVE",
"826 277 OFFCURVE",
"794 276 CURVE SMOOTH",
"767 276 OFFCURVE",
"746 284 OFFCURVE",
"731 301 CURVE SMOOTH",
"718 315 OFFCURVE",
"711 332 OFFCURVE",
"711 353 CURVE SMOOTH",
"711 376 OFFCURVE",
"718 391 OFFCURVE",
"738 402 CURVE",
"751 378 OFFCURVE",
"773 359 OFFCURVE",
"794 359 CURVE SMOOTH",
"822 359 OFFCURVE",
"852 375 OFFCURVE",
"869 399 CURVE SMOOTH",
"878 412 OFFCURVE",
"884 427 OFFCURVE",
"887 441 CURVE",
"899 426 OFFCURVE",
"905 407 OFFCURVE",
"905 383 CURVE SMOOTH",
"905 355 OFFCURVE",
"894 331 OFFCURVE",
"873 310 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"210 -36 OFFCURVE",
"258 -4 OFFCURVE",
"294 43 CURVE SMOOTH",
"312 66 OFFCURVE",
"327 93 OFFCURVE",
"340 123 CURVE SMOOTH",
"364 182 OFFCURVE",
"380 245 OFFCURVE",
"388 304 CURVE SMOOTH",
"392 333 OFFCURVE",
"395 359 OFFCURVE",
"396 381 CURVE",
"433 289 OFFCURVE",
"457 232 OFFCURVE",
"476 195 CURVE SMOOTH",
"517 116 OFFCURVE",
"576 14 OFFCURVE",
"664 -15 CURVE SMOOTH",
"671 -18 OFFCURVE",
"689 -20 OFFCURVE",
"697 -20 CURVE SMOOTH",
"709 -20 OFFCURVE",
"712 -17 OFFCURVE",
"712 -10 CURVE SMOOTH",
"712 -5 OFFCURVE",
"707 -4 OFFCURVE",
"702 -4 CURVE SMOOTH",
"698 -4 LINE SMOOTH",
"689 -5 OFFCURVE",
"679 -3 OFFCURVE",
"669 2 CURVE SMOOTH",
"649 13 OFFCURVE",
"626 36 OFFCURVE",
"601 70 CURVE",
"598 125 OFFCURVE",
"597 163 OFFCURVE",
"597 190 CURVE SMOOTH",
"597 370 OFFCURVE",
"636 484 OFFCURVE",
"713 531 CURVE SMOOTH",
"732 543 OFFCURVE",
"752 549 OFFCURVE",
"774 549 CURVE SMOOTH",
"815 549 OFFCURVE",
"851 529 OFFCURVE",
"866 495 CURVE",
"853 500 OFFCURVE",
"839 503 OFFCURVE",
"823 503 CURVE SMOOTH",
"815 503 OFFCURVE",
"808 502 OFFCURVE",
"800 501 CURVE SMOOTH",
"782 497 OFFCURVE",
"768 490 OFFCURVE",
"756 479 CURVE SMOOTH",
"745 468 OFFCURVE",
"739 456 OFFCURVE",
"739 444 CURVE SMOOTH",
"739 439 OFFCURVE",
"741 433 OFFCURVE",
"744 425 CURVE",
"724 420 OFFCURVE",
"709 411 OFFCURVE",
"698 396 CURVE SMOOTH",
"687 381 OFFCURVE",
"681 362 OFFCURVE",
"681 340 CURVE SMOOTH",
"681 316 OFFCURVE",
"693 297 OFFCURVE",
"716 282 CURVE SMOOTH",
"737 268 OFFCURVE",
"763 261 OFFCURVE",
"794 261 CURVE SMOOTH",
"834 261 OFFCURVE",
"868 273 OFFCURVE",
"897 298 CURVE SMOOTH",
"926 324 OFFCURVE",
"940 354 OFFCURVE",
"940 388 CURVE SMOOTH",
"940 417 OFFCURVE",
"929 444 OFFCURVE",
"906 467 CURVE SMOOTH",
"900 473 OFFCURVE",
"894 478 OFFCURVE",
"887 483 CURVE",
"877 543 OFFCURVE",
"827 576 OFFCURVE",
"764 576 CURVE SMOOTH",
"737 576 OFFCURVE",
"711 568 OFFCURVE",
"686 552 CURVE SMOOTH",
"611 505 OFFCURVE",
"574 398 OFFCURVE",
"574 231 CURVE SMOOTH",
"574 195 OFFCURVE",
"576 154 OFFCURVE",
"581 98 CURVE",
"521 189 OFFCURVE",
"471 292 OFFCURVE",
"416 423 CURVE SMOOTH",
"413 430 OFFCURVE",
"409 437 OFFCURVE",
"406 444 CURVE SMOOTH",
"396 465 LINE",
"396 495 LINE",
"395 519 LINE SMOOTH",
"394 529 OFFCURVE",
"385 534 OFFCURVE",
"375 534 CURVE SMOOTH",
"367 534 OFFCURVE",
"358 529 OFFCURVE",
"358 518 CURVE",
"321 556 OFFCURVE",
"283 575 OFFCURVE",
"245 575 CURVE SMOOTH",
"181 575 OFFCURVE",
"129 536 OFFCURVE",
"129 469 CURVE SMOOTH",
"129 434 OFFCURVE",
"149 401 OFFCURVE",
"180 368 CURVE",
"183 367 OFFCURVE",
"185 366 OFFCURVE",
"186 366 CURVE SMOOTH",
"191 366 OFFCURVE",
"193 369 OFFCURVE",
"193 374 CURVE SMOOTH",
"193 376 OFFCURVE",
"192 378 OFFCURVE",
"191 379 CURVE SMOOTH",
"162 408 OFFCURVE",
"148 438 OFFCURVE",
"148 469 CURVE SMOOTH",
"148 516 OFFCURVE",
"183 545 OFFCURVE",
"228 545 CURVE SMOOTH",
"277 545 OFFCURVE",
"322 514 OFFCURVE",
"361 452 CURVE",
"362 443 OFFCURVE",
"362 435 OFFCURVE",
"362 428 CURVE SMOOTH",
"362 406 LINE SMOOTH",
"362 366 OFFCURVE",
"358 306 OFFCURVE",
"347 244 CURVE SMOOTH",
"341 213 OFFCURVE",
"333 182 OFFCURVE",
"323 151 CURVE SMOOTH",
"302 90 OFFCURVE",
"271 39 OFFCURVE",
"227 9 CURVE SMOOTH",
"205 -7 OFFCURVE",
"179 -14 OFFCURVE",
"150 -14 CURVE SMOOTH",
"111 -14 OFFCURVE",
"78 0 OFFCURVE",
"51 28 CURVE SMOOTH",
"28 55 OFFCURVE",
"19 78 OFFCURVE",
"19 113 CURVE SMOOTH",
"19 174 OFFCURVE",
"55 225 OFFCURVE",
"115 225 CURVE SMOOTH",
"130 225 OFFCURVE",
"144 221 OFFCURVE",
"155 214 CURVE SMOOTH",
"161 210 OFFCURVE",
"164 213 OFFCURVE",
"164 218 CURVE SMOOTH",
"164 221 OFFCURVE",
"163 224 OFFCURVE",
"160 226 CURVE SMOOTH",
"145 237 OFFCURVE",
"128 243 OFFCURVE",
"110 243 CURVE SMOOTH",
"46 243 OFFCURVE",
"-2 187 OFFCURVE",
"-2 103 CURVE SMOOTH",
"-2 72 OFFCURVE",
"6 44 OFFCURVE",
"23 19 CURVE SMOOTH",
"47 -19 OFFCURVE",
"106 -36 OFFCURVE",
"149 -36 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"767 276 OFFCURVE",
"746 284 OFFCURVE",
"731 301 CURVE SMOOTH",
"718 315 OFFCURVE",
"711 332 OFFCURVE",
"711 353 CURVE SMOOTH",
"711 376 OFFCURVE",
"718 391 OFFCURVE",
"738 402 CURVE",
"751 378 OFFCURVE",
"773 359 OFFCURVE",
"794 359 CURVE SMOOTH",
"822 359 OFFCURVE",
"852 375 OFFCURVE",
"869 399 CURVE SMOOTH",
"878 412 OFFCURVE",
"884 427 OFFCURVE",
"887 441 CURVE",
"899 426 OFFCURVE",
"905 407 OFFCURVE",
"905 383 CURVE SMOOTH",
"905 355 OFFCURVE",
"894 331 OFFCURVE",
"873 310 CURVE SMOOTH",
"852 289 OFFCURVE",
"826 277 OFFCURVE",
"794 276 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"789 374 OFFCURVE",
"780 379 OFFCURVE",
"772 389 CURVE SMOOTH",
"767 396 OFFCURVE",
"763 405 OFFCURVE",
"763 414 CURVE SMOOTH",
"763 432 OFFCURVE",
"769 446 OFFCURVE",
"782 457 CURVE SMOOTH",
"794 467 OFFCURVE",
"808 472 OFFCURVE",
"826 472 CURVE SMOOTH",
"844 472 OFFCURVE",
"860 466 OFFCURVE",
"874 455 CURVE",
"873 437 OFFCURVE",
"865 418 OFFCURVE",
"851 402 CURVE SMOOTH",
"838 388 OFFCURVE",
"820 377 OFFCURVE",
"801 374 CURVE"
);
}
);
width = 945;
}
);
unicode = 2116;
},
{
glyphname = apostrophemod;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"13 643 CURVE SMOOTH",
"59 643 OFFCURVE",
"87 697 OFFCURVE",
"87 737 CURVE SMOOTH",
"87 761 OFFCURVE",
"77 780 OFFCURVE",
"55 780 CURVE SMOOTH",
"37 780 OFFCURVE",
"28 767 OFFCURVE",
"28 754 CURVE SMOOTH",
"28 743 OFFCURVE",
"35 733 OFFCURVE",
"51 733 CURVE SMOOTH",
"55 733 OFFCURVE",
"61 735 OFFCURVE",
"68 739 CURVE",
"69 734 OFFCURVE",
"70 729 OFFCURVE",
"70 725 CURVE SMOOTH",
"70 691 OFFCURVE",
"42 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 646 OFFCURVE",
"1 643 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"59 643 OFFCURVE",
"87 697 OFFCURVE",
"87 737 CURVE SMOOTH",
"87 761 OFFCURVE",
"77 780 OFFCURVE",
"55 780 CURVE SMOOTH",
"37 780 OFFCURVE",
"28 767 OFFCURVE",
"28 754 CURVE SMOOTH",
"28 743 OFFCURVE",
"35 733 OFFCURVE",
"51 733 CURVE SMOOTH",
"55 733 OFFCURVE",
"61 735 OFFCURVE",
"68 739 CURVE",
"69 734 OFFCURVE",
"70 729 OFFCURVE",
"70 725 CURVE SMOOTH",
"70 691 OFFCURVE",
"42 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 646 OFFCURVE",
"1 643 OFFCURVE",
"13 643 CURVE SMOOTH"
);
}
);
width = 87;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"126 647 OFFCURVE",
"127 644 OFFCURVE",
"139 644 CURVE SMOOTH",
"185 644 OFFCURVE",
"213 691 OFFCURVE",
"213 727 CURVE SMOOTH",
"213 748 OFFCURVE",
"203 764 OFFCURVE",
"181 764 CURVE SMOOTH",
"163 764 OFFCURVE",
"154 752 OFFCURVE",
"154 742 CURVE SMOOTH",
"154 732 OFFCURVE",
"161 723 OFFCURVE",
"177 723 CURVE SMOOTH",
"181 723 OFFCURVE",
"187 725 OFFCURVE",
"194 728 CURVE",
"201 700 OFFCURVE",
"172 656 OFFCURVE",
"139 656 CURVE SMOOTH",
"132 656 OFFCURVE",
"126 654 OFFCURVE",
"126 650 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"0 647 OFFCURVE",
"1 644 OFFCURVE",
"13 644 CURVE SMOOTH",
"59 644 OFFCURVE",
"87 691 OFFCURVE",
"87 727 CURVE SMOOTH",
"87 748 OFFCURVE",
"77 764 OFFCURVE",
"55 764 CURVE SMOOTH",
"37 764 OFFCURVE",
"28 752 OFFCURVE",
"28 742 CURVE SMOOTH",
"28 732 OFFCURVE",
"35 723 OFFCURVE",
"51 723 CURVE SMOOTH",
"55 723 OFFCURVE",
"61 725 OFFCURVE",
"68 728 CURVE",
"75 700 OFFCURVE",
"46 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"185 644 OFFCURVE",
"213 691 OFFCURVE",
"213 727 CURVE SMOOTH",
"213 748 OFFCURVE",
"203 764 OFFCURVE",
"181 764 CURVE SMOOTH",
"163 764 OFFCURVE",
"154 752 OFFCURVE",
"154 742 CURVE SMOOTH",
"154 732 OFFCURVE",
"161 723 OFFCURVE",
"177 723 CURVE SMOOTH",
"181 723 OFFCURVE",
"187 725 OFFCURVE",
"194 728 CURVE",
"195 725 OFFCURVE",
"195 722 OFFCURVE",
"195 719 CURVE SMOOTH",
"195 691 OFFCURVE",
"169 656 OFFCURVE",
"139 656 CURVE SMOOTH",
"132 656 OFFCURVE",
"126 654 OFFCURVE",
"126 650 CURVE SMOOTH",
"126 647 OFFCURVE",
"127 644 OFFCURVE",
"139 644 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"59 644 OFFCURVE",
"87 691 OFFCURVE",
"87 727 CURVE SMOOTH",
"87 748 OFFCURVE",
"77 764 OFFCURVE",
"55 764 CURVE SMOOTH",
"37 764 OFFCURVE",
"28 752 OFFCURVE",
"28 742 CURVE SMOOTH",
"28 732 OFFCURVE",
"35 723 OFFCURVE",
"51 723 CURVE SMOOTH",
"55 723 OFFCURVE",
"61 725 OFFCURVE",
"68 728 CURVE",
"69 725 OFFCURVE",
"69 722 OFFCURVE",
"69 719 CURVE SMOOTH",
"69 691 OFFCURVE",
"43 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 647 OFFCURVE",
"1 644 OFFCURVE",
"13 644 CURVE SMOOTH"
);
}
);
width = 213;
}
);
unicode = 02BA;
},
{
glyphname = primemod;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"13 644 CURVE SMOOTH",
"59 644 OFFCURVE",
"87 691 OFFCURVE",
"87 727 CURVE SMOOTH",
"87 748 OFFCURVE",
"77 764 OFFCURVE",
"55 764 CURVE SMOOTH",
"37 764 OFFCURVE",
"28 752 OFFCURVE",
"28 742 CURVE SMOOTH",
"28 732 OFFCURVE",
"35 723 OFFCURVE",
"51 723 CURVE SMOOTH",
"55 723 OFFCURVE",
"61 725 OFFCURVE",
"68 728 CURVE",
"75 700 OFFCURVE",
"46 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 647 OFFCURVE",
"1 644 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"59 644 OFFCURVE",
"87 691 OFFCURVE",
"87 727 CURVE SMOOTH",
"87 748 OFFCURVE",
"77 764 OFFCURVE",
"55 764 CURVE SMOOTH",
"37 764 OFFCURVE",
"28 752 OFFCURVE",
"28 742 CURVE SMOOTH",
"28 732 OFFCURVE",
"35 723 OFFCURVE",
"51 723 CURVE SMOOTH",
"55 723 OFFCURVE",
"61 725 OFFCURVE",
"68 728 CURVE",
"69 725 OFFCURVE",
"69 722 OFFCURVE",
"69 719 CURVE SMOOTH",
"69 691 OFFCURVE",
"43 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 647 OFFCURVE",
"1 644 OFFCURVE",
"13 644 CURVE SMOOTH"
);
}
);
width = 87;
}
);
unicode = 02B9;
},
{
glyphname = dieresiscomb;
lastChange = "2021-10-08 08:25:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{60, 260}";
},
{
name = top;
position = "{68, 307}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"34 683 OFFCURVE",
"42 692 OFFCURVE",
"42 708 CURVE SMOOTH",
"42 718 OFFCURVE",
"35 724 OFFCURVE",
"25 724 CURVE SMOOTH",
"8 724 OFFCURVE",
"0 717 OFFCURVE",
"0 704 CURVE SMOOTH",
"0 690 OFFCURVE",
"6 683 OFFCURVE",
"18 683 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 683 OFFCURVE",
"144 692 OFFCURVE",
"144 708 CURVE SMOOTH",
"144 718 OFFCURVE",
"137 724 OFFCURVE",
"127 724 CURVE SMOOTH",
"110 724 OFFCURVE",
"102 717 OFFCURVE",
"102 704 CURVE SMOOTH",
"102 690 OFFCURVE",
"108 683 OFFCURVE",
"120 683 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"119 300 OFFCURVE",
"127 309 OFFCURVE",
"127 325 CURVE SMOOTH",
"127 335 OFFCURVE",
"120 341 OFFCURVE",
"110 341 CURVE SMOOTH",
"93 341 OFFCURVE",
"85 334 OFFCURVE",
"85 321 CURVE SMOOTH",
"85 307 OFFCURVE",
"91 300 OFFCURVE",
"103 300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"34 300 OFFCURVE",
"42 309 OFFCURVE",
"42 325 CURVE SMOOTH",
"42 335 OFFCURVE",
"35 341 OFFCURVE",
"25 341 CURVE SMOOTH",
"8 341 OFFCURVE",
"0 334 OFFCURVE",
"0 321 CURVE SMOOTH",
"0 307 OFFCURVE",
"6 300 OFFCURVE",
"18 300 CURVE SMOOTH"
);
}
);
width = 127;
}
);
unicode = 0308;
},
{
glyphname = dotaccentcomb;
lastChange = "2021-10-08 08:25:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{21, 260}";
},
{
name = top;
position = "{25, 305}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"34 683 OFFCURVE",
"42 692 OFFCURVE",
"42 708 CURVE SMOOTH",
"42 718 OFFCURVE",
"35 724 OFFCURVE",
"25 724 CURVE SMOOTH",
"8 724 OFFCURVE",
"0 717 OFFCURVE",
"0 704 CURVE SMOOTH",
"0 690 OFFCURVE",
"6 683 OFFCURVE",
"18 683 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"34 300 OFFCURVE",
"42 309 OFFCURVE",
"42 325 CURVE SMOOTH",
"42 335 OFFCURVE",
"35 341 OFFCURVE",
"25 341 CURVE SMOOTH",
"8 341 OFFCURVE",
"0 334 OFFCURVE",
"0 321 CURVE SMOOTH",
"0 307 OFFCURVE",
"6 300 OFFCURVE",
"18 300 CURVE SMOOTH"
);
}
);
width = 42;
}
);
unicode = 0307;
},
{
glyphname = gravecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{68, 260}";
},
{
name = _topviet;
position = "{60, 169}";
},
{
name = top;
position = "{50, 404}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"96 651 OFFCURVE",
"100 655 OFFCURVE",
"100 659 CURVE SMOOTH",
"100 662 OFFCURVE",
"98 666 OFFCURVE",
"96 668 CURVE SMOOTH",
"72 692 OFFCURVE",
"37 730 OFFCURVE",
"20 747 CURVE SMOOTH",
"13 755 OFFCURVE",
"-5 720 OFFCURVE",
"2 716 CURVE SMOOTH",
"20 703 OFFCURVE",
"68 669 OFFCURVE",
"88 656 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"96 297 OFFCURVE",
"100 301 OFFCURVE",
"100 305 CURVE SMOOTH",
"100 308 OFFCURVE",
"98 312 OFFCURVE",
"96 314 CURVE SMOOTH",
"72 338 OFFCURVE",
"37 376 OFFCURVE",
"20 393 CURVE SMOOTH",
"13 401 OFFCURVE",
"-5 370 OFFCURVE",
"2 366 CURVE SMOOTH",
"20 353 OFFCURVE",
"68 315 OFFCURVE",
"88 302 CURVE SMOOTH"
);
}
);
width = 100;
}
);
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{32, 260}";
},
{
name = top;
position = "{50, 378}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"32 669 OFFCURVE",
"80 703 OFFCURVE",
"98 716 CURVE SMOOTH",
"105 720 OFFCURVE",
"87 755 OFFCURVE",
"80 747 CURVE SMOOTH",
"63 730 OFFCURVE",
"28 692 OFFCURVE",
"4 668 CURVE SMOOTH",
"2 666 OFFCURVE",
"0 662 OFFCURVE",
"0 660 CURVE SMOOTH",
"0 656 OFFCURVE",
"2 654 OFFCURVE",
"5 654 CURVE SMOOTH",
"7 654 OFFCURVE",
"9 654 OFFCURVE",
"12 656 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"32 315 OFFCURVE",
"80 353 OFFCURVE",
"98 366 CURVE SMOOTH",
"105 370 OFFCURVE",
"87 401 OFFCURVE",
"80 393 CURVE SMOOTH",
"63 376 OFFCURVE",
"28 338 OFFCURVE",
"4 314 CURVE SMOOTH",
"2 312 OFFCURVE",
"0 308 OFFCURVE",
"0 305 CURVE SMOOTH",
"0 301 OFFCURVE",
"4 297 OFFCURVE",
"12 302 CURVE SMOOTH"
);
}
);
width = 100;
}
);
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
lastChange = "2021-10-08 06:13:19 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{41, 260}";
},
{
name = top;
position = "{72, 428}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"16 669 OFFCURVE",
"22 683 OFFCURVE",
"26 692 CURVE SMOOTH",
"35 710 OFFCURVE",
"42 728 OFFCURVE",
"44 733 CURVE SMOOTH",
"45 736 OFFCURVE",
"46 739 OFFCURVE",
"46 741 CURVE SMOOTH",
"46 749 OFFCURVE",
"40 753 OFFCURVE",
"35 753 CURVE SMOOTH",
"29 753 OFFCURVE",
"23 749 OFFCURVE",
"21 742 CURVE SMOOTH",
"0 672 LINE SMOOTH",
"-2 667 OFFCURVE",
"6 667 OFFCURVE",
"11 668 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 669 OFFCURVE",
"102 683 OFFCURVE",
"106 692 CURVE SMOOTH",
"115 710 OFFCURVE",
"122 728 OFFCURVE",
"124 733 CURVE SMOOTH",
"125 736 OFFCURVE",
"126 739 OFFCURVE",
"126 741 CURVE SMOOTH",
"126 749 OFFCURVE",
"120 753 OFFCURVE",
"115 753 CURVE SMOOTH",
"109 753 OFFCURVE",
"103 749 OFFCURVE",
"101 742 CURVE SMOOTH",
"80 672 LINE SMOOTH",
"78 667 OFFCURVE",
"86 667 OFFCURVE",
"91 668 CURVE SMOOTH"
);
}
);
};
components = (
{
name = acutecomb;
transform = "{0.89101, 0.45399, -0.45399, 0.89101, 211, 30}";
},
{
name = acutecomb;
transform = "{0.89101, 0.45399, -0.45399, 0.89101, 154, 30}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 100;
}
);
unicode = 030B;
},
{
glyphname = caroncomb.alt;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{3, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"13 644 CURVE SMOOTH",
"47 644 OFFCURVE",
"71 689 OFFCURVE",
"71 723 CURVE SMOOTH",
"71 746 OFFCURVE",
"61 764 OFFCURVE",
"38 764 CURVE SMOOTH",
"20 764 OFFCURVE",
"10 750 OFFCURVE",
"10 737 CURVE SMOOTH",
"10 720 OFFCURVE",
"29 710 OFFCURVE",
"51 720 CURVE",
"55 695 OFFCURVE",
"31 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 647 OFFCURVE",
"1 644 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"53 140 OFFCURVE",
"71 185 OFFCURVE",
"71 219 CURVE SMOOTH",
"71 242 OFFCURVE",
"70 260 OFFCURVE",
"47 260 CURVE SMOOTH",
"29 260 OFFCURVE",
"25 247 OFFCURVE",
"25 236 CURVE SMOOTH",
"25 222 OFFCURVE",
"31 206 OFFCURVE",
"46 199 CURVE",
"50 174 OFFCURVE",
"37 152 OFFCURVE",
"23 152 CURVE SMOOTH",
"16 152 OFFCURVE",
"10 150 OFFCURVE",
"10 146 CURVE SMOOTH",
"10 143 OFFCURVE",
"11 140 OFFCURVE",
"23 140 CURVE SMOOTH"
);
}
);
width = 71;
}
);
},
{
glyphname = circumflexcomb;
lastChange = "2021-10-08 08:24:05 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{84, 260}";
},
{
name = top;
position = "{177, 355}";
},
{
name = topviet;
position = "{122, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"142 692 OFFCURVE",
"107 729 OFFCURVE",
"90 747 CURVE SMOOTH",
"88 749 OFFCURVE",
"87 750 OFFCURVE",
"85 750 CURVE SMOOTH",
"83 750 OFFCURVE",
"82 749 OFFCURVE",
"80 747 CURVE SMOOTH",
"63 729 OFFCURVE",
"28 692 OFFCURVE",
"4 668 CURVE SMOOTH",
"2 666 OFFCURVE",
"0 662 OFFCURVE",
"0 660 CURVE SMOOTH",
"0 656 OFFCURVE",
"2 654 OFFCURVE",
"5 654 CURVE SMOOTH",
"7 654 OFFCURVE",
"9 654 OFFCURVE",
"12 656 CURVE SMOOTH",
"28 667 OFFCURVE",
"63 691 OFFCURVE",
"85 707 CURVE",
"107 691 OFFCURVE",
"142 667 OFFCURVE",
"158 656 CURVE SMOOTH",
"166 651 OFFCURVE",
"170 655 OFFCURVE",
"170 659 CURVE SMOOTH",
"170 662 OFFCURVE",
"168 666 OFFCURVE",
"166 668 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"7 297 OFFCURVE",
"9 297 OFFCURVE",
"12 299 CURVE SMOOTH",
"28 310 OFFCURVE",
"66 339 OFFCURVE",
"88 355 CURVE",
"110 339 OFFCURVE",
"142 310 OFFCURVE",
"158 299 CURVE SMOOTH",
"166 294 OFFCURVE",
"170 298 OFFCURVE",
"170 302 CURVE SMOOTH",
"170 305 OFFCURVE",
"168 309 OFFCURVE",
"166 311 CURVE SMOOTH",
"143 335 OFFCURVE",
"110 372 OFFCURVE",
"93 390 CURVE SMOOTH",
"91 392 OFFCURVE",
"90 393 OFFCURVE",
"88 393 CURVE SMOOTH",
"86 393 OFFCURVE",
"85 392 OFFCURVE",
"83 390 CURVE SMOOTH",
"66 372 OFFCURVE",
"28 335 OFFCURVE",
"4 311 CURVE SMOOTH",
"2 309 OFFCURVE",
"0 305 OFFCURVE",
"0 303 CURVE SMOOTH",
"0 299 OFFCURVE",
"2 297 OFFCURVE",
"5 297 CURVE SMOOTH"
);
}
);
width = 170;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
lastChange = "2021-10-08 06:06:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{82, 260}";
},
{
name = top;
position = "{85, 406}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"168 737 OFFCURVE",
"170 741 OFFCURVE",
"170 743 CURVE SMOOTH",
"170 747 OFFCURVE",
"168 749 OFFCURVE",
"165 749 CURVE SMOOTH",
"163 749 OFFCURVE",
"161 749 OFFCURVE",
"158 747 CURVE SMOOTH",
"142 736 OFFCURVE",
"107 712 OFFCURVE",
"85 696 CURVE",
"63 712 OFFCURVE",
"28 736 OFFCURVE",
"12 747 CURVE SMOOTH",
"4 752 OFFCURVE",
"0 748 OFFCURVE",
"0 744 CURVE SMOOTH",
"0 741 OFFCURVE",
"2 737 OFFCURVE",
"4 735 CURVE SMOOTH",
"28 711 OFFCURVE",
"63 674 OFFCURVE",
"80 656 CURVE SMOOTH",
"82 654 OFFCURVE",
"83 653 OFFCURVE",
"85 653 CURVE SMOOTH",
"87 653 OFFCURVE",
"88 654 OFFCURVE",
"90 656 CURVE SMOOTH",
"107 674 OFFCURVE",
"142 711 OFFCURVE",
"166 735 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb;
transform = "{-1, 0, 0, -1, 170, 690}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{72, 260}";
},
{
name = top;
position = "{78, 358}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"118 658 OFFCURVE",
"155 696 OFFCURVE",
"155 724 CURVE SMOOTH",
"155 735 OFFCURVE",
"153 737 OFFCURVE",
"147 737 CURVE SMOOTH",
"140 737 OFFCURVE",
"126 689 OFFCURVE",
"75 689 CURVE SMOOTH",
"24 689 OFFCURVE",
"16 737 OFFCURVE",
"11 737 CURVE SMOOTH",
"5 737 OFFCURVE",
"0 735 OFFCURVE",
"0 724 CURVE SMOOTH",
"0 696 OFFCURVE",
"33 658 OFFCURVE",
"72 658 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"118 301 OFFCURVE",
"142 335 OFFCURVE",
"149 362 CURVE SMOOTH",
"150 367 OFFCURVE",
"151 371 OFFCURVE",
"151 374 CURVE SMOOTH",
"151 377 OFFCURVE",
"150 379 OFFCURVE",
"147 379 CURVE SMOOTH",
"140 379 OFFCURVE",
"124 330 OFFCURVE",
"73 330 CURVE SMOOTH",
"22 330 OFFCURVE",
"16 379 OFFCURVE",
"11 379 CURVE SMOOTH",
"7 379 OFFCURVE",
"6 376 OFFCURVE",
"6 371 CURVE SMOOTH",
"6 368 OFFCURVE",
"6 364 OFFCURVE",
"7 360 CURVE SMOOTH",
"11 332 OFFCURVE",
"33 301 OFFCURVE",
"72 301 CURVE SMOOTH"
);
}
);
width = 155;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{45, 260}";
},
{
name = top;
position = "{63, 405}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"98 650 OFFCURVE",
"121 682 OFFCURVE",
"121 712 CURVE SMOOTH",
"121 740 OFFCURVE",
"103 766 OFFCURVE",
"67 766 CURVE SMOOTH",
"23 766 OFFCURVE",
"0 732 OFFCURVE",
"0 700 CURVE SMOOTH",
"0 674 OFFCURVE",
"16 650 OFFCURVE",
"50 650 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 671 OFFCURVE",
"28 688 OFFCURVE",
"28 706 CURVE SMOOTH",
"28 725 OFFCURVE",
"39 745 OFFCURVE",
"63 745 CURVE SMOOTH",
"84 745 OFFCURVE",
"94 728 OFFCURVE",
"94 711 CURVE SMOOTH",
"94 691 OFFCURVE",
"82 671 OFFCURVE",
"57 671 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"98 310 OFFCURVE",
"121 342 OFFCURVE",
"121 372 CURVE SMOOTH",
"121 400 OFFCURVE",
"103 426 OFFCURVE",
"67 426 CURVE SMOOTH",
"23 426 OFFCURVE",
"0 392 OFFCURVE",
"0 360 CURVE SMOOTH",
"0 334 OFFCURVE",
"16 310 OFFCURVE",
"50 310 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 331 OFFCURVE",
"28 348 OFFCURVE",
"28 366 CURVE SMOOTH",
"28 385 OFFCURVE",
"39 405 OFFCURVE",
"63 405 CURVE SMOOTH",
"84 405 OFFCURVE",
"94 388 OFFCURVE",
"94 371 CURVE SMOOTH",
"94 351 OFFCURVE",
"82 331 OFFCURVE",
"57 331 CURVE SMOOTH"
);
}
);
width = 121;
}
);
unicode = 030A;
},
{
glyphname = tildecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{79, 260}";
},
{
name = _topviet;
position = "{109, 151}";
},
{
name = top;
position = "{79, 341}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"139 677 OFFCURVE",
"157 694 OFFCURVE",
"157 732 CURVE SMOOTH",
"157 738 OFFCURVE",
"153 742 OFFCURVE",
"149 742 CURVE SMOOTH",
"146 742 OFFCURVE",
"143 739 OFFCURVE",
"142 732 CURVE SMOOTH",
"140 714 OFFCURVE",
"133 708 OFFCURVE",
"117 708 CURVE SMOOTH",
"105 708 OFFCURVE",
"76 737 OFFCURVE",
"44 734 CURVE SMOOTH",
"17 730 OFFCURVE",
"0 715 OFFCURVE",
"0 684 CURVE SMOOTH",
"0 678 OFFCURVE",
"2 676 OFFCURVE",
"5 676 CURVE SMOOTH",
"9 676 OFFCURVE",
"14 680 OFFCURVE",
"14 684 CURVE SMOOTH",
"16 697 OFFCURVE",
"31 705 OFFCURVE",
"42 705 CURVE SMOOTH",
"70 705 OFFCURVE",
"83 677 OFFCURVE",
"116 677 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"9 302 OFFCURVE",
"11 306 OFFCURVE",
"11 310 CURVE SMOOTH",
"13 323 OFFCURVE",
"31 331 OFFCURVE",
"42 331 CURVE SMOOTH",
"70 331 OFFCURVE",
"78 303 OFFCURVE",
"111 303 CURVE SMOOTH",
"139 303 OFFCURVE",
"157 320 OFFCURVE",
"157 358 CURVE SMOOTH",
"157 364 OFFCURVE",
"156 367 OFFCURVE",
"152 367 CURVE SMOOTH",
"149 367 OFFCURVE",
"146 363 OFFCURVE",
"145 356 CURVE SMOOTH",
"143 338 OFFCURVE",
"133 334 OFFCURVE",
"112 334 CURVE SMOOTH",
"100 334 OFFCURVE",
"76 363 OFFCURVE",
"44 360 CURVE SMOOTH",
"17 356 OFFCURVE",
"0 341 OFFCURVE",
"0 310 CURVE SMOOTH",
"0 304 OFFCURVE",
"2 302 OFFCURVE",
"5 302 CURVE SMOOTH"
);
}
);
width = 157;
}
);
unicode = 0303;
},
{
color = 3;
glyphname = tildecomb_dotaccentcomb;
lastChange = "2021-10-08 06:09:20 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"139 672 OFFCURVE",
"157 689 OFFCURVE",
"157 727 CURVE SMOOTH",
"157 733 OFFCURVE",
"153 737 OFFCURVE",
"149 737 CURVE SMOOTH",
"146 737 OFFCURVE",
"143 734 OFFCURVE",
"142 727 CURVE SMOOTH",
"140 709 OFFCURVE",
"133 703 OFFCURVE",
"117 703 CURVE SMOOTH",
"105 703 OFFCURVE",
"76 732 OFFCURVE",
"44 729 CURVE SMOOTH",
"17 725 OFFCURVE",
"0 710 OFFCURVE",
"0 679 CURVE SMOOTH",
"0 673 OFFCURVE",
"2 671 OFFCURVE",
"5 671 CURVE SMOOTH",
"9 671 OFFCURVE",
"14 675 OFFCURVE",
"14 679 CURVE SMOOTH",
"16 692 OFFCURVE",
"31 700 OFFCURVE",
"42 700 CURVE SMOOTH",
"70 700 OFFCURVE",
"83 672 OFFCURVE",
"116 672 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 752 OFFCURVE",
"105 761 OFFCURVE",
"105 777 CURVE SMOOTH",
"105 787 OFFCURVE",
"98 793 OFFCURVE",
"88 793 CURVE SMOOTH",
"71 793 OFFCURVE",
"63 786 OFFCURVE",
"63 773 CURVE SMOOTH",
"63 759 OFFCURVE",
"69 752 OFFCURVE",
"81 752 CURVE SMOOTH"
);
}
);
};
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 58, 81}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 157;
}
);
},
{
color = 3;
glyphname = tildecomb_macroncomb;
lastChange = "2021-10-08 06:59:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{79, 260}";
},
{
name = top;
position = "{79, 401}";
}
);
background = {
components = (
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, -19}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 13, 50}";
}
);
};
components = (
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, -4}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 5, 77}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 157;
}
);
},
{
glyphname = macroncomb;
lastChange = "2021-10-08 06:59:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{74, 260}";
},
{
name = top;
position = "{74, 343}";
}
);
background = {
anchors = (
{
name = bottom;
position = "{86, 534}";
}
);
paths = (
{
closed = 1;
nodes = (
"26 690 OFFCURVE",
"91 693 OFFCURVE",
"138 693 CURVE SMOOTH",
"147 693 OFFCURVE",
"148 708 OFFCURVE",
"140 712 CURVE SMOOTH",
"133 715 OFFCURVE",
"104 718 OFFCURVE",
"74 718 CURVE SMOOTH",
"47 718 OFFCURVE",
"29 717 OFFCURVE",
"16 716 CURVE SMOOTH",
"8 715 OFFCURVE",
"3 708 OFFCURVE",
"3 703 CURVE SMOOTH",
"3 693 OFFCURVE",
"8 690 OFFCURVE",
"17 690 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"23 315 OFFCURVE",
"91 318 OFFCURVE",
"138 318 CURVE SMOOTH",
"143 318 OFFCURVE",
"145 322 OFFCURVE",
"145 327 CURVE SMOOTH",
"145 331 OFFCURVE",
"144 335 OFFCURVE",
"140 337 CURVE SMOOTH",
"133 340 OFFCURVE",
"104 343 OFFCURVE",
"74 343 CURVE SMOOTH",
"47 343 OFFCURVE",
"26 342 OFFCURVE",
"13 341 CURVE SMOOTH",
"5 340 OFFCURVE",
"0 333 OFFCURVE",
"0 328 CURVE SMOOTH",
"0 318 OFFCURVE",
"5 315 OFFCURVE",
"14 315 CURVE SMOOTH"
);
}
);
width = 145;
}
);
unicode = 0304;
},
{
glyphname = hookabovecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{41, 260}";
},
{
name = _topviet;
position = "{-7, 194}";
},
{
name = top;
position = "{48, 405}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"0 740 OFFCURVE",
"3 733 OFFCURVE",
"8 735 CURVE SMOOTH",
"18 739 OFFCURVE",
"36 745 OFFCURVE",
"49 745 CURVE SMOOTH",
"81 745 OFFCURVE",
"70 695 OFFCURVE",
"31 658 CURVE",
"27 652 OFFCURVE",
"43 654 OFFCURVE",
"47 656 CURVE",
"71 675 OFFCURVE",
"96 707 OFFCURVE",
"96 735 CURVE SMOOTH",
"96 751 OFFCURVE",
"87 770 OFFCURVE",
"61 770 CURVE SMOOTH",
"27 770 OFFCURVE",
"0 750 OFFCURVE",
"0 743 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"78 328 OFFCURVE",
"96 342 OFFCURVE",
"96 370 CURVE SMOOTH",
"96 386 OFFCURVE",
"87 405 OFFCURVE",
"61 405 CURVE SMOOTH",
"27 405 OFFCURVE",
"0 385 OFFCURVE",
"0 378 CURVE SMOOTH",
"0 375 OFFCURVE",
"2 370 OFFCURVE",
"6 370 CURVE SMOOTH",
"8 370 LINE",
"18 374 OFFCURVE",
"36 380 OFFCURVE",
"49 380 CURVE SMOOTH",
"62 380 OFFCURVE",
"68 372 OFFCURVE",
"68 360 CURVE SMOOTH",
"68 342 OFFCURVE",
"61 333 OFFCURVE",
"38 311 CURVE",
"34 305 OFFCURVE",
"50 307 OFFCURVE",
"54 309 CURVE"
);
}
);
width = 96;
}
);
unicode = 0309;
},
{
glyphname = dblgravecomb;
lastChange = "2021-10-08 06:52:16 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{134, 260}";
},
{
name = top;
position = "{75, 419}";
}
);
background = {
anchors = (
{
name = _top;
position = "{153, 594}";
},
{
name = top;
position = "{128, 734}";
}
);
components = (
{
name = gravecomb;
transform = "{0.98771, -0.15631, 0.15631, 0.98771, -48, 22}";
},
{
name = gravecomb;
}
);
};
components = (
{
name = gravecomb.case;
transform = "{0.95634, -0.29225, 0.29225, 0.95634, -32, 44}";
},
{
name = gravecomb.case;
transform = "{0.99027, -0.13917, 0.13917, 0.99027, -44, 16}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
unicode = 030F;
},
{
glyphname = breveinvertedcomb;
lastChange = "2021-10-08 05:34:06 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{78, 260}";
},
{
name = top;
position = "{78, 358}";
}
);
background = {
anchors = (
{
name = _top;
position = "{58, 602}";
},
{
name = top;
position = "{58, 692}";
}
);
paths = (
{
closed = 1;
nodes = (
"37 733 OFFCURVE",
"0 695 OFFCURVE",
"0 667 CURVE SMOOTH",
"0 656 OFFCURVE",
"2 654 OFFCURVE",
"8 654 CURVE SMOOTH",
"15 654 OFFCURVE",
"29 702 OFFCURVE",
"80 702 CURVE SMOOTH",
"131 702 OFFCURVE",
"139 654 OFFCURVE",
"144 654 CURVE SMOOTH",
"150 654 OFFCURVE",
"155 656 OFFCURVE",
"155 667 CURVE SMOOTH",
"155 695 OFFCURVE",
"122 733 OFFCURVE",
"83 733 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb;
transform = "{-1, 0, 0, -1, 155, 676}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
unicode = 0311;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{33, 260}";
},
{
name = top;
position = "{36, 430}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"71 769 OFFCURVE",
"70 772 OFFCURVE",
"58 772 CURVE SMOOTH",
"24 772 OFFCURVE",
"0 727 OFFCURVE",
"0 693 CURVE SMOOTH",
"0 670 OFFCURVE",
"10 652 OFFCURVE",
"33 652 CURVE SMOOTH",
"51 652 OFFCURVE",
"61 666 OFFCURVE",
"61 679 CURVE SMOOTH",
"61 696 OFFCURVE",
"42 706 OFFCURVE",
"20 696 CURVE",
"16 721 OFFCURVE",
"40 760 OFFCURVE",
"58 760 CURVE SMOOTH",
"65 760 OFFCURVE",
"71 762 OFFCURVE",
"71 766 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"51 300 OFFCURVE",
"61 314 OFFCURVE",
"61 327 CURVE SMOOTH",
"61 339 OFFCURVE",
"51 348 OFFCURVE",
"37 348 CURVE SMOOTH",
"32 348 OFFCURVE",
"26 347 OFFCURVE",
"20 344 CURVE",
"16 369 OFFCURVE",
"40 408 OFFCURVE",
"58 408 CURVE SMOOTH",
"65 408 OFFCURVE",
"71 410 OFFCURVE",
"71 414 CURVE SMOOTH",
"71 417 OFFCURVE",
"70 420 OFFCURVE",
"58 420 CURVE SMOOTH",
"24 420 OFFCURVE",
"0 375 OFFCURVE",
"0 341 CURVE SMOOTH",
"0 318 OFFCURVE",
"10 300 OFFCURVE",
"33 300 CURVE SMOOTH"
);
}
);
width = 71;
}
);
unicode = 0312;
},
{
glyphname = horncomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{-17, 260}";
},
{
name = topright;
position = "{114, 313}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"104 707 OFFCURVE",
"104 750 CURVE SMOOTH",
"104 763 OFFCURVE",
"101 767 OFFCURVE",
"94 767 CURVE SMOOTH",
"86 767 OFFCURVE",
"81 762 OFFCURVE",
"79 750 CURVE SMOOTH",
"69 683 OFFCURVE",
"54 668 OFFCURVE",
"31 668 CURVE SMOOTH",
"25 668 OFFCURVE",
"16 671 OFFCURVE",
"8 675 CURVE SMOOTH",
"2 678 OFFCURVE",
"0 673 OFFCURVE",
"0 670 CURVE SMOOTH",
"0 669 OFFCURVE",
"0 668 OFFCURVE",
"1 666 CURVE",
"7 656 OFFCURVE",
"20 652 OFFCURVE",
"30 652 CURVE SMOOTH",
"85 652 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"76 234 OFFCURVE",
"94 250 OFFCURVE",
"94 274 CURVE SMOOTH",
"94 281 OFFCURVE",
"93 288 OFFCURVE",
"90 296 CURVE SMOOTH",
"86 309 OFFCURVE",
"83 313 OFFCURVE",
"76 313 CURVE SMOOTH",
"69 313 OFFCURVE",
"65 309 OFFCURVE",
"65 301 CURVE SMOOTH",
"65 296 LINE SMOOTH",
"66 291 OFFCURVE",
"66 287 OFFCURVE",
"66 283 CURVE SMOOTH",
"66 260 OFFCURVE",
"54 250 OFFCURVE",
"34 250 CURVE SMOOTH",
"28 250 OFFCURVE",
"19 253 OFFCURVE",
"11 257 CURVE SMOOTH",
"5 260 OFFCURVE",
"3 255 OFFCURVE",
"3 252 CURVE SMOOTH",
"3 251 OFFCURVE",
"3 250 OFFCURVE",
"4 248 CURVE SMOOTH",
"10 238 OFFCURVE",
"23 234 OFFCURVE",
"33 234 CURVE SMOOTH"
);
}
);
width = 104;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
lastChange = "2021-10-08 05:58:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{21, 0}";
},
{
name = bottom;
position = "{21, -101}";
}
);
background = {
components = (
{
name = period;
transform = "{1, 0, 0, 1, -55, -209}";
}
);
};
components = (
{
name = period;
transform = "{1, 0, 0, 1, -55, -124}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 42;
}
);
unicode = 0323;
},
{
glyphname = dieresisbelowcomb;
lastChange = "2021-10-08 05:26:13 +0000";
layers = (
{
background = {
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 0, -667}";
}
);
};
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 6, -411}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 144;
}
);
unicode = 0324;
},
{
color = 3;
glyphname = commaaccent;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{36, 0}";
},
{
name = bottom;
position = "{36, -181}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"0 -205 OFFCURVE",
"1 -208 OFFCURVE",
"13 -208 CURVE SMOOTH",
"47 -208 OFFCURVE",
"71 -163 OFFCURVE",
"71 -129 CURVE SMOOTH",
"71 -106 OFFCURVE",
"61 -88 OFFCURVE",
"38 -88 CURVE SMOOTH",
"20 -88 OFFCURVE",
"10 -102 OFFCURVE",
"10 -115 CURVE SMOOTH",
"10 -132 OFFCURVE",
"29 -142 OFFCURVE",
"51 -132 CURVE",
"55 -157 OFFCURVE",
"31 -196 OFFCURVE",
"13 -196 CURVE SMOOTH",
"6 -196 OFFCURVE",
"0 -198 OFFCURVE",
"0 -202 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"47 -181 OFFCURVE",
"71 -136 OFFCURVE",
"71 -102 CURVE SMOOTH",
"71 -79 OFFCURVE",
"61 -61 OFFCURVE",
"38 -61 CURVE SMOOTH",
"20 -61 OFFCURVE",
"10 -75 OFFCURVE",
"10 -88 CURVE SMOOTH",
"10 -100 OFFCURVE",
"20 -109 OFFCURVE",
"34 -109 CURVE SMOOTH",
"39 -109 OFFCURVE",
"45 -108 OFFCURVE",
"51 -105 CURVE",
"55 -130 OFFCURVE",
"31 -169 OFFCURVE",
"13 -169 CURVE SMOOTH",
"6 -169 OFFCURVE",
"0 -171 OFFCURVE",
"0 -175 CURVE SMOOTH",
"0 -178 OFFCURVE",
"1 -181 OFFCURVE",
"13 -181 CURVE SMOOTH"
);
}
);
width = 71;
}
);
note = commaaccent;
unicode = F6C3;
},
{
glyphname = commaaccentcomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{36, 0}";
},
{
name = bottom;
position = "{36, -180}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"0 -205 OFFCURVE",
"1 -208 OFFCURVE",
"13 -208 CURVE SMOOTH",
"47 -208 OFFCURVE",
"71 -163 OFFCURVE",
"71 -129 CURVE SMOOTH",
"71 -106 OFFCURVE",
"61 -88 OFFCURVE",
"38 -88 CURVE SMOOTH",
"20 -88 OFFCURVE",
"10 -102 OFFCURVE",
"10 -115 CURVE SMOOTH",
"10 -132 OFFCURVE",
"29 -142 OFFCURVE",
"51 -132 CURVE",
"55 -157 OFFCURVE",
"31 -196 OFFCURVE",
"13 -196 CURVE SMOOTH",
"6 -196 OFFCURVE",
"0 -198 OFFCURVE",
"0 -202 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"47 -180 OFFCURVE",
"71 -135 OFFCURVE",
"71 -101 CURVE SMOOTH",
"71 -78 OFFCURVE",
"61 -60 OFFCURVE",
"38 -60 CURVE SMOOTH",
"20 -60 OFFCURVE",
"10 -74 OFFCURVE",
"10 -87 CURVE SMOOTH",
"10 -99 OFFCURVE",
"20 -108 OFFCURVE",
"34 -108 CURVE SMOOTH",
"39 -108 OFFCURVE",
"45 -107 OFFCURVE",
"51 -104 CURVE",
"55 -129 OFFCURVE",
"31 -168 OFFCURVE",
"13 -168 CURVE SMOOTH",
"6 -168 OFFCURVE",
"0 -170 OFFCURVE",
"0 -174 CURVE SMOOTH",
"0 -177 OFFCURVE",
"1 -180 OFFCURVE",
"13 -180 CURVE SMOOTH"
);
}
);
width = 71;
}
);
unicode = 0326;
},
{
glyphname = cedillacomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{67, 0}";
},
{
name = bottom;
position = "{63, -120}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"25 -166 OFFCURVE",
"49 -166 CURVE SMOOTH",
"134 -166 OFFCURVE",
"154 -72 OFFCURVE",
"74 -44 CURVE",
"77 -33 OFFCURVE",
"95 -3 OFFCURVE",
"95 0 CURVE SMOOTH",
"95 5 OFFCURVE",
"89 5 OFFCURVE",
"87 5 CURVE",
"76 -9 OFFCURVE",
"60 -28 OFFCURVE",
"52 -38 CURVE SMOOTH",
"44 -48 OFFCURVE",
"53 -53 OFFCURVE",
"61 -57 CURVE SMOOTH",
"87 -69 OFFCURVE",
"94 -86 OFFCURVE",
"94 -104 CURVE SMOOTH",
"94 -125 OFFCURVE",
"77 -145 OFFCURVE",
"49 -145 CURVE SMOOTH",
"33 -145 OFFCURVE",
"19 -136 OFFCURVE",
"14 -126 CURVE SMOOTH",
"12 -122 OFFCURVE",
"10 -121 OFFCURVE",
"7 -121 CURVE SMOOTH",
"4 -121 OFFCURVE",
"0 -125 OFFCURVE",
"0 -131 CURVE SMOOTH",
"0 -148 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"106 -120 OFFCURVE",
"131 -99 OFFCURVE",
"131 -73 CURVE SMOOTH",
"131 -48 OFFCURVE",
"108 -29 OFFCURVE",
"82 -31 CURVE",
"83 -22 OFFCURVE",
"92 -5 OFFCURVE",
"92 2 CURVE SMOOTH",
"92 6 OFFCURVE",
"83 6 OFFCURVE",
"81 6 CURVE",
"76 -3 OFFCURVE",
"66 -17 OFFCURVE",
"60 -26 CURVE SMOOTH",
"58 -29 OFFCURVE",
"57 -32 OFFCURVE",
"57 -34 CURVE SMOOTH",
"57 -40 OFFCURVE",
"61 -45 OFFCURVE",
"66 -46 CURVE SMOOTH",
"90 -48 OFFCURVE",
"102 -53 OFFCURVE",
"102 -73 CURVE SMOOTH",
"102 -90 OFFCURVE",
"88 -103 OFFCURVE",
"65 -103 CURVE SMOOTH",
"51 -103 OFFCURVE",
"40 -95 OFFCURVE",
"36 -87 CURVE SMOOTH",
"34 -84 OFFCURVE",
"32 -83 OFFCURVE",
"30 -83 CURVE SMOOTH",
"27 -83 OFFCURVE",
"24 -86 OFFCURVE",
"24 -91 CURVE SMOOTH",
"24 -105 OFFCURVE",
"45 -120 OFFCURVE",
"65 -120 CURVE SMOOTH"
);
}
);
width = 125;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{79, 5}";
}
);
background = {
hints = (
{
horizontal = 1;
place = "{662, -98}";
type = Stem;
},
{
horizontal = 1;
place = "{483, 21}";
target = up;
type = BottomGhost;
},
{
place = "{158, -103}";
type = Stem;
}
);
paths = (
{
closed = 1;
nodes = (
"105 -90 OFFCURVE",
"102 -85 OFFCURVE",
"96 -87 CURVE SMOOTH",
"85 -92 OFFCURVE",
"68 -100 OFFCURVE",
"49 -100 CURVE SMOOTH",
"14 -100 OFFCURVE",
"29 -39 OFFCURVE",
"72 1 CURVE",
"72 3 OFFCURVE",
"70 5 OFFCURVE",
"66 5 CURVE SMOOTH",
"62 5 OFFCURVE",
"58 4 OFFCURVE",
"57 3 CURVE SMOOTH",
"30 -19 OFFCURVE",
"0 -53 OFFCURVE",
"0 -84 CURVE SMOOTH",
"0 -102 OFFCURVE",
"9 -123 OFFCURVE",
"38 -123 CURVE SMOOTH",
"75 -123 OFFCURVE",
"105 -101 OFFCURVE",
"105 -93 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"75 -128 OFFCURVE",
"105 -106 OFFCURVE",
"105 -98 CURVE SMOOTH",
"105 -95 OFFCURVE",
"103 -92 OFFCURVE",
"99 -92 CURVE SMOOTH",
"96 -92 LINE",
"85 -97 OFFCURVE",
"68 -105 OFFCURVE",
"49 -105 CURVE SMOOTH",
"36 -105 OFFCURVE",
"30 -96 OFFCURVE",
"30 -83 CURVE SMOOTH",
"30 -61 OFFCURVE",
"49 -24 OFFCURVE",
"72 1 CURVE",
"72 3 OFFCURVE",
"70 5 OFFCURVE",
"66 5 CURVE SMOOTH",
"62 5 OFFCURVE",
"58 4 OFFCURVE",
"57 3 CURVE SMOOTH",
"30 -17 OFFCURVE",
"0 -61 OFFCURVE",
"0 -89 CURVE SMOOTH",
"0 -107 OFFCURVE",
"9 -128 OFFCURVE",
"38 -128 CURVE SMOOTH"
);
}
);
width = 105;
}
);
unicode = 0328;
},
{
glyphname = brevebelowcomb;
lastChange = "2021-10-08 05:28:46 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{78, 0}";
},
{
name = bottom;
position = "{78, -130}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{136, -41}";
},
{
name = bottom;
position = "{132, -132}";
}
);
paths = (
{
closed = 1;
nodes = (
"118 -194 OFFCURVE",
"155 -156 OFFCURVE",
"155 -128 CURVE SMOOTH",
"155 -117 OFFCURVE",
"153 -115 OFFCURVE",
"147 -115 CURVE SMOOTH",
"140 -115 OFFCURVE",
"126 -163 OFFCURVE",
"75 -163 CURVE SMOOTH",
"24 -163 OFFCURVE",
"16 -115 OFFCURVE",
"11 -115 CURVE SMOOTH",
"5 -115 OFFCURVE",
"0 -117 OFFCURVE",
"0 -128 CURVE SMOOTH",
"0 -156 OFFCURVE",
"33 -194 OFFCURVE",
"72 -194 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb;
transform = "{1, 0, 0, 1, 0, -440}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
unicode = 032E;
},
{
glyphname = macronbelowcomb;
lastChange = "2021-10-08 05:28:59 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{71, 0}";
},
{
name = bottom;
position = "{83, 534}";
}
);
background = {
anchors = (
{
name = bottom;
position = "{83, 534}";
}
);
paths = (
{
closed = 1;
nodes = (
"88 -161 OFFCURVE",
"135 -161 CURVE SMOOTH",
"144 -161 OFFCURVE",
"145 -146 OFFCURVE",
"137 -142 CURVE SMOOTH",
"130 -139 OFFCURVE",
"101 -136 OFFCURVE",
"71 -136 CURVE SMOOTH",
"44 -136 OFFCURVE",
"26 -137 OFFCURVE",
"13 -138 CURVE SMOOTH",
"5 -139 OFFCURVE",
"0 -146 OFFCURVE",
"0 -151 CURVE SMOOTH",
"0 -161 OFFCURVE",
"5 -164 OFFCURVE",
"14 -164 CURVE SMOOTH",
"23 -164 OFFCURVE"
);
}
);
};
components = (
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, -405}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 142;
}
);
unicode = 0331;
},
{
glyphname = strokeshortcomb;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _center;
position = "{71, 110}";
}
);
background = {
anchors = (
{
name = _center;
position = "{149, 600}";
}
);
paths = (
{
closed = 1;
nodes = (
"88 99 OFFCURVE",
"135 99 CURVE SMOOTH",
"144 99 OFFCURVE",
"145 114 OFFCURVE",
"137 118 CURVE SMOOTH",
"130 121 OFFCURVE",
"101 124 OFFCURVE",
"71 124 CURVE SMOOTH",
"44 124 OFFCURVE",
"26 123 OFFCURVE",
"13 122 CURVE SMOOTH",
"5 121 OFFCURVE",
"0 114 OFFCURVE",
"0 109 CURVE SMOOTH",
"0 99 OFFCURVE",
"5 96 OFFCURVE",
"14 96 CURVE SMOOTH",
"23 96 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"23 96 OFFCURVE",
"88 99 OFFCURVE",
"135 99 CURVE SMOOTH",
"140 99 OFFCURVE",
"142 103 OFFCURVE",
"142 108 CURVE SMOOTH",
"142 112 OFFCURVE",
"141 116 OFFCURVE",
"137 118 CURVE SMOOTH",
"130 121 OFFCURVE",
"101 124 OFFCURVE",
"71 124 CURVE SMOOTH",
"44 124 OFFCURVE",
"26 123 OFFCURVE",
"13 122 CURVE SMOOTH",
"5 121 OFFCURVE",
"0 114 OFFCURVE",
"0 109 CURVE SMOOTH",
"0 99 OFFCURVE",
"5 96 OFFCURVE",
"14 96 CURVE SMOOTH"
);
}
);
width = 142;
}
);
unicode = 0335;
},
{
glyphname = dieresis;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = dieresiscomb;
}
);
};
components = (
{
name = dieresiscomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 144;
}
);
unicode = 00A8;
},
{
glyphname = dotaccent;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = dotaccentcomb;
}
);
};
components = (
{
name = dotaccentcomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 42;
}
);
unicode = 02D9;
},
{
glyphname = grave;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = gravecomb;
}
);
};
components = (
{
name = gravecomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 100;
}
);
unicode = 0060;
},
{
glyphname = acute;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = acutecomb;
}
);
};
components = (
{
name = acutecomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 100;
}
);
unicode = 00B4;
},
{
glyphname = hungarumlaut;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = hungarumlautcomb;
}
);
};
components = (
{
name = hungarumlautcomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 126;
}
);
unicode = 02DD;
},
{
glyphname = circumflex;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
unicode = 02C6;
},
{
glyphname = caron;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = caroncomb;
}
);
};
components = (
{
name = caroncomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
unicode = 02C7;
},
{
glyphname = breve;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
}
);
};
components = (
{
name = brevecomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
unicode = 02D8;
},
{
glyphname = ring;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = ringcomb;
}
);
};
components = (
{
name = ringcomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 121;
}
);
unicode = 02DA;
},
{
glyphname = tilde;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = tildecomb;
}
);
};
components = (
{
name = tildecomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 157;
}
);
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = macroncomb;
}
);
};
components = (
{
name = macroncomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 142;
}
);
unicode = 00AF;
},
{
glyphname = cedilla;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = cedillacomb;
}
);
};
components = (
{
name = cedillacomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 125;
}
);
unicode = 00B8;
},
{
glyphname = ogonek;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
background = {
components = (
{
name = ogonekcomb;
}
);
};
components = (
{
name = ogonekcomb;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 105;
}
);
unicode = 02DB;
},
{
color = 6;
glyphname = dieresiscomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{64, 260}";
},
{
name = top;
position = "{64, 317}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"34 683 OFFCURVE",
"42 692 OFFCURVE",
"42 708 CURVE SMOOTH",
"42 718 OFFCURVE",
"35 724 OFFCURVE",
"25 724 CURVE SMOOTH",
"8 724 OFFCURVE",
"0 717 OFFCURVE",
"0 704 CURVE SMOOTH",
"0 690 OFFCURVE",
"6 683 OFFCURVE",
"18 683 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136 683 OFFCURVE",
"144 692 OFFCURVE",
"144 708 CURVE SMOOTH",
"144 718 OFFCURVE",
"137 724 OFFCURVE",
"127 724 CURVE SMOOTH",
"110 724 OFFCURVE",
"102 717 OFFCURVE",
"102 704 CURVE SMOOTH",
"102 690 OFFCURVE",
"108 683 OFFCURVE",
"120 683 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"119 300 OFFCURVE",
"127 309 OFFCURVE",
"127 325 CURVE SMOOTH",
"127 335 OFFCURVE",
"120 341 OFFCURVE",
"110 341 CURVE SMOOTH",
"93 341 OFFCURVE",
"85 334 OFFCURVE",
"85 321 CURVE SMOOTH",
"85 307 OFFCURVE",
"91 300 OFFCURVE",
"103 300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"34 300 OFFCURVE",
"42 309 OFFCURVE",
"42 325 CURVE SMOOTH",
"42 335 OFFCURVE",
"35 341 OFFCURVE",
"25 341 CURVE SMOOTH",
"8 341 OFFCURVE",
"0 334 OFFCURVE",
"0 321 CURVE SMOOTH",
"0 307 OFFCURVE",
"6 300 OFFCURVE",
"18 300 CURVE SMOOTH"
);
}
);
width = 127;
}
);
},
{
color = 6;
glyphname = dotaccentcomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{21, 260}";
},
{
name = top;
position = "{21, 321}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"34 683 OFFCURVE",
"42 692 OFFCURVE",
"42 708 CURVE SMOOTH",
"42 718 OFFCURVE",
"35 724 OFFCURVE",
"25 724 CURVE SMOOTH",
"8 724 OFFCURVE",
"0 717 OFFCURVE",
"0 704 CURVE SMOOTH",
"0 690 OFFCURVE",
"6 683 OFFCURVE",
"18 683 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"34 300 OFFCURVE",
"42 309 OFFCURVE",
"42 325 CURVE SMOOTH",
"42 335 OFFCURVE",
"35 341 OFFCURVE",
"25 341 CURVE SMOOTH",
"8 341 OFFCURVE",
"0 334 OFFCURVE",
"0 321 CURVE SMOOTH",
"0 307 OFFCURVE",
"6 300 OFFCURVE",
"18 300 CURVE SMOOTH"
);
}
);
width = 42;
}
);
},
{
color = 6;
glyphname = gravecomb.case;
lastChange = "2021-10-08 08:22:59 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{88, 260}";
},
{
name = _topviet;
position = "{60, 169}";
},
{
name = top;
position = "{50, 404}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"96 651 OFFCURVE",
"100 655 OFFCURVE",
"100 659 CURVE SMOOTH",
"100 662 OFFCURVE",
"98 666 OFFCURVE",
"96 668 CURVE SMOOTH",
"72 692 OFFCURVE",
"37 730 OFFCURVE",
"20 747 CURVE SMOOTH",
"13 755 OFFCURVE",
"-5 720 OFFCURVE",
"2 716 CURVE SMOOTH",
"20 703 OFFCURVE",
"68 669 OFFCURVE",
"88 656 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"120 299 OFFCURVE",
"122 302 OFFCURVE",
"121 306 CURVE SMOOTH",
"121 308 OFFCURVE",
"118 311 OFFCURVE",
"116 313 CURVE SMOOTH",
"9 393 LINE SMOOTH",
"3 398 OFFCURVE",
"-7 380 OFFCURVE",
"-7 370 CURVE SMOOTH",
"-7 367 OFFCURVE",
"-6 365 OFFCURVE",
"-4 364 CURVE SMOOTH",
"15 353 OFFCURVE",
"88 310 OFFCURVE",
"110 300 CURVE",
"113 298 OFFCURVE",
"115 299 OFFCURVE",
"117 299 CURVE SMOOTH"
);
}
);
width = 100;
}
);
},
{
color = 6;
glyphname = acutecomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{32, 260}";
},
{
name = top;
position = "{50, 404}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"32 669 OFFCURVE",
"80 703 OFFCURVE",
"98 716 CURVE SMOOTH",
"105 720 OFFCURVE",
"87 755 OFFCURVE",
"80 747 CURVE SMOOTH",
"63 730 OFFCURVE",
"28 692 OFFCURVE",
"4 668 CURVE SMOOTH",
"2 666 OFFCURVE",
"0 662 OFFCURVE",
"0 660 CURVE SMOOTH",
"0 656 OFFCURVE",
"2 654 OFFCURVE",
"5 654 CURVE SMOOTH",
"7 654 OFFCURVE",
"9 654 OFFCURVE",
"12 656 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"0 299 OFFCURVE",
"2 298 OFFCURVE",
"5 300 CURVE",
"27 310 OFFCURVE",
"98 352 OFFCURVE",
"117 363 CURVE",
"125 366 OFFCURVE",
"114 400 OFFCURVE",
"106 393 CURVE SMOOTH",
"-1 313 LINE SMOOTH",
"-3 311 OFFCURVE",
"-6 308 OFFCURVE",
"-6 306 CURVE SMOOTH",
"-7 302 OFFCURVE",
"-5 299 OFFCURVE",
"-2 299 CURVE SMOOTH"
);
}
);
width = 100;
}
);
},
{
color = 6;
glyphname = hungarumlautcomb.case;
lastChange = "2021-10-08 06:30:18 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{36, 260}";
},
{
name = top;
position = "{72, 428}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"16 669 OFFCURVE",
"22 683 OFFCURVE",
"26 692 CURVE SMOOTH",
"35 710 OFFCURVE",
"42 728 OFFCURVE",
"44 733 CURVE SMOOTH",
"45 736 OFFCURVE",
"46 739 OFFCURVE",
"46 741 CURVE SMOOTH",
"46 749 OFFCURVE",
"40 753 OFFCURVE",
"35 753 CURVE SMOOTH",
"29 753 OFFCURVE",
"23 749 OFFCURVE",
"21 742 CURVE SMOOTH",
"0 672 LINE SMOOTH",
"-2 667 OFFCURVE",
"6 667 OFFCURVE",
"11 668 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 669 OFFCURVE",
"102 683 OFFCURVE",
"106 692 CURVE SMOOTH",
"115 710 OFFCURVE",
"122 728 OFFCURVE",
"124 733 CURVE SMOOTH",
"125 736 OFFCURVE",
"126 739 OFFCURVE",
"126 741 CURVE SMOOTH",
"126 749 OFFCURVE",
"120 753 OFFCURVE",
"115 753 CURVE SMOOTH",
"109 753 OFFCURVE",
"103 749 OFFCURVE",
"101 742 CURVE SMOOTH",
"80 672 LINE SMOOTH",
"78 667 OFFCURVE",
"86 667 OFFCURVE",
"91 668 CURVE SMOOTH"
);
}
);
};
components = (
{
name = acutecomb.case;
transform = "{0.89101, 0.45399, -0.45399, 0.89101, 211, 30}";
},
{
name = acutecomb.case;
transform = "{0.89101, 0.45399, -0.45399, 0.89101, 154, 30}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 100;
}
);
},
{
color = 6;
glyphname = caroncomb.alt.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{3, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"13 644 CURVE SMOOTH",
"47 644 OFFCURVE",
"71 689 OFFCURVE",
"71 723 CURVE SMOOTH",
"71 746 OFFCURVE",
"61 764 OFFCURVE",
"38 764 CURVE SMOOTH",
"20 764 OFFCURVE",
"10 750 OFFCURVE",
"10 737 CURVE SMOOTH",
"10 720 OFFCURVE",
"29 710 OFFCURVE",
"51 720 CURVE",
"55 695 OFFCURVE",
"31 656 OFFCURVE",
"13 656 CURVE SMOOTH",
"6 656 OFFCURVE",
"0 654 OFFCURVE",
"0 650 CURVE SMOOTH",
"0 647 OFFCURVE",
"1 644 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"53 140 OFFCURVE",
"71 185 OFFCURVE",
"71 219 CURVE SMOOTH",
"71 242 OFFCURVE",
"70 260 OFFCURVE",
"47 260 CURVE SMOOTH",
"29 260 OFFCURVE",
"24 250 OFFCURVE",
"24 239 CURVE SMOOTH",
"24 225 OFFCURVE",
"27 206 OFFCURVE",
"42 199 CURVE",
"46 174 OFFCURVE",
"37 152 OFFCURVE",
"23 152 CURVE SMOOTH",
"16 152 OFFCURVE",
"10 150 OFFCURVE",
"10 146 CURVE SMOOTH",
"10 143 OFFCURVE",
"11 140 OFFCURVE",
"23 140 CURVE SMOOTH"
);
}
);
width = 71;
}
);
},
{
color = 6;
glyphname = circumflexcomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{84, 260}";
},
{
name = top;
position = "{216, 321}";
},
{
name = topviet;
position = "{122, 260}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"142 692 OFFCURVE",
"107 729 OFFCURVE",
"90 747 CURVE SMOOTH",
"88 749 OFFCURVE",
"87 750 OFFCURVE",
"85 750 CURVE SMOOTH",
"83 750 OFFCURVE",
"82 749 OFFCURVE",
"80 747 CURVE SMOOTH",
"63 729 OFFCURVE",
"28 692 OFFCURVE",
"4 668 CURVE SMOOTH",
"2 666 OFFCURVE",
"0 662 OFFCURVE",
"0 660 CURVE SMOOTH",
"0 656 OFFCURVE",
"2 654 OFFCURVE",
"5 654 CURVE SMOOTH",
"7 654 OFFCURVE",
"9 654 OFFCURVE",
"12 656 CURVE SMOOTH",
"28 667 OFFCURVE",
"63 691 OFFCURVE",
"85 707 CURVE",
"107 691 OFFCURVE",
"142 667 OFFCURVE",
"158 656 CURVE SMOOTH",
"166 651 OFFCURVE",
"170 655 OFFCURVE",
"170 659 CURVE SMOOTH",
"170 662 OFFCURVE",
"168 666 OFFCURVE",
"166 668 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"-3 297 OFFCURVE",
"-1 297 OFFCURVE",
"2 299 CURVE SMOOTH",
"25 312 OFFCURVE",
"61 331 OFFCURVE",
"88 349 CURVE",
"115 330 OFFCURVE",
"150 311 OFFCURVE",
"168 299 CURVE SMOOTH",
"176 294 OFFCURVE",
"180 298 OFFCURVE",
"180 302 CURVE SMOOTH",
"180 305 OFFCURVE",
"178 309 OFFCURVE",
"176 311 CURVE SMOOTH",
"153 335 OFFCURVE",
"113 365 OFFCURVE",
"93 383 CURVE SMOOTH",
"91 385 OFFCURVE",
"90 386 OFFCURVE",
"88 386 CURVE SMOOTH",
"86 386 OFFCURVE",
"85 385 OFFCURVE",
"83 383 CURVE SMOOTH",
"63 365 OFFCURVE",
"20 333 OFFCURVE",
"-6 311 CURVE SMOOTH",
"-8 309 OFFCURVE",
"-10 305 OFFCURVE",
"-10 303 CURVE SMOOTH",
"-10 299 OFFCURVE",
"-8 297 OFFCURVE",
"-5 297 CURVE SMOOTH"
);
}
);
width = 170;
}
);
},
{
color = 6;
glyphname = caroncomb.case;
lastChange = "2021-10-08 06:13:59 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{82, 260}";
},
{
name = top;
position = "{85, 406}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"168 737 OFFCURVE",
"170 741 OFFCURVE",
"170 743 CURVE SMOOTH",
"170 747 OFFCURVE",
"168 749 OFFCURVE",
"165 749 CURVE SMOOTH",
"163 749 OFFCURVE",
"161 749 OFFCURVE",
"158 747 CURVE SMOOTH",
"142 736 OFFCURVE",
"107 712 OFFCURVE",
"85 696 CURVE",
"63 712 OFFCURVE",
"28 736 OFFCURVE",
"12 747 CURVE SMOOTH",
"4 752 OFFCURVE",
"0 748 OFFCURVE",
"0 744 CURVE SMOOTH",
"0 741 OFFCURVE",
"2 737 OFFCURVE",
"4 735 CURVE SMOOTH",
"28 711 OFFCURVE",
"63 674 OFFCURVE",
"80 656 CURVE SMOOTH",
"82 654 OFFCURVE",
"83 653 OFFCURVE",
"85 653 CURVE SMOOTH",
"87 653 OFFCURVE",
"88 654 OFFCURVE",
"90 656 CURVE SMOOTH",
"107 674 OFFCURVE",
"142 711 OFFCURVE",
"166 735 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb.case;
transform = "{-1, 0, 0, -1, 170, 690}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
color = 6;
glyphname = brevecomb.case;
lastChange = "2021-10-08 06:59:48 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{90, 260}";
},
{
name = top;
position = "{98, 358}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"138 658 OFFCURVE",
"175 696 OFFCURVE",
"175 724 CURVE SMOOTH",
"175 735 OFFCURVE",
"173 737 OFFCURVE",
"167 737 CURVE SMOOTH",
"160 737 OFFCURVE",
"146 689 OFFCURVE",
"95 689 CURVE SMOOTH",
"44 689 OFFCURVE",
"36 737 OFFCURVE",
"31 737 CURVE SMOOTH",
"25 737 OFFCURVE",
"20 735 OFFCURVE",
"20 724 CURVE SMOOTH",
"20 696 OFFCURVE",
"53 658 OFFCURVE",
"92 658 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"150 296 OFFCURVE",
"172 335 OFFCURVE",
"180 358 CURVE SMOOTH",
"183 365 OFFCURVE",
"185 372 OFFCURVE",
"185 375 CURVE SMOOTH",
"185 378 OFFCURVE",
"184 379 OFFCURVE",
"182 379 CURVE SMOOTH",
"175 379 OFFCURVE",
"148 327 OFFCURVE",
"95 327 CURVE SMOOTH",
"39 327 OFFCURVE",
"21 379 OFFCURVE",
"16 379 CURVE SMOOTH",
"10 379 OFFCURVE",
"12 370 OFFCURVE",
"16 359 CURVE SMOOTH",
"22 342 OFFCURVE",
"38 296 OFFCURVE",
"92 296 CURVE SMOOTH"
);
}
);
width = 195;
}
);
},
{
color = 6;
glyphname = ringcomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{45, 260}";
},
{
name = top;
position = "{63, 405}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"98 650 OFFCURVE",
"121 682 OFFCURVE",
"121 712 CURVE SMOOTH",
"121 740 OFFCURVE",
"103 766 OFFCURVE",
"67 766 CURVE SMOOTH",
"23 766 OFFCURVE",
"0 732 OFFCURVE",
"0 700 CURVE SMOOTH",
"0 674 OFFCURVE",
"16 650 OFFCURVE",
"50 650 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 671 OFFCURVE",
"28 688 OFFCURVE",
"28 706 CURVE SMOOTH",
"28 725 OFFCURVE",
"39 745 OFFCURVE",
"63 745 CURVE SMOOTH",
"84 745 OFFCURVE",
"94 728 OFFCURVE",
"94 711 CURVE SMOOTH",
"94 691 OFFCURVE",
"82 671 OFFCURVE",
"57 671 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"98 302 OFFCURVE",
"123 331 OFFCURVE",
"123 361 CURVE SMOOTH",
"123 389 OFFCURVE",
"103 412 OFFCURVE",
"67 412 CURVE SMOOTH",
"23 412 OFFCURVE",
"-2 381 OFFCURVE",
"-2 349 CURVE SMOOTH",
"-2 323 OFFCURVE",
"16 302 OFFCURVE",
"50 302 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 320 OFFCURVE",
"28 337 OFFCURVE",
"28 355 CURVE SMOOTH",
"28 374 OFFCURVE",
"39 394 OFFCURVE",
"63 394 CURVE SMOOTH",
"84 394 OFFCURVE",
"94 377 OFFCURVE",
"94 360 CURVE SMOOTH",
"94 340 OFFCURVE",
"82 320 OFFCURVE",
"57 320 CURVE SMOOTH"
);
}
);
width = 121;
}
);
},
{
color = 6;
glyphname = tildecomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{87, 260}";
},
{
name = _topviet;
position = "{117, 151}";
},
{
name = top;
position = "{87, 341}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"147 677 OFFCURVE",
"165 694 OFFCURVE",
"165 732 CURVE SMOOTH",
"165 738 OFFCURVE",
"161 742 OFFCURVE",
"157 742 CURVE SMOOTH",
"154 742 OFFCURVE",
"151 739 OFFCURVE",
"150 732 CURVE SMOOTH",
"148 714 OFFCURVE",
"141 708 OFFCURVE",
"125 708 CURVE SMOOTH",
"113 708 OFFCURVE",
"84 737 OFFCURVE",
"52 734 CURVE SMOOTH",
"25 730 OFFCURVE",
"8 715 OFFCURVE",
"8 684 CURVE SMOOTH",
"8 678 OFFCURVE",
"10 676 OFFCURVE",
"13 676 CURVE SMOOTH",
"17 676 OFFCURVE",
"22 680 OFFCURVE",
"22 684 CURVE SMOOTH",
"24 697 OFFCURVE",
"39 705 OFFCURVE",
"50 705 CURVE SMOOTH",
"78 705 OFFCURVE",
"91 677 OFFCURVE",
"124 677 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"9 302 OFFCURVE",
"11 306 OFFCURVE",
"11 310 CURVE SMOOTH",
"13 323 OFFCURVE",
"31 333 OFFCURVE",
"42 333 CURVE SMOOTH",
"70 333 OFFCURVE",
"106 306 OFFCURVE",
"139 306 CURVE SMOOTH",
"162 306 OFFCURVE",
"176 315 OFFCURVE",
"176 353 CURVE SMOOTH",
"176 359 OFFCURVE",
"176 368 OFFCURVE",
"172 368 CURVE SMOOTH",
"169 368 OFFCURVE",
"168 361 OFFCURVE",
"167 354 CURVE SMOOTH",
"165 336 OFFCURVE",
"156 334 OFFCURVE",
"140 334 CURVE SMOOTH",
"128 334 OFFCURVE",
"76 363 OFFCURVE",
"44 360 CURVE SMOOTH",
"17 356 OFFCURVE",
"2 341 OFFCURVE",
"2 310 CURVE SMOOTH",
"2 304 OFFCURVE",
"2 302 OFFCURVE",
"5 302 CURVE SMOOTH"
);
}
);
width = 180;
}
);
},
{
color = 6;
glyphname = tildecomb_dotaccentcomb.case;
lastChange = "2021-10-08 06:15:12 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"139 672 OFFCURVE",
"157 689 OFFCURVE",
"157 727 CURVE SMOOTH",
"157 733 OFFCURVE",
"153 737 OFFCURVE",
"149 737 CURVE SMOOTH",
"146 737 OFFCURVE",
"143 734 OFFCURVE",
"142 727 CURVE SMOOTH",
"140 709 OFFCURVE",
"133 703 OFFCURVE",
"117 703 CURVE SMOOTH",
"105 703 OFFCURVE",
"76 732 OFFCURVE",
"44 729 CURVE SMOOTH",
"17 725 OFFCURVE",
"0 710 OFFCURVE",
"0 679 CURVE SMOOTH",
"0 673 OFFCURVE",
"2 671 OFFCURVE",
"5 671 CURVE SMOOTH",
"9 671 OFFCURVE",
"14 675 OFFCURVE",
"14 679 CURVE SMOOTH",
"16 692 OFFCURVE",
"31 700 OFFCURVE",
"42 700 CURVE SMOOTH",
"70 700 OFFCURVE",
"83 672 OFFCURVE",
"116 672 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 752 OFFCURVE",
"105 761 OFFCURVE",
"105 777 CURVE SMOOTH",
"105 787 OFFCURVE",
"98 793 OFFCURVE",
"88 793 CURVE SMOOTH",
"71 793 OFFCURVE",
"63 786 OFFCURVE",
"63 773 CURVE SMOOTH",
"63 759 OFFCURVE",
"69 752 OFFCURVE",
"81 752 CURVE SMOOTH"
);
}
);
};
components = (
{
name = tildecomb.case;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 66, 81}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 180;
}
);
},
{
color = 6;
glyphname = tildecomb_macroncomb.case;
lastChange = "2021-10-08 06:15:25 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{79, 260}";
},
{
name = top;
position = "{79, 401}";
}
);
background = {
components = (
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, -19}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 13, 50}";
}
);
};
components = (
{
name = tildecomb.case;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, -4, 81}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 180;
}
);
},
{
color = 6;
glyphname = macroncomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{91, 260}";
},
{
name = top;
position = "{91, 343}";
}
);
background = {
anchors = (
{
name = bottom;
position = "{103, 534}";
}
);
paths = (
{
closed = 1;
nodes = (
"43 690 OFFCURVE",
"108 693 OFFCURVE",
"155 693 CURVE SMOOTH",
"164 693 OFFCURVE",
"165 708 OFFCURVE",
"157 712 CURVE SMOOTH",
"150 715 OFFCURVE",
"121 718 OFFCURVE",
"91 718 CURVE SMOOTH",
"64 718 OFFCURVE",
"46 717 OFFCURVE",
"33 716 CURVE SMOOTH",
"25 715 OFFCURVE",
"20 708 OFFCURVE",
"20 703 CURVE SMOOTH",
"20 693 OFFCURVE",
"25 690 OFFCURVE",
"34 690 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"23 315 OFFCURVE",
"128 318 OFFCURVE",
"175 318 CURVE SMOOTH",
"180 318 OFFCURVE",
"182 322 OFFCURVE",
"182 327 CURVE SMOOTH",
"182 331 OFFCURVE",
"181 335 OFFCURVE",
"177 337 CURVE SMOOTH",
"170 340 OFFCURVE",
"121 343 OFFCURVE",
"91 343 CURVE SMOOTH",
"64 343 OFFCURVE",
"26 342 OFFCURVE",
"13 341 CURVE SMOOTH",
"5 340 OFFCURVE",
"0 333 OFFCURVE",
"0 328 CURVE SMOOTH",
"0 318 OFFCURVE",
"5 315 OFFCURVE",
"14 315 CURVE SMOOTH"
);
}
);
width = 182;
}
);
},
{
color = 6;
glyphname = hookabovecomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{41, 260}";
},
{
name = _topviet;
position = "{-16, 186}";
},
{
name = top;
position = "{48, 405}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"0 740 OFFCURVE",
"3 733 OFFCURVE",
"8 735 CURVE SMOOTH",
"18 739 OFFCURVE",
"36 745 OFFCURVE",
"49 745 CURVE SMOOTH",
"81 745 OFFCURVE",
"70 695 OFFCURVE",
"31 658 CURVE",
"27 652 OFFCURVE",
"43 654 OFFCURVE",
"47 656 CURVE",
"71 675 OFFCURVE",
"96 707 OFFCURVE",
"96 735 CURVE SMOOTH",
"96 751 OFFCURVE",
"87 770 OFFCURVE",
"61 770 CURVE SMOOTH",
"27 770 OFFCURVE",
"0 750 OFFCURVE",
"0 743 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"34 298 OFFCURVE",
"46 300 OFFCURVE",
"54 304 CURVE",
"82 323 OFFCURVE",
"94 342 OFFCURVE",
"94 370 CURVE SMOOTH",
"94 386 OFFCURVE",
"82 403 OFFCURVE",
"56 403 CURVE SMOOTH",
"22 403 OFFCURVE",
"0 385 OFFCURVE",
"0 378 CURVE SMOOTH",
"0 375 OFFCURVE",
"2 370 OFFCURVE",
"6 370 CURVE SMOOTH",
"8 370 LINE",
"18 374 OFFCURVE",
"36 380 OFFCURVE",
"49 380 CURVE SMOOTH",
"62 380 OFFCURVE",
"68 372 OFFCURVE",
"68 360 CURVE SMOOTH",
"68 342 OFFCURVE",
"61 326 OFFCURVE",
"38 304 CURVE"
);
}
);
width = 96;
}
);
},
{
color = 6;
glyphname = dblgravecomb.case;
lastChange = "2021-10-08 06:30:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{111, 260}";
},
{
name = top;
position = "{75, 419}";
}
);
background = {
anchors = (
{
name = _top;
position = "{153, 594}";
},
{
name = top;
position = "{128, 734}";
}
);
components = (
{
name = gravecomb;
transform = "{0.98771, -0.15631, 0.15631, 0.98771, -48, 22}";
},
{
name = gravecomb;
}
);
};
components = (
{
name = gravecomb.case;
transform = "{0.98771, -0.15631, 0.15631, 0.98771, 21, 22}";
},
{
name = gravecomb.case;
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
},
{
color = 6;
glyphname = breveinvertedcomb.case;
lastChange = "2021-10-08 06:16:05 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{85, 260}";
},
{
name = top;
position = "{85, 358}";
}
);
background = {
anchors = (
{
name = _top;
position = "{65, 602}";
},
{
name = top;
position = "{65, 692}";
}
);
paths = (
{
closed = 1;
nodes = (
"44 733 OFFCURVE",
"7 695 OFFCURVE",
"7 667 CURVE SMOOTH",
"7 656 OFFCURVE",
"9 654 OFFCURVE",
"15 654 CURVE SMOOTH",
"22 654 OFFCURVE",
"36 702 OFFCURVE",
"87 702 CURVE SMOOTH",
"138 702 OFFCURVE",
"146 654 OFFCURVE",
"151 654 CURVE SMOOTH",
"157 654 OFFCURVE",
"162 656 OFFCURVE",
"162 667 CURVE SMOOTH",
"162 695 OFFCURVE",
"129 733 OFFCURVE",
"90 733 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb.case;
transform = "{-1, 0, 0, -1, 187, 676}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 179;
}
);
},
{
color = 6;
glyphname = commaturnedabovecomb.case;
lastChange = "2021-10-08 06:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{33, 260}";
},
{
name = top;
position = "{36, 430}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"71 769 OFFCURVE",
"70 772 OFFCURVE",
"58 772 CURVE SMOOTH",
"24 772 OFFCURVE",
"0 727 OFFCURVE",
"0 693 CURVE SMOOTH",
"0 670 OFFCURVE",
"10 652 OFFCURVE",
"33 652 CURVE SMOOTH",
"51 652 OFFCURVE",
"61 666 OFFCURVE",
"61 679 CURVE SMOOTH",
"61 696 OFFCURVE",
"42 706 OFFCURVE",
"20 696 CURVE",
"16 721 OFFCURVE",
"40 760 OFFCURVE",
"58 760 CURVE SMOOTH",
"65 760 OFFCURVE",
"71 762 OFFCURVE",
"71 766 CURVE SMOOTH"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"51 300 OFFCURVE",
"61 314 OFFCURVE",
"61 327 CURVE SMOOTH",
"61 339 OFFCURVE",
"51 348 OFFCURVE",
"37 348 CURVE SMOOTH",
"32 348 OFFCURVE",
"26 347 OFFCURVE",
"20 344 CURVE",
"16 369 OFFCURVE",
"40 408 OFFCURVE",
"58 408 CURVE SMOOTH",
"65 408 OFFCURVE",
"71 410 OFFCURVE",
"71 414 CURVE SMOOTH",
"71 417 OFFCURVE",
"70 420 OFFCURVE",
"58 420 CURVE SMOOTH",
"24 420 OFFCURVE",
"0 375 OFFCURVE",
"0 341 CURVE SMOOTH",
"0 318 OFFCURVE",
"10 300 OFFCURVE",
"33 300 CURVE SMOOTH"
);
}
);
width = 71;
}
);
},
{
color = 6;
glyphname = horncomb.case;
lastChange = "2021-10-08 08:22:43 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{-17, 260}";
},
{
name = topright;
position = "{114, 313}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"104 707 OFFCURVE",
"104 750 CURVE SMOOTH",
"104 763 OFFCURVE",
"101 767 OFFCURVE",
"94 767 CURVE SMOOTH",
"86 767 OFFCURVE",
"81 762 OFFCURVE",
"79 750 CURVE SMOOTH",
"69 683 OFFCURVE",
"54 668 OFFCURVE",
"31 668 CURVE SMOOTH",
"25 668 OFFCURVE",
"16 671 OFFCURVE",
"8 675 CURVE SMOOTH",
"2 678 OFFCURVE",
"0 673 OFFCURVE",
"0 670 CURVE SMOOTH",
"0 669 OFFCURVE",
"0 668 OFFCURVE",
"1 666 CURVE",
"7 656 OFFCURVE",
"20 652 OFFCURVE",
"30 652 CURVE SMOOTH",
"85 652 OFFCURVE"
);
}
);
};
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
paths = (
{
closed = 1;
nodes = (
"88 236 OFFCURVE",
"106 262 OFFCURVE",
"106 294 CURVE SMOOTH",
"106 300 OFFCURVE",
"105 307 OFFCURVE",
"104 313 CURVE SMOOTH",
"100 331 OFFCURVE",
"94 336 OFFCURVE",
"85 336 CURVE SMOOTH",
"75 336 OFFCURVE",
"70 330 OFFCURVE",
"70 321 CURVE SMOOTH",
"70 318 OFFCURVE",
"70 316 OFFCURVE",
"71 313 CURVE SMOOTH",
"72 307 OFFCURVE",
"72 302 OFFCURVE",
"72 297 CURVE SMOOTH",
"72 266 OFFCURVE",
"56 252 OFFCURVE",
"29 252 CURVE SMOOTH",
"21 252 OFFCURVE",
"10 251 OFFCURVE",
"0 257 CURVE SMOOTH",
"-8 261 OFFCURVE",
"-12 259 OFFCURVE",
"-12 255 CURVE SMOOTH",
"-12 254 OFFCURVE",
"-11 251 OFFCURVE",
"-8 249 CURVE SMOOTH",
"6 240 OFFCURVE",
"24 236 OFFCURVE",
"37 236 CURVE SMOOTH"
);
}
);
width = 104;
}
);
},
{
glyphname = brevecomb_acutecomb;
lastChange = "2021-10-08 05:31:16 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 66, 70}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 46, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
},
{
glyphname = brevecomb_gravecomb;
lastChange = "2021-10-08 05:31:18 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{0.85656, 0, 0, 0.81846, 20, 180}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 10, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
lastChange = "2021-10-08 05:31:17 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 30, 72}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 37, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
},
{
glyphname = brevecomb_tildecomb;
lastChange = "2021-10-08 05:31:18 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 75}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -1, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 155;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
lastChange = "2021-10-08 08:24:05 +0000";
layers = (
{
background = {
components = (
{
name = acutecomb;
transform = "{1, 0, 0, 1, 134, 77}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, 95}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
lastChange = "2021-10-08 06:20:01 +0000";
layers = (
{
background = {
components = (
{
name = gravecomb;
transform = "{1, 0, 0, 1, 89, 77}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 62, 91}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2021-10-08 05:32:02 +0000";
layers = (
{
background = {
components = (
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 93, 78}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 129, 66}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
lastChange = "2021-10-08 05:32:17 +0000";
layers = (
{
background = {
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 10, 81}";
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 13, 109}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
color = 6;
glyphname = brevecomb_acutecomb.case;
lastChange = "2021-10-08 06:16:24 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 66, 70}";
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 66, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 195;
}
);
},
{
color = 6;
glyphname = brevecomb_gravecomb.case;
lastChange = "2021-10-08 08:23:02 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{0.85656, 0, 0, 0.81846, 20, 180}";
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 10, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 195;
}
);
},
{
color = 6;
glyphname = brevecomb_hookabovecomb.case;
lastChange = "2021-10-08 06:16:24 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 30, 72}";
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 57, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 195;
}
);
},
{
color = 6;
glyphname = brevecomb_tildecomb.case;
lastChange = "2021-10-08 06:16:24 +0000";
layers = (
{
background = {
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 75}";
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 11, 98}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 195;
}
);
},
{
color = 6;
glyphname = circumflexcomb_acutecomb.case;
lastChange = "2021-10-08 06:16:36 +0000";
layers = (
{
background = {
components = (
{
name = acutecomb;
transform = "{1, 0, 0, 1, 134, 77}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 184, 61}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
color = 6;
glyphname = circumflexcomb_gravecomb.case;
lastChange = "2021-10-08 06:16:47 +0000";
layers = (
{
background = {
components = (
{
name = gravecomb;
transform = "{1, 0, 0, 1, 89, 77}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = gravecomb.case;
transform = "{1, 0, 0, 1, 62, 91}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
color = 6;
glyphname = circumflexcomb_hookabovecomb.case;
lastChange = "2021-10-08 06:16:58 +0000";
layers = (
{
background = {
components = (
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 93, 78}";
},
{
name = circumflexcomb;
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 138, 74}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
color = 6;
glyphname = circumflexcomb_tildecomb.case;
lastChange = "2021-10-08 06:17:05 +0000";
layers = (
{
background = {
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 10, 81}";
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = tildecomb.case;
transform = "{1, 0, 0, 1, 5, 109}";
}
);
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 170;
}
);
},
{
glyphname = HT;
lastChange = "2021-09-30 03:26:53 +0000";
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 154;
}
);
note = HT;
},
{
glyphname = NULL;
layers = (
{
layerId = "8EA81196-DECD-41FE-BBCC-1E9228602C7C";
width = 600;
}
);
}
);
instances = (
{
interpolationWeight = 400;
instanceInterpolations = {
"8EA81196-DECD-41FE-BBCC-1E9228602C7C" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturer = "Robert E. Leuschke";
manufacturerURL = www.typesetit.com;
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 2;
}
